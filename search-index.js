var searchIndex = JSON.parse('{\
"abstract_integers":{"doc":"This crate defines specification-friendly natural integers…","i":[[4,"Sign","abstract_integers","A Sign is a `BigInt`\'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[0,"traits","","",null,null],[0,"bounds","abstract_integers::traits","",null,null],[8,"Bounded","abstract_integers::traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",1,[[]]],[10,"max_value","","returns the largest finite number this type can represent",1,[[]]],[0,"cast","abstract_integers::traits","",null,null],[8,"ToPrimitive","abstract_integers::traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",2,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",2,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",2,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",2,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",2,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",2,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",2,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",2,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",2,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",2,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",2,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",2,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",2,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",2,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",3,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",3,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",3,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",3,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",3,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",3,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",3,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",3,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",3,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",3,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",3,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",3,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",3,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",3,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",4,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",5,[[]]],[0,"float","abstract_integers::traits","",null,null],[8,"FloatCore","abstract_integers::traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",6,[[]]],[10,"neg_infinity","","Returns negative infinity.",6,[[]]],[10,"nan","","Returns NaN.",6,[[]]],[10,"neg_zero","","Returns `-0.0`.",6,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",6,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",6,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",6,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",6,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",6,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",6,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",6,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",6,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",6,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",6,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",6,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",6,[[]]],[11,"trunc","","Return the integer part of a number.",6,[[]]],[11,"fract","","Returns the fractional part of a number.",6,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",6,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",6,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",6,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",6,[[]]],[11,"min","","Returns the minimum of the two numbers.",6,[[]]],[11,"max","","Returns the maximum of the two numbers.",6,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",6,[[]]],[11,"powi","","Raise a number to an integer power.",6,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",6,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",6,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",6,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",7,[[]]],[10,"infinity","","Returns the infinite value.",7,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",7,[[]]],[10,"neg_zero","","Returns `-0.0`.",7,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",7,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",7,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",7,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",7,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",7,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",7,[[]]],[10,"trunc","","Return the integer part of a number.",7,[[]]],[10,"fract","","Returns the fractional part of a number.",7,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",7,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",7,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",7,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",7,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",7,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",7,[[]]],[10,"powi","","Raise a number to an integer power.",7,[[]]],[10,"powf","","Raise a number to a floating point power.",7,[[]]],[10,"sqrt","","Take the square root of a number.",7,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",7,[[]]],[10,"exp2","","Returns `2^(self)`.",7,[[]]],[10,"ln","","Returns the natural logarithm of the number.",7,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",7,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",7,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",7,[[]]],[11,"to_degrees","","Converts radians to degrees.",7,[[]]],[11,"to_radians","","Converts degrees to radians.",7,[[]]],[10,"max","","Returns the maximum of the two numbers.",7,[[]]],[10,"min","","Returns the minimum of the two numbers.",7,[[]]],[10,"abs_sub","","The positive difference of two numbers.",7,[[]]],[10,"cbrt","","Take the cubic root of a number.",7,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",7,[[]]],[10,"sin","","Computes the sine of a number (in radians).",7,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",7,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",7,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",7,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",7,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",7,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",7,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",7,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",7,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",7,[[]]],[10,"sinh","","Hyperbolic sine function.",7,[[]]],[10,"cosh","","Hyperbolic cosine function.",7,[[]]],[10,"tanh","","Hyperbolic tangent function.",7,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",7,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",7,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",7,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",8,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",8,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",8,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",8,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",8,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",8,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",8,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",8,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",8,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",8,[[]]],[10,"LN_10","","Return `ln(10.0)`.",8,[[]]],[10,"LN_2","","Return `ln(2.0)`.",8,[[]]],[10,"LOG10_E","","Return `log10(e)`.",8,[[]]],[10,"LOG2_E","","Return `log2(e)`.",8,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",8,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",8,[[]]],[11,"TAU","","Return the full circle constant `τ`.",8,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",8,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",8,[[]]],[0,"identities","abstract_integers::traits","",null,null],[8,"Zero","abstract_integers::traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",9,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",9,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",10,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",10,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",10,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[0,"int","abstract_integers::traits","",null,null],[8,"PrimInt","abstract_integers::traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",11,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",11,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",11,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",11,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",11,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",11,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",11,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",11,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",11,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",11,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",11,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",11,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",11,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",11,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",11,[[]]],[0,"ops","abstract_integers::traits","",null,null],[0,"checked","abstract_integers::traits::ops","",null,null],[8,"CheckedAdd","abstract_integers::traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",12,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",13,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",17,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",18,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",19,[[],["option",4]]],[0,"inv","abstract_integers::traits::ops","",null,null],[8,"Inv","abstract_integers::traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",20,null],[10,"inv","","Returns the multiplicative inverse of `self`.",20,[[]]],[0,"mul_add","abstract_integers::traits::ops","",null,null],[8,"MulAdd","abstract_integers::traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",21,null],[10,"mul_add","","Performs the fused multiply-add operation.",21,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[]]],[0,"overflowing","abstract_integers::traits::ops","",null,null],[8,"OverflowingAdd","abstract_integers::traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean indicating…",23,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean…",24,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean…",25,[[]]],[0,"saturating","abstract_integers::traits::ops","",null,null],[8,"Saturating","abstract_integers::traits::ops::saturating","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",26,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",26,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",27,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",28,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",29,[[]]],[0,"wrapping","abstract_integers::traits::ops","",null,null],[8,"WrappingAdd","abstract_integers::traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",30,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",31,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",32,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",33,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",34,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",35,[[]]],[0,"pow","abstract_integers::traits","",null,null],[8,"Pow","abstract_integers::traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",36,null],[10,"pow","","Returns `self` to the power `rhs`.",36,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[0,"real","abstract_integers::traits","",null,null],[8,"Real","abstract_integers::traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",37,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",37,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",37,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",37,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",37,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",37,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",37,[[]]],[10,"trunc","","Return the integer part of a number.",37,[[]]],[10,"fract","","Returns the fractional part of a number.",37,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",37,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",37,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",37,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",37,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",37,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",37,[[]]],[10,"powi","","Raise a number to an integer power.",37,[[]]],[10,"powf","","Raise a number to a real number power.",37,[[]]],[10,"sqrt","","Take the square root of a number.",37,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",37,[[]]],[10,"exp2","","Returns `2^(self)`.",37,[[]]],[10,"ln","","Returns the natural logarithm of the number.",37,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",37,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",37,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",37,[[]]],[10,"to_degrees","","Converts radians to degrees.",37,[[]]],[10,"to_radians","","Converts degrees to radians.",37,[[]]],[10,"max","","Returns the maximum of the two numbers.",37,[[]]],[10,"min","","Returns the minimum of the two numbers.",37,[[]]],[10,"abs_sub","","The positive difference of two numbers.",37,[[]]],[10,"cbrt","","Take the cubic root of a number.",37,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",37,[[]]],[10,"sin","","Computes the sine of a number (in radians).",37,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",37,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",37,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",37,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",37,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",37,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",37,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",37,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",37,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",37,[[]]],[10,"sinh","","Hyperbolic sine function.",37,[[]]],[10,"cosh","","Hyperbolic cosine function.",37,[[]]],[10,"tanh","","Hyperbolic tangent function.",37,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",37,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",37,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",37,[[]]],[0,"sign","abstract_integers::traits","",null,null],[8,"Signed","abstract_integers::traits::sign","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"signum","","Returns the sign of the number.",38,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",38,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",38,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","abstract_integers::traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",39,null],[10,"from_str_radix","","Convert from a string and radix (typically `2..=36`).",39,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",40,null],[13,"Invalid","","",40,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",41,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",1,[[]]],[10,"max_value","","returns the largest finite number this type can represent",1,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",7,[[]]],[10,"infinity","","Returns the infinite value.",7,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",7,[[]]],[10,"neg_zero","","Returns `-0.0`.",7,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",7,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",7,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",7,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",7,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",7,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",7,[[]]],[10,"trunc","","Return the integer part of a number.",7,[[]]],[10,"fract","","Returns the fractional part of a number.",7,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",7,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",7,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",7,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",7,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",7,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",7,[[]]],[10,"powi","","Raise a number to an integer power.",7,[[]]],[10,"powf","","Raise a number to a floating point power.",7,[[]]],[10,"sqrt","","Take the square root of a number.",7,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",7,[[]]],[10,"exp2","","Returns `2^(self)`.",7,[[]]],[10,"ln","","Returns the natural logarithm of the number.",7,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",7,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",7,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",7,[[]]],[11,"to_degrees","","Converts radians to degrees.",7,[[]]],[11,"to_radians","","Converts degrees to radians.",7,[[]]],[10,"max","","Returns the maximum of the two numbers.",7,[[]]],[10,"min","","Returns the minimum of the two numbers.",7,[[]]],[10,"abs_sub","","The positive difference of two numbers.",7,[[]]],[10,"cbrt","","Take the cubic root of a number.",7,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",7,[[]]],[10,"sin","","Computes the sine of a number (in radians).",7,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",7,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",7,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",7,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",7,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",7,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",7,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",7,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",7,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",7,[[]]],[10,"sinh","","Hyperbolic sine function.",7,[[]]],[10,"cosh","","Hyperbolic cosine function.",7,[[]]],[10,"tanh","","Hyperbolic tangent function.",7,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",7,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",7,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",7,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",8,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",8,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",8,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",8,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",8,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",8,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",8,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",8,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",8,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",8,[[]]],[10,"LN_10","","Return `ln(10.0)`.",8,[[]]],[10,"LN_2","","Return `ln(2.0)`.",8,[[]]],[10,"LOG10_E","","Return `log10(e)`.",8,[[]]],[10,"LOG2_E","","Return `log2(e)`.",8,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",8,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",8,[[]]],[11,"TAU","","Return the full circle constant `τ`.",8,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",8,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",8,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",5,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",3,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",3,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",3,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",3,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",3,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",3,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",3,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",3,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",3,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",3,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",3,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",3,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",3,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",3,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",4,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",2,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",2,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",2,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",2,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",2,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",2,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",2,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",2,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",2,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",2,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",2,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",2,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",2,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",2,[[],["option",4]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",10,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",10,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",10,[[]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",9,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",9,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",11,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",11,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",11,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",11,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",11,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",11,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",11,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",11,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",11,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",11,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",11,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",11,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",11,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",11,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",11,[[]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",12,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",17,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",18,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",19,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",13,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",20,null],[10,"inv","","Returns the multiplicative inverse of `self`.",20,[[]]],[8,"MulAdd","","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",21,null],[10,"mul_add","","Performs the fused multiply-add operation.",21,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",26,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",26,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",27,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",29,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",28,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",30,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",32,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",33,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",34,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",35,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",31,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",36,null],[10,"pow","","Returns `self` to the power `rhs`.",36,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"signum","","Returns the sign of the number.",38,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",38,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",38,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Zero","abstract_integers","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",9,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",9,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",10,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",10,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",10,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[3,"BigInt","","A big signed integer type.",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",13,[[],["option",4]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",9,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",9,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[]]],[4,"Ordering","","An `Ordering` is the result of a comparison between two…",null,null],[13,"Less","","An ordering where a compared value is less than another.",42,null],[13,"Equal","","An ordering where a compared value is equal to another.",42,null],[13,"Greater","","An ordering where a compared value is greater than another.",42,null],[3,"ParseIntError","","An error which can be returned when parsing an integer.",null,null],[8,"Add","","The addition operator `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator.",43,null],[10,"add","","Performs the `+` operation.",43,[[]]],[8,"Div","","The division operator `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator.",44,null],[10,"div","","Performs the `/` operation.",44,[[]]],[8,"Mul","","The multiplication operator `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator.",45,null],[10,"mul","","Performs the `*` operation.",45,[[]]],[8,"Neg","","The unary negation operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",46,null],[10,"neg","","Performs the unary `-` operation.",46,[[]]],[8,"Rem","","The remainder operator `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator.",47,null],[10,"rem","","Performs the `%` operation.",47,[[]]],[8,"Sub","","The subtraction operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",48,null],[10,"sub","","Performs the `-` operation.",48,[[]]],[8,"AddAssign","","The addition assignment operator `+=`.",null,null],[10,"add_assign","","Performs the `+=` operation.",49,[[]]],[8,"DivAssign","","The division assignment operator `/=`.",null,null],[10,"div_assign","","Performs the `/=` operation.",50,[[]]],[8,"MulAssign","","The multiplication assignment operator `*=`.",null,null],[10,"mul_assign","","Performs the `*=` operation.",51,[[]]],[8,"RemAssign","","The remainder assignment operator `%=`.",null,null],[10,"rem_assign","","Performs the `%=` operation.",52,[[]]],[8,"SubAssign","","The subtraction assignment operator `-=`.",null,null],[10,"sub_assign","","Performs the `-=` operation.",53,[[]]],[8,"BitAnd","","The bitwise AND operator `&`.",null,null],[16,"Output","","The resulting type after applying the `&` operator.",54,null],[10,"bitand","","Performs the `&` operation.",54,[[]]],[8,"BitOr","","The bitwise OR operator `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator.",55,null],[10,"bitor","","Performs the `|` operation.",55,[[]]],[8,"BitXor","","The bitwise XOR operator `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator.",56,null],[10,"bitxor","","Performs the `^` operation.",56,[[]]],[8,"Not","","The unary logical negation operator `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator.",57,null],[10,"not","","Performs the unary `!` operation.",57,[[]]],[8,"Shl","","The left shift operator `<<`. Note that because this trait…",null,null],[16,"Output","","The resulting type after applying the `<<` operator.",58,null],[10,"shl","","Performs the `<<` operation.",58,[[]]],[8,"Shr","","The right shift operator `>>`. Note that because this…",null,null],[16,"Output","","The resulting type after applying the `>>` operator.",59,null],[10,"shr","","Performs the `>>` operation.",59,[[]]],[8,"BitAndAssign","","The bitwise AND assignment operator `&=`.",null,null],[10,"bitand_assign","","Performs the `&=` operation.",60,[[]]],[8,"BitOrAssign","","The bitwise OR assignment operator `|=`.",null,null],[10,"bitor_assign","","Performs the `|=` operation.",61,[[]]],[8,"BitXorAssign","","The bitwise XOR assignment operator `^=`.",null,null],[10,"bitxor_assign","","Performs the `^=` operation.",62,[[]]],[8,"ShlAssign","","The left shift assignment operator `<<=`.",null,null],[10,"shl_assign","","Performs the `<<=` operation.",63,[[]]],[8,"ShrAssign","","The right shift assignment operator `>>=`.",null,null],[10,"shr_assign","","Performs the `>>=` operation.",64,[[]]],[8,"Deref","","Used for immutable dereferencing operations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing.",65,null],[10,"deref","","Dereferences the value.",65,[[]]],[8,"DerefMut","","Used for mutable dereferencing operations, like in `*v =…",null,null],[10,"deref_mut","","Mutably dereferences the value.",66,[[]]],[8,"Drop","","Custom code within the destructor.",null,null],[10,"drop","","Executes the destructor for this type.",67,[[]]],[8,"Fn","","The version of the call operator that takes an immutable…",null,null],[10,"call","","Performs the call operation.",68,[[]]],[8,"FnMut","","The version of the call operator that takes a mutable…",null,null],[10,"call_mut","","Performs the call operation.",69,[[]]],[8,"FnOnce","","The version of the call operator that takes a by-value…",null,null],[16,"Output","","The returned type after the call operator is used.",70,null],[10,"call_once","","Performs the call operation.",70,[[]]],[8,"Index","","Used for indexing operations (`container[index]`) in…",null,null],[16,"Output","","The returned type after indexing.",71,null],[10,"index","","Performs the indexing (`container[index]`) operation.",71,[[]]],[8,"IndexMut","","Used for indexing operations (`container[index]`) in…",null,null],[10,"index_mut","","Performs the mutable indexing (`container[index]`)…",72,[[]]],[3,"Range","","A (half-open) range bounded inclusively below and…",null,null],[12,"start","","The lower bound of the range (inclusive).",73,null],[12,"end","","The upper bound of the range (exclusive).",73,null],[3,"RangeFrom","","A range only bounded inclusively below (`start..`).",null,null],[12,"start","","The lower bound of the range (inclusive).",74,null],[3,"RangeFull","","An unbounded range (`..`).",null,null],[3,"RangeTo","","A range only bounded exclusively above (`..end`).",null,null],[12,"end","","The upper bound of the range (exclusive).",75,null],[4,"Bound","","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",76,null],[13,"Excluded","","An exclusive bound.",76,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in…",76,null],[8,"RangeBounds","","`RangeBounds` is implemented by Rust\'s built-in range…",null,null],[10,"start_bound","","Start index bound.",77,[[],["bound",4]]],[10,"end_bound","","End index bound.",77,[[],["bound",4]]],[11,"contains","","Returns `true` if `item` is contained in the range.",77,[[]]],[3,"RangeInclusive","","A range bounded inclusively below and above (`start..=end`).",null,null],[3,"RangeToInclusive","","A range only bounded inclusively above (`..=end`).",null,null],[12,"end","","The upper bound of the range (inclusive)",78,null],[8,"Try","","A trait for customizing the behavior of the `?` operator.",null,null],[16,"Ok","","The type of this value when viewed as successful.",79,null],[16,"Error","","The type of this value when viewed as failed.",79,null],[10,"into_result","","Applies the \\\"?\\\" operator. A return of `Ok(t)` means that…",79,[[],["result",4]]],[10,"from_error","","Wrap an error value to construct the composite result. For…",79,[[]]],[10,"from_ok","","Wrap an OK value to construct the composite result. For…",79,[[]]],[8,"Generator","","The trait implemented by builtin generator types.",null,null],[16,"Yield","","The type of value this generator yields.",80,null],[16,"Return","","The type of value this generator returns.",80,null],[10,"resume","","Resumes the execution of this generator.",80,[[["pin",3]],["generatorstate",4]]],[4,"GeneratorState","","The result of a generator resumption.",null,null],[13,"Yielded","","The generator suspended with a value.",81,null],[13,"Complete","","The generator completed with a return value.",81,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper…",null,null],[8,"DispatchFromDyn","","This is used for object safety, to check that a method\'s…",null,null],[0,"abstract_int","","",null,null],[0,"nat_mod","","",null,null],[14,"abstract_int","","",null,null],[14,"abstract_public","","",null,null],[14,"abstract_unsigned","","",null,null],[14,"abstract_signed","","",null,null],[14,"abstract_unsigned_public_integer","","",null,null],[14,"abstract_signed_public_integer","","",null,null],[14,"abstract_secret","","",null,null],[14,"abstract_unsigned_secret_integer","","",null,null],[14,"abstract_signed_secret_integer","","",null,null],[14,"define_abstract_integer_checked","","Defines a bounded natural integer with regular arithmetic…",null,null],[14,"modular_integer","","",null,null],[14,"abstract_secret_modular_integer","","",null,null],[14,"abstract_public_modular_integer","","",null,null],[14,"abstract_nat_mod","","",null,null],[14,"abstract_public_nat_mod","","",null,null],[14,"define_refined_modular_integer","","Defines a bounded natural integer with modular arithmetic…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","abstract_integers::traits","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","abstract_integers","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",82,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",83,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",83,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"into_iter","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"into_iter","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"into_iter","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"description","","",84,[[]]],[11,"clone","","",75,[[],["rangeto",3]]],[11,"clone","","",86,[[],["rangeinclusive",3]]],[11,"clone","","",42,[[],["ordering",4]]],[11,"clone","","",81,[[],["generatorstate",4]]],[11,"clone","","",85,[[],["rangefull",3]]],[11,"clone","","",73,[[],["range",3]]],[11,"clone","","",84,[[],["parseinterror",3]]],[11,"clone","","",76,[[],["bound",4]]],[11,"clone","","",74,[[],["rangefrom",3]]],[11,"clone","","",78,[[],["rangetoinclusive",3]]],[11,"hash","","",86,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",76,[[]]],[11,"next_back","","",73,[[],["option",4]]],[11,"nth_back","","",73,[[],["option",4]]],[11,"next_back","","",86,[[],["option",4]]],[11,"nth_back","","",86,[[],["option",4]]],[11,"try_rfold","","",86,[[]]],[11,"next","","",86,[[],["option",4]]],[11,"size_hint","","",86,[[]]],[11,"nth","","",86,[[],["option",4]]],[11,"try_fold","","",86,[[]]],[11,"last","","",86,[[],["option",4]]],[11,"min","","",86,[[],["option",4]]],[11,"max","","",86,[[],["option",4]]],[11,"next","","",73,[[],["option",4]]],[11,"size_hint","","",73,[[]]],[11,"nth","","",73,[[],["option",4]]],[11,"last","","",73,[[],["option",4]]],[11,"min","","",73,[[],["option",4]]],[11,"max","","",73,[[],["option",4]]],[11,"next","","",74,[[],["option",4]]],[11,"size_hint","","",74,[[]]],[11,"nth","","",74,[[],["option",4]]],[11,"eq","","",42,[[["ordering",4]]]],[11,"eq","","",78,[[["rangetoinclusive",3]]]],[11,"ne","","",78,[[["rangetoinclusive",3]]]],[11,"eq","","",86,[[["rangeinclusive",3]]]],[11,"ne","","",86,[[["rangeinclusive",3]]]],[11,"eq","","",73,[[["range",3]]]],[11,"ne","","",73,[[["range",3]]]],[11,"eq","","",76,[[["bound",4]]]],[11,"ne","","",76,[[["bound",4]]]],[11,"eq","","",75,[[["rangeto",3]]]],[11,"ne","","",75,[[["rangeto",3]]]],[11,"eq","","",85,[[["rangefull",3]]]],[11,"eq","","",81,[[["generatorstate",4]]]],[11,"ne","","",81,[[["generatorstate",4]]]],[11,"eq","","",74,[[["rangefrom",3]]]],[11,"ne","","",74,[[["rangefrom",3]]]],[11,"eq","","",84,[[["parseinterror",3]]]],[11,"ne","","",84,[[["parseinterror",3]]]],[11,"cmp","","",81,[[["generatorstate",4]],["ordering",4]]],[11,"cmp","","",42,[[["ordering",4]],["ordering",4]]],[11,"fmt","","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",86,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",81,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",78,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",73,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",74,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",76,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",75,[[["formatter",3]],[["result",4],["error",3]]]],[11,"start_bound","","",78,[[],["bound",4]]],[11,"end_bound","","",78,[[],["bound",4]]],[11,"start_bound","","",73,[[],["bound",4]]],[11,"end_bound","","",73,[[],["bound",4]]],[11,"start_bound","","",75,[[],["bound",4]]],[11,"end_bound","","",75,[[],["bound",4]]],[11,"start_bound","","",86,[[],["bound",4]]],[11,"end_bound","","",86,[[],["bound",4]]],[11,"start_bound","","",74,[[],["bound",4]]],[11,"end_bound","","",74,[[],["bound",4]]],[11,"start_bound","","",78,[[],["bound",4]]],[11,"end_bound","","",78,[[],["bound",4]]],[11,"start_bound","","",85,[[],["bound",4]]],[11,"end_bound","","",85,[[],["bound",4]]],[11,"start_bound","","",74,[[],["bound",4]]],[11,"end_bound","","",74,[[],["bound",4]]],[11,"start_bound","","",86,[[],["bound",4]]],[11,"end_bound","","",86,[[],["bound",4]]],[11,"start_bound","","",75,[[],["bound",4]]],[11,"end_bound","","",75,[[],["bound",4]]],[11,"start_bound","","",73,[[],["bound",4]]],[11,"end_bound","","",73,[[],["bound",4]]],[11,"partial_cmp","","",81,[[["generatorstate",4]],[["option",4],["ordering",4]]]],[11,"lt","","",81,[[["generatorstate",4]]]],[11,"le","","",81,[[["generatorstate",4]]]],[11,"gt","","",81,[[["generatorstate",4]]]],[11,"ge","","",81,[[["generatorstate",4]]]],[11,"partial_cmp","","",42,[[["ordering",4]],[["option",4],["ordering",4]]]],[11,"get","","",74,[[],["option",4]]],[11,"get_mut","","",74,[[],["option",4]]],[11,"get_unchecked","","",74,[[]]],[11,"get_unchecked_mut","","",74,[[]]],[11,"index","","",74,[[]]],[11,"index_mut","","",74,[[]]],[11,"get","","",85,[[],["option",4]]],[11,"get_mut","","",85,[[],["option",4]]],[11,"get_unchecked","","",85,[[]]],[11,"get_unchecked_mut","","",85,[[]]],[11,"index","","",85,[[]]],[11,"index_mut","","",85,[[]]],[11,"get","","",74,[[],["option",4]]],[11,"get_mut","","",74,[[],["option",4]]],[11,"get_unchecked","","",74,[[]]],[11,"get_unchecked_mut","","",74,[[]]],[11,"index","","",74,[[]]],[11,"index_mut","","",74,[[]]],[11,"get","","",86,[[],["option",4]]],[11,"get_mut","","",86,[[],["option",4]]],[11,"get_unchecked","","",86,[[]]],[11,"get_unchecked_mut","","",86,[[]]],[11,"index","","",86,[[]]],[11,"index_mut","","",86,[[]]],[11,"get","","",73,[[],["option",4]]],[11,"get_mut","","",73,[[],["option",4]]],[11,"get_unchecked","","",73,[[]]],[11,"get_unchecked_mut","","",73,[[]]],[11,"index","","",73,[[]]],[11,"index_mut","","",73,[[]]],[11,"get","","",78,[[],["option",4]]],[11,"get_mut","","",78,[[],["option",4]]],[11,"get_unchecked","","",78,[[]]],[11,"get_unchecked_mut","","",78,[[]]],[11,"index","","",78,[[]]],[11,"index_mut","","",78,[[]]],[11,"get","","",75,[[],["option",4]]],[11,"get_mut","","",75,[[],["option",4]]],[11,"get_unchecked","","",75,[[]]],[11,"get_unchecked_mut","","",75,[[]]],[11,"index","","",75,[[]]],[11,"index_mut","","",75,[[]]],[11,"get","","",78,[[],["option",4]]],[11,"get_mut","","",78,[[],["option",4]]],[11,"get_unchecked","","",78,[[]]],[11,"get_unchecked_mut","","",78,[[]]],[11,"index","","",78,[[]]],[11,"index_mut","","",78,[[]]],[11,"get","","",86,[[],["option",4]]],[11,"get_mut","","",86,[[],["option",4]]],[11,"get_unchecked","","",86,[[]]],[11,"get_unchecked_mut","","",86,[[]]],[11,"index","","",86,[[]]],[11,"index_mut","","",86,[[]]],[11,"get","","",75,[[],["option",4]]],[11,"get_mut","","",75,[[],["option",4]]],[11,"get_unchecked","","",75,[[]]],[11,"get_unchecked_mut","","",75,[[]]],[11,"index","","",75,[[]]],[11,"index_mut","","",75,[[]]],[11,"get","","",73,[[],["option",4]]],[11,"get_mut","","",73,[[],["option",4]]],[11,"get_unchecked","","",73,[[]]],[11,"get_unchecked_mut","","",73,[[]]],[11,"index","","",73,[[]]],[11,"index_mut","","",73,[[]]],[11,"get","","",85,[[],["option",4]]],[11,"get_mut","","",85,[[],["option",4]]],[11,"get_unchecked","","",85,[[]]],[11,"get_unchecked_mut","","",85,[[]]],[11,"index","","",85,[[]]],[11,"index_mut","","",85,[[]]],[11,"bitxor","","",83,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",82,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",83,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",82,[[["bigint",3]],["bigint",3]]],[11,"hash","","",82,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",0,[[]]],[11,"neg","","Negate Sign value.",0,[[],["sign",4]]],[11,"neg","","",82,[[],["bigint",3]]],[11,"bitand_assign","","",83,[[["biguint",3]]]],[11,"bitand_assign","","",82,[[["bigint",3]]]],[11,"bitand_assign","","",83,[[["biguint",3]]]],[11,"bitand_assign","","",82,[[["bigint",3]]]],[11,"add","","",83,[[],["biguint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",83,[[],["biguint",3]]],[11,"add","","",83,[[["biguint",3]],["biguint",3]]],[11,"add","","",82,[[["bigint",3]],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",83,[[],["biguint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",83,[[],["biguint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",83,[[["biguint",3]],["biguint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",83,[[],["biguint",3]]],[11,"add","","",83,[[],["biguint",3]]],[11,"add","","",83,[[],["biguint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",83,[[],["biguint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",83,[[],["biguint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",83,[[],["biguint",3]]],[11,"add","","",83,[[],["biguint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[["bigint",3]],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",83,[[],["biguint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"add","","",82,[[],["bigint",3]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",83,[[],["biguint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"shl","","",82,[[],["bigint",3]]],[11,"default","","",82,[[],["bigint",3]]],[11,"default","","",83,[[],["biguint",3]]],[11,"bitand","","",82,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",82,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",83,[[["biguint",3]],["biguint",3]]],[11,"bitand","","",83,[[["biguint",3]],["biguint",3]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",83,[[]]],[11,"from_i64","","",83,[[],[["biguint",3],["option",4]]]],[11,"from_i128","","",83,[[],[["biguint",3],["option",4]]]],[11,"from_u64","","",83,[[],[["biguint",3],["option",4]]]],[11,"from_u128","","",83,[[],[["biguint",3],["option",4]]]],[11,"from_f64","","",83,[[],[["biguint",3],["option",4]]]],[11,"from_i64","","",82,[[],[["option",4],["bigint",3]]]],[11,"from_i128","","",82,[[],[["option",4],["bigint",3]]]],[11,"from_u64","","",82,[[],[["option",4],["bigint",3]]]],[11,"from_u128","","",82,[[],[["option",4],["bigint",3]]]],[11,"from_f64","","",82,[[],[["option",4],["bigint",3]]]],[11,"clone","","",0,[[],["sign",4]]],[11,"clone","","",83,[[],["biguint",3]]],[11,"clone_from","","",83,[[["biguint",3]]]],[11,"clone","","",82,[[],["bigint",3]]],[11,"clone_from","","",82,[[["bigint",3]]]],[11,"to_biguint","","",83,[[],[["biguint",3],["option",4]]]],[11,"to_biguint","","",82,[[],[["biguint",3],["option",4]]]],[11,"rem_assign","","",82,[[["bigint",3]]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",83,[[["biguint",3]]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",83,[[["biguint",3]]]],[11,"rem_assign","","",82,[[]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",82,[[["bigint",3]]]],[11,"rem_assign","","",83,[[]]],[11,"rem_assign","","",82,[[]]],[11,"from","","",83,[[],["biguint",3]]],[11,"from","","",83,[[],["biguint",3]]],[11,"from","","",83,[[],["biguint",3]]],[11,"from","","",82,[[],["bigint",3]]],[11,"from","","",83,[[],["biguint",3]]],[11,"from","","",82,[[["biguint",3]],["bigint",3]]],[11,"from","","",82,[[],["bigint",3]]],[11,"from","","",82,[[],["bigint",3]]],[11,"from","","",82,[[],["bigint",3]]],[11,"from","","",82,[[],["bigint",3]]],[11,"from","","",82,[[],["bigint",3]]],[11,"from","","",83,[[],["biguint",3]]],[11,"from","","",82,[[],["bigint",3]]],[11,"from","","",82,[[],["bigint",3]]],[11,"from","","",82,[[],["bigint",3]]],[11,"from","","",82,[[],["bigint",3]]],[11,"from","","",82,[[],["bigint",3]]],[11,"from","","",82,[[],["bigint",3]]],[11,"from","","",83,[[],["biguint",3]]],[11,"eq","","",0,[[["sign",4]]]],[11,"eq","","",82,[[["bigint",3]]]],[11,"eq","","",83,[[["biguint",3]]]],[11,"nth_root","","",82,[[],["bigint",3]]],[11,"sqrt","","",82,[[],["bigint",3]]],[11,"cbrt","","",82,[[],["bigint",3]]],[11,"nth_root","","",83,[[],["biguint",3]]],[11,"sqrt","","",83,[[],["biguint",3]]],[11,"cbrt","","",83,[[],["biguint",3]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",83,[[["biguint",3]]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",82,[[["bigint",3]]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",83,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",82,[[["bigint",3]]]],[11,"mul_assign","","",83,[[["biguint",3]]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",82,[[]]],[11,"mul_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",83,[[]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"shr","","",83,[[],["biguint",3]]],[11,"shr","","",82,[[],["bigint",3]]],[11,"mul","","",83,[[],["biguint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",83,[[],["biguint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",83,[[],["biguint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",83,[[],["biguint",3]]],[11,"mul","","",83,[[],["biguint",3]]],[11,"mul","","",83,[[],["biguint",3]]],[11,"mul","","",83,[[],["biguint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",0,[[["sign",4]],["sign",4]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",83,[[["biguint",3]],["biguint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",82,[[["bigint",3]],["bigint",3]]],[11,"mul","","",83,[[],["biguint",3]]],[11,"mul","","",83,[[],["biguint",3]]],[11,"mul","","",83,[[],["biguint",3]]],[11,"mul","","",82,[[["bigint",3]],["bigint",3]]],[11,"mul","","",83,[[["biguint",3]],["biguint",3]]],[11,"mul","","",82,[[],["bigint",3]]],[11,"mul","","",83,[[],["biguint",3]]],[11,"mul","","",83,[[],["biguint",3]]],[11,"cmp","","",83,[[["biguint",3]],["ordering",4]]],[11,"cmp","","",82,[[["bigint",3]],["ordering",4]]],[11,"cmp","","",0,[[["sign",4]],["ordering",4]]],[11,"abs","","",82,[[],["bigint",3]]],[11,"abs_sub","","",82,[[["bigint",3]],["bigint",3]]],[11,"signum","","",82,[[],["bigint",3]]],[11,"is_positive","","",82,[[]]],[11,"is_negative","","",82,[[]]],[11,"sum","","",83,[[],["biguint",3]]],[11,"sum","","",82,[[],["bigint",3]]],[11,"product","","",82,[[],["bigint",3]]],[11,"product","","",83,[[],["biguint",3]]],[11,"div_rem","","",82,[[["bigint",3]]]],[11,"div_floor","","",82,[[["bigint",3]],["bigint",3]]],[11,"mod_floor","","",82,[[["bigint",3]],["bigint",3]]],[11,"div_mod_floor","","",82,[[["bigint",3]]]],[11,"div_ceil","","",82,[[["bigint",3]],["bigint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",82,[[["bigint",3]],["bigint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",82,[[["bigint",3]],["bigint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",82,[[["bigint",3]]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",82,[[["bigint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",82,[[["bigint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",82,[[["bigint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",82,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",82,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",82,[[["bigint",3]],["bigint",3]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",82,[[["bigint",3]],["bigint",3]]],[11,"div_rem","","",83,[[["biguint",3]]]],[11,"div_floor","","",83,[[["biguint",3]],["biguint",3]]],[11,"mod_floor","","",83,[[["biguint",3]],["biguint",3]]],[11,"div_mod_floor","","",83,[[["biguint",3]]]],[11,"div_ceil","","",83,[[["biguint",3]],["biguint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",83,[[["biguint",3]],["biguint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",83,[[["biguint",3]],["biguint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",83,[[["biguint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",83,[[["biguint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",83,[[["biguint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",83,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",83,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",83,[[["biguint",3]],["biguint",3]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",83,[[["biguint",3]],["biguint",3]]],[11,"checked_div","","",82,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",83,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"not","","",82,[[],["bigint",3]]],[11,"checked_mul","","",83,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_mul","","",82,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"bitxor_assign","","",83,[[["biguint",3]]]],[11,"bitxor_assign","","",83,[[["biguint",3]]]],[11,"bitxor_assign","","",82,[[["bigint",3]]]],[11,"bitxor_assign","","",82,[[["bigint",3]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",83,[[],[["biguint",3],["result",4],["parsebiginterror",3]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",82,[[],[["result",4],["parsebiginterror",3],["bigint",3]]]],[11,"div","","",83,[[["biguint",3]],["biguint",3]]],[11,"div","","",83,[[],["biguint",3]]],[11,"div","","",83,[[],["biguint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[["bigint",3]],["bigint",3]]],[11,"div","","",82,[[["bigint",3]],["bigint",3]]],[11,"div","","",83,[[["biguint",3]],["biguint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",83,[[],["biguint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",83,[[],["biguint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",83,[[],["biguint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",83,[[],["biguint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",83,[[],["biguint",3]]],[11,"div","","",83,[[],["biguint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",83,[[],["biguint",3]]],[11,"div","","",83,[[],["biguint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",83,[[],["biguint",3]]],[11,"div","","",83,[[],["biguint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"div","","",82,[[],["bigint",3]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"rem","","",83,[[["biguint",3]],["biguint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",83,[[["biguint",3]],["biguint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",83,[[],["biguint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",83,[[],["biguint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",83,[[],["biguint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",83,[[],["biguint",3]]],[11,"rem","","",83,[[],["biguint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",83,[[],["biguint",3]]],[11,"rem","","",83,[[],["biguint",3]]],[11,"rem","","",83,[[],["biguint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",83,[[],["biguint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",82,[[["bigint",3]],["bigint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",82,[[["bigint",3]],["bigint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",83,[[],["biguint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",83,[[],["biguint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"rem","","",83,[[],["biguint",3]]],[11,"rem","","",82,[[],["bigint",3]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"try_from","","",83,[[],[["result",4],["biguint",3],["tryfrombiginterror",3]]]],[11,"try_from","","",83,[[],[["result",4],["biguint",3],["tryfrombiginterror",3]]]],[11,"try_from","","",83,[[["bigint",3]],[["result",4],["biguint",3],["tryfrombiginterror",3]]]],[11,"try_from","","",83,[[],[["result",4],["biguint",3],["tryfrombiginterror",3]]]],[11,"try_from","","",83,[[["bigint",3]],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",83,[[],[["result",4],["biguint",3],["tryfrombiginterror",3]]]],[11,"try_from","","",83,[[],[["result",4],["biguint",3],["tryfrombiginterror",3]]]],[11,"try_from","","",83,[[],[["result",4],["biguint",3],["tryfrombiginterror",3]]]],[11,"from_str","","",82,[[],[["result",4],["parsebiginterror",3],["bigint",3]]]],[11,"from_str","","",83,[[],[["biguint",3],["result",4],["parsebiginterror",3]]]],[11,"to_i64","","",83,[[],["option",4]]],[11,"to_i128","","",83,[[],["option",4]]],[11,"to_u64","","",83,[[],["option",4]]],[11,"to_u128","","",83,[[],["option",4]]],[11,"to_f32","","",83,[[],["option",4]]],[11,"to_f64","","",83,[[],["option",4]]],[11,"to_i64","","",82,[[],["option",4]]],[11,"to_i128","","",82,[[],["option",4]]],[11,"to_u64","","",82,[[],["option",4]]],[11,"to_u128","","",82,[[],["option",4]]],[11,"to_f32","","",82,[[],["option",4]]],[11,"to_f64","","",82,[[],["option",4]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",83,[[["biguint",3]]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",83,[[["biguint",3]]]],[11,"div_assign","","",82,[[["bigint",3]]]],[11,"div_assign","","",82,[[["bigint",3]]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",83,[[]]],[11,"div_assign","","",82,[[]]],[11,"div_assign","","",83,[[]]],[11,"one","","",83,[[],["biguint",3]]],[11,"set_one","","",83,[[]]],[11,"is_one","","",83,[[]]],[11,"one","","",82,[[],["bigint",3]]],[11,"set_one","","",82,[[]]],[11,"is_one","","",82,[[]]],[11,"zero","","",82,[[],["bigint",3]]],[11,"set_zero","","",82,[[]]],[11,"is_zero","","",82,[[]]],[11,"zero","","",83,[[],["biguint",3]]],[11,"set_zero","","",83,[[]]],[11,"is_zero","","",83,[[]]],[11,"checked_add","","",82,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_add","","",83,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",82,[[["bigint",3]]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",82,[[["bigint",3]]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",83,[[["biguint",3]]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",83,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",83,[[["biguint",3]]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",82,[[]]],[11,"add_assign","","",82,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",83,[[["biguint",3]]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",83,[[["biguint",3]]]],[11,"sub_assign","","",82,[[["bigint",3]]]],[11,"sub_assign","","",83,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",82,[[["bigint",3]]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",82,[[]]],[11,"sub_assign","","",82,[[]]],[11,"bitor_assign","","",83,[[["biguint",3]]]],[11,"bitor_assign","","",83,[[["biguint",3]]]],[11,"bitor_assign","","",82,[[["bigint",3]]]],[11,"bitor_assign","","",82,[[["bigint",3]]]],[11,"bitor","","",82,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",82,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",83,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",83,[[["biguint",3]],["biguint",3]]],[11,"checked_sub","","",83,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_sub","","",82,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"to_bigint","","",83,[[],[["option",4],["bigint",3]]]],[11,"to_bigint","","",82,[[],[["option",4],["bigint",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",82,[[["bigint",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",83,[[["biguint",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",0,[[["sign",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","","",82,[[["bigint",3]],["bigint",3]]],[11,"sub","","",83,[[],["biguint",3]]],[11,"sub","","",83,[[["biguint",3]],["biguint",3]]],[11,"sub","","",83,[[],["biguint",3]]],[11,"sub","","",83,[[],["biguint",3]]],[11,"sub","","",82,[[["bigint",3]],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",83,[[],["biguint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",83,[[],["biguint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",83,[[],["biguint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",83,[[],["biguint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",83,[[],["biguint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",83,[[],["biguint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",83,[[["biguint",3]],["biguint",3]]],[11,"sub","","",83,[[],["biguint",3]]],[11,"sub","","",83,[[],["biguint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",83,[[],["biguint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"sub","","",82,[[],["bigint",3]]],[11,"pow","","",82,[[],["bigint",3]]],[11,"pow","","",83,[[],["biguint",3]]],[11,"pow","","",83,[[],["biguint",3]]],[11,"pow","","",83,[[],["biguint",3]]],[11,"pow","","",82,[[],["bigint",3]]],[11,"pow","","",83,[[],["biguint",3]]],[11,"pow","","",83,[[],["biguint",3]]],[11,"pow","","",82,[[],["bigint",3]]],[11,"pow","","",82,[[],["bigint",3]]],[11,"pow","","",82,[[],["bigint",3]]],[11,"pow","","",83,[[],["biguint",3]]],[11,"pow","","",82,[[],["bigint",3]]],[11,"pow","","",83,[[["biguint",3]],["biguint",3]]],[11,"pow","","",82,[[],["bigint",3]]],[11,"pow","","",83,[[],["biguint",3]]],[11,"pow","","",82,[[],["bigint",3]]],[11,"pow","","",83,[[],["biguint",3]]],[11,"pow","","",82,[[["biguint",3]],["bigint",3]]],[11,"pow","","",83,[[],["biguint",3]]],[11,"pow","","",82,[[],["bigint",3]]],[11,"pow","","",82,[[],["bigint",3]]],[11,"pow","","",82,[[],["bigint",3]]],[11,"pow","","",83,[[["biguint",3]],["biguint",3]]],[11,"pow","","",83,[[],["biguint",3]]],[11,"pow","","",83,[[],["biguint",3]]],[11,"pow","","",83,[[],["biguint",3]]],[11,"pow","","",82,[[],["bigint",3]]],[11,"pow","","",82,[[["biguint",3]],["bigint",3]]],[11,"fmt","abstract_integers::traits","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"new","abstract_integers","Creates and initializes a BigInt.",82,[[["sign",4],["vec",3]],["bigint",3]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",82,[[["biguint",3],["sign",4]],["bigint",3]]],[11,"from_slice","","Creates and initializes a `BigInt`.",82,[[["sign",4]],["bigint",3]]],[11,"assign_from_slice","","Reinitializes a `BigInt`.",82,[[["sign",4]]]],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",82,[[["sign",4]],["bigint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",82,[[["sign",4]],["bigint",3]]],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",82,[[],["bigint",3]]],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",82,[[],["bigint",3]]],[11,"parse_bytes","","Creates and initializes a `BigInt`.",82,[[],[["option",4],["bigint",3]]]],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",82,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",82,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",82,[[]]],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",82,[[]]],[11,"to_u32_digits","","Returns the sign and the `u32` digits representation of…",82,[[]]],[11,"to_u64_digits","","Returns the sign and the `u64` digits representation of…",82,[[]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",82,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",82,[[],["u64digits",3]]],[11,"to_signed_bytes_be","","Returns the two\'s-complement byte representation of the…",82,[[],["vec",3]]],[11,"to_signed_bytes_le","","Returns the two\'s-complement byte representation of the…",82,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",82,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",82,[[]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",82,[[]]],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",82,[[],["sign",4]]],[11,"magnitude","","Returns the magnitude of the `BigInt` as a `BigUint`.",82,[[],["biguint",3]]],[11,"into_parts","","Convert this `BigInt` into its `Sign` and `BigUint`…",82,[[]]],[11,"bits","","Determines the fewest bits necessary to express the…",82,[[]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it\'s not…",82,[[],[["biguint",3],["option",4]]]],[11,"checked_add","","",82,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_sub","","",82,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",82,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",82,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"pow","","Returns `self ^ exponent`.",82,[[],["bigint",3]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",82,[[["bigint",3]],["bigint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",82,[[],["bigint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",82,[[],["bigint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",82,[[],["bigint",3]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",82,[[],["option",4]]],[11,"bit","","Returns whether the bit in position `bit` is set, using…",82,[[]]],[11,"set_bit","","Sets or clears the bit in the given position, using the…",82,[[]]],[11,"new","","Creates and initializes a `BigUint`.",83,[[["vec",3]],["biguint",3]]],[11,"from_slice","","Creates and initializes a `BigUint`.",83,[[],["biguint",3]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",83,[[]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",83,[[],["biguint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",83,[[],["biguint",3]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",83,[[],[["biguint",3],["option",4]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",83,[[],[["biguint",3],["option",4]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",83,[[],[["biguint",3],["option",4]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",83,[[],["vec",3]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",83,[[],["vec",3]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",83,[[],["vec",3]]],[11,"to_u64_digits","","Returns the `u64` digits representation of the `BigUint`…",83,[[],["vec",3]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",83,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",83,[[],["u64digits",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",83,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",83,[[],["vec",3]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",83,[[],["vec",3]]],[11,"bits","","Determines the fewest bits necessary to express the…",83,[[]]],[11,"pow","","Returns `self ^ exponent`.",83,[[],["biguint",3]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",83,[[["biguint",3]],["biguint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",83,[[],["biguint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",83,[[],["biguint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",83,[[],["biguint",3]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",83,[[],["option",4]]],[11,"trailing_ones","","Returns the number of least-significant bits that are ones.",83,[[]]],[11,"count_ones","","Returns the number of one bits.",83,[[]]],[11,"bit","","Returns whether the bit in the given position is set",83,[[]]],[11,"set_bit","","Sets or clears the bit in the given position",83,[[]]],[11,"reverse","","Reverses the `Ordering`.",42,[[],["ordering",4]]],[11,"then","","Chains two orderings.",42,[[["ordering",4]],["ordering",4]]],[11,"then_with","","Chains the ordering with the given function.",42,[[],["ordering",4]]],[11,"kind","","Outputs the detailed cause of parsing an integer failing.",84,[[],["interrorkind",4]]],[11,"contains","","Returns `true` if `item` is contained in the range.",73,[[]]],[11,"is_empty","","Returns `true` if the range contains no items.",73,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",74,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",75,[[]]],[11,"cloned","","Map a `Bound<&T>` to a `Bound<T>` by cloning the contents…",76,[[],["bound",4]]],[11,"new","","Creates a new inclusive range. Equivalent to writing…",86,[[],["rangeinclusive",3]]],[11,"start","","Returns the lower bound of the range (inclusive).",86,[[]]],[11,"end","","Returns the upper bound of the range (inclusive).",86,[[]]],[11,"into_inner","","Destructures the `RangeInclusive` into (lower bound, upper…",86,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",86,[[]]],[11,"is_empty","","Returns `true` if the range contains no items.",86,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",78,[[]]]],"p":[[4,"Sign"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[4,"Ordering"],[8,"Add"],[8,"Div"],[8,"Mul"],[8,"Neg"],[8,"Rem"],[8,"Sub"],[8,"AddAssign"],[8,"DivAssign"],[8,"MulAssign"],[8,"RemAssign"],[8,"SubAssign"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Not"],[8,"Shl"],[8,"Shr"],[8,"BitAndAssign"],[8,"BitOrAssign"],[8,"BitXorAssign"],[8,"ShlAssign"],[8,"ShrAssign"],[8,"Deref"],[8,"DerefMut"],[8,"Drop"],[8,"Fn"],[8,"FnMut"],[8,"FnOnce"],[8,"Index"],[8,"IndexMut"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Bound"],[8,"RangeBounds"],[3,"RangeToInclusive"],[8,"Try"],[8,"Generator"],[4,"GeneratorState"],[3,"BigInt"],[3,"BigUint"],[3,"ParseIntError"],[3,"RangeFull"],[3,"RangeInclusive"]]},\
"addr2line":{"doc":"This crate provides a cross-platform library and binary…","i":[[3,"Context","addr2line","The state necessary to perform address to line translation.",null,null],[3,"LocationRangeIter","","Iterator over `Location`s in a range of addresses,…",null,null],[3,"FrameIter","","An iterator over function frames.",null,null],[3,"Frame","","A function frame.",null,null],[12,"dw_die_offset","","The DWARF unit offset corresponding to the DIE of the…",0,null],[12,"function","","The name of the function.",0,null],[12,"location","","The source location corresponding to this frame.",0,null],[3,"FunctionName","","A function name.",null,null],[12,"name","","The name of the function.",1,null],[12,"language","","The language of the compilation unit containing this…",1,null],[3,"Location","","A source location.",null,null],[12,"file","","The file name.",2,null],[12,"line","","The line number.",2,null],[12,"column","","The column number.",2,null],[5,"demangle","","Demangle a symbol name using the demangling scheme for the…",null,[[["dwlang",3]],[["string",3],["option",4]]]],[5,"demangle_auto","","Apply \'best effort\' demangling of a symbol name.",null,[[["option",4],["dwlang",3],["cow",4]],["cow",4]]],[11,"from_sections","","Construct a new `Context` from DWARF sections.",3,[[["debugrnglists",3],["debugaddr",3],["debugstroffsets",3],["debuginfo",3],["debugranges",3],["debuglinestr",3],["debugabbrev",3],["debugline",3],["debugstr",3],["debugaranges",3]],[["error",4],["result",4]]]],[11,"from_dwarf","","Construct a new `Context` from an existing…",3,[[["dwarf",3]],[["error",4],["result",4]]]],[11,"dwarf","","The dwarf sections associated with this `Context`.",3,[[],["dwarf",3]]],[11,"find_dwarf_unit","","Find the DWARF unit corresponding to the given virtual…",3,[[],[["option",4],["unit",3]]]],[11,"find_location","","Find the source file and line corresponding to the given…",3,[[],[["option",4],["error",4],["result",4]]]],[11,"find_location_range","","Return source file and lines for a range of addresses. For…",3,[[],[["error",4],["locationrangeiter",3],["result",4]]]],[11,"find_frames","","Return an iterator for the function frames corresponding…",3,[[],[["error",4],["result",4],["frameiter",3]]]],[11,"next","","Advances the iterator and returns the next frame.",4,[[],[["option",4],["error",4],["result",4]]]],[11,"raw_name","","The raw name of this function before demangling.",1,[[],[["error",4],["result",4],["cow",4]]]],[11,"demangle","","The name of this function after demangling (if applicable).",1,[[],[["error",4],["result",4],["cow",4]]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next","","",5,[[],["option",4]]]],"p":[[3,"Frame"],[3,"FunctionName"],[3,"Location"],[3,"Context"],[3,"FrameIter"],[3,"LocationRangeIter"]]},\
"adler":{"doc":"Adler-32 checksum implementation.","i":[[3,"Adler32","adler","Adler-32 checksum calculator.",null,null],[5,"adler32_slice","","Calculates the Adler-32 checksum of a byte slice.",null,[[]]],[11,"new","","Creates a new Adler-32 instance with default state.",0,[[]]],[11,"from_checksum","","Creates an `Adler32` instance from a precomputed Adler-32…",0,[[]]],[11,"checksum","","Returns the calculated checksum at this point in time.",0,[[]]],[11,"write_slice","","Adds `bytes` to the checksum calculation.",0,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"finish","","",0,[[]]],[11,"write","","",0,[[]]],[11,"clone","","",0,[[],["adler32",3]]],[11,"default","","",0,[[]]]],"p":[[3,"Adler32"]]},\
"aead":{"doc":"[Authenticated Encryption with Associated Data] (AEAD)…","i":[[0,"consts","aead","Type aliases for many constants.",null,null],[6,"True","aead::consts","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[3,"B0","","The type-level bit 0.",null,null],[3,"B1","","The type-level bit 1.",null,null],[3,"Z0","","The type-level signed integer 0.",null,null],[3,"Error","aead","Error type.",null,null],[3,"Payload","","AEAD payloads are a combination of a message (plaintext or…",null,null],[12,"msg","","Message to be encrypted/decrypted",0,null],[12,"aad","","Optional \\\"additional associated data\\\" to authenticate…",0,null],[6,"Result","","Result type alias with [`Error`].",null,null],[6,"Key","","Key for a [`NewAead`] algorithm",null,null],[6,"Nonce","","Nonce: single-use value for ensuring ciphertexts are unique",null,null],[6,"Tag","","Tag: authentication code which ensures ciphertexts are…",null,null],[8,"NewAead","","Instantiate either a stateless [`Aead`] or stateful…",null,null],[16,"KeySize","","The size of the key array required by this algorithm.",1,null],[10,"new","","Create a new AEAD instance with the given key.",1,[[["key",6]]]],[11,"new_from_slice","","Create new AEAD instance from key given as a byte slice..",1,[[],["result",6]]],[8,"AeadCore","","Authenticated Encryption with Associated Data (AEAD)…",null,null],[16,"NonceSize","","The length of a nonce.",2,null],[16,"TagSize","","The maximum length of the nonce.",2,null],[16,"CiphertextOverhead","","The upper bound amount of additional space required to…",2,null],[8,"Aead","","Authenticated Encryption with Associated Data (AEAD)…",null,null],[10,"encrypt","","Encrypt the given plaintext payload, and return the…",3,[[["nonce",6]],[["result",6],["vec",3]]]],[10,"decrypt","","Decrypt the given ciphertext slice, and return the…",3,[[["nonce",6]],[["result",6],["vec",3]]]],[8,"AeadMut","","Stateful Authenticated Encryption with Associated Data…",null,null],[10,"encrypt","","Encrypt the given plaintext slice, and return the…",4,[[["nonce",6]],[["result",6],["vec",3]]]],[10,"decrypt","","Decrypt the given ciphertext slice, and return the…",4,[[["nonce",6]],[["result",6],["vec",3]]]],[8,"AeadInPlace","","In-place stateless AEAD trait.",null,null],[11,"encrypt_in_place","","Encrypt the given buffer containing a plaintext message…",5,[[["buffer",8],["nonce",6]],["result",6]]],[10,"encrypt_in_place_detached","","Encrypt the data in-place, returning the authentication tag",5,[[["nonce",6]],[["result",6],["tag",6]]]],[11,"decrypt_in_place","","Decrypt the message in-place, returning an error in the…",5,[[["buffer",8],["nonce",6]],["result",6]]],[10,"decrypt_in_place_detached","","Decrypt the message in-place, returning an error in the…",5,[[["nonce",6],["tag",6]],["result",6]]],[8,"AeadMutInPlace","","In-place stateful AEAD trait.",null,null],[11,"encrypt_in_place","","Encrypt the given buffer containing a plaintext message…",6,[[["nonce",6]],["result",6]]],[10,"encrypt_in_place_detached","","Encrypt the data in-place, returning the authentication tag",6,[[["nonce",6]],[["result",6],["tag",6]]]],[11,"decrypt_in_place","","Decrypt the message in-place, returning an error in the…",6,[[["nonce",6]],["result",6]]],[10,"decrypt_in_place_detached","","Decrypt the data in-place, returning an error in the event…",6,[[["nonce",6],["tag",6]],["result",6]]],[8,"Buffer","","In-place encryption/decryption byte buffers.",null,null],[11,"len","","Get the length of the buffer",7,[[]]],[11,"is_empty","","Is the buffer empty?",7,[[]]],[10,"extend_from_slice","","Extend this buffer from the given slice",7,[[],["result",6]]],[10,"truncate","","Truncate this buffer to the given size",7,[[]]],[11,"from","aead::consts","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"is_equal","","",8,[[]]],[11,"is_greater","","",8,[[]]],[11,"is_greater_or_equal","","",8,[[]]],[11,"is_less","","",8,[[]]],[11,"is_less_or_equal","","",8,[[]]],[11,"is_not_equal","","",8,[[]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"is_equal","","",9,[[]]],[11,"is_greater","","",9,[[]]],[11,"is_greater_or_equal","","",9,[[]]],[11,"is_less","","",9,[[]]],[11,"is_less_or_equal","","",9,[[]]],[11,"is_not_equal","","",9,[[]]],[11,"from","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"powi","","",10,[[]]],[11,"partial_div","","",10,[[]]],[11,"is_equal","","",10,[[]]],[11,"is_greater","","",10,[[]]],[11,"is_greater_or_equal","","",10,[[]]],[11,"is_less","","",10,[[]]],[11,"is_less_or_equal","","",10,[[]]],[11,"is_not_equal","","",10,[[]]],[11,"from","aead","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"bitxor","aead::consts","",8,[[["b0",3]]]],[11,"bitxor","","",9,[[["b0",3]]]],[11,"bitxor","","",9,[[["b1",3]]]],[11,"bitxor","","",8,[[["b1",3]]]],[11,"hash","","",8,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",9,[[]]],[11,"neg","","",10,[[]]],[11,"add","","",10,[[]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","","",10,[[],["z0",3]]],[11,"default","","",9,[[],["b1",3]]],[11,"default","","",8,[[],["b0",3]]],[11,"bitand","","",9,[[["b1",3]]]],[11,"bitand","","",8,[[]]],[11,"bitand","","",9,[[["b0",3]]]],[11,"min","","",10,[[["z0",3]]]],[11,"min","","",8,[[["b0",3]],["b0",3]]],[11,"min","","",8,[[["b1",3]],["b0",3]]],[11,"min","","",9,[[["b1",3]],["b1",3]]],[11,"min","","",10,[[["nint",3]]]],[11,"min","","",9,[[["b0",3]],["b0",3]]],[11,"min","","",10,[[["pint",3]]]],[11,"compare","","",9,[[["b0",3]]]],[11,"compare","","",9,[[["b1",3]]]],[11,"compare","","",8,[[["b0",3]]]],[11,"compare","","",10,[[["z0",3]]]],[11,"compare","","",10,[[["nint",3]]]],[11,"compare","","",10,[[["pint",3]]]],[11,"compare","","",8,[[["b1",3]]]],[11,"powi","","",10,[[["nint",3]]]],[11,"powi","","",10,[[["pint",3]]]],[11,"powi","","",10,[[["z0",3]]]],[11,"clone","","",8,[[],["b0",3]]],[11,"clone","","",10,[[],["z0",3]]],[11,"clone","","",9,[[],["b1",3]]],[11,"to_i8","","",10,[[]]],[11,"to_i16","","",10,[[]]],[11,"to_i32","","",10,[[]]],[11,"to_i64","","",10,[[]]],[11,"to_isize","","",10,[[]]],[11,"eq","","",9,[[["b1",3]]]],[11,"eq","","",8,[[["b0",3]]]],[11,"eq","","",10,[[["z0",3]]]],[11,"mul","","",10,[[["aterm",3]]]],[11,"mul","","",10,[[["tarr",3]]]],[11,"mul","","",10,[[]]],[11,"cmp","","",8,[[["b0",3]],["ordering",4]]],[11,"cmp","","",9,[[["b1",3]],["ordering",4]]],[11,"cmp","","",10,[[["z0",3]],["ordering",4]]],[11,"not","","",8,[[]]],[11,"not","","",9,[[]]],[11,"div","","",10,[[]]],[11,"rem","","",10,[[]]],[11,"bitor","","",9,[[]]],[11,"bitor","","",8,[[["b1",3]]]],[11,"bitor","","",8,[[["b0",3]]]],[11,"to_int","","",10,[[]]],[11,"to_int","","",10,[[]]],[11,"to_int","","",10,[[]]],[11,"to_int","","",10,[[]]],[11,"max","","",9,[[["b0",3]],["b1",3]]],[11,"max","","",10,[[["pint",3]]]],[11,"max","","",8,[[["b1",3]],["b1",3]]],[11,"max","","",9,[[["b1",3]],["b1",3]]],[11,"max","","",10,[[["z0",3]]]],[11,"max","","",10,[[["nint",3]]]],[11,"max","","",8,[[["b0",3]],["b0",3]]],[11,"new","","",9,[[],["b1",3]]],[11,"to_u8","","",9,[[]]],[11,"to_bool","","",9,[[]]],[11,"new","","",8,[[],["b0",3]]],[11,"to_u8","","",8,[[]]],[11,"to_bool","","",8,[[]]],[11,"partial_cmp","","",8,[[["b0",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",9,[[["b1",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",10,[[["z0",3]],[["option",4],["ordering",4]]]],[11,"sub","","",10,[[["pint",3]]]],[11,"sub","","",10,[[["z0",3]]]],[11,"sub","","",10,[[["nint",3]]]],[11,"from","aead","",0,[[]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"eq","","",11,[[["error",3]]]],[11,"cmp","","",11,[[["error",3]],["ordering",4]]],[11,"partial_cmp","","",11,[[["error",3]],[["option",4],["ordering",4]]]],[11,"hash","","",11,[[]]],[11,"clone","","",11,[[],["error",3]]],[11,"new","aead::consts","Instantiates a singleton representing this bit.",8,[[],["b0",3]]],[11,"new","","Instantiates a singleton representing this bit.",9,[[],["b1",3]]],[11,"new","","Instantiates a singleton representing the integer 0.",10,[[],["z0",3]]]],"p":[[3,"Payload"],[8,"NewAead"],[8,"AeadCore"],[8,"Aead"],[8,"AeadMut"],[8,"AeadInPlace"],[8,"AeadMutInPlace"],[8,"Buffer"],[3,"B0"],[3,"B1"],[3,"Z0"],[3,"Error"]]},\
"ansi_term":{"doc":"This is a library for controlling colours and formatting,…","i":[[3,"Prefix","ansi_term","Like `ANSIString`, but only displays the style prefix.",null,null],[3,"Infix","","Like `ANSIString`, but only displays the difference…",null,null],[3,"Suffix","","Like `ANSIString`, but only displays the style suffix.",null,null],[3,"Style","","A style is a collection of properties that can format a…",null,null],[12,"foreground","","The style\'s foreground colour, if it has one.",0,null],[12,"background","","The style\'s background colour, if it has one.",0,null],[12,"is_bold","","Whether this style is bold.",0,null],[12,"is_dimmed","","Whether this style is dimmed.",0,null],[12,"is_italic","","Whether this style is italic.",0,null],[12,"is_underline","","Whether this style is underlined.",0,null],[12,"is_blink","","Whether this style is blinking.",0,null],[12,"is_reverse","","Whether this style has reverse colours.",0,null],[12,"is_hidden","","Whether this style is hidden.",0,null],[12,"is_strikethrough","","Whether this style is struckthrough.",0,null],[3,"ANSIGenericString","","An `ANSIGenericString` includes a generic string type and…",null,null],[3,"ANSIGenericStrings","","A set of `ANSIGenericString`s collected together, in order…",null,null],[12,"0","","",1,null],[4,"Colour","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[4,"Color","","A colour is one specific type of ANSI escape code, and can…",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",2,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",2,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",2,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",2,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",2,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",2,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",2,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",2,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour…",2,null],[13,"RGB","","A 24-bit RGB color, as specified by ISO-8613-3.",2,null],[5,"ANSIStrings","","A function to construct an `ANSIStrings` instance.",null,[[],["ansistrings",6]]],[5,"ANSIByteStrings","","A function to construct an `ANSIByteStrings` instance.",null,[[],["ansibytestrings",6]]],[5,"sub_string","","Return a substring of the given ANSIStrings sequence,…",null,[[["ansistrings",6]],[["ansistring",6],["vec",3]]]],[5,"unstyle","","Return a concatenated copy of `strs` without the…",null,[[["ansistrings",6]],["string",3]]],[5,"unstyled_len","","Return the unstyled length of ANSIStrings. This is…",null,[[["ansistrings",6]]]],[11,"prefix","","The prefix bytes for this style. These are the bytes that…",0,[[],["prefix",3]]],[11,"infix","","The infix bytes between this style and `next` style. These…",0,[[["style",3]],["infix",3]]],[11,"suffix","","The suffix for this style. These are the bytes that tell…",0,[[],["suffix",3]]],[11,"prefix","","The prefix bytes for this colour as a `Style`. These are…",2,[[],["prefix",3]]],[11,"infix","","The infix bytes between this colour and `next` colour.…",2,[[["colour",4]],["infix",3]]],[11,"suffix","","The suffix for this colour as a `Style`. These are the…",2,[[],["suffix",3]]],[11,"new","","Creates a new Style with no properties set.",0,[[],["style",3]]],[11,"bold","","Returns a `Style` with the bold property set.",0,[[],["style",3]]],[11,"dimmed","","Returns a `Style` with the dimmed property set.",0,[[],["style",3]]],[11,"italic","","Returns a `Style` with the italic property set.",0,[[],["style",3]]],[11,"underline","","Returns a `Style` with the underline property set.",0,[[],["style",3]]],[11,"blink","","Returns a `Style` with the blink property set. # Examples",0,[[],["style",3]]],[11,"reverse","","Returns a `Style` with the reverse property set.",0,[[],["style",3]]],[11,"hidden","","Returns a `Style` with the hidden property set.",0,[[],["style",3]]],[11,"strikethrough","","Returns a `Style` with the strikethrough property set.",0,[[],["style",3]]],[11,"fg","","Returns a `Style` with the foreground colour property set.",0,[[["colour",4]],["style",3]]],[11,"on","","Returns a `Style` with the background colour property set.",0,[[["colour",4]],["style",3]]],[11,"is_plain","","Return true if this `Style` has no actual styles, and can…",0,[[]]],[11,"normal","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"bold","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"dimmed","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"italic","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"underline","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"blink","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"reverse","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"hidden","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"strikethrough","","Returns a `Style` with the foreground colour set to this…",2,[[],["style",3]]],[11,"on","","Returns a `Style` with the foreground colour set to this…",2,[[["colour",4]],["style",3]]],[11,"style_ref","","Directly access the style",3,[[],["style",3]]],[11,"style_ref_mut","","Directly access the style mutably",3,[[],["style",3]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",0,[[],[["ansigenericstring",3],["sized",8],["toowned",8]]]],[11,"paint","","Paints the given text with this colour, returning an ANSI…",2,[[],[["ansigenericstring",3],["sized",8],["toowned",8]]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",3,[[],["result",6]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",1,[[],["result",6]]],[6,"ANSIString","","An ANSI String is a string coupled with the `Style` to…",null,null],[6,"ANSIByteString","","An `ANSIByteString` represents a formatted series of…",null,null],[6,"ANSIStrings","","A set of `ANSIString`s collected together, in order to be…",null,null],[6,"ANSIByteStrings","","A set of `ANSIByteString`s collected together, in order to…",null,null],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","You can turn a `Colour` into a `Style` with the foreground…",0,[[["colour",4]],["style",3]]],[11,"from","","",3,[[],["ansigenericstring",3]]],[11,"clone","","",4,[[],["prefix",3]]],[11,"clone","","",5,[[],["infix",3]]],[11,"clone","","",6,[[],["suffix",3]]],[11,"clone","","",0,[[],["style",3]]],[11,"clone","","",2,[[],["colour",4]]],[11,"clone","","",3,[[],["ansigenericstring",3]]],[11,"default","","Returns a style with no properties set. Formatting text…",0,[[],["style",3]]],[11,"eq","","",0,[[["style",3]]]],[11,"ne","","",0,[[["style",3]]]],[11,"eq","","",2,[[["colour",4]]]],[11,"ne","","",2,[[["colour",4]]]],[11,"eq","","",3,[[["ansigenericstring",3]]]],[11,"ne","","",3,[[["ansigenericstring",3]]]],[11,"eq","","",1,[[["ansigenericstrings",3]]]],[11,"ne","","",1,[[["ansigenericstrings",3]]]],[11,"deref","","",3,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"write_to","","Write an `ANSIByteString` to an `io::Write`. This writes…",9,[[],["result",6]]],[11,"write_to","","Write `ANSIByteStrings` to an `io::Write`. This writes the…",10,[[],["result",6]]]],"p":[[3,"Style"],[3,"ANSIGenericStrings"],[4,"Colour"],[3,"ANSIGenericString"],[3,"Prefix"],[3,"Infix"],[3,"Suffix"],[6,"ANSIString"],[6,"ANSIStrings"],[6,"ANSIByteString"],[6,"ANSIByteStrings"]]},\
"backtrace":{"doc":"A library for acquiring a backtrace at runtime","i":[[3,"Frame","backtrace","A trait representing one frame of a backtrace, yielded to…",null,null],[3,"Symbol","","A trait representing the resolution of a symbol in a file.",null,null],[3,"SymbolName","","A wrapper around a symbol name to provide ergonomic…",null,null],[3,"BacktraceFmt","","A formatter for backtraces.",null,null],[3,"BacktraceFrameFmt","","A formatter for just one frame of a backtrace.",null,null],[3,"Backtrace","","Representation of an owned and self-contained backtrace.",null,null],[3,"BacktraceFrame","","Captured version of a frame in a backtrace.",null,null],[3,"BacktraceSymbol","","Captured version of a symbol in a backtrace.",null,null],[4,"BytesOrWideString","","A platform independent representation of a string. When…",null,null],[13,"Bytes","","A slice, typically provided on Unix platforms.",0,null],[13,"Wide","","Wide strings typically from Windows.",0,null],[4,"PrintFmt","","The styles of printing that we can print",null,null],[13,"Short","","Prints a terser backtrace which ideally only contains…",1,null],[13,"Full","","Prints a backtrace that contains all possible information",1,null],[5,"trace_unsynchronized","","Same as `trace`, only unsafe as it\'s unsynchronized.",null,[[["fnmut",8]]]],[5,"resolve_frame_unsynchronized","","Same as `resolve_frame`, only unsafe as it\'s unsynchronized.",null,[[["frame",3]]]],[5,"resolve_unsynchronized","","Same as `resolve`, only unsafe as it\'s unsynchronized.",null,[[]]],[5,"clear_symbol_cache","","Attempt to reclaim that cached memory used to symbolicate…",null,[[]]],[5,"trace","","Inspects the current call-stack, passing all active frames…",null,[[["fnmut",8]]]],[5,"resolve","","Resolve an address to a symbol, passing the symbol to the…",null,[[["fnmut",8]]]],[5,"resolve_frame","","Resolve a previously capture frame to a symbol, passing…",null,[[["fnmut",8],["frame",3]]]],[11,"ip","","Returns the current instruction pointer of this frame.",2,[[]]],[11,"sp","","Returns the current stack pointer of this frame.",2,[[]]],[11,"symbol_address","","Returns the starting symbol address of the frame of this…",2,[[]]],[11,"module_base_address","","Returns the base address of the module to which the frame…",2,[[],["option",4]]],[11,"name","","Returns the name of this function.",3,[[],[["option",4],["symbolname",3]]]],[11,"addr","","Returns the starting address of this function.",3,[[],["option",4]]],[11,"filename_raw","","Returns the raw filename as a slice. This is mainly useful…",3,[[],[["bytesorwidestring",4],["option",4]]]],[11,"colno","","Returns the column number for where this symbol is…",3,[[],["option",4]]],[11,"lineno","","Returns the line number for where this symbol is currently…",3,[[],["option",4]]],[11,"filename","","Returns the file name where this function was defined.",3,[[],[["option",4],["path",3]]]],[11,"new","","Creates a new symbol name from the raw underlying bytes.",4,[[],["symbolname",3]]],[11,"as_str","","Returns the raw (mangled) symbol name as a `str` if the…",4,[[],["option",4]]],[11,"as_bytes","","Returns the raw symbol name as a list of bytes",4,[[]]],[11,"to_str_lossy","","Lossy converts to a `Cow<str>`, will allocate if `Bytes`…",0,[[],["cow",4]]],[11,"into_path_buf","","Provides a `Path` representation of `BytesOrWideString`.",0,[[],["pathbuf",3]]],[11,"new","","Create a new `BacktraceFmt` which will write output to the…",5,[[["formatter",3],["printfmt",4],["fnmut",8]]]],[11,"add_context","","Prints a preamble for the backtrace about to be printed.",5,[[],["result",6]]],[11,"frame","","Adds a frame to the backtrace output.",5,[[],["backtraceframefmt",3]]],[11,"finish","","Completes the backtrace output.",5,[[],["result",6]]],[11,"backtrace_frame","","Prints a `BacktraceFrame` with this frame formatter.",6,[[["backtraceframe",3]],["result",6]]],[11,"backtrace_symbol","","Prints a `BacktraceSymbol` within a `BacktraceFrame`.",6,[[["backtracesymbol",3],["backtraceframe",3]],["result",6]]],[11,"symbol","","Prints a raw traced `Frame` and `Symbol`, typically from…",6,[[["symbol",3],["frame",3]],["result",6]]],[11,"print_raw","","Adds a raw frame to the backtrace output.",6,[[["symbolname",3],["option",4],["option",4],["option",4],["bytesorwidestring",4]],["result",6]]],[11,"print_raw_with_column","","Adds a raw frame to the backtrace output, including column…",6,[[["symbolname",3],["option",4],["option",4],["option",4],["bytesorwidestring",4]],["result",6]]],[11,"new","","Captures a backtrace at the callsite of this function,…",7,[[],["backtrace",3]]],[11,"new_unresolved","","Similar to `new` except that this does not resolve any…",7,[[],["backtrace",3]]],[11,"frames","","Returns the frames from when this backtrace was captured.",7,[[]]],[11,"resolve","","If this backtrace was created from `new_unresolved` then…",7,[[]]],[11,"ip","","Same as `Frame::ip`",8,[[]]],[11,"symbol_address","","Same as `Frame::symbol_address`",8,[[]]],[11,"module_base_address","","Same as `Frame::module_base_address`",8,[[],["option",4]]],[11,"symbols","","Returns the list of symbols that this frame corresponds to.",8,[[]]],[11,"name","","Same as `Symbol::name`",9,[[],[["option",4],["symbolname",3]]]],[11,"addr","","Same as `Symbol::addr`",9,[[],["option",4]]],[11,"filename","","Same as `Symbol::filename`",9,[[],[["option",4],["path",3]]]],[11,"lineno","","Same as `Symbol::lineno`",9,[[],["option",4]]],[11,"colno","","Same as `Symbol::colno`",9,[[],["option",4]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_string","","",4,[[],["string",3]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",7,[[["vec",3],["backtraceframe",3]]]],[11,"from","","",8,[[["frame",3]],["backtraceframe",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",1,[[["printfmt",4]]]],[11,"drop","","",6,[[]]],[11,"into","","",7,[[],[["vec",3],["backtraceframe",3]]]],[11,"clone","","",2,[[],["frame",3]]],[11,"clone","","",1,[[],["printfmt",4]]],[11,"clone","","",7,[[],["backtrace",3]]],[11,"clone","","",8,[[],["backtraceframe",3]]],[11,"clone","","",9,[[],["backtracesymbol",3]]],[11,"default","","",7,[[],["backtrace",3]]]],"p":[[4,"BytesOrWideString"],[4,"PrintFmt"],[3,"Frame"],[3,"Symbol"],[3,"SymbolName"],[3,"BacktraceFmt"],[3,"BacktraceFrameFmt"],[3,"Backtrace"],[3,"BacktraceFrame"],[3,"BacktraceSymbol"]]},\
"cfg_if":{"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]},\
"generic_array":{"doc":"This crate implements a structure that can be used as a…","i":[[3,"GenericArray","generic_array","Struct representing a generic array - `GenericArray<T, N>`…",null,null],[0,"arr","","Implementation for `arr!` macro.",null,null],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",null,null],[8,"AddLength","","Helper trait for `arr!` macro",null,null],[16,"Output","","Resulting length",0,null],[0,"functional","generic_array","Functional programming with generic sequences",null,null],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",null,null],[8,"MappedGenericSequence","","Defines the relationship between one generic sequence and…",null,null],[16,"Mapped","","Mapped sequence type",1,null],[8,"FunctionalSequence","","Defines functional programming methods for generic sequences",null,null],[11,"map","","Maps a `GenericSequence` to another `GenericSequence`.",2,[[],["mappedsequence",6]]],[11,"zip","","Combines two `GenericSequence` instances and iterates…",2,[[],["mappedsequence",6]]],[11,"fold","","Folds (or reduces) a sequence of data into a single value.",2,[[]]],[0,"iter","generic_array","`GenericArray` iterator implementation.",null,null],[3,"GenericArrayIter","generic_array::iter","An iterator that moves out of a `GenericArray`",null,null],[11,"as_slice","","Returns the remaining items of this iterator as a slice",3,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",3,[[]]],[0,"sequence","generic_array","Useful traits for manipulating sequences of data stored in…",null,null],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",null,null],[8,"GenericSequence","","Defines some sequence with an associated length and…",null,null],[16,"Length","","`GenericArray` associated length",4,null],[16,"Sequence","","Concrete sequence type used in conjuction with reference…",4,null],[10,"generate","","Initializes a new sequence instance using the given…",4,[[]]],[8,"Lengthen","","Defines any `GenericSequence` which can be lengthened or…",null,null],[16,"Longer","","`GenericSequence` that has one more element than `Self`",5,null],[10,"append","","Returns a new array with the given element appended to the…",5,[[]]],[10,"prepend","","Returns a new array with the given element prepended to…",5,[[]]],[8,"Shorten","","Defines a `GenericSequence` which can be shortened by…",null,null],[16,"Shorter","","`GenericSequence` that has one less element than `Self`",6,null],[10,"pop_back","","Returns a new array without the last element, and the last…",6,[[]]],[10,"pop_front","","Returns a new array without the first element, and the…",6,[[]]],[8,"Split","","Defines a `GenericSequence` that can be split into two…",null,null],[16,"First","","First part of the resulting split array",7,null],[16,"Second","","Second part of the resulting split array",7,null],[10,"split","","Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat","","Defines `GenericSequence`s which can be joined together,…",null,null],[16,"Rest","","Sequence to be concatenated with `self`",8,null],[16,"Output","","Resulting sequence formed by the concatenation.",8,null],[10,"concat","","Concatenate, or join, two sequences.",8,[[]]],[8,"ArrayLength","generic_array","Trait making `GenericArray` work, marking types to be used…",null,null],[16,"ArrayType","","Associated type representing the array type for the number",9,null],[11,"as_slice","","Extracts a slice containing the entire array.",10,[[]]],[11,"as_mut_slice","","Extracts a mutable slice containing the entire array.",10,[[]]],[11,"from_slice","","Converts slice to a generic array reference with inferred…",10,[[],["genericarray",3]]],[11,"from_mut_slice","","Converts mutable slice to a mutable generic array reference",10,[[],["genericarray",3]]],[11,"clone_from_slice","","Construct a `GenericArray` from a slice by cloning its…",10,[[],["genericarray",3]]],[11,"from_exact_iter","","Creates a new `GenericArray` instance from an iterator…",10,[[],["option",4]]],[14,"arr","","Macro allowing for easy generation of Generic Arrays.…",null,null],[11,"from","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","generic_array::iter","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"map","generic_array","",10,[[],["mappedsequence",6]]],[11,"zip","","",10,[[],["mappedsequence",6]]],[11,"fold","","",10,[[]]],[11,"generate","","",10,[[],["genericarray",3]]],[11,"append","","",10,[[]]],[11,"prepend","","",10,[[]]],[11,"pop_back","","",10,[[]]],[11,"pop_front","","",10,[[]]],[11,"split","","",10,[[]]],[11,"concat","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","generic_array::iter","",3,[[["formatter",3]],["result",6]]],[11,"eq","generic_array","",10,[[]]],[11,"cmp","","",10,[[["genericarray",3]],["ordering",4]]],[11,"partial_cmp","","",10,[[["genericarray",3]],[["option",4],["ordering",4]]]],[11,"drop","generic_array::iter","",3,[[]]],[11,"hash","generic_array","",10,[[]]],[11,"next","generic_array::iter","",3,[[],["option",4]]],[11,"fold","","",3,[[]]],[11,"size_hint","","",3,[[]]],[11,"count","","",3,[[]]],[11,"nth","","",3,[[],["option",4]]],[11,"last","","",3,[[],["option",4]]],[11,"next_back","","",3,[[],["option",4]]],[11,"rfold","","",3,[[]]],[11,"from_iter","generic_array","",10,[[],["genericarray",3]]],[11,"into_iter","","",10,[[]]],[11,"len","generic_array::iter","",3,[[]]],[11,"as_ref","generic_array","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"clone","","",10,[[],["genericarray",3]]],[11,"clone","generic_array::iter","",3,[[]]],[11,"default","generic_array","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]]],"p":[[8,"AddLength"],[8,"MappedGenericSequence"],[8,"FunctionalSequence"],[3,"GenericArrayIter"],[8,"GenericSequence"],[8,"Lengthen"],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,"ArrayLength"],[3,"GenericArray"]]},\
"getrandom":{"doc":"Interface to the operating system\'s random number generator.","i":[[3,"Error","getrandom","A small and `no_std` compatible error type",null,null],[5,"getrandom","","Fill `dest` with random bytes from the system\'s preferred…",null,[[],[["result",4],["error",3]]]],[18,"UNSUPPORTED","","This target/platform is not supported by `getrandom`.",0,null],[18,"ERRNO_NOT_POSITIVE","","The platform-specific `errno` returned a non-positive value.",0,null],[18,"IOS_SEC_RANDOM","","Call to iOS `SecRandomCopyBytes` failed.",0,null],[18,"WINDOWS_RTL_GEN_RANDOM","","Call to Windows `RtlGenRandom` failed.",0,null],[18,"FAILED_RDRAND","","RDRAND instruction failed due to a hardware issue.",0,null],[18,"NO_RDRAND","","RDRAND instruction unsupported on this target.",0,null],[18,"WEB_CRYPTO","","The browser does not have support for `self.crypto`.",0,null],[18,"WEB_GET_RANDOM_VALUES","","The browser does not have support for…",0,null],[18,"VXWORKS_RAND_SECURE","","On VxWorks, call to `randSecure` failed (random number…",0,null],[18,"NODE_CRYPTO","","NodeJS does not have support for the `crypto` module.",0,null],[18,"NODE_RANDOM_FILL_SYNC","","NodeJS does not have support for `crypto.randomFillSync`.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],["option",4]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",0,[[["nonzerou32",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["error",3]]]],[11,"ne","","",0,[[["error",3]]]],[11,"clone","","",0,[[],["error",3]]]],"p":[[3,"Error"]]},\
"gimli":{"doc":"`gimli` is a library for reading and writing the DWARF…","i":[[3,"Encoding","gimli","Encoding parameters that are commonly used for multiple…",null,null],[12,"address_size","","The size of an address.",0,null],[12,"format","","Whether the DWARF format is 32- or 64-bit.",0,null],[12,"version","","The DWARF version of the header.",0,null],[3,"LineEncoding","","Encoding parameters for a line number program.",null,null],[12,"minimum_instruction_length","","The size in bytes of the smallest target machine…",1,null],[12,"maximum_operations_per_instruction","","The maximum number of individual operations that may be…",1,null],[12,"default_is_stmt","","The initial value of the `is_stmt` register.",1,null],[12,"line_base","","The minimum value which a special opcode can add to the…",1,null],[12,"line_range","","The range of values which a special opcode can add to the…",1,null],[3,"Register","","A DWARF register number.",null,null],[12,"0","","",2,null],[3,"DebugAbbrevOffset","","An offset into the `.debug_abbrev` section.",null,null],[12,"0","","",3,null],[3,"DebugAddrBase","","An offset to a set of entries in the `.debug_addr` section.",null,null],[12,"0","","",4,null],[3,"DebugAddrIndex","","An index into a set of addresses in the `.debug_addr`…",null,null],[12,"0","","",5,null],[3,"DebugArangesOffset","","An offset into the `.debug_aranges` section.",null,null],[12,"0","","",6,null],[3,"DebugInfoOffset","","An offset into the `.debug_info` section.",null,null],[12,"0","","",7,null],[3,"DebugLineOffset","","An offset into the `.debug_line` section.",null,null],[12,"0","","",8,null],[3,"DebugLineStrOffset","","An offset into the `.debug_line_str` section.",null,null],[12,"0","","",9,null],[3,"LocationListsOffset","","An offset into either the `.debug_loc` section or the…",null,null],[12,"0","","",10,null],[3,"DebugLocListsBase","","An offset to a set of location list offsets in the…",null,null],[12,"0","","",11,null],[3,"DebugLocListsIndex","","An index into a set of location list offsets in the…",null,null],[12,"0","","",12,null],[3,"DebugMacinfoOffset","","An offset into the `.debug_macinfo` section.",null,null],[12,"0","","",13,null],[3,"DebugMacroOffset","","An offset into the `.debug_macro` section.",null,null],[12,"0","","",14,null],[3,"RawRangeListsOffset","","An offset into either the `.debug_ranges` section or the…",null,null],[12,"0","","",15,null],[3,"RangeListsOffset","","An offset into either the `.debug_ranges` section or the…",null,null],[12,"0","","",16,null],[3,"DebugRngListsBase","","An offset to a set of range list offsets in the…",null,null],[12,"0","","",17,null],[3,"DebugRngListsIndex","","An index into a set of range list offsets in the…",null,null],[12,"0","","",18,null],[3,"DebugStrOffset","","An offset into the `.debug_str` section.",null,null],[12,"0","","",19,null],[3,"DebugStrOffsetsBase","","An offset to a set of entries in the `.debug_str_offsets`…",null,null],[12,"0","","",20,null],[3,"DebugStrOffsetsIndex","","An index into a set of entries in the `.debug_str_offsets`…",null,null],[12,"0","","",21,null],[3,"DebugTypesOffset","","An offset into the `.debug_types` section.",null,null],[12,"0","","",22,null],[3,"DebugTypeSignature","","A type signature as used in the `.debug_types` section.",null,null],[12,"0","","",23,null],[3,"DebugFrameOffset","","An offset into the `.debug_frame` section.",null,null],[12,"0","","",24,null],[3,"EhFrameOffset","","An offset into the `.eh_frame` section.",null,null],[12,"0","","",25,null],[3,"DwoId","","An optionally-provided implementation-defined compilation…",null,null],[12,"0","","",26,null],[3,"Arm","","ARM architecture specific definitions.",null,null],[3,"X86","","Intel i386 architecture specific definitions.",null,null],[3,"X86_64","","AMD64 architecture specific definitions.",null,null],[3,"BigEndian","","Big endian byte order.",null,null],[3,"LittleEndian","","Little endian byte order.",null,null],[4,"Format","","Whether the format of a compilation unit is 32- or 64-bit.",null,null],[13,"Dwarf64","","64-bit DWARF",27,null],[13,"Dwarf32","","32-bit DWARF",27,null],[4,"UnitSectionOffset","","An offset into the `.debug_info` or `.debug_types` sections.",null,null],[13,"DebugInfoOffset","","An offset into the `.debug_info` section.",28,null],[13,"DebugTypesOffset","","An offset into the `.debug_types` section.",28,null],[4,"SectionId","","An identifier for a DWARF section.",null,null],[13,"DebugAbbrev","","The `.debug_abbrev` section.",29,null],[13,"DebugAddr","","The `.debug_addr` section.",29,null],[13,"DebugAranges","","The `.debug_aranges` section.",29,null],[13,"DebugFrame","","The `.debug_frame` section.",29,null],[13,"EhFrame","","The `.eh_frame` section.",29,null],[13,"EhFrameHdr","","The `.eh_frame_hdr` section.",29,null],[13,"DebugInfo","","The `.debug_info` section.",29,null],[13,"DebugLine","","The `.debug_line` section.",29,null],[13,"DebugLineStr","","The `.debug_line_str` section.",29,null],[13,"DebugLoc","","The `.debug_loc` section.",29,null],[13,"DebugLocLists","","The `.debug_loclists` section.",29,null],[13,"DebugMacinfo","","The `.debug_macinfo` section.",29,null],[13,"DebugMacro","","The `.debug_macro` section.",29,null],[13,"DebugPubNames","","The `.debug_pubnames` section.",29,null],[13,"DebugPubTypes","","The `.debug_pubtypes` section.",29,null],[13,"DebugRanges","","The `.debug_ranges` section.",29,null],[13,"DebugRngLists","","The `.debug_rnglists` section.",29,null],[13,"DebugStr","","The `.debug_str` section.",29,null],[13,"DebugStrOffsets","","The `.debug_str_offsets` section.",29,null],[13,"DebugTypes","","The `.debug_types` section.",29,null],[4,"DwarfFileType","","The \\\"type\\\" of file with DWARF debugging information. This…",null,null],[13,"Main","","A normal executable or object file.",30,null],[13,"Dwo","","A .dwo split DWARF file.",30,null],[4,"RunTimeEndian","","Byte order that is selectable at runtime.",null,null],[13,"Little","","Little endian byte order.",31,null],[13,"Big","","Big endian byte order.",31,null],[11,"initial_length_size","","Return the serialized size of an initial length field for…",27,[[]]],[11,"word_size","","Return the natural word size for the format",27,[[]]],[11,"as_debug_info_offset","","Returns the `DebugInfoOffset` inside, or `None` otherwise.",28,[[],[["option",4],["debuginfooffset",3]]]],[11,"as_debug_types_offset","","Returns the `DebugTypesOffset` inside, or `None` otherwise.",28,[[],[["debugtypesoffset",3],["option",4]]]],[11,"name","","Returns the ELF section name for this kind.",29,[[]]],[11,"dwo_name","","Returns the ELF section name for this kind, when found in…",29,[[],["option",4]]],[18,"R0","","",32,null],[18,"R1","","",32,null],[18,"R2","","",32,null],[18,"R3","","",32,null],[18,"R4","","",32,null],[18,"R5","","",32,null],[18,"R6","","",32,null],[18,"R7","","",32,null],[18,"R8","","",32,null],[18,"R9","","",32,null],[18,"R10","","",32,null],[18,"R11","","",32,null],[18,"R12","","",32,null],[18,"R13","","",32,null],[18,"R14","","",32,null],[18,"R15","","",32,null],[11,"register_name","","The name of a register, or `None` if the register number…",32,[[["register",3]],["option",4]]],[11,"name_to_register","","Converts a register name into a register number.",32,[[],[["option",4],["register",3]]]],[18,"EAX","","",33,null],[18,"ECX","","",33,null],[18,"EDX","","",33,null],[18,"EBX","","",33,null],[18,"ESP","","",33,null],[18,"EBP","","",33,null],[18,"ESI","","",33,null],[18,"EDI","","",33,null],[18,"RA","","",33,null],[18,"ST0","","",33,null],[18,"ST1","","",33,null],[18,"ST2","","",33,null],[18,"ST3","","",33,null],[18,"ST4","","",33,null],[18,"ST5","","",33,null],[18,"ST6","","",33,null],[18,"ST7","","",33,null],[18,"XMM0","","",33,null],[18,"XMM1","","",33,null],[18,"XMM2","","",33,null],[18,"XMM3","","",33,null],[18,"XMM4","","",33,null],[18,"XMM5","","",33,null],[18,"XMM6","","",33,null],[18,"XMM7","","",33,null],[18,"MM0","","",33,null],[18,"MM1","","",33,null],[18,"MM2","","",33,null],[18,"MM3","","",33,null],[18,"MM4","","",33,null],[18,"MM5","","",33,null],[18,"MM6","","",33,null],[18,"MM7","","",33,null],[18,"MXCSR","","",33,null],[18,"ES","","",33,null],[18,"CS","","",33,null],[18,"SS","","",33,null],[18,"DS","","",33,null],[18,"FS","","",33,null],[18,"GS","","",33,null],[18,"TR","","",33,null],[18,"LDTR","","",33,null],[18,"FS_BASE","","",33,null],[18,"GS_BASE","","",33,null],[11,"register_name","","The name of a register, or `None` if the register number…",33,[[["register",3]],["option",4]]],[11,"name_to_register","","Converts a register name into a register number.",33,[[],[["option",4],["register",3]]]],[18,"RAX","","",34,null],[18,"RDX","","",34,null],[18,"RCX","","",34,null],[18,"RBX","","",34,null],[18,"RSI","","",34,null],[18,"RDI","","",34,null],[18,"RBP","","",34,null],[18,"RSP","","",34,null],[18,"R8","","",34,null],[18,"R9","","",34,null],[18,"R10","","",34,null],[18,"R11","","",34,null],[18,"R12","","",34,null],[18,"R13","","",34,null],[18,"R14","","",34,null],[18,"R15","","",34,null],[18,"RA","","",34,null],[18,"XMM0","","",34,null],[18,"XMM1","","",34,null],[18,"XMM2","","",34,null],[18,"XMM3","","",34,null],[18,"XMM4","","",34,null],[18,"XMM5","","",34,null],[18,"XMM6","","",34,null],[18,"XMM7","","",34,null],[18,"XMM8","","",34,null],[18,"XMM9","","",34,null],[18,"XMM10","","",34,null],[18,"XMM11","","",34,null],[18,"XMM12","","",34,null],[18,"XMM13","","",34,null],[18,"XMM14","","",34,null],[18,"XMM15","","",34,null],[18,"ST0","","",34,null],[18,"ST1","","",34,null],[18,"ST2","","",34,null],[18,"ST3","","",34,null],[18,"ST4","","",34,null],[18,"ST5","","",34,null],[18,"ST6","","",34,null],[18,"ST7","","",34,null],[18,"MM0","","",34,null],[18,"MM1","","",34,null],[18,"MM2","","",34,null],[18,"MM3","","",34,null],[18,"MM4","","",34,null],[18,"MM5","","",34,null],[18,"MM6","","",34,null],[18,"MM7","","",34,null],[18,"RFLAGS","","",34,null],[18,"ES","","",34,null],[18,"CS","","",34,null],[18,"SS","","",34,null],[18,"DS","","",34,null],[18,"FS","","",34,null],[18,"GS","","",34,null],[18,"FS_BASE","","",34,null],[18,"GS_BASE","","",34,null],[18,"TR","","",34,null],[18,"LDTR","","",34,null],[18,"MXCSR","","",34,null],[18,"FCW","","",34,null],[18,"FSW","","",34,null],[18,"XMM16","","",34,null],[18,"XMM17","","",34,null],[18,"XMM18","","",34,null],[18,"XMM19","","",34,null],[18,"XMM20","","",34,null],[18,"XMM21","","",34,null],[18,"XMM22","","",34,null],[18,"XMM23","","",34,null],[18,"XMM24","","",34,null],[18,"XMM25","","",34,null],[18,"XMM26","","",34,null],[18,"XMM27","","",34,null],[18,"XMM28","","",34,null],[18,"XMM29","","",34,null],[18,"XMM30","","",34,null],[18,"XMM31","","",34,null],[18,"K0","","",34,null],[18,"K1","","",34,null],[18,"K2","","",34,null],[18,"K3","","",34,null],[18,"K4","","",34,null],[18,"K5","","",34,null],[18,"K6","","",34,null],[18,"K7","","",34,null],[11,"register_name","","The name of a register, or `None` if the register number…",34,[[["register",3]],["option",4]]],[11,"name_to_register","","Converts a register name into a register number.",34,[[],[["option",4],["register",3]]]],[0,"constants","","Constant definitions.",null,null],[3,"DwUt","gimli::constants","The unit type field in a unit header.",null,null],[12,"0","","",35,null],[3,"DwCfa","","The opcode for a call frame instruction.",null,null],[12,"0","","",36,null],[3,"DwChildren","","The child determination encodings for DIE attributes.",null,null],[12,"0","","",37,null],[3,"DwTag","","The tag encodings for DIE attributes.",null,null],[12,"0","","",38,null],[3,"DwAt","","The attribute encodings for DIE attributes.",null,null],[12,"0","","",39,null],[3,"DwForm","","The attribute form encodings for DIE attributes.",null,null],[12,"0","","",40,null],[3,"DwAte","","The encodings of the constants used in the…",null,null],[12,"0","","",41,null],[3,"DwLle","","The encodings of the constants used in location list…",null,null],[12,"0","","",42,null],[3,"DwDs","","The encodings of the constants used in the…",null,null],[12,"0","","",43,null],[3,"DwEnd","","The encodings of the constants used in the…",null,null],[12,"0","","",44,null],[3,"DwAccess","","The encodings of the constants used in the…",null,null],[12,"0","","",45,null],[3,"DwVis","","The encodings of the constants used in the…",null,null],[12,"0","","",46,null],[3,"DwVirtuality","","The encodings of the constants used in the…",null,null],[12,"0","","",47,null],[3,"DwLang","","The encodings of the constants used in the…",null,null],[12,"0","","",48,null],[3,"DwAddr","","The encodings of the constants used in the…",null,null],[12,"0","","",49,null],[3,"DwId","","The encodings of the constants used in the…",null,null],[12,"0","","",50,null],[3,"DwCc","","The encodings of the constants used in the…",null,null],[12,"0","","",51,null],[3,"DwInl","","The encodings of the constants used in the `DW_AT_inline`…",null,null],[12,"0","","",52,null],[3,"DwOrd","","The encodings of the constants used in the…",null,null],[12,"0","","",53,null],[3,"DwDsc","","The encodings of the constants used in the…",null,null],[12,"0","","",54,null],[3,"DwIdx","","Name index attribute encodings.",null,null],[12,"0","","",55,null],[3,"DwDefaulted","","The encodings of the constants used in the…",null,null],[12,"0","","",56,null],[3,"DwLns","","The encodings for the standard opcodes for line number…",null,null],[12,"0","","",57,null],[3,"DwLne","","The encodings for the extended opcodes for line number…",null,null],[12,"0","","",58,null],[3,"DwLnct","","The encodings for the line number header entry formats.",null,null],[12,"0","","",59,null],[3,"DwMacro","","The encodings for macro information entry types.",null,null],[12,"0","","",60,null],[3,"DwRle","","Range list entry encoding values.",null,null],[12,"0","","",61,null],[3,"DwOp","","The encodings for DWARF expression operations.",null,null],[12,"0","","",62,null],[3,"DwEhPe","","Pointer encoding used by `.eh_frame`.",null,null],[12,"0","","",63,null],[17,"DW_UT_compile","","",null,null],[17,"DW_UT_type","","",null,null],[17,"DW_UT_partial","","",null,null],[17,"DW_UT_skeleton","","",null,null],[17,"DW_UT_split_compile","","",null,null],[17,"DW_UT_split_type","","",null,null],[17,"DW_UT_lo_user","","",null,null],[17,"DW_UT_hi_user","","",null,null],[17,"DW_CFA_advance_loc","","",null,null],[17,"DW_CFA_offset","","",null,null],[17,"DW_CFA_restore","","",null,null],[17,"DW_CFA_nop","","",null,null],[17,"DW_CFA_set_loc","","",null,null],[17,"DW_CFA_advance_loc1","","",null,null],[17,"DW_CFA_advance_loc2","","",null,null],[17,"DW_CFA_advance_loc4","","",null,null],[17,"DW_CFA_offset_extended","","",null,null],[17,"DW_CFA_restore_extended","","",null,null],[17,"DW_CFA_undefined","","",null,null],[17,"DW_CFA_same_value","","",null,null],[17,"DW_CFA_register","","",null,null],[17,"DW_CFA_remember_state","","",null,null],[17,"DW_CFA_restore_state","","",null,null],[17,"DW_CFA_def_cfa","","",null,null],[17,"DW_CFA_def_cfa_register","","",null,null],[17,"DW_CFA_def_cfa_offset","","",null,null],[17,"DW_CFA_def_cfa_expression","","",null,null],[17,"DW_CFA_expression","","",null,null],[17,"DW_CFA_offset_extended_sf","","",null,null],[17,"DW_CFA_def_cfa_sf","","",null,null],[17,"DW_CFA_def_cfa_offset_sf","","",null,null],[17,"DW_CFA_val_offset","","",null,null],[17,"DW_CFA_val_offset_sf","","",null,null],[17,"DW_CFA_val_expression","","",null,null],[17,"DW_CFA_lo_user","","",null,null],[17,"DW_CFA_hi_user","","",null,null],[17,"DW_CFA_MIPS_advance_loc8","","",null,null],[17,"DW_CFA_GNU_window_save","","",null,null],[17,"DW_CFA_GNU_args_size","","",null,null],[17,"DW_CFA_GNU_negative_offset_extended","","",null,null],[17,"DW_CHILDREN_no","","",null,null],[17,"DW_CHILDREN_yes","","",null,null],[17,"DW_TAG_null","","",null,null],[17,"DW_TAG_array_type","","",null,null],[17,"DW_TAG_class_type","","",null,null],[17,"DW_TAG_entry_point","","",null,null],[17,"DW_TAG_enumeration_type","","",null,null],[17,"DW_TAG_formal_parameter","","",null,null],[17,"DW_TAG_imported_declaration","","",null,null],[17,"DW_TAG_label","","",null,null],[17,"DW_TAG_lexical_block","","",null,null],[17,"DW_TAG_member","","",null,null],[17,"DW_TAG_pointer_type","","",null,null],[17,"DW_TAG_reference_type","","",null,null],[17,"DW_TAG_compile_unit","","",null,null],[17,"DW_TAG_string_type","","",null,null],[17,"DW_TAG_structure_type","","",null,null],[17,"DW_TAG_subroutine_type","","",null,null],[17,"DW_TAG_typedef","","",null,null],[17,"DW_TAG_union_type","","",null,null],[17,"DW_TAG_unspecified_parameters","","",null,null],[17,"DW_TAG_variant","","",null,null],[17,"DW_TAG_common_block","","",null,null],[17,"DW_TAG_common_inclusion","","",null,null],[17,"DW_TAG_inheritance","","",null,null],[17,"DW_TAG_inlined_subroutine","","",null,null],[17,"DW_TAG_module","","",null,null],[17,"DW_TAG_ptr_to_member_type","","",null,null],[17,"DW_TAG_set_type","","",null,null],[17,"DW_TAG_subrange_type","","",null,null],[17,"DW_TAG_with_stmt","","",null,null],[17,"DW_TAG_access_declaration","","",null,null],[17,"DW_TAG_base_type","","",null,null],[17,"DW_TAG_catch_block","","",null,null],[17,"DW_TAG_const_type","","",null,null],[17,"DW_TAG_constant","","",null,null],[17,"DW_TAG_enumerator","","",null,null],[17,"DW_TAG_file_type","","",null,null],[17,"DW_TAG_friend","","",null,null],[17,"DW_TAG_namelist","","",null,null],[17,"DW_TAG_namelist_item","","",null,null],[17,"DW_TAG_packed_type","","",null,null],[17,"DW_TAG_subprogram","","",null,null],[17,"DW_TAG_template_type_parameter","","",null,null],[17,"DW_TAG_template_value_parameter","","",null,null],[17,"DW_TAG_thrown_type","","",null,null],[17,"DW_TAG_try_block","","",null,null],[17,"DW_TAG_variant_part","","",null,null],[17,"DW_TAG_variable","","",null,null],[17,"DW_TAG_volatile_type","","",null,null],[17,"DW_TAG_dwarf_procedure","","",null,null],[17,"DW_TAG_restrict_type","","",null,null],[17,"DW_TAG_interface_type","","",null,null],[17,"DW_TAG_namespace","","",null,null],[17,"DW_TAG_imported_module","","",null,null],[17,"DW_TAG_unspecified_type","","",null,null],[17,"DW_TAG_partial_unit","","",null,null],[17,"DW_TAG_imported_unit","","",null,null],[17,"DW_TAG_condition","","",null,null],[17,"DW_TAG_shared_type","","",null,null],[17,"DW_TAG_type_unit","","",null,null],[17,"DW_TAG_rvalue_reference_type","","",null,null],[17,"DW_TAG_template_alias","","",null,null],[17,"DW_TAG_coarray_type","","",null,null],[17,"DW_TAG_generic_subrange","","",null,null],[17,"DW_TAG_dynamic_type","","",null,null],[17,"DW_TAG_atomic_type","","",null,null],[17,"DW_TAG_call_site","","",null,null],[17,"DW_TAG_call_site_parameter","","",null,null],[17,"DW_TAG_skeleton_unit","","",null,null],[17,"DW_TAG_immutable_type","","",null,null],[17,"DW_TAG_lo_user","","",null,null],[17,"DW_TAG_hi_user","","",null,null],[17,"DW_TAG_MIPS_loop","","",null,null],[17,"DW_TAG_HP_array_descriptor","","",null,null],[17,"DW_TAG_HP_Bliss_field","","",null,null],[17,"DW_TAG_HP_Bliss_field_set","","",null,null],[17,"DW_TAG_format_label","","",null,null],[17,"DW_TAG_function_template","","",null,null],[17,"DW_TAG_class_template","","",null,null],[17,"DW_TAG_GNU_BINCL","","",null,null],[17,"DW_TAG_GNU_EINCL","","",null,null],[17,"DW_TAG_GNU_template_template_param","","",null,null],[17,"DW_TAG_GNU_template_parameter_pack","","",null,null],[17,"DW_TAG_GNU_formal_parameter_pack","","",null,null],[17,"DW_TAG_GNU_call_site","","",null,null],[17,"DW_TAG_GNU_call_site_parameter","","",null,null],[17,"DW_TAG_APPLE_property","","",null,null],[17,"DW_TAG_SUN_function_template","","",null,null],[17,"DW_TAG_SUN_class_template","","",null,null],[17,"DW_TAG_SUN_struct_template","","",null,null],[17,"DW_TAG_SUN_union_template","","",null,null],[17,"DW_TAG_SUN_indirect_inheritance","","",null,null],[17,"DW_TAG_SUN_codeflags","","",null,null],[17,"DW_TAG_SUN_memop_info","","",null,null],[17,"DW_TAG_SUN_omp_child_func","","",null,null],[17,"DW_TAG_SUN_rtti_descriptor","","",null,null],[17,"DW_TAG_SUN_dtor_info","","",null,null],[17,"DW_TAG_SUN_dtor","","",null,null],[17,"DW_TAG_SUN_f90_interface","","",null,null],[17,"DW_TAG_SUN_fortran_vax_structure","","",null,null],[17,"DW_TAG_ALTIUM_circ_type","","",null,null],[17,"DW_TAG_ALTIUM_mwa_circ_type","","",null,null],[17,"DW_TAG_ALTIUM_rev_carry_type","","",null,null],[17,"DW_TAG_ALTIUM_rom","","",null,null],[17,"DW_TAG_upc_shared_type","","",null,null],[17,"DW_TAG_upc_strict_type","","",null,null],[17,"DW_TAG_upc_relaxed_type","","",null,null],[17,"DW_TAG_PGI_kanji_type","","",null,null],[17,"DW_TAG_PGI_interface_block","","",null,null],[17,"DW_TAG_BORLAND_property","","",null,null],[17,"DW_TAG_BORLAND_Delphi_string","","",null,null],[17,"DW_TAG_BORLAND_Delphi_dynamic_array","","",null,null],[17,"DW_TAG_BORLAND_Delphi_set","","",null,null],[17,"DW_TAG_BORLAND_Delphi_variant","","",null,null],[17,"DW_AT_null","","",null,null],[17,"DW_AT_sibling","","",null,null],[17,"DW_AT_location","","",null,null],[17,"DW_AT_name","","",null,null],[17,"DW_AT_ordering","","",null,null],[17,"DW_AT_byte_size","","",null,null],[17,"DW_AT_bit_offset","","",null,null],[17,"DW_AT_bit_size","","",null,null],[17,"DW_AT_stmt_list","","",null,null],[17,"DW_AT_low_pc","","",null,null],[17,"DW_AT_high_pc","","",null,null],[17,"DW_AT_language","","",null,null],[17,"DW_AT_discr","","",null,null],[17,"DW_AT_discr_value","","",null,null],[17,"DW_AT_visibility","","",null,null],[17,"DW_AT_import","","",null,null],[17,"DW_AT_string_length","","",null,null],[17,"DW_AT_common_reference","","",null,null],[17,"DW_AT_comp_dir","","",null,null],[17,"DW_AT_const_value","","",null,null],[17,"DW_AT_containing_type","","",null,null],[17,"DW_AT_default_value","","",null,null],[17,"DW_AT_inline","","",null,null],[17,"DW_AT_is_optional","","",null,null],[17,"DW_AT_lower_bound","","",null,null],[17,"DW_AT_producer","","",null,null],[17,"DW_AT_prototyped","","",null,null],[17,"DW_AT_return_addr","","",null,null],[17,"DW_AT_start_scope","","",null,null],[17,"DW_AT_bit_stride","","",null,null],[17,"DW_AT_upper_bound","","",null,null],[17,"DW_AT_abstract_origin","","",null,null],[17,"DW_AT_accessibility","","",null,null],[17,"DW_AT_address_class","","",null,null],[17,"DW_AT_artificial","","",null,null],[17,"DW_AT_base_types","","",null,null],[17,"DW_AT_calling_convention","","",null,null],[17,"DW_AT_count","","",null,null],[17,"DW_AT_data_member_location","","",null,null],[17,"DW_AT_decl_column","","",null,null],[17,"DW_AT_decl_file","","",null,null],[17,"DW_AT_decl_line","","",null,null],[17,"DW_AT_declaration","","",null,null],[17,"DW_AT_discr_list","","",null,null],[17,"DW_AT_encoding","","",null,null],[17,"DW_AT_external","","",null,null],[17,"DW_AT_frame_base","","",null,null],[17,"DW_AT_friend","","",null,null],[17,"DW_AT_identifier_case","","",null,null],[17,"DW_AT_macro_info","","",null,null],[17,"DW_AT_namelist_item","","",null,null],[17,"DW_AT_priority","","",null,null],[17,"DW_AT_segment","","",null,null],[17,"DW_AT_specification","","",null,null],[17,"DW_AT_static_link","","",null,null],[17,"DW_AT_type","","",null,null],[17,"DW_AT_use_location","","",null,null],[17,"DW_AT_variable_parameter","","",null,null],[17,"DW_AT_virtuality","","",null,null],[17,"DW_AT_vtable_elem_location","","",null,null],[17,"DW_AT_allocated","","",null,null],[17,"DW_AT_associated","","",null,null],[17,"DW_AT_data_location","","",null,null],[17,"DW_AT_byte_stride","","",null,null],[17,"DW_AT_entry_pc","","",null,null],[17,"DW_AT_use_UTF8","","",null,null],[17,"DW_AT_extension","","",null,null],[17,"DW_AT_ranges","","",null,null],[17,"DW_AT_trampoline","","",null,null],[17,"DW_AT_call_column","","",null,null],[17,"DW_AT_call_file","","",null,null],[17,"DW_AT_call_line","","",null,null],[17,"DW_AT_description","","",null,null],[17,"DW_AT_binary_scale","","",null,null],[17,"DW_AT_decimal_scale","","",null,null],[17,"DW_AT_small","","",null,null],[17,"DW_AT_decimal_sign","","",null,null],[17,"DW_AT_digit_count","","",null,null],[17,"DW_AT_picture_string","","",null,null],[17,"DW_AT_mutable","","",null,null],[17,"DW_AT_threads_scaled","","",null,null],[17,"DW_AT_explicit","","",null,null],[17,"DW_AT_object_pointer","","",null,null],[17,"DW_AT_endianity","","",null,null],[17,"DW_AT_elemental","","",null,null],[17,"DW_AT_pure","","",null,null],[17,"DW_AT_recursive","","",null,null],[17,"DW_AT_signature","","",null,null],[17,"DW_AT_main_subprogram","","",null,null],[17,"DW_AT_data_bit_offset","","",null,null],[17,"DW_AT_const_expr","","",null,null],[17,"DW_AT_enum_class","","",null,null],[17,"DW_AT_linkage_name","","",null,null],[17,"DW_AT_string_length_bit_size","","",null,null],[17,"DW_AT_string_length_byte_size","","",null,null],[17,"DW_AT_rank","","",null,null],[17,"DW_AT_str_offsets_base","","",null,null],[17,"DW_AT_addr_base","","",null,null],[17,"DW_AT_rnglists_base","","",null,null],[17,"DW_AT_dwo_name","","",null,null],[17,"DW_AT_reference","","",null,null],[17,"DW_AT_rvalue_reference","","",null,null],[17,"DW_AT_macros","","",null,null],[17,"DW_AT_call_all_calls","","",null,null],[17,"DW_AT_call_all_source_calls","","",null,null],[17,"DW_AT_call_all_tail_calls","","",null,null],[17,"DW_AT_call_return_pc","","",null,null],[17,"DW_AT_call_value","","",null,null],[17,"DW_AT_call_origin","","",null,null],[17,"DW_AT_call_parameter","","",null,null],[17,"DW_AT_call_pc","","",null,null],[17,"DW_AT_call_tail_call","","",null,null],[17,"DW_AT_call_target","","",null,null],[17,"DW_AT_call_target_clobbered","","",null,null],[17,"DW_AT_call_data_location","","",null,null],[17,"DW_AT_call_data_value","","",null,null],[17,"DW_AT_noreturn","","",null,null],[17,"DW_AT_alignment","","",null,null],[17,"DW_AT_export_symbols","","",null,null],[17,"DW_AT_deleted","","",null,null],[17,"DW_AT_defaulted","","",null,null],[17,"DW_AT_loclists_base","","",null,null],[17,"DW_AT_lo_user","","",null,null],[17,"DW_AT_hi_user","","",null,null],[17,"DW_AT_MIPS_fde","","",null,null],[17,"DW_AT_MIPS_loop_begin","","",null,null],[17,"DW_AT_MIPS_tail_loop_begin","","",null,null],[17,"DW_AT_MIPS_epilog_begin","","",null,null],[17,"DW_AT_MIPS_loop_unroll_factor","","",null,null],[17,"DW_AT_MIPS_software_pipeline_depth","","",null,null],[17,"DW_AT_MIPS_linkage_name","","",null,null],[17,"DW_AT_MIPS_stride","","",null,null],[17,"DW_AT_MIPS_abstract_name","","",null,null],[17,"DW_AT_MIPS_clone_origin","","",null,null],[17,"DW_AT_MIPS_has_inlines","","",null,null],[17,"DW_AT_MIPS_stride_byte","","",null,null],[17,"DW_AT_MIPS_stride_elem","","",null,null],[17,"DW_AT_MIPS_ptr_dopetype","","",null,null],[17,"DW_AT_MIPS_allocatable_dopetype","","",null,null],[17,"DW_AT_MIPS_assumed_shape_dopetype","","",null,null],[17,"DW_AT_MIPS_assumed_size","","",null,null],[17,"DW_AT_INTEL_other_endian","","",null,null],[17,"DW_AT_sf_names","","",null,null],[17,"DW_AT_src_info","","",null,null],[17,"DW_AT_mac_info","","",null,null],[17,"DW_AT_src_coords","","",null,null],[17,"DW_AT_body_begin","","",null,null],[17,"DW_AT_body_end","","",null,null],[17,"DW_AT_GNU_vector","","",null,null],[17,"DW_AT_GNU_guarded_by","","",null,null],[17,"DW_AT_GNU_pt_guarded_by","","",null,null],[17,"DW_AT_GNU_guarded","","",null,null],[17,"DW_AT_GNU_pt_guarded","","",null,null],[17,"DW_AT_GNU_locks_excluded","","",null,null],[17,"DW_AT_GNU_exclusive_locks_required","","",null,null],[17,"DW_AT_GNU_shared_locks_required","","",null,null],[17,"DW_AT_GNU_odr_signature","","",null,null],[17,"DW_AT_GNU_template_name","","",null,null],[17,"DW_AT_GNU_call_site_value","","",null,null],[17,"DW_AT_GNU_call_site_data_value","","",null,null],[17,"DW_AT_GNU_call_site_target","","",null,null],[17,"DW_AT_GNU_call_site_target_clobbered","","",null,null],[17,"DW_AT_GNU_tail_call","","",null,null],[17,"DW_AT_GNU_all_tail_call_sites","","",null,null],[17,"DW_AT_GNU_all_call_sites","","",null,null],[17,"DW_AT_GNU_all_source_call_sites","","",null,null],[17,"DW_AT_GNU_macros","","",null,null],[17,"DW_AT_GNU_dwo_name","","",null,null],[17,"DW_AT_GNU_dwo_id","","",null,null],[17,"DW_AT_GNU_ranges_base","","",null,null],[17,"DW_AT_GNU_addr_base","","",null,null],[17,"DW_AT_GNU_pubnames","","",null,null],[17,"DW_AT_GNU_pubtypes","","",null,null],[17,"DW_AT_GNU_discriminator","","",null,null],[17,"DW_AT_GNU_locviews","","",null,null],[17,"DW_AT_GNU_entry_view","","",null,null],[17,"DW_AT_SUN_template","","",null,null],[17,"DW_AT_SUN_alignment","","",null,null],[17,"DW_AT_SUN_vtable","","",null,null],[17,"DW_AT_SUN_count_guarantee","","",null,null],[17,"DW_AT_SUN_command_line","","",null,null],[17,"DW_AT_SUN_vbase","","",null,null],[17,"DW_AT_SUN_compile_options","","",null,null],[17,"DW_AT_SUN_language","","",null,null],[17,"DW_AT_SUN_browser_file","","",null,null],[17,"DW_AT_SUN_vtable_abi","","",null,null],[17,"DW_AT_SUN_func_offsets","","",null,null],[17,"DW_AT_SUN_cf_kind","","",null,null],[17,"DW_AT_SUN_vtable_index","","",null,null],[17,"DW_AT_SUN_omp_tpriv_addr","","",null,null],[17,"DW_AT_SUN_omp_child_func","","",null,null],[17,"DW_AT_SUN_func_offset","","",null,null],[17,"DW_AT_SUN_memop_type_ref","","",null,null],[17,"DW_AT_SUN_profile_id","","",null,null],[17,"DW_AT_SUN_memop_signature","","",null,null],[17,"DW_AT_SUN_obj_dir","","",null,null],[17,"DW_AT_SUN_obj_file","","",null,null],[17,"DW_AT_SUN_original_name","","",null,null],[17,"DW_AT_SUN_hwcprof_signature","","",null,null],[17,"DW_AT_SUN_amd64_parmdump","","",null,null],[17,"DW_AT_SUN_part_link_name","","",null,null],[17,"DW_AT_SUN_link_name","","",null,null],[17,"DW_AT_SUN_pass_with_const","","",null,null],[17,"DW_AT_SUN_return_with_const","","",null,null],[17,"DW_AT_SUN_import_by_name","","",null,null],[17,"DW_AT_SUN_f90_pointer","","",null,null],[17,"DW_AT_SUN_pass_by_ref","","",null,null],[17,"DW_AT_SUN_f90_allocatable","","",null,null],[17,"DW_AT_SUN_f90_assumed_shape_array","","",null,null],[17,"DW_AT_SUN_c_vla","","",null,null],[17,"DW_AT_SUN_return_value_ptr","","",null,null],[17,"DW_AT_SUN_dtor_start","","",null,null],[17,"DW_AT_SUN_dtor_length","","",null,null],[17,"DW_AT_SUN_dtor_state_initial","","",null,null],[17,"DW_AT_SUN_dtor_state_final","","",null,null],[17,"DW_AT_SUN_dtor_state_deltas","","",null,null],[17,"DW_AT_SUN_import_by_lname","","",null,null],[17,"DW_AT_SUN_f90_use_only","","",null,null],[17,"DW_AT_SUN_namelist_spec","","",null,null],[17,"DW_AT_SUN_is_omp_child_func","","",null,null],[17,"DW_AT_SUN_fortran_main_alias","","",null,null],[17,"DW_AT_SUN_fortran_based","","",null,null],[17,"DW_AT_ALTIUM_loclist","","",null,null],[17,"DW_AT_use_GNAT_descriptive_type","","",null,null],[17,"DW_AT_GNAT_descriptive_type","","",null,null],[17,"DW_AT_GNU_numerator","","",null,null],[17,"DW_AT_GNU_denominator","","",null,null],[17,"DW_AT_GNU_bias","","",null,null],[17,"DW_AT_upc_threads_scaled","","",null,null],[17,"DW_AT_PGI_lbase","","",null,null],[17,"DW_AT_PGI_soffset","","",null,null],[17,"DW_AT_PGI_lstride","","",null,null],[17,"DW_AT_BORLAND_property_read","","",null,null],[17,"DW_AT_BORLAND_property_write","","",null,null],[17,"DW_AT_BORLAND_property_implements","","",null,null],[17,"DW_AT_BORLAND_property_index","","",null,null],[17,"DW_AT_BORLAND_property_default","","",null,null],[17,"DW_AT_BORLAND_Delphi_unit","","",null,null],[17,"DW_AT_BORLAND_Delphi_class","","",null,null],[17,"DW_AT_BORLAND_Delphi_record","","",null,null],[17,"DW_AT_BORLAND_Delphi_metaclass","","",null,null],[17,"DW_AT_BORLAND_Delphi_constructor","","",null,null],[17,"DW_AT_BORLAND_Delphi_destructor","","",null,null],[17,"DW_AT_BORLAND_Delphi_anonymous_method","","",null,null],[17,"DW_AT_BORLAND_Delphi_interface","","",null,null],[17,"DW_AT_BORLAND_Delphi_ABI","","",null,null],[17,"DW_AT_BORLAND_Delphi_return","","",null,null],[17,"DW_AT_BORLAND_Delphi_frameptr","","",null,null],[17,"DW_AT_BORLAND_closure","","",null,null],[17,"DW_AT_LLVM_include_path","","",null,null],[17,"DW_AT_LLVM_config_macros","","",null,null],[17,"DW_AT_LLVM_isysroot","","",null,null],[17,"DW_AT_APPLE_optimized","","",null,null],[17,"DW_AT_APPLE_flags","","",null,null],[17,"DW_AT_APPLE_isa","","",null,null],[17,"DW_AT_APPLE_block","","",null,null],[17,"DW_AT_APPLE_major_runtime_vers","","",null,null],[17,"DW_AT_APPLE_runtime_class","","",null,null],[17,"DW_AT_APPLE_omit_frame_ptr","","",null,null],[17,"DW_AT_APPLE_property_name","","",null,null],[17,"DW_AT_APPLE_property_getter","","",null,null],[17,"DW_AT_APPLE_property_setter","","",null,null],[17,"DW_AT_APPLE_property_attribute","","",null,null],[17,"DW_AT_APPLE_objc_complete_type","","",null,null],[17,"DW_AT_APPLE_property","","",null,null],[17,"DW_FORM_null","","",null,null],[17,"DW_FORM_addr","","",null,null],[17,"DW_FORM_block2","","",null,null],[17,"DW_FORM_block4","","",null,null],[17,"DW_FORM_data2","","",null,null],[17,"DW_FORM_data4","","",null,null],[17,"DW_FORM_data8","","",null,null],[17,"DW_FORM_string","","",null,null],[17,"DW_FORM_block","","",null,null],[17,"DW_FORM_block1","","",null,null],[17,"DW_FORM_data1","","",null,null],[17,"DW_FORM_flag","","",null,null],[17,"DW_FORM_sdata","","",null,null],[17,"DW_FORM_strp","","",null,null],[17,"DW_FORM_udata","","",null,null],[17,"DW_FORM_ref_addr","","",null,null],[17,"DW_FORM_ref1","","",null,null],[17,"DW_FORM_ref2","","",null,null],[17,"DW_FORM_ref4","","",null,null],[17,"DW_FORM_ref8","","",null,null],[17,"DW_FORM_ref_udata","","",null,null],[17,"DW_FORM_indirect","","",null,null],[17,"DW_FORM_sec_offset","","",null,null],[17,"DW_FORM_exprloc","","",null,null],[17,"DW_FORM_flag_present","","",null,null],[17,"DW_FORM_ref_sig8","","",null,null],[17,"DW_FORM_strx","","",null,null],[17,"DW_FORM_addrx","","",null,null],[17,"DW_FORM_ref_sup4","","",null,null],[17,"DW_FORM_strp_sup","","",null,null],[17,"DW_FORM_data16","","",null,null],[17,"DW_FORM_line_strp","","",null,null],[17,"DW_FORM_implicit_const","","",null,null],[17,"DW_FORM_loclistx","","",null,null],[17,"DW_FORM_rnglistx","","",null,null],[17,"DW_FORM_ref_sup8","","",null,null],[17,"DW_FORM_strx1","","",null,null],[17,"DW_FORM_strx2","","",null,null],[17,"DW_FORM_strx3","","",null,null],[17,"DW_FORM_strx4","","",null,null],[17,"DW_FORM_addrx1","","",null,null],[17,"DW_FORM_addrx2","","",null,null],[17,"DW_FORM_addrx3","","",null,null],[17,"DW_FORM_addrx4","","",null,null],[17,"DW_FORM_GNU_addr_index","","",null,null],[17,"DW_FORM_GNU_str_index","","",null,null],[17,"DW_FORM_GNU_ref_alt","","",null,null],[17,"DW_FORM_GNU_strp_alt","","",null,null],[17,"DW_ATE_address","","",null,null],[17,"DW_ATE_boolean","","",null,null],[17,"DW_ATE_complex_float","","",null,null],[17,"DW_ATE_float","","",null,null],[17,"DW_ATE_signed","","",null,null],[17,"DW_ATE_signed_char","","",null,null],[17,"DW_ATE_unsigned","","",null,null],[17,"DW_ATE_unsigned_char","","",null,null],[17,"DW_ATE_imaginary_float","","",null,null],[17,"DW_ATE_packed_decimal","","",null,null],[17,"DW_ATE_numeric_string","","",null,null],[17,"DW_ATE_edited","","",null,null],[17,"DW_ATE_signed_fixed","","",null,null],[17,"DW_ATE_unsigned_fixed","","",null,null],[17,"DW_ATE_decimal_float","","",null,null],[17,"DW_ATE_UTF","","",null,null],[17,"DW_ATE_UCS","","",null,null],[17,"DW_ATE_ASCII","","",null,null],[17,"DW_ATE_lo_user","","",null,null],[17,"DW_ATE_hi_user","","",null,null],[17,"DW_LLE_end_of_list","","",null,null],[17,"DW_LLE_base_addressx","","",null,null],[17,"DW_LLE_startx_endx","","",null,null],[17,"DW_LLE_startx_length","","",null,null],[17,"DW_LLE_offset_pair","","",null,null],[17,"DW_LLE_default_location","","",null,null],[17,"DW_LLE_base_address","","",null,null],[17,"DW_LLE_start_end","","",null,null],[17,"DW_LLE_start_length","","",null,null],[17,"DW_LLE_GNU_view_pair","","",null,null],[17,"DW_DS_unsigned","","",null,null],[17,"DW_DS_leading_overpunch","","",null,null],[17,"DW_DS_trailing_overpunch","","",null,null],[17,"DW_DS_leading_separate","","",null,null],[17,"DW_DS_trailing_separate","","",null,null],[17,"DW_END_default","","",null,null],[17,"DW_END_big","","",null,null],[17,"DW_END_little","","",null,null],[17,"DW_END_lo_user","","",null,null],[17,"DW_END_hi_user","","",null,null],[17,"DW_ACCESS_public","","",null,null],[17,"DW_ACCESS_protected","","",null,null],[17,"DW_ACCESS_private","","",null,null],[17,"DW_VIS_local","","",null,null],[17,"DW_VIS_exported","","",null,null],[17,"DW_VIS_qualified","","",null,null],[17,"DW_VIRTUALITY_none","","",null,null],[17,"DW_VIRTUALITY_virtual","","",null,null],[17,"DW_VIRTUALITY_pure_virtual","","",null,null],[17,"DW_LANG_C89","","",null,null],[17,"DW_LANG_C","","",null,null],[17,"DW_LANG_Ada83","","",null,null],[17,"DW_LANG_C_plus_plus","","",null,null],[17,"DW_LANG_Cobol74","","",null,null],[17,"DW_LANG_Cobol85","","",null,null],[17,"DW_LANG_Fortran77","","",null,null],[17,"DW_LANG_Fortran90","","",null,null],[17,"DW_LANG_Pascal83","","",null,null],[17,"DW_LANG_Modula2","","",null,null],[17,"DW_LANG_Java","","",null,null],[17,"DW_LANG_C99","","",null,null],[17,"DW_LANG_Ada95","","",null,null],[17,"DW_LANG_Fortran95","","",null,null],[17,"DW_LANG_PLI","","",null,null],[17,"DW_LANG_ObjC","","",null,null],[17,"DW_LANG_ObjC_plus_plus","","",null,null],[17,"DW_LANG_UPC","","",null,null],[17,"DW_LANG_D","","",null,null],[17,"DW_LANG_Python","","",null,null],[17,"DW_LANG_OpenCL","","",null,null],[17,"DW_LANG_Go","","",null,null],[17,"DW_LANG_Modula3","","",null,null],[17,"DW_LANG_Haskell","","",null,null],[17,"DW_LANG_C_plus_plus_03","","",null,null],[17,"DW_LANG_C_plus_plus_11","","",null,null],[17,"DW_LANG_OCaml","","",null,null],[17,"DW_LANG_Rust","","",null,null],[17,"DW_LANG_C11","","",null,null],[17,"DW_LANG_Swift","","",null,null],[17,"DW_LANG_Julia","","",null,null],[17,"DW_LANG_Dylan","","",null,null],[17,"DW_LANG_C_plus_plus_14","","",null,null],[17,"DW_LANG_Fortran03","","",null,null],[17,"DW_LANG_Fortran08","","",null,null],[17,"DW_LANG_RenderScript","","",null,null],[17,"DW_LANG_BLISS","","",null,null],[17,"DW_LANG_Kotlin","","",null,null],[17,"DW_LANG_Zig","","",null,null],[17,"DW_LANG_Crystal","","",null,null],[17,"DW_LANG_C_plus_plus_17","","",null,null],[17,"DW_LANG_C_plus_plus_20","","",null,null],[17,"DW_LANG_C17","","",null,null],[17,"DW_LANG_Fortran18","","",null,null],[17,"DW_LANG_Ada2005","","",null,null],[17,"DW_LANG_Ada2012","","",null,null],[17,"DW_LANG_lo_user","","",null,null],[17,"DW_LANG_hi_user","","",null,null],[17,"DW_LANG_Mips_Assembler","","",null,null],[17,"DW_LANG_GOOGLE_RenderScript","","",null,null],[17,"DW_LANG_SUN_Assembler","","",null,null],[17,"DW_LANG_ALTIUM_Assembler","","",null,null],[17,"DW_LANG_BORLAND_Delphi","","",null,null],[17,"DW_ADDR_none","","",null,null],[17,"DW_ID_case_sensitive","","",null,null],[17,"DW_ID_up_case","","",null,null],[17,"DW_ID_down_case","","",null,null],[17,"DW_ID_case_insensitive","","",null,null],[17,"DW_CC_normal","","",null,null],[17,"DW_CC_program","","",null,null],[17,"DW_CC_nocall","","",null,null],[17,"DW_CC_pass_by_reference","","",null,null],[17,"DW_CC_pass_by_value","","",null,null],[17,"DW_CC_lo_user","","",null,null],[17,"DW_CC_hi_user","","",null,null],[17,"DW_INL_not_inlined","","",null,null],[17,"DW_INL_inlined","","",null,null],[17,"DW_INL_declared_not_inlined","","",null,null],[17,"DW_INL_declared_inlined","","",null,null],[17,"DW_ORD_row_major","","",null,null],[17,"DW_ORD_col_major","","",null,null],[17,"DW_DSC_label","","",null,null],[17,"DW_DSC_range","","",null,null],[17,"DW_IDX_compile_unit","","",null,null],[17,"DW_IDX_type_unit","","",null,null],[17,"DW_IDX_die_offset","","",null,null],[17,"DW_IDX_parent","","",null,null],[17,"DW_IDX_type_hash","","",null,null],[17,"DW_IDX_lo_user","","",null,null],[17,"DW_IDX_hi_user","","",null,null],[17,"DW_DEFAULTED_no","","",null,null],[17,"DW_DEFAULTED_in_class","","",null,null],[17,"DW_DEFAULTED_out_of_class","","",null,null],[17,"DW_LNS_copy","","",null,null],[17,"DW_LNS_advance_pc","","",null,null],[17,"DW_LNS_advance_line","","",null,null],[17,"DW_LNS_set_file","","",null,null],[17,"DW_LNS_set_column","","",null,null],[17,"DW_LNS_negate_stmt","","",null,null],[17,"DW_LNS_set_basic_block","","",null,null],[17,"DW_LNS_const_add_pc","","",null,null],[17,"DW_LNS_fixed_advance_pc","","",null,null],[17,"DW_LNS_set_prologue_end","","",null,null],[17,"DW_LNS_set_epilogue_begin","","",null,null],[17,"DW_LNS_set_isa","","",null,null],[17,"DW_LNE_end_sequence","","",null,null],[17,"DW_LNE_set_address","","",null,null],[17,"DW_LNE_define_file","","",null,null],[17,"DW_LNE_set_discriminator","","",null,null],[17,"DW_LNE_lo_user","","",null,null],[17,"DW_LNE_hi_user","","",null,null],[17,"DW_LNCT_path","","",null,null],[17,"DW_LNCT_directory_index","","",null,null],[17,"DW_LNCT_timestamp","","",null,null],[17,"DW_LNCT_size","","",null,null],[17,"DW_LNCT_MD5","","",null,null],[17,"DW_LNCT_lo_user","","",null,null],[17,"DW_LNCT_hi_user","","",null,null],[17,"DW_MACRO_define","","",null,null],[17,"DW_MACRO_undef","","",null,null],[17,"DW_MACRO_start_file","","",null,null],[17,"DW_MACRO_end_file","","",null,null],[17,"DW_MACRO_define_strp","","",null,null],[17,"DW_MACRO_undef_strp","","",null,null],[17,"DW_MACRO_import","","",null,null],[17,"DW_MACRO_define_sup","","",null,null],[17,"DW_MACRO_undef_sup","","",null,null],[17,"DW_MACRO_import_sup","","",null,null],[17,"DW_MACRO_define_strx","","",null,null],[17,"DW_MACRO_undef_strx","","",null,null],[17,"DW_MACRO_lo_user","","",null,null],[17,"DW_MACRO_hi_user","","",null,null],[17,"DW_RLE_end_of_list","","",null,null],[17,"DW_RLE_base_addressx","","",null,null],[17,"DW_RLE_startx_endx","","",null,null],[17,"DW_RLE_startx_length","","",null,null],[17,"DW_RLE_offset_pair","","",null,null],[17,"DW_RLE_base_address","","",null,null],[17,"DW_RLE_start_end","","",null,null],[17,"DW_RLE_start_length","","",null,null],[17,"DW_OP_addr","","",null,null],[17,"DW_OP_deref","","",null,null],[17,"DW_OP_const1u","","",null,null],[17,"DW_OP_const1s","","",null,null],[17,"DW_OP_const2u","","",null,null],[17,"DW_OP_const2s","","",null,null],[17,"DW_OP_const4u","","",null,null],[17,"DW_OP_const4s","","",null,null],[17,"DW_OP_const8u","","",null,null],[17,"DW_OP_const8s","","",null,null],[17,"DW_OP_constu","","",null,null],[17,"DW_OP_consts","","",null,null],[17,"DW_OP_dup","","",null,null],[17,"DW_OP_drop","","",null,null],[17,"DW_OP_over","","",null,null],[17,"DW_OP_pick","","",null,null],[17,"DW_OP_swap","","",null,null],[17,"DW_OP_rot","","",null,null],[17,"DW_OP_xderef","","",null,null],[17,"DW_OP_abs","","",null,null],[17,"DW_OP_and","","",null,null],[17,"DW_OP_div","","",null,null],[17,"DW_OP_minus","","",null,null],[17,"DW_OP_mod","","",null,null],[17,"DW_OP_mul","","",null,null],[17,"DW_OP_neg","","",null,null],[17,"DW_OP_not","","",null,null],[17,"DW_OP_or","","",null,null],[17,"DW_OP_plus","","",null,null],[17,"DW_OP_plus_uconst","","",null,null],[17,"DW_OP_shl","","",null,null],[17,"DW_OP_shr","","",null,null],[17,"DW_OP_shra","","",null,null],[17,"DW_OP_xor","","",null,null],[17,"DW_OP_bra","","",null,null],[17,"DW_OP_eq","","",null,null],[17,"DW_OP_ge","","",null,null],[17,"DW_OP_gt","","",null,null],[17,"DW_OP_le","","",null,null],[17,"DW_OP_lt","","",null,null],[17,"DW_OP_ne","","",null,null],[17,"DW_OP_skip","","",null,null],[17,"DW_OP_lit0","","",null,null],[17,"DW_OP_lit1","","",null,null],[17,"DW_OP_lit2","","",null,null],[17,"DW_OP_lit3","","",null,null],[17,"DW_OP_lit4","","",null,null],[17,"DW_OP_lit5","","",null,null],[17,"DW_OP_lit6","","",null,null],[17,"DW_OP_lit7","","",null,null],[17,"DW_OP_lit8","","",null,null],[17,"DW_OP_lit9","","",null,null],[17,"DW_OP_lit10","","",null,null],[17,"DW_OP_lit11","","",null,null],[17,"DW_OP_lit12","","",null,null],[17,"DW_OP_lit13","","",null,null],[17,"DW_OP_lit14","","",null,null],[17,"DW_OP_lit15","","",null,null],[17,"DW_OP_lit16","","",null,null],[17,"DW_OP_lit17","","",null,null],[17,"DW_OP_lit18","","",null,null],[17,"DW_OP_lit19","","",null,null],[17,"DW_OP_lit20","","",null,null],[17,"DW_OP_lit21","","",null,null],[17,"DW_OP_lit22","","",null,null],[17,"DW_OP_lit23","","",null,null],[17,"DW_OP_lit24","","",null,null],[17,"DW_OP_lit25","","",null,null],[17,"DW_OP_lit26","","",null,null],[17,"DW_OP_lit27","","",null,null],[17,"DW_OP_lit28","","",null,null],[17,"DW_OP_lit29","","",null,null],[17,"DW_OP_lit30","","",null,null],[17,"DW_OP_lit31","","",null,null],[17,"DW_OP_reg0","","",null,null],[17,"DW_OP_reg1","","",null,null],[17,"DW_OP_reg2","","",null,null],[17,"DW_OP_reg3","","",null,null],[17,"DW_OP_reg4","","",null,null],[17,"DW_OP_reg5","","",null,null],[17,"DW_OP_reg6","","",null,null],[17,"DW_OP_reg7","","",null,null],[17,"DW_OP_reg8","","",null,null],[17,"DW_OP_reg9","","",null,null],[17,"DW_OP_reg10","","",null,null],[17,"DW_OP_reg11","","",null,null],[17,"DW_OP_reg12","","",null,null],[17,"DW_OP_reg13","","",null,null],[17,"DW_OP_reg14","","",null,null],[17,"DW_OP_reg15","","",null,null],[17,"DW_OP_reg16","","",null,null],[17,"DW_OP_reg17","","",null,null],[17,"DW_OP_reg18","","",null,null],[17,"DW_OP_reg19","","",null,null],[17,"DW_OP_reg20","","",null,null],[17,"DW_OP_reg21","","",null,null],[17,"DW_OP_reg22","","",null,null],[17,"DW_OP_reg23","","",null,null],[17,"DW_OP_reg24","","",null,null],[17,"DW_OP_reg25","","",null,null],[17,"DW_OP_reg26","","",null,null],[17,"DW_OP_reg27","","",null,null],[17,"DW_OP_reg28","","",null,null],[17,"DW_OP_reg29","","",null,null],[17,"DW_OP_reg30","","",null,null],[17,"DW_OP_reg31","","",null,null],[17,"DW_OP_breg0","","",null,null],[17,"DW_OP_breg1","","",null,null],[17,"DW_OP_breg2","","",null,null],[17,"DW_OP_breg3","","",null,null],[17,"DW_OP_breg4","","",null,null],[17,"DW_OP_breg5","","",null,null],[17,"DW_OP_breg6","","",null,null],[17,"DW_OP_breg7","","",null,null],[17,"DW_OP_breg8","","",null,null],[17,"DW_OP_breg9","","",null,null],[17,"DW_OP_breg10","","",null,null],[17,"DW_OP_breg11","","",null,null],[17,"DW_OP_breg12","","",null,null],[17,"DW_OP_breg13","","",null,null],[17,"DW_OP_breg14","","",null,null],[17,"DW_OP_breg15","","",null,null],[17,"DW_OP_breg16","","",null,null],[17,"DW_OP_breg17","","",null,null],[17,"DW_OP_breg18","","",null,null],[17,"DW_OP_breg19","","",null,null],[17,"DW_OP_breg20","","",null,null],[17,"DW_OP_breg21","","",null,null],[17,"DW_OP_breg22","","",null,null],[17,"DW_OP_breg23","","",null,null],[17,"DW_OP_breg24","","",null,null],[17,"DW_OP_breg25","","",null,null],[17,"DW_OP_breg26","","",null,null],[17,"DW_OP_breg27","","",null,null],[17,"DW_OP_breg28","","",null,null],[17,"DW_OP_breg29","","",null,null],[17,"DW_OP_breg30","","",null,null],[17,"DW_OP_breg31","","",null,null],[17,"DW_OP_regx","","",null,null],[17,"DW_OP_fbreg","","",null,null],[17,"DW_OP_bregx","","",null,null],[17,"DW_OP_piece","","",null,null],[17,"DW_OP_deref_size","","",null,null],[17,"DW_OP_xderef_size","","",null,null],[17,"DW_OP_nop","","",null,null],[17,"DW_OP_push_object_address","","",null,null],[17,"DW_OP_call2","","",null,null],[17,"DW_OP_call4","","",null,null],[17,"DW_OP_call_ref","","",null,null],[17,"DW_OP_form_tls_address","","",null,null],[17,"DW_OP_call_frame_cfa","","",null,null],[17,"DW_OP_bit_piece","","",null,null],[17,"DW_OP_implicit_value","","",null,null],[17,"DW_OP_stack_value","","",null,null],[17,"DW_OP_implicit_pointer","","",null,null],[17,"DW_OP_addrx","","",null,null],[17,"DW_OP_constx","","",null,null],[17,"DW_OP_entry_value","","",null,null],[17,"DW_OP_const_type","","",null,null],[17,"DW_OP_regval_type","","",null,null],[17,"DW_OP_deref_type","","",null,null],[17,"DW_OP_xderef_type","","",null,null],[17,"DW_OP_convert","","",null,null],[17,"DW_OP_reinterpret","","",null,null],[17,"DW_OP_GNU_push_tls_address","","",null,null],[17,"DW_OP_GNU_implicit_pointer","","",null,null],[17,"DW_OP_GNU_entry_value","","",null,null],[17,"DW_OP_GNU_const_type","","",null,null],[17,"DW_OP_GNU_regval_type","","",null,null],[17,"DW_OP_GNU_deref_type","","",null,null],[17,"DW_OP_GNU_convert","","",null,null],[17,"DW_OP_GNU_reinterpret","","",null,null],[17,"DW_OP_GNU_parameter_ref","","",null,null],[17,"DW_OP_GNU_addr_index","","",null,null],[17,"DW_OP_GNU_const_index","","",null,null],[17,"DW_OP_WASM_location","","",null,null],[17,"DW_EH_PE_uleb128","","",null,null],[17,"DW_EH_PE_udata2","","",null,null],[17,"DW_EH_PE_udata4","","",null,null],[17,"DW_EH_PE_udata8","","",null,null],[17,"DW_EH_PE_sleb128","","",null,null],[17,"DW_EH_PE_sdata2","","",null,null],[17,"DW_EH_PE_sdata4","","",null,null],[17,"DW_EH_PE_sdata8","","",null,null],[17,"DW_EH_PE_pcrel","","",null,null],[17,"DW_EH_PE_textrel","","",null,null],[17,"DW_EH_PE_datarel","","",null,null],[17,"DW_EH_PE_funcrel","","",null,null],[17,"DW_EH_PE_aligned","","",null,null],[17,"DW_EH_PE_indirect","","",null,null],[17,"DW_EH_PE_absptr","","",null,null],[17,"DW_EH_PE_omit","","",null,null],[11,"static_string","","",35,[[],["option",4]]],[11,"static_string","","",36,[[],["option",4]]],[11,"static_string","","",37,[[],["option",4]]],[11,"static_string","","",38,[[],["option",4]]],[11,"static_string","","",39,[[],["option",4]]],[11,"static_string","","",40,[[],["option",4]]],[11,"static_string","","",41,[[],["option",4]]],[11,"static_string","","",42,[[],["option",4]]],[11,"static_string","","",43,[[],["option",4]]],[11,"static_string","","",44,[[],["option",4]]],[11,"static_string","","",45,[[],["option",4]]],[11,"static_string","","",46,[[],["option",4]]],[11,"static_string","","",47,[[],["option",4]]],[11,"static_string","","",48,[[],["option",4]]],[11,"default_lower_bound","","Get the default DW_AT_lower_bound for this language.",48,[[],["option",4]]],[11,"static_string","","",49,[[],["option",4]]],[11,"static_string","","",50,[[],["option",4]]],[11,"static_string","","",51,[[],["option",4]]],[11,"static_string","","",52,[[],["option",4]]],[11,"static_string","","",53,[[],["option",4]]],[11,"static_string","","",54,[[],["option",4]]],[11,"static_string","","",55,[[],["option",4]]],[11,"static_string","","",56,[[],["option",4]]],[11,"static_string","","",57,[[],["option",4]]],[11,"static_string","","",58,[[],["option",4]]],[11,"static_string","","",59,[[],["option",4]]],[11,"static_string","","",60,[[],["option",4]]],[11,"static_string","","",61,[[],["option",4]]],[11,"static_string","","",62,[[],["option",4]]],[11,"static_string","","",63,[[],["option",4]]],[11,"format","","Get the pointer encoding\'s format.",63,[[],["dwehpe",3]]],[11,"application","","Get the pointer encoding\'s application.",63,[[],["dwehpe",3]]],[11,"is_absent","","Is this encoding the absent pointer encoding?",63,[[]]],[11,"is_indirect","","Is this coding indirect? If so, its encoded value is the…",63,[[]]],[11,"is_valid_encoding","","Is this a known, valid pointer encoding?",63,[[]]],[0,"leb128","gimli","Read and write DWARF\'s \\\"Little Endian Base 128\\\" (LEB128)…",null,null],[0,"read","gimli::leb128","A module for reading signed and unsigned integers that…",null,null],[5,"unsigned","gimli::leb128::read","Read an unsigned LEB128 number from the given `Reader` and…",null,[[],["result",6]]],[5,"u16","","Read an LEB128 u16 from the given `Reader` and return it…",null,[[],["result",6]]],[5,"signed","","Read a signed LEB128 number from the given `Reader` and…",null,[[],["result",6]]],[0,"read","gimli","Read DWARF debugging information.",null,null],[3,"DebugAddr","gimli::read","The raw contents of the `.debug_addr` section.",null,null],[3,"DebugFrame","","`DebugFrame` contains the `.debug_frame` section\'s frame…",null,null],[3,"EhFrameHdr","","`EhFrameHdr` contains the information about the…",null,null],[3,"ParsedEhFrameHdr","","`ParsedEhFrameHdr` contains the parsed information from…",null,null],[3,"EhHdrTable","","The CFI binary search table that is an optional part of…",null,null],[3,"EhFrame","","`EhFrame` contains the frame unwinding information needed…",null,null],[3,"BaseAddresses","","Optional base addresses for the relative `DW_EH_PE_*`…",null,null],[12,"eh_frame_hdr","","The base addresses to use for pointers in the…",64,null],[12,"eh_frame","","The base addresses to use for pointers in the `.eh_frame`…",64,null],[3,"SectionBaseAddresses","","Optional base addresses for the relative `DW_EH_PE_*`…",null,null],[12,"section","","The address of the section containing the pointer.",65,null],[12,"text","","The base address for text relative pointers. This is…",65,null],[12,"data","","The base address for data relative pointers.",65,null],[3,"CfiEntriesIter","","An iterator over CIE and FDE entries in a `.debug_frame`…",null,null],[3,"Augmentation","","We support the z-style augmentation [defined by…",null,null],[3,"CommonInformationEntry","","A Common Information Entry holds information that is…",null,null],[3,"PartialFrameDescriptionEntry","","A partially parsed `FrameDescriptionEntry`.",null,null],[3,"FrameDescriptionEntry","","A `FrameDescriptionEntry` is a set of CFA instructions for…",null,null],[3,"UninitializedUnwindContext","","Common context needed when evaluating the call frame…",null,null],[3,"UnwindContext","","An unwinding context.",null,null],[3,"UnwindTable","","The `UnwindTable` iteratively evaluates a…",null,null],[3,"RegisterRuleIter","","An unordered iterator for register rules.",null,null],[3,"UnwindTableRow","","A row in the virtual unwind table that describes how to…",null,null],[3,"CallFrameInstructionIter","","A lazy iterator parsing call frame instructions.",null,null],[3,"Dwarf","","All of the commonly used DWARF sections, and other common…",null,null],[12,"debug_abbrev","","The `.debug_abbrev` section.",66,null],[12,"debug_addr","","The `.debug_addr` section.",66,null],[12,"debug_aranges","","The `.debug_aranges` section.",66,null],[12,"debug_info","","The `.debug_info` section.",66,null],[12,"debug_line","","The `.debug_line` section.",66,null],[12,"debug_line_str","","The `.debug_line_str` section.",66,null],[12,"debug_str","","The `.debug_str` section.",66,null],[12,"debug_str_offsets","","The `.debug_str_offsets` section.",66,null],[12,"debug_types","","The `.debug_types` section.",66,null],[12,"locations","","The location lists in the `.debug_loc` and…",66,null],[12,"ranges","","The range lists in the `.debug_ranges` and…",66,null],[12,"file_type","","The type of this file.",66,null],[12,"sup","","The DWARF sections for a supplementary object file.",66,null],[3,"Unit","","All of the commonly used information for a unit in the…",null,null],[12,"header","","The header of the unit.",67,null],[12,"abbreviations","","The parsed abbreviations for the unit.",67,null],[12,"name","","The `DW_AT_name` attribute of the unit.",67,null],[12,"comp_dir","","The `DW_AT_comp_dir` attribute of the unit.",67,null],[12,"low_pc","","The `DW_AT_low_pc` attribute of the unit. Defaults to 0.",67,null],[12,"str_offsets_base","","The `DW_AT_str_offsets_base` attribute of the unit.…",67,null],[12,"addr_base","","The `DW_AT_addr_base` attribute of the unit. Defaults to 0.",67,null],[12,"loclists_base","","The `DW_AT_loclists_base` attribute of the unit. Defaults…",67,null],[12,"rnglists_base","","The `DW_AT_rnglists_base` attribute of the unit. Defaults…",67,null],[12,"line_program","","The line number program of the unit.",67,null],[12,"dwo_id","","The DWO ID of a skeleton unit or split compilation unit.",67,null],[3,"RangeIter","","An iterator for the address ranges of a…",null,null],[3,"EndianSlice","","A `&[u8]` slice with endianity metadata.",null,null],[3,"ReaderOffsetId","","An identifier for an offset within a section reader.",null,null],[12,"0","","",68,null],[3,"DebugAbbrev","","The `DebugAbbrev` struct represents the abbreviations…",null,null],[3,"Abbreviations","","A set of type abbreviations.",null,null],[3,"Abbreviation","","An abbreviation describes the shape of a…",null,null],[3,"AttributeSpecification","","The description of an attribute in an abbreviated type. It…",null,null],[3,"DebugAranges","","The `DebugAranges` struct represents the DWARF address…",null,null],[3,"ArangeHeaderIter","","An iterator over the headers of a `.debug_aranges` section.",null,null],[3,"ArangeHeader","","A header for a set of entries in the `.debug_arange`…",null,null],[3,"ArangeEntryIter","","An iterator over the aranges from a `.debug_aranges`…",null,null],[3,"ArangeEntry","","A single parsed arange.",null,null],[3,"DebugLine","","The `DebugLine` struct contains the source location to…",null,null],[3,"LineRows","","Executes a `LineProgram` to iterate over the rows in the…",null,null],[3,"LineInstructions","","An iterator yielding parsed instructions.",null,null],[3,"LineRow","","A row in the line number program\'s resulting matrix.",null,null],[3,"LineSequence","","A sequence within a line number program. A sequence, as…",null,null],[12,"start","","The first address that is covered by this sequence within…",69,null],[12,"end","","The first address that is not covered by this sequence…",69,null],[3,"LineProgramHeader","","A header for a line number program in the `.debug_line`…",null,null],[3,"IncompleteLineProgram","","A line number program that has not been run to completion.",null,null],[3,"CompleteLineProgram","","A line number program that has previously been run to…",null,null],[3,"FileEntry","","An entry in the `LineProgramHeader`\'s `file_names` set.",null,null],[3,"FileEntryFormat","","The format of a component of an include directory or file…",null,null],[12,"content_type","","The type of information that is represented by the…",70,null],[12,"form","","The encoding form of the component value.",70,null],[3,"DebugLoc","","The raw contents of the `.debug_loc` section.",null,null],[3,"DebugLocLists","","The `DebugLocLists` struct represents the DWARF data found…",null,null],[3,"LocationLists","","The DWARF data found in `.debug_loc` and `.debug_loclists`…",null,null],[3,"RawLocListIter","","A raw iterator over a location list.",null,null],[3,"LocListIter","","An iterator over a location list.",null,null],[3,"LocationListEntry","","A location list entry from the `.debug_loc` or…",null,null],[12,"range","","The address range that this location is valid for.",71,null],[12,"data","","The data containing a single location description.",71,null],[3,"Piece","","The description of a single piece of the result of a DWARF…",null,null],[12,"size_in_bits","","If given, the size of the piece in bits. If `None`, there…",72,null],[12,"bit_offset","","If given, the bit offset of the piece within the location.…",72,null],[12,"location","","Where this piece is to be found.",72,null],[3,"Expression","","The bytecode for a DWARF expression or location description.",null,null],[12,"0","","",73,null],[3,"OperationIter","","An iterator for the operations in an expression.",null,null],[3,"Evaluation","","A DWARF expression evaluator.",null,null],[3,"PubNamesEntry","","A single parsed pubname.",null,null],[3,"DebugPubNames","","The `DebugPubNames` struct represents the DWARF public…",null,null],[3,"PubNamesEntryIter","","An iterator over the pubnames from a `.debug_pubnames`…",null,null],[3,"PubTypesEntry","","A single parsed pubtype.",null,null],[3,"DebugPubTypes","","The `DebugPubTypes` struct represents the DWARF public…",null,null],[3,"PubTypesEntryIter","","An iterator over the pubtypes from a `.debug_pubtypes`…",null,null],[3,"DebugRanges","","The raw contents of the `.debug_ranges` section.",null,null],[3,"DebugRngLists","","The `DebugRngLists` struct represents the contents of the…",null,null],[3,"RangeLists","","The DWARF data found in `.debug_ranges` and…",null,null],[3,"RawRngListIter","","A raw iterator over an address range list.",null,null],[3,"RngListIter","","An iterator over an address range list.",null,null],[3,"Range","","An address range from the `.debug_ranges`,…",null,null],[12,"begin","","The beginning address of the range.",74,null],[12,"end","","The first address past the end of the range.",74,null],[3,"DebugStr","","The `DebugStr` struct represents the DWARF strings found…",null,null],[3,"DebugStrOffsets","","The raw contents of the `.debug_str_offsets` section.",null,null],[3,"DebugLineStr","","The `DebugLineStr` struct represents the DWARF strings…",null,null],[3,"UnitOffset","","An offset into the current compilation or type unit.",null,null],[12,"0","","",75,null],[3,"DebugInfo","","The `DebugInfo` struct represents the DWARF debugging…",null,null],[3,"DebugInfoUnitHeadersIter","","An iterator over the units of a .debug_info section.",null,null],[3,"UnitHeader","","The common fields for the headers of compilation units and…",null,null],[3,"DebuggingInformationEntry","","A Debugging Information Entry (DIE).",null,null],[3,"Attribute","","An attribute in a `DebuggingInformationEntry`, consisting…",null,null],[3,"AttrsIter","","An iterator over a particular entry\'s attributes.",null,null],[3,"EntriesRaw","","A raw reader of the data that defines the Debugging…",null,null],[3,"EntriesCursor","","A cursor into the Debugging Information Entries tree for a…",null,null],[3,"EntriesTree","","The state information for a tree view of the Debugging…",null,null],[3,"EntriesTreeNode","","A node in the Debugging Information Entry tree.",null,null],[3,"EntriesTreeIter","","An iterator that allows traversal of the children of an…",null,null],[3,"DebugTypes","","The `DebugTypes` struct represents the DWARF type…",null,null],[3,"DebugTypesUnitHeadersIter","","An iterator over the type-units of this `.debug_types`…",null,null],[4,"CieOrFde","","Either a `CommonInformationEntry` (CIE) or a…",null,null],[13,"Cie","","This CFI entry is a `CommonInformationEntry`.",76,null],[13,"Fde","","This CFI entry is a `FrameDescriptionEntry`, however fully…",76,null],[4,"CfaRule","","The canonical frame address (CFA) recovery rules.",null,null],[13,"RegisterAndOffset","","The CFA is given offset from the given register\'s value.",77,null],[12,"register","gimli::read::CfaRule","The register containing the base value.",78,null],[12,"offset","","The offset from the register\'s base value.",78,null],[13,"Expression","gimli::read","The CFA is obtained by evaluating this `Reader` as a DWARF…",77,null],[4,"RegisterRule","","An entry in the abstract CFI table that describes how to…",null,null],[13,"Undefined","","A register that has this rule has no recoverable value in…",79,null],[13,"SameValue","","This register has not been modified from the previous…",79,null],[13,"Offset","","\\\"The previous value of this register is saved at the…",79,null],[13,"ValOffset","","\\\"The previous value of this register is the value CFA+N…",79,null],[13,"Register","","\\\"The previous value of this register is stored in another…",79,null],[13,"Expression","","\\\"The previous value of this register is located at the…",79,null],[13,"ValExpression","","\\\"The previous value of this register is the value produced…",79,null],[13,"Architectural","","\\\"The rule is defined externally to this specification by…",79,null],[4,"CallFrameInstruction","","A parsed call frame instruction.",null,null],[13,"SetLoc","","",80,null],[12,"address","gimli::read::CallFrameInstruction","The target address.",81,null],[13,"AdvanceLoc","gimli::read","The `AdvanceLoc` instruction is used for all of…",80,null],[12,"delta","gimli::read::CallFrameInstruction","The delta to be added to the current address.",82,null],[13,"DefCfa","gimli::read","",80,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",83,null],[12,"offset","","The non-factored offset.",83,null],[13,"DefCfaSf","gimli::read","",80,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",84,null],[12,"factored_offset","","The factored offset.",84,null],[13,"DefCfaRegister","gimli::read","",80,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",85,null],[13,"DefCfaOffset","gimli::read","",80,null],[12,"offset","gimli::read::CallFrameInstruction","The non-factored offset.",86,null],[13,"DefCfaOffsetSf","gimli::read","",80,null],[12,"factored_offset","gimli::read::CallFrameInstruction","The factored offset.",87,null],[13,"DefCfaExpression","gimli::read","",80,null],[12,"expression","gimli::read::CallFrameInstruction","The DWARF expression.",88,null],[13,"Undefined","gimli::read","",80,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",89,null],[13,"SameValue","gimli::read","",80,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",90,null],[13,"Offset","gimli::read","The `Offset` instruction represents both `DW_CFA_offset`…",80,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",91,null],[12,"factored_offset","","The factored offset.",91,null],[13,"OffsetExtendedSf","gimli::read","",80,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",92,null],[12,"factored_offset","","The factored offset.",92,null],[13,"ValOffset","gimli::read","",80,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",93,null],[12,"factored_offset","","The factored offset.",93,null],[13,"ValOffsetSf","gimli::read","",80,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",94,null],[12,"factored_offset","","The factored offset.",94,null],[13,"Register","gimli::read","",80,null],[12,"dest_register","gimli::read::CallFrameInstruction","The number of the register whose rule is being changed.",95,null],[12,"src_register","","The number of the register where the other register\'s…",95,null],[13,"Expression","gimli::read","",80,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",96,null],[12,"expression","","The DWARF expression.",96,null],[13,"ValExpression","gimli::read","",80,null],[12,"register","gimli::read::CallFrameInstruction","The target register\'s number.",97,null],[12,"expression","","The DWARF expression.",97,null],[13,"Restore","gimli::read","The `Restore` instruction represents both `DW_CFA_restore`…",80,null],[12,"register","gimli::read::CallFrameInstruction","The register to be reset.",98,null],[13,"RememberState","gimli::read","",80,null],[13,"RestoreState","","",80,null],[13,"ArgsSize","","DW_CFA_GNU_args_size > > GNU Extension > > The…",80,null],[12,"size","gimli::read::CallFrameInstruction","The size of the arguments which have been pushed onto the…",99,null],[13,"Nop","gimli::read","",80,null],[4,"Pointer","","A decoded pointer.",null,null],[13,"Direct","","This value is the decoded pointer value.",100,null],[13,"Indirect","","This value is not the pointer value, but points to the…",100,null],[4,"LineInstruction","","A parsed line number program instruction.",null,null],[13,"Special","","6.2.5.1 Special Opcodes > > Each ubyte special opcode has…",101,null],[13,"Copy","","\\\"[`LineInstruction::Copy`] appends a row to the matrix…",101,null],[13,"AdvancePc","","\\\"The DW_LNS_advance_pc opcode takes a single unsigned…",101,null],[13,"AdvanceLine","","\\\"The DW_LNS_advance_line opcode takes a single signed…",101,null],[13,"SetFile","","\\\"The DW_LNS_set_file opcode takes a single unsigned LEB128…",101,null],[13,"SetColumn","","\\\"The DW_LNS_set_column opcode takes a single unsigned…",101,null],[13,"NegateStatement","","\\\"The DW_LNS_negate_stmt opcode takes no operands. It sets…",101,null],[13,"SetBasicBlock","","\\\"The DW_LNS_set_basic_block opcode takes no operands. It…",101,null],[13,"ConstAddPc","","The DW_LNS_const_add_pc opcode takes no operands. It…",101,null],[13,"FixedAddPc","","The DW_LNS_fixed_advance_pc opcode takes a single uhalf…",101,null],[13,"SetPrologueEnd","","\\\"[`LineInstruction::SetPrologueEnd`] sets the prologue_end…",101,null],[13,"SetEpilogueBegin","","\\\"[`LineInstruction::SetEpilogueBegin`] sets the…",101,null],[13,"SetIsa","","\\\"The DW_LNS_set_isa opcode takes a single unsigned LEB128…",101,null],[13,"UnknownStandard0","","An unknown standard opcode with zero operands.",101,null],[13,"UnknownStandard1","","An unknown standard opcode with one operand.",101,null],[13,"UnknownStandardN","","An unknown standard opcode with multiple operands.",101,null],[13,"EndSequence","","[`LineInstruction::EndSequence`] sets the end_sequence…",101,null],[13,"SetAddress","","The DW_LNE_set_address opcode takes a single relocatable…",101,null],[13,"DefineFile","","Defines a new source file in the line number program and…",101,null],[13,"SetDiscriminator","","\\\"The DW_LNE_set_discriminator opcode takes a single…",101,null],[13,"UnknownExtended","","An unknown extended opcode and the slice of its unparsed…",101,null],[4,"ColumnType","","The type of column that a row is referring to.",null,null],[13,"LeftEdge","","The `LeftEdge` means that the statement begins at the…",102,null],[13,"Column","","A column number, whose range begins at 1.",102,null],[4,"RawLocListEntry","","A raw entry in .debug_loclists.",null,null],[13,"AddressOrOffsetPair","","A location from DWARF version <= 4.",103,null],[12,"begin","gimli::read::RawLocListEntry","Start of range. May be an address or an offset.",104,null],[12,"end","","End of range. May be an address or an offset.",104,null],[12,"data","","expression",104,null],[13,"BaseAddress","gimli::read","DW_LLE_base_address",103,null],[12,"addr","gimli::read::RawLocListEntry","base address",105,null],[13,"BaseAddressx","gimli::read","DW_LLE_base_addressx",103,null],[12,"addr","gimli::read::RawLocListEntry","base address",106,null],[13,"StartxEndx","gimli::read","DW_LLE_startx_endx",103,null],[12,"begin","gimli::read::RawLocListEntry","start of range",107,null],[12,"end","","end of range",107,null],[12,"data","","expression",107,null],[13,"StartxLength","gimli::read","DW_LLE_startx_length",103,null],[12,"begin","gimli::read::RawLocListEntry","start of range",108,null],[12,"length","","length of range",108,null],[12,"data","","expression",108,null],[13,"OffsetPair","gimli::read","DW_LLE_offset_pair",103,null],[12,"begin","gimli::read::RawLocListEntry","start of range",109,null],[12,"end","","end of range",109,null],[12,"data","","expression",109,null],[13,"DefaultLocation","gimli::read","DW_LLE_default_location",103,null],[12,"data","gimli::read::RawLocListEntry","expression",110,null],[13,"StartEnd","gimli::read","DW_LLE_start_end",103,null],[12,"begin","gimli::read::RawLocListEntry","start of range",111,null],[12,"end","","end of range",111,null],[12,"data","","expression",111,null],[13,"StartLength","gimli::read","DW_LLE_start_length",103,null],[12,"begin","gimli::read::RawLocListEntry","start of range",112,null],[12,"length","","length of range",112,null],[12,"data","","expression",112,null],[4,"DieReference","gimli::read","A reference to a DIE, either relative to the current CU or…",null,null],[13,"UnitRef","","A CU-relative reference.",113,null],[13,"DebugInfoRef","","A section-relative reference.",113,null],[4,"Operation","","A single decoded DWARF expression operation.",null,null],[13,"Deref","","Dereference the topmost value of the stack.",114,null],[12,"base_type","gimli::read::Operation","The DIE of the base type or 0 to indicate the generic type",115,null],[12,"size","","The size of the data to dereference.",115,null],[12,"space","","True if the dereference operation takes an address space…",115,null],[13,"Drop","gimli::read","Drop an item from the stack.",114,null],[13,"Pick","","Pick an item from the stack and push it on top of the…",114,null],[12,"index","gimli::read::Operation","The index, from the top of the stack, of the item to copy.",116,null],[13,"Swap","gimli::read","Swap the top two stack items.",114,null],[13,"Rot","","Rotate the top three stack items.",114,null],[13,"Abs","","Take the absolute value of the top of the stack.",114,null],[13,"And","","Bitwise `and` of the top two values on the stack.",114,null],[13,"Div","","Divide the top two values on the stack.",114,null],[13,"Minus","","Subtract the top two values on the stack.",114,null],[13,"Mod","","Modulus of the top two values on the stack.",114,null],[13,"Mul","","Multiply the top two values on the stack.",114,null],[13,"Neg","","Negate the top of the stack.",114,null],[13,"Not","","Bitwise `not` of the top of the stack.",114,null],[13,"Or","","Bitwise `or` of the top two values on the stack.",114,null],[13,"Plus","","Add the top two values on the stack.",114,null],[13,"PlusConstant","","Add a constant to the topmost value on the stack.",114,null],[12,"value","gimli::read::Operation","The value to add.",117,null],[13,"Shl","gimli::read","Logical left shift of the 2nd value on the stack by the…",114,null],[13,"Shr","","Right shift of the 2nd value on the stack by the number of…",114,null],[13,"Shra","","Arithmetic left shift of the 2nd value on the stack by the…",114,null],[13,"Xor","","Bitwise `xor` of the top two values on the stack.",114,null],[13,"Bra","","Branch to the target location if the top of stack is…",114,null],[12,"target","gimli::read::Operation","The relative offset to the target bytecode.",118,null],[13,"Eq","gimli::read","Compare the top two stack values for equality.",114,null],[13,"Ge","","Compare the top two stack values using `>=`.",114,null],[13,"Gt","","Compare the top two stack values using `>`.",114,null],[13,"Le","","Compare the top two stack values using `<=`.",114,null],[13,"Lt","","Compare the top two stack values using `<`.",114,null],[13,"Ne","","Compare the top two stack values using `!=`.",114,null],[13,"Skip","","Unconditional branch to the target location.",114,null],[12,"target","gimli::read::Operation","The relative offset to the target bytecode.",119,null],[13,"UnsignedConstant","gimli::read","Push an unsigned constant value on the stack. This handles…",114,null],[12,"value","gimli::read::Operation","The value to push.",120,null],[13,"SignedConstant","gimli::read","Push a signed constant value on the stack. This handles…",114,null],[12,"value","gimli::read::Operation","The value to push.",121,null],[13,"Register","gimli::read","Indicate that this piece\'s location is in the given…",114,null],[12,"register","gimli::read::Operation","The register number.",122,null],[13,"RegisterOffset","gimli::read","Find the value of the given register, add the offset, and…",114,null],[12,"register","gimli::read::Operation","The register number.",123,null],[12,"offset","","The offset to add.",123,null],[12,"base_type","","The DIE of the base type or 0 to indicate the generic type",123,null],[13,"FrameOffset","gimli::read","Compute the frame base (using `DW_AT_frame_base`), add the…",114,null],[12,"offset","gimli::read::Operation","The offset to add.",124,null],[13,"Nop","gimli::read","No operation.",114,null],[13,"PushObjectAddress","","Push the object address on the stack.",114,null],[13,"Call","","Evaluate a DWARF expression as a subroutine. The…",114,null],[12,"offset","gimli::read::Operation","The DIE to use.",125,null],[13,"TLS","gimli::read","Compute the address of a thread-local variable and push it…",114,null],[13,"CallFrameCFA","","Compute the call frame CFA and push it on the stack.",114,null],[13,"Piece","","Terminate a piece.",114,null],[12,"size_in_bits","gimli::read::Operation","The size of this piece in bits.",126,null],[12,"bit_offset","","The bit offset of this piece. If `None`, then this piece…",126,null],[13,"ImplicitValue","gimli::read","The object has no location, but has a known constant value.",114,null],[12,"data","gimli::read::Operation","The implicit value to use.",127,null],[13,"StackValue","gimli::read","The object has no location, but its value is at the top of…",114,null],[13,"ImplicitPointer","","The object is a pointer to a value which has no actual…",114,null],[12,"value","gimli::read::Operation","The `.debug_info` offset of the value that this is an…",128,null],[12,"byte_offset","","The byte offset into the value that the implicit pointer…",128,null],[13,"EntryValue","gimli::read","Evaluate an expression at the entry to the current…",114,null],[12,"expression","gimli::read::Operation","The expression to be evaluated.",129,null],[13,"ParameterRef","gimli::read","This represents a parameter that was optimized out.",114,null],[12,"offset","gimli::read::Operation","The DIE to use.",130,null],[13,"Address","gimli::read","Relocate the address if needed, and push it on the stack.",114,null],[12,"address","gimli::read::Operation","The offset to add.",131,null],[13,"AddressIndex","gimli::read","Read the address at the given index in `.debug_addr,…",114,null],[12,"index","gimli::read::Operation","The index of the address in `.debug_addr`.",132,null],[13,"ConstantIndex","gimli::read","Read the address at the given index in `.debug_addr, and…",114,null],[12,"index","gimli::read::Operation","The index of the address in `.debug_addr`.",133,null],[13,"TypedLiteral","gimli::read","Interpret the value bytes as a constant of a given type,…",114,null],[12,"base_type","gimli::read::Operation","The DIE of the base type.",134,null],[12,"value","","The value bytes.",134,null],[13,"Convert","gimli::read","Pop the top stack entry, convert it to a different type,…",114,null],[12,"base_type","gimli::read::Operation","The DIE of the base type.",135,null],[13,"Reinterpret","gimli::read","Pop the top stack entry, reinterpret the bits in its value…",114,null],[12,"base_type","gimli::read::Operation","The DIE of the base type.",136,null],[13,"WasmLocal","gimli::read","The index of a local in the currently executing function.",114,null],[12,"index","gimli::read::Operation","The index of the local.",137,null],[13,"WasmGlobal","gimli::read","The index of a global.",114,null],[12,"index","gimli::read::Operation","The index of the global.",138,null],[13,"WasmStack","gimli::read","The index of an item on the operand stack.",114,null],[12,"index","gimli::read::Operation","The index of the stack item. 0 is the bottom of the…",139,null],[4,"Location","gimli::read","A single location of a piece of the result of a DWARF…",null,null],[13,"Empty","","The piece is empty. Ordinarily this means the piece has…",140,null],[13,"Register","","The piece is found in a register.",140,null],[12,"register","gimli::read::Location","The register number.",141,null],[13,"Address","gimli::read","The piece is found in memory.",140,null],[12,"address","gimli::read::Location","The address.",142,null],[13,"Value","gimli::read","The piece has no location but its value is known.",140,null],[12,"value","gimli::read::Location","The value.",143,null],[13,"Bytes","gimli::read","The piece is represented by some constant bytes.",140,null],[12,"value","gimli::read::Location","The value.",144,null],[13,"ImplicitPointer","gimli::read","The piece is a pointer to a value which has no actual…",140,null],[12,"value","gimli::read::Location","The `.debug_info` offset of the value that this is an…",145,null],[12,"byte_offset","","The byte offset into the value that the implicit pointer…",145,null],[4,"EvaluationResult","gimli::read","The state of an `Evaluation` after evaluating a DWARF…",null,null],[13,"Complete","","The `Evaluation` is complete, and `Evaluation::result()`…",146,null],[13,"RequiresMemory","","The `Evaluation` needs a value from memory to proceed…",146,null],[12,"address","gimli::read::EvaluationResult","The address of the value required.",147,null],[12,"size","","The size of the value required. This is guaranteed to be…",147,null],[12,"space","","If not `None`, a target-specific address space value.",147,null],[12,"base_type","","The DIE of the base type or 0 to indicate the generic type",147,null],[13,"RequiresRegister","gimli::read","The `Evaluation` needs a value from a register to proceed…",146,null],[12,"register","gimli::read::EvaluationResult","The register number.",148,null],[12,"base_type","","The DIE of the base type or 0 to indicate the generic type",148,null],[13,"RequiresFrameBase","gimli::read","The `Evaluation` needs the frame base address to proceed…",146,null],[13,"RequiresTls","","The `Evaluation` needs a value from TLS to proceed…",146,null],[13,"RequiresCallFrameCfa","","The `Evaluation` needs the CFA to proceed further. Once…",146,null],[13,"RequiresAtLocation","","The `Evaluation` needs the DWARF expression at the given…",146,null],[13,"RequiresEntryValue","","The `Evaluation` needs the value produced by evaluating a…",146,null],[13,"RequiresParameterRef","","The `Evaluation` needs the value of the parameter at the…",146,null],[13,"RequiresRelocatedAddress","","The `Evaluation` needs an address to be relocated to…",146,null],[13,"RequiresIndexedAddress","","The `Evaluation` needs an address from the `.debug_addr`…",146,null],[12,"index","gimli::read::EvaluationResult","The index of the address in the `.debug_addr` section,…",149,null],[12,"relocate","","Whether the address also needs to be relocated.",149,null],[13,"RequiresBaseType","gimli::read","The `Evaluation` needs the `ValueType` for the base type…",146,null],[4,"RawRngListEntry","","A raw entry in .debug_rnglists",null,null],[13,"AddressOrOffsetPair","","A range from DWARF version <= 4.",150,null],[12,"begin","gimli::read::RawRngListEntry","Start of range. May be an address or an offset.",151,null],[12,"end","","End of range. May be an address or an offset.",151,null],[13,"BaseAddress","gimli::read","DW_RLE_base_address",150,null],[12,"addr","gimli::read::RawRngListEntry","base address",152,null],[13,"BaseAddressx","gimli::read","DW_RLE_base_addressx",150,null],[12,"addr","gimli::read::RawRngListEntry","base address",153,null],[13,"StartxEndx","gimli::read","DW_RLE_startx_endx",150,null],[12,"begin","gimli::read::RawRngListEntry","start of range",154,null],[12,"end","","end of range",154,null],[13,"StartxLength","gimli::read","DW_RLE_startx_length",150,null],[12,"begin","gimli::read::RawRngListEntry","start of range",155,null],[12,"length","","length of range",155,null],[13,"OffsetPair","gimli::read","DW_RLE_offset_pair",150,null],[12,"begin","gimli::read::RawRngListEntry","start of range",156,null],[12,"end","","end of range",156,null],[13,"StartEnd","gimli::read","DW_RLE_start_end",150,null],[12,"begin","gimli::read::RawRngListEntry","start of range",157,null],[12,"end","","end of range",157,null],[13,"StartLength","gimli::read","DW_RLE_start_length",150,null],[12,"begin","gimli::read::RawRngListEntry","start of range",158,null],[12,"length","","length of range",158,null],[4,"UnitType","gimli::read","This enum specifies the type of the unit and any type…",null,null],[13,"Compilation","","In DWARF5, a unit with type `DW_UT_compile`. In previous…",159,null],[13,"Type","","In DWARF5, a unit with type `DW_UT_type`. In DWARF4, any…",159,null],[12,"type_signature","gimli::read::UnitType","The unique type signature for this type unit.",160,null],[12,"type_offset","","The offset within this type unit where the type is defined.",160,null],[13,"Partial","gimli::read","A unit with type `DW_UT_partial`. The root DIE of this…",159,null],[13,"Skeleton","","A unit with type `DW_UT_skeleton`. The enclosed dwo_id can…",159,null],[13,"SplitCompilation","","A unit with type `DW_UT_split_compile`. The enclosed…",159,null],[13,"SplitType","","A unit with type `DW_UT_split_type`. A split type unit is…",159,null],[12,"type_signature","gimli::read::UnitType","The unique type signature for this type unit.",161,null],[12,"type_offset","","The offset within this type unit where the type is defined.",161,null],[4,"AttributeValue","gimli::read","The value of an attribute in a `DebuggingInformationEntry`.",null,null],[13,"Addr","","\\\"Refers to some location in the address space of the…",162,null],[13,"Block","","A slice of an arbitrary number of bytes.",162,null],[13,"Data1","","A one byte constant data value. How to interpret the byte…",162,null],[13,"Data2","","A two byte constant data value. How to interpret the bytes…",162,null],[13,"Data4","","A four byte constant data value. How to interpret the…",162,null],[13,"Data8","","An eight byte constant data value. How to interpret the…",162,null],[13,"Sdata","","A signed integer constant.",162,null],[13,"Udata","","An unsigned integer constant.",162,null],[13,"Exprloc","","\\\"The information bytes contain a DWARF expression (see…",162,null],[13,"Flag","","A boolean that indicates presence or absence of the…",162,null],[13,"SecOffset","","An offset into another section. Which section this is an…",162,null],[13,"DebugAddrBase","","An offset to a set of addresses in the `.debug_addr`…",162,null],[13,"DebugAddrIndex","","An index into a set of addresses in the `.debug_addr`…",162,null],[13,"UnitRef","","An offset into the current compilation unit.",162,null],[13,"DebugInfoRef","","An offset into the current `.debug_info` section, but…",162,null],[13,"DebugInfoRefSup","","An offset into the `.debug_info` section of the…",162,null],[13,"DebugLineRef","","An offset into the `.debug_line` section.",162,null],[13,"LocationListsRef","","An offset into either the `.debug_loc` section or the…",162,null],[13,"DebugLocListsBase","","An offset to a set of offsets in the `.debug_loclists`…",162,null],[13,"DebugLocListsIndex","","An index into a set of offsets in the `.debug_loclists`…",162,null],[13,"DebugMacinfoRef","","An offset into the `.debug_macinfo` section.",162,null],[13,"DebugMacroRef","","An offset into the `.debug_macro` section.",162,null],[13,"RangeListsRef","","An offset into the `.debug_ranges` section.",162,null],[13,"DebugRngListsBase","","An offset to a set of offsets in the `.debug_rnglists`…",162,null],[13,"DebugRngListsIndex","","An index into a set of offsets in the `.debug_rnglists`…",162,null],[13,"DebugTypesRef","","A type signature.",162,null],[13,"DebugStrRef","","An offset into the `.debug_str` section.",162,null],[13,"DebugStrRefSup","","An offset into the `.debug_str` section of the…",162,null],[13,"DebugStrOffsetsBase","","An offset to a set of entries in the `.debug_str_offsets`…",162,null],[13,"DebugStrOffsetsIndex","","An index into a set of entries in the `.debug_str_offsets`…",162,null],[13,"DebugLineStrRef","","An offset into the `.debug_line_str` section.",162,null],[13,"String","","A slice of bytes representing a string. Does not include a…",162,null],[13,"Encoding","","The value of a `DW_AT_encoding` attribute.",162,null],[13,"DecimalSign","","The value of a `DW_AT_decimal_sign` attribute.",162,null],[13,"Endianity","","The value of a `DW_AT_endianity` attribute.",162,null],[13,"Accessibility","","The value of a `DW_AT_accessibility` attribute.",162,null],[13,"Visibility","","The value of a `DW_AT_visibility` attribute.",162,null],[13,"Virtuality","","The value of a `DW_AT_virtuality` attribute.",162,null],[13,"Language","","The value of a `DW_AT_language` attribute.",162,null],[13,"AddressClass","","The value of a `DW_AT_address_class` attribute.",162,null],[13,"IdentifierCase","","The value of a `DW_AT_identifier_case` attribute.",162,null],[13,"CallingConvention","","The value of a `DW_AT_calling_convention` attribute.",162,null],[13,"Inline","","The value of a `DW_AT_inline` attribute.",162,null],[13,"Ordering","","The value of a `DW_AT_ordering` attribute.",162,null],[13,"FileIndex","","An index into the filename entries from the line number…",162,null],[13,"DwoId","","An implementation-defined identifier uniquely identifying…",162,null],[4,"ValueType","","The type of an entry on the DWARF stack.",null,null],[13,"Generic","","The generic type, which is address-sized and of…",163,null],[13,"I8","","Signed 8-bit integer type.",163,null],[13,"U8","","Unsigned 8-bit integer type.",163,null],[13,"I16","","Signed 16-bit integer type.",163,null],[13,"U16","","Unsigned 16-bit integer type.",163,null],[13,"I32","","Signed 32-bit integer type.",163,null],[13,"U32","","Unsigned 32-bit integer type.",163,null],[13,"I64","","Signed 64-bit integer type.",163,null],[13,"U64","","Unsigned 64-bit integer type.",163,null],[13,"F32","","32-bit floating point type.",163,null],[13,"F64","","64-bit floating point type.",163,null],[4,"Value","","The value of an entry on the DWARF stack.",null,null],[13,"Generic","","A generic value, which is address-sized and of unspecified…",164,null],[13,"I8","","A signed 8-bit integer value.",164,null],[13,"U8","","An unsigned 8-bit integer value.",164,null],[13,"I16","","A signed 16-bit integer value.",164,null],[13,"U16","","An unsigned 16-bit integer value.",164,null],[13,"I32","","A signed 32-bit integer value.",164,null],[13,"U32","","An unsigned 32-bit integer value.",164,null],[13,"I64","","A signed 64-bit integer value.",164,null],[13,"U64","","An unsigned 64-bit integer value.",164,null],[13,"F32","","A 32-bit floating point value.",164,null],[13,"F64","","A 64-bit floating point value.",164,null],[4,"Error","","An error that occurred when parsing.",null,null],[13,"Io","","An I/O error occurred while reading.",165,null],[13,"PcRelativePointerButSectionBaseIsUndefined","","Found a PC relative pointer, but the section base is…",165,null],[13,"TextRelativePointerButTextBaseIsUndefined","","Found a `.text` relative pointer, but the `.text` base is…",165,null],[13,"DataRelativePointerButDataBaseIsUndefined","","Found a data relative pointer, but the data base is…",165,null],[13,"FuncRelativePointerInBadContext","","Found a function relative pointer in a context that does…",165,null],[13,"CannotParseOmitPointerEncoding","","Cannot parse a pointer with a `DW_EH_PE_omit` encoding.",165,null],[13,"BadUnsignedLeb128","","An error parsing an unsigned LEB128 value.",165,null],[13,"BadSignedLeb128","","An error parsing a signed LEB128 value.",165,null],[13,"AbbreviationTagZero","","An abbreviation declared that its tag is zero, but zero is…",165,null],[13,"AttributeFormZero","","An attribute specification declared that its form is zero,…",165,null],[13,"BadHasChildren","","The abbreviation\'s has-children byte was not one of…",165,null],[13,"BadLength","","The specified length is impossible.",165,null],[13,"UnknownForm","","Found an unknown `DW_FORM_*` type.",165,null],[13,"ExpectedZero","","Expected a zero, found something else.",165,null],[13,"DuplicateAbbreviationCode","","Found an abbreviation code that has already been used.",165,null],[13,"DuplicateArange","","Found a duplicate arange.",165,null],[13,"UnknownReservedLength","","Found an unknown reserved length value.",165,null],[13,"UnknownVersion","","Found an unknown DWARF version.",165,null],[13,"UnknownAbbreviation","","Found a record with an unknown abbreviation code.",165,null],[13,"UnexpectedEof","","Hit the end of input before it was expected.",165,null],[13,"UnexpectedNull","","Read a null entry before it was expected.",165,null],[13,"UnknownStandardOpcode","","Found an unknown standard opcode.",165,null],[13,"UnknownExtendedOpcode","","Found an unknown extended opcode.",165,null],[13,"UnsupportedAddressSize","","The specified address size is not supported.",165,null],[13,"UnsupportedOffsetSize","","The specified offset size is not supported.",165,null],[13,"UnsupportedFieldSize","","The specified field size is not supported.",165,null],[13,"MinimumInstructionLengthZero","","The minimum instruction length must not be zero.",165,null],[13,"MaximumOperationsPerInstructionZero","","The maximum operations per instruction must not be zero.",165,null],[13,"LineRangeZero","","The line range must not be zero.",165,null],[13,"OpcodeBaseZero","","The opcode base must not be zero.",165,null],[13,"BadUtf8","","Found an invalid UTF-8 string.",165,null],[13,"NotCieId","","Expected to find the CIE ID, but found something else.",165,null],[13,"NotCiePointer","","Expected to find a pointer to a CIE, but found the CIE ID…",165,null],[13,"NotFdePointer","","Expected to find a pointer to an FDE, but found a CIE…",165,null],[13,"BadBranchTarget","","Invalid branch target for a DW_OP_bra or DW_OP_skip.",165,null],[13,"InvalidPushObjectAddress","","DW_OP_push_object_address used but no address passed in.",165,null],[13,"NotEnoughStackItems","","Not enough items on the stack when evaluating an expression.",165,null],[13,"TooManyIterations","","Too many iterations to compute the expression.",165,null],[13,"InvalidExpression","","An unrecognized operation was found while parsing a DWARF…",165,null],[13,"UnsupportedEvaluation","","An unsupported operation was found while evaluating a…",165,null],[13,"InvalidPiece","","The expression had a piece followed by an expression…",165,null],[13,"InvalidExpressionTerminator","","An expression-terminating operation was followed by…",165,null],[13,"DivisionByZero","","Division or modulus by zero when evaluating an expression.",165,null],[13,"TypeMismatch","","An expression operation used mismatching types.",165,null],[13,"IntegralTypeRequired","","An expression operation required an integral type but saw…",165,null],[13,"UnsupportedTypeOperation","","An expression operation used types that are not supported.",165,null],[13,"InvalidShiftExpression","","The shift value in an expression must be a non-negative…",165,null],[13,"UnknownCallFrameInstruction","","An unknown DW_CFA_* instruction.",165,null],[13,"InvalidAddressRange","","The end of an address range was before the beginning.",165,null],[13,"InvalidLocationAddressRange","","The end offset of a loc list entry was before the beginning.",165,null],[13,"CfiInstructionInInvalidContext","","Encountered a call frame instruction in a context in which…",165,null],[13,"PopWithEmptyStack","","When evaluating call frame instructions, found a…",165,null],[13,"NoUnwindInfoForAddress","","Do not have unwind info for the given address.",165,null],[13,"UnsupportedOffset","","An offset value was larger than the maximum supported value.",165,null],[13,"UnknownPointerEncoding","","The given pointer encoding is either unknown or invalid.",165,null],[13,"NoEntryAtGivenOffset","","Did not find an entry at the given offset.",165,null],[13,"OffsetOutOfBounds","","The given offset is out of bounds.",165,null],[13,"UnknownAugmentation","","Found an unknown CFI augmentation.",165,null],[13,"UnsupportedPointerEncoding","","We do not support the given pointer encoding yet.",165,null],[13,"UnsupportedRegister","","Registers larger than `u16` are not supported.",165,null],[13,"TooManyRegisterRules","","The CFI program defined more register rules than we have…",165,null],[13,"CfiStackFull","","Attempted to push onto the CFI stack, but it was already…",165,null],[13,"VariableLengthSearchTable","","The `.eh_frame_hdr` binary search table claims to be…",165,null],[13,"UnsupportedUnitType","","The `DW_UT_*` value for this unit is not supported yet.",165,null],[13,"UnsupportedAddressIndex","","Ranges using AddressIndex are not supported yet.",165,null],[13,"UnsupportedSegmentSize","","Nonzero segment selector sizes aren\'t supported yet.",165,null],[13,"MissingUnitDie","","A compilation unit or type unit is missing its top level…",165,null],[13,"UnsupportedAttributeForm","","A DIE attribute used an unsupported form.",165,null],[13,"MissingFileEntryFormatPath","","Missing DW_LNCT_path in file entry format.",165,null],[13,"ExpectedStringAttributeValue","","Expected an attribute value to be a string form.",165,null],[13,"InvalidImplicitConst","","`DW_FORM_implicit_const` used in an invalid context.",165,null],[11,"get_address","","Returns the address at the given `base` and `index`.",166,[[["debugaddrbase",3],["debugaddrindex",3]],["result",6]]],[11,"borrow","","Create a `DebugAddr` section that references the data in…",166,[[],["debugaddr",3]]],[11,"set_address_size","","Set the size of a target address in bytes.",167,[[]]],[11,"set_segment_size","","Set the size of a segment selector in bytes.",167,[[]]],[11,"new","","Construct a new `DebugFrame` instance from the data in the…",167,[[]]],[11,"new","","Constructs a new `EhFrameHdr` instance from the data in…",168,[[]]],[11,"parse","","Parses this `EhFrameHdr` to a `ParsedEhFrameHdr`.",168,[[["baseaddresses",3]],[["result",6],["parsedehframehdr",3]]]],[11,"eh_frame_ptr","","Returns the address of the binary\'s `.eh_frame` section.",169,[[],["pointer",4]]],[11,"table","","Retrieves the CFI binary search table, if there is one.",169,[[],[["ehhdrtable",3],["option",4]]]],[11,"lookup","","Probably returns a pointer to the FDE for the given address.",170,[[["baseaddresses",3]],[["result",6],["pointer",4]]]],[11,"pointer_to_offset","","Convert a `Pointer` to a section offset.",170,[[["pointer",4]],[["result",6],["ehframeoffset",3]]]],[11,"fde_for_address","","Returns a parsed FDE for the given address, or…",170,[[["ehframe",3],["baseaddresses",3]],[["result",6],["framedescriptionentry",3]]]],[11,"unwind_info_for_address","","Returns the frame unwind information for the given…",170,[[["ehframe",3],["uninitializedunwindcontext",3],["baseaddresses",3]],[["unwindtablerow",3],["result",6]]]],[11,"set_address_size","","Set the size of a target address in bytes.",171,[[]]],[11,"new","","Construct a new `EhFrame` instance from the data in the…",171,[[]]],[11,"set_eh_frame_hdr","","Set the `.eh_frame_hdr` section base address.",64,[[]]],[11,"set_eh_frame","","Set the `.eh_frame` section base address.",64,[[]]],[11,"set_text","","Set the `.text` section base address.",64,[[]]],[11,"set_got","","Set the `.got` section base address.",64,[[]]],[11,"next","","Advance the iterator to the next entry.",172,[[],[["option",4],["result",6]]]],[11,"offset","","Get the offset of this entry from the start of its…",173,[[]]],[11,"encoding","","Return the encoding parameters for this CIE.",173,[[],["encoding",3]]],[11,"address_size","","The size of addresses (in bytes) in this CIE.",173,[[]]],[11,"instructions","","Iterate over this CIE\'s initial instructions.",173,[[["baseaddresses",3]],["callframeinstructioniter",3]]],[11,"entry_len","","A constant that gives the number of bytes of the CIE…",173,[[]]],[11,"version","","A version number (see Section 7.23). This number is…",173,[[]]],[11,"augmentation","","Get the augmentation data, if any exists.",173,[[],[["augmentation",3],["option",4]]]],[11,"has_lsda","","True if this CIE\'s FDEs have a LSDA.",173,[[]]],[11,"lsda_encoding","","Return the encoding of the LSDA address for this CIE\'s FDEs.",173,[[],[["option",4],["dwehpe",3]]]],[11,"personality_with_encoding","","Return the encoding and address of the personality routine…",173,[[],["option",4]]],[11,"personality","","Return the address of the personality routine handler for…",173,[[],[["option",4],["pointer",4]]]],[11,"fde_address_encoding","","Return the encoding of the addresses for this CIE\'s FDEs.",173,[[],[["option",4],["dwehpe",3]]]],[11,"is_signal_trampoline","","True if this CIE\'s FDEs are trampolines for signal handlers.",173,[[]]],[11,"code_alignment_factor","","A constant that is factored out of all advance location…",173,[[]]],[11,"data_alignment_factor","","A constant that is factored out of certain offset…",173,[[]]],[11,"return_address_register","","An unsigned ... constant that indicates which column in…",173,[[],["register",3]]],[11,"parse","","Fully parse this FDE.",174,[[],[["result",6],["framedescriptionentry",3]]]],[11,"rows","","Return the table of unwind information for this FDE.",175,[[["uninitializedunwindcontext",3],["baseaddresses",3]],[["result",6],["unwindtable",3]]]],[11,"unwind_info_for_address","","Find the frame unwind information for the given address.",175,[[["uninitializedunwindcontext",3],["baseaddresses",3]],[["unwindtablerow",3],["result",6]]]],[11,"offset","","Get the offset of this entry from the start of its…",175,[[]]],[11,"cie","","Get a reference to this FDE\'s CIE.",175,[[],["commoninformationentry",3]]],[11,"entry_len","","A constant that gives the number of bytes of the header…",175,[[]]],[11,"instructions","","Iterate over this FDE\'s instructions.",175,[[["baseaddresses",3]],["callframeinstructioniter",3]]],[11,"initial_address","","The first address for which this entry has unwind…",175,[[]]],[11,"len","","The number of bytes of instructions that this entry has…",175,[[]]],[11,"contains","","Return `true` if the given address is within this FDE,…",175,[[]]],[11,"lsda","","The address of this FDE\'s language-specific data area…",175,[[],[["option",4],["pointer",4]]]],[11,"is_signal_trampoline","","Return true if this FDE\'s function is a trampoline for a…",175,[[]]],[11,"personality","","Return the address of the FDE\'s function\'s personality…",175,[[],[["option",4],["pointer",4]]]],[11,"new","","Construct a new call frame unwinding context.",176,[[],["uninitializedunwindcontext",3]]],[11,"initialize","","Run the CIE\'s initial instructions, creating and return an…",176,[[["commoninformationentry",3],["baseaddresses",3]],[["result",6],["unwindcontext",3]]]],[11,"new","","Construct a new `UnwindTable` for the given…",177,[[["uninitializedunwindcontext",3],["framedescriptionentry",3],["baseaddresses",3]],[["result",6],["unwindtable",3]]]],[11,"next_row","","Evaluate call frame instructions until the next row of the…",177,[[],[["result",6],["option",4]]]],[11,"into_current_row","","Returns the current row with the lifetime of the context.",177,[[],[["unwindtablerow",3],["option",4]]]],[11,"start_address","","Get the starting PC address that this row applies to.",178,[[]]],[11,"end_address","","Get the end PC address where this row\'s register rules…",178,[[]]],[11,"contains","","Return `true` if the given `address` is within this row\'s…",178,[[]]],[11,"saved_args_size","","Returns the amount of args currently on the stack.",178,[[]]],[11,"cfa","","Get the canonical frame address (CFA) recovery rule for…",178,[[],["cfarule",4]]],[11,"register","","Get the register recovery rule for the given register…",178,[[["register",3]],["registerrule",4]]],[11,"registers","","Iterate over all defined register `(number, rule)` pairs.",178,[[],["registerruleiter",3]]],[11,"next","","Parse the next call frame instruction.",179,[[],[["result",6],["option",4]]]],[11,"load","","Try to load the DWARF sections using the given loader…",66,[[],["result",4]]],[11,"load_sup","","Load the DWARF sections from the supplementary object file.",66,[[],["result",4]]],[11,"borrow","","Create a `Dwarf` structure that references the data in…",66,[[],["dwarf",3]]],[11,"sup","","Return a reference to the DWARF sections for supplementary…",66,[[],[["dwarf",3],["option",4]]]],[11,"units","","Iterate the unit headers in the `.debug_info` section.",66,[[],["debuginfounitheadersiter",3]]],[11,"unit","","Construct a new `Unit` from the given unit header.",66,[[["unitheader",3]],[["unit",3],["result",6]]]],[11,"type_units","","Iterate the type-unit headers in the `.debug_types` section.",66,[[],["debugtypesunitheadersiter",3]]],[11,"abbreviations","","Parse the abbreviations for a compilation unit.",66,[[["unitheader",3]],[["abbreviations",3],["result",6]]]],[11,"string_offset","","Return the string offset at the given index.",66,[[["debugstroffsetsindex",3],["unit",3]],[["result",6],["debugstroffset",3]]]],[11,"string","","Return the string at the given offset in `.debug_str`.",66,[[["debugstroffset",3]],["result",6]]],[11,"line_string","","Return the string at the given offset in `.debug_line_str`.",66,[[["debuglinestroffset",3]],["result",6]]],[11,"attr_string","","Return an attribute value as a string slice.",66,[[["attributevalue",4],["unit",3]],["result",6]]],[11,"address","","Return the address at the given index.",66,[[["debugaddrindex",3],["unit",3]],["result",6]]],[11,"attr_address","","Try to return an attribute value as an address.",66,[[["attributevalue",4],["unit",3]],[["option",4],["result",6]]]],[11,"ranges_offset_from_raw","","Return the range list offset for the given raw offset.",66,[[["rawrangelistsoffset",3],["unit",3]],["rangelistsoffset",3]]],[11,"ranges_offset","","Return the range list offset at the given index.",66,[[["debugrnglistsindex",3],["unit",3]],[["result",6],["rangelistsoffset",3]]]],[11,"ranges","","Iterate over the `RangeListEntry`s starting at the given…",66,[[["rangelistsoffset",3],["unit",3]],[["result",6],["rnglistiter",3]]]],[11,"raw_ranges","","Iterate over the `RawRngListEntry`ies starting at the…",66,[[["rangelistsoffset",3],["unit",3]],[["result",6],["rawrnglistiter",3]]]],[11,"attr_ranges_offset","","Try to return an attribute value as a range list offset.",66,[[["attributevalue",4],["unit",3]],[["result",6],["option",4]]]],[11,"attr_ranges","","Try to return an attribute value as a range list entry…",66,[[["attributevalue",4],["unit",3]],[["result",6],["option",4]]]],[11,"die_ranges","","Return an iterator for the address ranges of a…",66,[[["debugginginformationentry",3],["unit",3]],[["result",6],["rangeiter",3]]]],[11,"unit_ranges","","Return an iterator for the address ranges of a `Unit`.",66,[[["unit",3]],[["result",6],["rangeiter",3]]]],[11,"locations_offset","","Return the location list offset at the given index.",66,[[["debugloclistsindex",3],["unit",3]],[["locationlistsoffset",3],["result",6]]]],[11,"locations","","Iterate over the `LocationListEntry`s starting at the…",66,[[["locationlistsoffset",3],["unit",3]],[["result",6],["loclistiter",3]]]],[11,"raw_locations","","Iterate over the raw `LocationListEntry`s starting at the…",66,[[["locationlistsoffset",3],["unit",3]],[["rawloclistiter",3],["result",6]]]],[11,"attr_locations_offset","","Try to return an attribute value as a location list offset.",66,[[["attributevalue",4],["unit",3]],[["option",4],["result",6]]]],[11,"attr_locations","","Try to return an attribute value as a location list entry…",66,[[["attributevalue",4],["unit",3]],[["result",6],["option",4]]]],[11,"lookup_offset_id","","Call `Reader::lookup_offset_id` for each section, and…",66,[[["readeroffsetid",3]],["option",4]]],[11,"format_error","","Returns a string representation of the given error.",66,[[["error",4]],["string",3]]],[11,"new","","Construct a new `Unit` from the given unit header.",67,[[["dwarf",3],["unitheader",3]],["result",6]]],[11,"encoding","","Return the encoding parameters for this unit.",67,[[],["encoding",3]]],[11,"entry","","Read the `DebuggingInformationEntry` at the given offset.",67,[[["unitoffset",3]],[["debugginginformationentry",3],["result",6]]]],[11,"entries","","Navigate this unit\'s `DebuggingInformationEntry`s.",67,[[],["entriescursor",3]]],[11,"entries_at_offset","","Navigate this unit\'s `DebuggingInformationEntry`s starting…",67,[[["unitoffset",3]],[["result",6],["entriescursor",3]]]],[11,"entries_tree","","Navigate this unit\'s `DebuggingInformationEntry`s as a…",67,[[["unitoffset",3],["option",4]],[["result",6],["entriestree",3]]]],[11,"entries_raw","","Read the raw data that defines the Debugging Information…",67,[[["unitoffset",3],["option",4]],[["entriesraw",3],["result",6]]]],[11,"copy_relocated_attributes","","Copy attributes that are subject to relocation from…",67,[[["unit",3]]]],[11,"to_unit_offset","gimli","Convert an offset to be relative to the start of the given…",28,[[["unit",3]],[["option",4],["unitoffset",3]]]],[11,"to_unit_section_offset","gimli::read","Convert an offset to be relative to the start of the…",75,[[["unit",3]],["unitsectionoffset",4]]],[11,"next","","Advance the iterator to the next range.",180,[[],[["option",4],["result",6]]]],[11,"new","","Construct a new `EndianSlice` with the given slice and…",181,[[],["endianslice",3]]],[11,"slice","","Return a reference to the raw slice.",181,[[]]],[11,"split_at","","Split the slice in two at the given index, resulting in…",181,[[]]],[11,"find","","Find the first occurence of a byte in the slice, and…",181,[[],["option",4]]],[11,"offset_from","","Return the offset of the start of the slice relative to…",181,[[["endianslice",3]]]],[11,"to_string","","Converts the slice to a string using `str::from_utf8`.",181,[[],["result",6]]],[11,"to_string_lossy","","Converts the slice to a string, including invalid…",181,[[],["cow",4]]],[11,"range","","Take the given `start..end` range of the underlying slice…",181,[[["range",3]],["endianslice",3]]],[11,"range_from","","Take the given `start..` range of the underlying slice and…",181,[[["rangefrom",3]],["endianslice",3]]],[11,"range_to","","Take the given `..end` range of the underlying slice and…",181,[[["rangeto",3]],["endianslice",3]]],[11,"new","","Construct a new `DebugAbbrev` instance from the data in…",182,[[]]],[11,"abbreviations","","Parse the abbreviations at the given `offset` within this…",182,[[["debugabbrevoffset",3]],[["abbreviations",3],["result",6]]]],[11,"borrow","","Create a `DebugAbbrev` section that references the data in…",182,[[],["debugabbrev",3]]],[11,"get","","Get the abbreviation associated with the given code.",183,[[],[["abbreviation",3],["option",4]]]],[11,"code","","Get this abbreviation\'s code.",184,[[]]],[11,"tag","","Get this abbreviation\'s tag.",184,[[],["dwtag",3]]],[11,"has_children","","Return true if this abbreviation\'s type has children,…",184,[[]]],[11,"attributes","","Get this abbreviation\'s attributes.",184,[[]]],[11,"new","","Construct a new `AttributeSpecification` from the given…",185,[[["dwform",3],["dwat",3],["option",4]],["attributespecification",3]]],[11,"name","","Get the attribute\'s name.",185,[[],["dwat",3]]],[11,"form","","Get the attribute\'s form.",185,[[],["dwform",3]]],[11,"implicit_const_value","","Get the attribute\'s implicit const value.",185,[[],["option",4]]],[11,"size","","Return the size of the attribute, in bytes.",185,[[["unitheader",3]],["option",4]]],[11,"new","","Construct a new `DebugAranges` instance from the data in…",186,[[]]],[11,"headers","","Iterate the sets of entries in the `.debug_aranges` section.",186,[[],["arangeheaderiter",3]]],[11,"header","","Get the header at the given offset.",186,[[["debugarangesoffset",3]],[["result",6],["arangeheader",3]]]],[11,"borrow","","Create a `DebugAranges` section that references the data…",186,[[],["debugaranges",3]]],[11,"next","","Advance the iterator to the next header.",187,[[],[["result",6],["option",4]]]],[11,"offset","","Return the offset of this header within the…",188,[[],["debugarangesoffset",3]]],[11,"length","","Return the length of this set of entries, including the…",188,[[]]],[11,"encoding","","Return the encoding parameters for this set of entries.",188,[[],["encoding",3]]],[11,"segment_size","","Return the segment size for this set of entries.",188,[[]]],[11,"debug_info_offset","","Return the offset into the .debug_info section for this…",188,[[],["debuginfooffset",3]]],[11,"entries","","Return the arange entries in this set.",188,[[],["arangeentryiter",3]]],[11,"next","","Advance the iterator and return the next arange.",189,[[],[["result",6],["option",4]]]],[11,"segment","","Return the segment selector of this arange.",190,[[],["option",4]]],[11,"address","","Return the beginning address of this arange.",190,[[]]],[11,"length","","Return the length of this arange.",190,[[]]],[11,"range","","Return the range.",190,[[],["range",3]]],[11,"new","","Construct a new `DebugLine` instance from the data in the…",191,[[]]],[11,"program","","Parse the line number program whose header is at the given…",191,[[["debuglineoffset",3],["option",4]],[["result",6],["incompletelineprogram",3]]]],[11,"borrow","","Create a `DebugLine` section that references the data in…",191,[[],["debugline",3]]],[11,"header","","Get a reference to the header for this state machine\'s…",192,[[],["lineprogramheader",3]]],[11,"next_row","","Parse and execute the next instructions in the line number…",192,[[],[["result",6],["option",4]]]],[11,"next_instruction","","Advance the iterator and return the next instruction.",193,[[["lineprogramheader",3]],[["option",4],["result",6]]]],[11,"new","","Create a line number row in the initial state for the…",194,[[["lineprogramheader",3]]]],[11,"address","","\\\"The program-counter value corresponding to a machine…",194,[[]]],[11,"op_index","","An unsigned integer representing the index of an operation…",194,[[]]],[11,"file_index","","\\\"An unsigned integer indicating the identity of the source…",194,[[]]],[11,"file","","The source file corresponding to the current machine…",194,[[["lineprogramheader",3]],[["fileentry",3],["option",4]]]],[11,"line","","\\\"An unsigned integer indicating a source line number.…",194,[[],[["option",4],["nonzerou64",3]]]],[11,"column","","\\\"An unsigned integer indicating a column number within a…",194,[[],["columntype",4]]],[11,"is_stmt","","\\\"A boolean indicating that the current instruction is a…",194,[[]]],[11,"basic_block","","\\\"A boolean indicating that the current instruction is the…",194,[[]]],[11,"end_sequence","","\\\"A boolean indicating that the current address is that of…",194,[[]]],[11,"prologue_end","","\\\"A boolean indicating that the current address is one (of…",194,[[]]],[11,"epilogue_begin","","\\\"A boolean indicating that the current address is one (of…",194,[[]]],[11,"isa","","Tag for the current instruction set architecture.",194,[[]]],[11,"discriminator","","\\\"An unsigned integer identifying the block to which the…",194,[[]]],[11,"execute","","Execute the given instruction, and return true if a new…",194,[[["lineinstruction",4]]]],[11,"reset","","Perform any reset that was required after copying the…",194,[[["lineprogramheader",3]]]],[11,"offset","","Return the offset of the line number program header in the…",195,[[],["debuglineoffset",3]]],[11,"unit_length","","Return the length of the line number program and header,…",195,[[]]],[11,"encoding","","Return the encoding parameters for this header\'s line…",195,[[],["encoding",3]]],[11,"version","","Get the version of this header\'s line program.",195,[[]]],[11,"header_length","","Get the length of the encoded line number program header,…",195,[[]]],[11,"address_size","","Get the size in bytes of a target machine address.",195,[[]]],[11,"format","","Whether this line program is encoded in 64- or 32-bit DWARF.",195,[[],["format",4]]],[11,"line_encoding","","Get the line encoding parameters for this header\'s line…",195,[[],["lineencoding",3]]],[11,"minimum_instruction_length","","Get the minimum instruction length any instruction in this…",195,[[]]],[11,"maximum_operations_per_instruction","","Get the maximum number of operations each instruction in…",195,[[]]],[11,"default_is_stmt","","Get the default value of the `is_stmt` register for this…",195,[[]]],[11,"line_base","","Get the line base for this header\'s line program.",195,[[]]],[11,"line_range","","Get the line range for this header\'s line program.",195,[[]]],[11,"opcode_base","","Get opcode base for this header\'s line program.",195,[[]]],[11,"standard_opcode_lengths","","An array of `u8` that specifies the number of LEB128…",195,[[]]],[11,"directory_entry_format","","Get the format of a directory entry.",195,[[]]],[11,"include_directories","","Get the set of include directories for this header\'s line…",195,[[]]],[11,"directory","","The include directory with the given directory index.",195,[[],[["option",4],["attributevalue",4]]]],[11,"file_name_entry_format","","Get the format of a file name entry.",195,[[]]],[11,"file_has_timestamp","","Return true if the file entries may have valid timestamps.",195,[[]]],[11,"file_has_size","","Return true if the file entries may have valid sizes.",195,[[]]],[11,"file_has_md5","","Return true if the file name entry format contains an MD5…",195,[[]]],[11,"file_names","","Get the list of source files that appear in this header\'s…",195,[[]]],[11,"file","","The source file with the given file index.",195,[[],[["option",4],["fileentry",3]]]],[11,"raw_program_buf","","Get the raw, un-parsed `EndianSlice` containing this…",195,[[]]],[11,"instructions","","Iterate over the instructions in this header\'s line number…",195,[[],["lineinstructions",3]]],[11,"header","","Retrieve the `LineProgramHeader` for this program.",196,[[],["lineprogramheader",3]]],[11,"rows","","Construct a new `LineRows` for executing this program to…",196,[[],[["incompletelineprogram",3],["linerows",3]]]],[11,"sequences","","Execute the line number program, completing the…",196,[[],["result",6]]],[11,"header","","Retrieve the `LineProgramHeader` for this program.",197,[[],["lineprogramheader",3]]],[11,"resume_from","","Construct a new `LineRows` for executing the subset of the…",197,[[["linesequence",3]],[["linerows",3],["completelineprogram",3]]]],[11,"path_name","","A slice containing the full or relative path name of > a…",198,[[],["attributevalue",4]]],[11,"directory_index","","An unsigned LEB128 number representing the directory index…",198,[[]]],[11,"directory","","Get this file\'s directory.",198,[[["lineprogramheader",3]],[["option",4],["attributevalue",4]]]],[11,"timestamp","","The implementation-defined time of last modification of…",198,[[]]],[11,"size","","The size of the file in bytes, or 0 if not available.",198,[[]]],[11,"md5","","A 16-byte MD5 digest of the file contents.",198,[[]]],[11,"new","","Construct a new `DebugLoc` instance from the data in the…",199,[[]]],[11,"new","","Construct a new `DebugLocLists` instance from the data in…",200,[[]]],[11,"default_for_encoding_and_file","gimli","Returns a `DebugLocListsBase` with the default value of…",11,[[["dwarffiletype",4],["encoding",3]],["debugloclistsbase",3]]],[11,"new","gimli::read","Construct a new `LocationLists` instance from the data in…",201,[[["debugloc",3],["debugloclists",3]],["locationlists",3]]],[11,"borrow","","Create a `LocationLists` that references the data in `self`.",201,[[],["locationlists",3]]],[11,"locations","","Iterate over the `LocationListEntry`s starting at the…",201,[[["debugaddr",3],["encoding",3],["locationlistsoffset",3],["debugaddrbase",3]],[["result",6],["loclistiter",3]]]],[11,"locations_dwo","","Similar to `locations`, but with special handling for .dwo…",201,[[["debugaddr",3],["encoding",3],["locationlistsoffset",3],["debugaddrbase",3]],[["result",6],["loclistiter",3]]]],[11,"raw_locations","","Iterate over the raw `LocationListEntry`s starting at the…",201,[[["encoding",3],["locationlistsoffset",3]],[["rawloclistiter",3],["result",6]]]],[11,"raw_locations_dwo","","Similar to `raw_locations`, but with special handling for…",201,[[["encoding",3],["locationlistsoffset",3]],[["rawloclistiter",3],["result",6]]]],[11,"get_offset","","Returns the `.debug_loclists` offset at the given `base`…",201,[[["debugloclistsindex",3],["debugloclistsbase",3],["encoding",3]],[["locationlistsoffset",3],["result",6]]]],[11,"lookup_offset_id","","Call `Reader::lookup_offset_id` for each section, and…",201,[[["readeroffsetid",3]],["option",4]]],[11,"next","","Advance the iterator to the next location.",202,[[],[["result",6],["option",4]]]],[11,"next","","Advance the iterator to the next location.",203,[[],[["result",6],["option",4]]]],[11,"is_empty","","Return true if the piece is empty.",140,[[]]],[11,"parse","","Parse a single DWARF expression operation.",114,[[["encoding",3]],[["result",6],["operation",4]]]],[11,"evaluation","","Create an evaluation for this expression.",73,[[["encoding",3]],["evaluation",3]]],[11,"operations","","Return an iterator for the operations in the expression.",73,[[["encoding",3]],["operationiter",3]]],[11,"next","","Read the next operation in an expression.",204,[[],[["option",4],["result",6]]]],[11,"offset_from","","Return the current byte offset of the iterator.",204,[[["expression",3]]]],[11,"new","","Create a new DWARF expression evaluator.",205,[[["encoding",3]],["evaluation",3]]],[11,"set_initial_value","","Set an initial value to be pushed on the DWARF expression…",205,[[]]],[11,"set_object_address","","Set the enclosing object\'s address, as used by…",205,[[]]],[11,"set_max_iterations","","Set the maximum number of iterations to be allowed by the…",205,[[]]],[11,"result","","Get the result of this `Evaluation`.",205,[[],[["vec",3],["piece",3]]]],[11,"evaluate","","Evaluate a DWARF expression. This method should only ever…",205,[[],[["result",6],["evaluationresult",4]]]],[11,"resume_with_memory","","Resume the `Evaluation` with the provided memory `value`.…",205,[[["value",4]],[["result",6],["evaluationresult",4]]]],[11,"resume_with_register","","Resume the `Evaluation` with the provided `register`…",205,[[["value",4]],[["result",6],["evaluationresult",4]]]],[11,"resume_with_frame_base","","Resume the `Evaluation` with the provided `frame_base`.…",205,[[],[["result",6],["evaluationresult",4]]]],[11,"resume_with_tls","","Resume the `Evaluation` with the provided `value`. This…",205,[[],[["result",6],["evaluationresult",4]]]],[11,"resume_with_call_frame_cfa","","Resume the `Evaluation` with the provided `cfa`. This will…",205,[[],[["result",6],["evaluationresult",4]]]],[11,"resume_with_at_location","","Resume the `Evaluation` with the provided `bytes`. This…",205,[[],[["result",6],["evaluationresult",4]]]],[11,"resume_with_entry_value","","Resume the `Evaluation` with the provided `entry_value`.…",205,[[["value",4]],[["result",6],["evaluationresult",4]]]],[11,"resume_with_parameter_ref","","Resume the `Evaluation` with the provided…",205,[[],[["result",6],["evaluationresult",4]]]],[11,"resume_with_relocated_address","","Resume the `Evaluation` with the provided relocated…",205,[[],[["result",6],["evaluationresult",4]]]],[11,"resume_with_indexed_address","","Resume the `Evaluation` with the provided indexed…",205,[[],[["result",6],["evaluationresult",4]]]],[11,"resume_with_base_type","","Resume the `Evaluation` with the provided `base_type`.…",205,[[["valuetype",4]],[["result",6],["evaluationresult",4]]]],[11,"name","","Returns the name this entry refers to.",206,[[]]],[11,"unit_header_offset","","Returns the offset into the .debug_info section for the…",206,[[],["debuginfooffset",3]]],[11,"die_offset","","Returns the offset into the compilation unit for the…",206,[[],["unitoffset",3]]],[11,"new","","Construct a new `DebugPubNames` instance from the data in…",207,[[]]],[11,"items","","Iterate the pubnames in the `.debug_pubnames` section.",207,[[],["pubnamesentryiter",3]]],[11,"next","","Advance the iterator and return the next pubname.",208,[[],[["result",6],["option",4]]]],[11,"name","","Returns the name of the type this entry refers to.",209,[[]]],[11,"unit_header_offset","","Returns the offset into the .debug_info section for the…",209,[[],["debuginfooffset",3]]],[11,"die_offset","","Returns the offset into the compilation unit for the…",209,[[],["unitoffset",3]]],[11,"new","","Construct a new `DebugPubTypes` instance from the data in…",210,[[]]],[11,"items","","Iterate the pubtypes in the `.debug_pubtypes` section.",210,[[],["pubtypesentryiter",3]]],[11,"next","","Advance the iterator and return the next pubtype.",211,[[],[["result",6],["option",4]]]],[11,"new","","Construct a new `DebugRanges` instance from the data in…",212,[[]]],[11,"new","","Construct a new `DebugRngLists` instance from the data in…",213,[[]]],[11,"default_for_encoding_and_file","gimli","Returns a `DebugRngListsBase` with the default value of…",17,[[["dwarffiletype",4],["encoding",3]],["debugrnglistsbase",3]]],[11,"new","gimli::read","Construct a new `RangeLists` instance from the data in the…",214,[[["debugrnglists",3],["debugranges",3]],["rangelists",3]]],[11,"borrow","","Create a `RangeLists` that references the data in `self`.",214,[[],["rangelists",3]]],[11,"ranges","","Iterate over the `Range` list entries starting at the…",214,[[["debugaddr",3],["encoding",3],["debugaddrbase",3],["rangelistsoffset",3]],[["result",6],["rnglistiter",3]]]],[11,"raw_ranges","","Iterate over the `RawRngListEntry`ies starting at the…",214,[[["encoding",3],["rangelistsoffset",3]],[["result",6],["rawrnglistiter",3]]]],[11,"get_offset","","Returns the `.debug_rnglists` offset at the given `base`…",214,[[["debugrnglistsbase",3],["debugrnglistsindex",3],["encoding",3]],[["result",6],["rangelistsoffset",3]]]],[11,"lookup_offset_id","","Call `Reader::lookup_offset_id` for each section, and…",214,[[["readeroffsetid",3]],["option",4]]],[11,"next","","Advance the iterator to the next range.",215,[[],[["result",6],["option",4]]]],[11,"next","","Advance the iterator to the next range.",216,[[],[["option",4],["result",6]]]],[11,"new","","Construct a new `DebugStr` instance from the data in the…",217,[[]]],[11,"get_str","","Lookup a string from the `.debug_str` section by…",217,[[["debugstroffset",3]],["result",6]]],[11,"borrow","","Create a `DebugStr` section that references the data in…",217,[[],["debugstr",3]]],[11,"get_str_offset","","Returns the `.debug_str` offset at the given `base` and…",218,[[["debugstroffsetsbase",3],["format",4],["debugstroffsetsindex",3]],[["result",6],["debugstroffset",3]]]],[11,"borrow","","Create a `DebugStrOffsets` section that references the…",218,[[],["debugstroffsets",3]]],[11,"default_for_encoding_and_file","gimli","Returns a `DebugStrOffsetsBase` with the default value of…",20,[[["dwarffiletype",4],["encoding",3]],["debugstroffsetsbase",3]]],[11,"new","gimli::read","Construct a new `DebugLineStr` instance from the data in…",219,[[]]],[11,"get_str","","Lookup a string from the `.debug_line_str` section by…",219,[[["debuglinestroffset",3]],["result",6]]],[11,"borrow","","Create a `DebugLineStr` section that references the data…",219,[[],["debuglinestr",3]]],[11,"to_unit_offset","gimli","Convert an offset to be relative to the start of the given…",22,[[["unitheader",3]],[["option",4],["unitoffset",3]]]],[11,"to_unit_offset","","Convert an offset to be relative to the start of the given…",7,[[["unitheader",3]],[["option",4],["unitoffset",3]]]],[11,"to_debug_info_offset","gimli::read","Convert an offset to be relative to the start of the…",75,[[["unitheader",3]],[["option",4],["debuginfooffset",3]]]],[11,"to_debug_types_offset","","Convert an offset to be relative to the start of the…",75,[[["unitheader",3]],[["debugtypesoffset",3],["option",4]]]],[11,"new","","Construct a new `DebugInfo` instance from the data in the…",220,[[]]],[11,"units","","Iterate the units in this `.debug_info` section.",220,[[],["debuginfounitheadersiter",3]]],[11,"header_from_offset","","Get the UnitHeader located at offset from this .debug_info…",220,[[["debuginfooffset",3]],[["result",6],["unitheader",3]]]],[11,"borrow","","Create a `DebugInfo` section that references the data in…",220,[[],["debuginfo",3]]],[11,"next","","Advance the iterator to the next unit header.",221,[[],[["option",4],["result",6]]]],[11,"new","","Construct a new `UnitHeader`.",222,[[["debugabbrevoffset",3],["unitsectionoffset",4],["encoding",3],["unittype",4]]]],[11,"offset","","Get the offset of this unit within its section.",222,[[],["unitsectionoffset",4]]],[11,"size_of_header","","Return the serialized size of the common unit header for…",222,[[]]],[11,"unit_length","","Get the length of the debugging info for this compilation…",222,[[]]],[11,"length_including_self","","Get the length of the debugging info for this compilation…",222,[[]]],[11,"encoding","","Return the encoding parameters for this unit.",222,[[],["encoding",3]]],[11,"version","","Get the DWARF version of the debugging info for this…",222,[[]]],[11,"type_","","Get the UnitType of this unit.",222,[[],["unittype",4]]],[11,"debug_abbrev_offset","","The offset into the `.debug_abbrev` section for this…",222,[[],["debugabbrevoffset",3]]],[11,"address_size","","The size of addresses (in bytes) in this compilation unit.",222,[[]]],[11,"format","","Whether this compilation unit is encoded in 64- or 32-bit…",222,[[],["format",4]]],[11,"header_size","","The serialized size of the header for this compilation unit.",222,[[]]],[11,"range","","Get the underlying bytes for the supplied range.",222,[[["range",3],["unitoffset",3]],["result",6]]],[11,"range_from","","Get the underlying bytes for the supplied range.",222,[[["rangefrom",3],["unitoffset",3]],["result",6]]],[11,"range_to","","Get the underlying bytes for the supplied range.",222,[[["rangeto",3],["unitoffset",3]],["result",6]]],[11,"entry","","Read the `DebuggingInformationEntry` at the given offset.",222,[[["abbreviations",3],["unitoffset",3]],[["debugginginformationentry",3],["result",6]]]],[11,"entries","","Navigate this unit\'s `DebuggingInformationEntry`s.",222,[[["abbreviations",3]],["entriescursor",3]]],[11,"entries_at_offset","","Navigate this compilation unit\'s…",222,[[["abbreviations",3],["unitoffset",3]],[["entriescursor",3],["result",6]]]],[11,"entries_tree","","Navigate this unit\'s `DebuggingInformationEntry`s as a…",222,[[["abbreviations",3],["option",4],["unitoffset",3]],[["entriestree",3],["result",6]]]],[11,"entries_raw","","Read the raw data that defines the Debugging Information…",222,[[["abbreviations",3],["option",4],["unitoffset",3]],[["entriesraw",3],["result",6]]]],[11,"abbreviations","","Parse this unit\'s abbreviations.",222,[[["debugabbrev",3]],[["abbreviations",3],["result",6]]]],[11,"new","","Construct a new `DebuggingInformationEntry`.",223,[[["abbreviation",3],["unitheader",3],["unitoffset",3]]]],[11,"code","","Get this entry\'s code.",223,[[]]],[11,"offset","","Get this entry\'s offset.",223,[[],["unitoffset",3]]],[11,"tag","","Get this entry\'s `DW_TAG_whatever` tag.",223,[[],["dwtag",3]]],[11,"has_children","","Return true if this entry\'s type can have children, false…",223,[[]]],[11,"attrs","","Iterate over this entry\'s set of attributes.",223,[[],["attrsiter",3]]],[11,"attr","","Find the first attribute in this entry which has the given…",223,[[["dwat",3]],[["option",4],["result",6]]]],[11,"attr_value_raw","","Find the first attribute in this entry which has the given…",223,[[["dwat",3]],[["option",4],["result",6]]]],[11,"attr_value","","Find the first attribute in this entry which has the given…",223,[[["dwat",3]],[["option",4],["result",6]]]],[11,"name","","Get this attribute\'s name.",224,[[],["dwat",3]]],[11,"raw_value","","Get this attribute\'s raw value.",224,[[],["attributevalue",4]]],[11,"value","","Get this attribute\'s normalized value.",224,[[],["attributevalue",4]]],[11,"u8_value","","Try to convert this attribute\'s value to a u8.",224,[[],["option",4]]],[11,"u16_value","","Try to convert this attribute\'s value to a u16.",224,[[],["option",4]]],[11,"udata_value","","Try to convert this attribute\'s value to an unsigned…",224,[[],["option",4]]],[11,"sdata_value","","Try to convert this attribute\'s value to a signed integer.",224,[[],["option",4]]],[11,"offset_value","","Try to convert this attribute\'s value to an offset.",224,[[],["option",4]]],[11,"exprloc_value","","Try to convert this attribute\'s value to an expression or…",224,[[],[["expression",3],["option",4]]]],[11,"string_value","","Try to return this attribute\'s value as a string slice.",224,[[["debugstr",3]],["option",4]]],[11,"string_value_sup","","Try to return this attribute\'s value as a string slice.",224,[[["option",4],["debugstr",3]],["option",4]]],[11,"u8_value","","Try to convert this attribute\'s value to a u8.",162,[[],["option",4]]],[11,"u16_value","","Try to convert this attribute\'s value to a u16.",162,[[],["option",4]]],[11,"udata_value","","Try to convert this attribute\'s value to an unsigned…",162,[[],["option",4]]],[11,"sdata_value","","Try to convert this attribute\'s value to a signed integer.",162,[[],["option",4]]],[11,"offset_value","","Try to convert this attribute\'s value to an offset.",162,[[],["option",4]]],[11,"exprloc_value","","Try to convert this attribute\'s value to an expression or…",162,[[],[["expression",3],["option",4]]]],[11,"string_value","","Try to return this attribute\'s value as a string slice.",162,[[["debugstr",3]],["option",4]]],[11,"string_value_sup","","Try to return this attribute\'s value as a string slice.",162,[[["option",4],["debugstr",3]],["option",4]]],[11,"next","","Advance the iterator and return the next attribute.",225,[[],[["option",4],["result",6]]]],[11,"is_empty","","Return true if there is no more input.",226,[[]]],[11,"next_offset","","Return the unit offset at which the reader will read next.",226,[[],["unitoffset",3]]],[11,"next_depth","","Return the depth of the next entry.",226,[[]]],[11,"read_abbreviation","","Read an abbreviation code and lookup the corresponding…",226,[[],[["option",4],["result",6]]]],[11,"read_attribute","","Read an attribute.",226,[[["attributespecification",3]],[["result",6],["attribute",3]]]],[11,"current","","Get a reference to the entry that the cursor is currently…",227,[[],[["option",4],["debugginginformationentry",3]]]],[11,"next_entry","","Move the cursor to the next DIE in the tree.",227,[[],[["result",6],["option",4]]]],[11,"next_dfs","","Move the cursor to the next DIE in the tree in DFS order.",227,[[],[["option",4],["result",6]]]],[11,"next_sibling","","Move the cursor to the next sibling DIE of the current one.",227,[[],[["option",4],["result",6]]]],[11,"root","","Returns the root node of the tree.",228,[[],[["entriestreenode",3],["result",6]]]],[11,"entry","","Returns the current entry in the tree.",229,[[],["debugginginformationentry",3]]],[11,"children","","Create an iterator for the children of the current entry.",229,[[],["entriestreeiter",3]]],[11,"next","","Returns an `EntriesTreeNode` for the next child entry.",230,[[],[["result",6],["option",4]]]],[11,"new","","Construct a new `DebugTypes` instance from the data in the…",231,[[]]],[11,"borrow","","Create a `DebugTypes` section that references the data in…",231,[[],["debugtypes",3]]],[11,"units","","Iterate the type-units in this `.debug_types` section.",231,[[],["debugtypesunitheadersiter",3]]],[11,"next","","Advance the iterator to the next type unit header.",232,[[],[["option",4],["result",6]]]],[11,"bit_size","","The size in bits of a value for this type.",163,[[]]],[11,"from_encoding","","Construct a `ValueType` from the attributes of a base type…",163,[[["dwate",3]],[["option",4],["valuetype",4]]]],[11,"from_entry","","Construct a `ValueType` from a base type DIE.",163,[[["debugginginformationentry",3]],[["result",6],["option",4]]]],[11,"value_type","","Return the `ValueType` corresponding to this `Value`.",164,[[],["valuetype",4]]],[11,"parse","","Read a `Value` with the given `value_type` from a `Reader`.",164,[[["reader",8],["valuetype",4]],[["result",6],["value",4]]]],[11,"to_u64","","Convert a `Value` to a `u64`.",164,[[],["result",6]]],[11,"from_u64","","Create a `Value` with the given `value_type` from a `u64`…",164,[[["valuetype",4]],[["result",6],["value",4]]]],[11,"convert","","Convert a `Value` to the given `value_type`.",164,[[["valuetype",4]],[["result",6],["value",4]]]],[11,"reinterpret","","Reinterpret the bits in a `Value` as the given `value_type`.",164,[[["valuetype",4]],[["result",6],["value",4]]]],[11,"abs","","Perform an absolute value operation.",164,[[],[["result",6],["value",4]]]],[11,"neg","","Perform a negation operation.",164,[[],[["result",6],["value",4]]]],[11,"add","","Perform an addition operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"sub","","Perform a subtraction operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"mul","","Perform a multiplication operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"div","","Perform a division operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"rem","","Perform a remainder operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"not","","Perform a bitwise not operation.",164,[[],[["result",6],["value",4]]]],[11,"and","","Perform a bitwise and operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"or","","Perform a bitwise or operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"xor","","Perform a bitwise exclusive-or operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"shl","","Perform a shift left operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"shr","","Perform a logical shift right operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"shra","","Perform an arithmetic shift right operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"eq","","Perform the `==` relational operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"ge","","Perform the `>=` relational operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"gt","","Perform the `>` relational operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"le","","Perform the `<= relational operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"lt","","Perform the `< relational operation.",164,[[["value",4]],[["result",6],["value",4]]]],[11,"ne","","Perform the `!= relational operation.",164,[[["value",4]],[["result",6],["value",4]]]],[6,"LineNumberProgram","","Deprecated. `LineNumberProgram` has been renamed to…",null,null],[6,"StateMachine","","Deprecated. `StateMachine` has been renamed to `LineRows`.",null,null],[6,"Opcode","","Deprecated. `Opcode` has been renamed to `LineInstruction`.",null,null],[6,"OpcodesIter","","Deprecated. `OpcodesIter` has been renamed to…",null,null],[6,"LineNumberRow","","Deprecated. `LineNumberRow` has been renamed to `LineRow`.",null,null],[6,"LineNumberSequence","","Deprecated. `LineNumberSequence` has been renamed to…",null,null],[6,"LineNumberProgramHeader","","Deprecated. `LineNumberProgramHeader` has been renamed to…",null,null],[6,"IncompleteLineNumberProgram","","Deprecated. `IncompleteLineNumberProgram` has been renamed…",null,null],[6,"CompleteLineNumberProgram","","Deprecated. `CompleteLineNumberProgram` has been renamed…",null,null],[6,"EndianBuf","","`EndianBuf` has been renamed to `EndianSlice`. For ease of…",null,null],[6,"Result","","The result of a parse.",null,null],[8,"UnwindOffset","","An offset into an `UnwindSection`.",null,null],[10,"into","","Convert an `UnwindOffset<T>` into a `T`.",233,[[]]],[8,"UnwindSection","","A section holding unwind information: either…",null,null],[16,"Offset","","The offset type associated with this CFI section. Either…",234,null],[11,"entries","","Iterate over the `CommonInformationEntry`s and…",234,[[["baseaddresses",3]],["cfientriesiter",3]]],[11,"cie_from_offset","","Parse the `CommonInformationEntry` at the given offset.",234,[[["baseaddresses",3]],[["result",6],["commoninformationentry",3]]]],[11,"partial_fde_from_offset","","Parse the `PartialFrameDescriptionEntry` at the given…",234,[[["baseaddresses",3]],[["partialframedescriptionentry",3],["result",6]]]],[11,"fde_from_offset","","Parse the `FrameDescriptionEntry` at the given offset.",234,[[["baseaddresses",3]],[["result",6],["framedescriptionentry",3]]]],[11,"fde_for_address","","Find the `FrameDescriptionEntry` for the given address.",234,[[["baseaddresses",3]],[["result",6],["framedescriptionentry",3]]]],[11,"unwind_info_for_address","","Find the frame unwind information for the given address.",234,[[["uninitializedunwindcontext",3],["baseaddresses",3]],[["unwindtablerow",3],["result",6]]]],[8,"ReaderOffset","","A trait for offsets with a DWARF section.",null,null],[10,"from_u8","","Convert a u8 to an offset.",235,[[]]],[10,"from_u16","","Convert a u16 to an offset.",235,[[]]],[10,"from_i16","","Convert an i16 to an offset.",235,[[]]],[10,"from_u32","","Convert a u32 to an offset.",235,[[]]],[10,"from_u64","","Convert a u64 to an offset.",235,[[],["result",6]]],[10,"into_u64","","Convert an offset to a u64.",235,[[]]],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`.",235,[[]]],[10,"checked_sub","","Checked subtraction. Computes `self - other`.",235,[[],["option",4]]],[8,"Reader","","A trait for reading the data from a DWARF section.",null,null],[16,"Endian","","The endianity of bytes that are read.",236,null],[16,"Offset","","The type used for offsets and lengths.",236,null],[10,"endian","","Return the endianity of bytes that are read.",236,[[]]],[10,"len","","Return the number of bytes remaining.",236,[[]]],[10,"empty","","Set the number of bytes remaining to zero.",236,[[]]],[10,"truncate","","Set the number of bytes remaining to the specified length.",236,[[],["result",6]]],[10,"offset_from","","Return the offset of this reader\'s data relative to the…",236,[[]]],[10,"offset_id","","Return an identifier for the current reader offset.",236,[[],["readeroffsetid",3]]],[10,"lookup_offset_id","","Return the offset corresponding to the given `id` if it is…",236,[[["readeroffsetid",3]],["option",4]]],[10,"find","","Find the index of the first occurence of the given byte.…",236,[[],["result",6]]],[10,"skip","","Discard the specified number of bytes.",236,[[],["result",6]]],[10,"split","","Split a reader in two.",236,[[],["result",6]]],[10,"to_slice","","Return all remaining data as a clone-on-write slice.",236,[[],[["cow",4],["result",6]]]],[10,"to_string","","Convert all remaining data to a clone-on-write string.",236,[[],[["result",6],["cow",4]]]],[10,"to_string_lossy","","Convert all remaining data to a clone-on-write string,…",236,[[],[["result",6],["cow",4]]]],[10,"read_slice","","Read exactly `buf.len()` bytes into `buf`.",236,[[],["result",6]]],[11,"read_u8_array","","Read a u8 array.",236,[[],["result",6]]],[11,"is_empty","","Return true if the number of bytes remaining is zero.",236,[[]]],[11,"read_u8","","Read a u8.",236,[[],["result",6]]],[11,"read_i8","","Read an i8.",236,[[],["result",6]]],[11,"read_u16","","Read a u16.",236,[[],["result",6]]],[11,"read_i16","","Read an i16.",236,[[],["result",6]]],[11,"read_u32","","Read a u32.",236,[[],["result",6]]],[11,"read_i32","","Read an i32.",236,[[],["result",6]]],[11,"read_u64","","Read a u64.",236,[[],["result",6]]],[11,"read_i64","","Read an i64.",236,[[],["result",6]]],[11,"read_f32","","Read a f32.",236,[[],["result",6]]],[11,"read_f64","","Read a f64.",236,[[],["result",6]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",236,[[],["result",6]]],[11,"read_null_terminated_slice","","Read a null-terminated slice, and return it (excluding the…",236,[[],["result",6]]],[11,"read_uleb128","","Read an unsigned LEB128 encoded integer.",236,[[],["result",6]]],[11,"read_uleb128_u32","","Read an unsigned LEB128 encoded u32.",236,[[],["result",6]]],[11,"read_uleb128_u16","","Read an unsigned LEB128 encoded u16.",236,[[],["result",6]]],[11,"read_sleb128","","Read a signed LEB128 encoded integer.",236,[[],["result",6]]],[11,"read_initial_length","","Read an initial length field.",236,[[],["result",6]]],[11,"read_address","","Read an address-sized integer, and return it as a `u64`.",236,[[],["result",6]]],[11,"read_word","","Parse a word-sized integer according to the DWARF format.",236,[[["format",4]],["result",6]]],[11,"read_length","","Parse a word-sized section length according to the DWARF…",236,[[["format",4]],["result",6]]],[11,"read_offset","","Parse a word-sized section offset according to the DWARF…",236,[[["format",4]],["result",6]]],[11,"read_sized_offset","","Parse a section offset of the given size.",236,[[],["result",6]]],[8,"LineProgram","","A `LineProgram` provides access to a `LineProgramHeader`…",null,null],[10,"header","","Get a reference to the held `LineProgramHeader`.",237,[[],["lineprogramheader",3]]],[10,"add_file","","Add a file to the file table if necessary.",237,[[["fileentry",3]]]],[8,"Section","","A convenience trait for loading DWARF sections from object…",null,null],[10,"id","","Returns the section id for this type.",238,[[],["sectionid",4]]],[11,"section_name","","Returns the ELF section name for this type.",238,[[]]],[11,"dwo_section_name","","Returns the ELF section name (if any) for this type when…",238,[[],["option",4]]],[11,"load","","Try to load the section using the given loader function.",238,[[],["result",4]]],[10,"reader","","Returns the `Reader` for this section.",238,[[]]],[11,"lookup_offset_id","","Returns the `Reader` for this section.",238,[[["readeroffsetid",3]],["option",4]]],[11,"description","","A short description of the error.",165,[[]]],[6,"NativeEndian","gimli","The native endianity for the target platform.",null,null],[8,"Endianity","","A trait describing the endianity of some buffer.",null,null],[10,"is_big_endian","","Return true for big endian byte order.",239,[[]]],[11,"is_little_endian","","Return true for little endian byte order.",239,[[]]],[11,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",239,[[]]],[11,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",239,[[]]],[11,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",239,[[]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",239,[[]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",239,[[]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",239,[[]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",239,[[]]],[11,"read_f32","","Reads a 32 bit floating point number from `buf`.",239,[[]]],[11,"read_f64","","Reads a 32 bit floating point number from `buf`.",239,[[]]],[11,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",239,[[]]],[11,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",239,[[]]],[11,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",239,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"from","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"from","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"from","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"from","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"from","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"from","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"from","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"from","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"from","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"from","","",24,[[]]],[11,"from","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"from","","",25,[[]]],[11,"from","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"from","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"from","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"from","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"from","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"from","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"into","","",240,[[]]],[11,"try_into","","",240,[[],["result",4]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"from","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"into","","",241,[[]]],[11,"try_into","","",241,[[],["result",4]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"from","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"from","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"from","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"from","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"from","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"from","gimli::constants","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"from","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"from","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"from","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"from","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"from","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"from","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"from","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"from","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"from","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"from","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"from","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"from","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"from","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"from","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"from","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"from","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"from","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"from","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"from","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"from","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"to_string","","",55,[[],["string",3]]],[11,"from","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"from","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"from","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"from","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"from","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"to_string","","",60,[[],["string",3]]],[11,"from","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"from","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"from","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"from","gimli::read","",166,[[]]],[11,"from","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"from","","",167,[[]]],[11,"from","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"from","","",168,[[]]],[11,"from","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"from","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"from","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"from","","",171,[[]]],[11,"from","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"from","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"from","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"from","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"from","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"into","","",242,[[]]],[11,"try_into","","",242,[[],["result",4]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"from","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"from","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"from","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"from","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"into","","",176,[[]]],[11,"try_into","","",176,[[],["result",4]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"from","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"into","","",243,[[]]],[11,"try_into","","",243,[[],["result",4]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"from","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"into_iter","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"into","","",244,[[]]],[11,"try_into","","",244,[[],["result",4]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"from","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"into","","",178,[[]]],[11,"try_into","","",178,[[],["result",4]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"from","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"into","","",179,[[]]],[11,"try_into","","",179,[[],["result",4]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"from","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"into","","",181,[[]]],[11,"try_into","","",181,[[],["result",4]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"from","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"from","","",182,[[]]],[11,"from","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"into","","",182,[[]]],[11,"try_into","","",182,[[],["result",4]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"from","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"into","","",183,[[]]],[11,"try_into","","",183,[[],["result",4]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"from","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"into","","",184,[[]]],[11,"try_into","","",184,[[],["result",4]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"from","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"into","","",185,[[]]],[11,"try_into","","",185,[[],["result",4]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"from","","",186,[[]]],[11,"from","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"into","","",186,[[]]],[11,"try_into","","",186,[[],["result",4]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"from","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"into","","",187,[[]]],[11,"try_into","","",187,[[],["result",4]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"from","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"into","","",188,[[]]],[11,"try_into","","",188,[[],["result",4]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"from","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"into","","",189,[[]]],[11,"try_into","","",189,[[],["result",4]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"from","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"into","","",190,[[]]],[11,"try_into","","",190,[[],["result",4]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"from","","",191,[[]]],[11,"from","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"into","","",191,[[]]],[11,"try_into","","",191,[[],["result",4]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"from","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"into","","",192,[[]]],[11,"try_into","","",192,[[],["result",4]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"from","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"into","","",193,[[]]],[11,"try_into","","",193,[[],["result",4]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"from","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"into","","",194,[[]]],[11,"try_into","","",194,[[],["result",4]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"from","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"from","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"into","","",195,[[]]],[11,"try_into","","",195,[[],["result",4]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"from","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"into","","",196,[[]]],[11,"try_into","","",196,[[],["result",4]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"from","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"into","","",197,[[]]],[11,"try_into","","",197,[[],["result",4]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"from","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"into","","",198,[[]]],[11,"try_into","","",198,[[],["result",4]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"from","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"from","","",199,[[]]],[11,"from","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"into","","",199,[[]]],[11,"try_into","","",199,[[],["result",4]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"from","","",200,[[]]],[11,"from","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"into","","",200,[[]]],[11,"try_into","","",200,[[],["result",4]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"from","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"into","","",201,[[]]],[11,"try_into","","",201,[[],["result",4]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"from","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"into","","",202,[[]]],[11,"try_into","","",202,[[],["result",4]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"into","","",203,[[]]],[11,"try_into","","",203,[[],["result",4]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"from","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"from","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"from","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"into","","",204,[[]]],[11,"try_into","","",204,[[],["result",4]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"from","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"into","","",205,[[]]],[11,"try_into","","",205,[[],["result",4]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"into","","",206,[[]]],[11,"try_into","","",206,[[],["result",4]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"from","","",207,[[]]],[11,"from","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"into","","",207,[[]]],[11,"try_into","","",207,[[],["result",4]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"from","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"into","","",208,[[]]],[11,"try_into","","",208,[[],["result",4]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"from","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"into","","",209,[[]]],[11,"try_into","","",209,[[],["result",4]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"from","","",210,[[]]],[11,"from","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"into","","",210,[[]]],[11,"try_into","","",210,[[],["result",4]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"from","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"into","","",211,[[]]],[11,"try_into","","",211,[[],["result",4]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"from","","",212,[[]]],[11,"from","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"into","","",212,[[]]],[11,"try_into","","",212,[[],["result",4]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"from","","",213,[[]]],[11,"from","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"into","","",213,[[]]],[11,"try_into","","",213,[[],["result",4]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"from","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"into","","",214,[[]]],[11,"try_into","","",214,[[],["result",4]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"from","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"into","","",215,[[]]],[11,"try_into","","",215,[[],["result",4]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"into","","",216,[[]]],[11,"try_into","","",216,[[],["result",4]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"from","","",217,[[]]],[11,"from","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"into","","",217,[[]]],[11,"try_into","","",217,[[],["result",4]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"from","","",218,[[]]],[11,"from","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"into","","",218,[[]]],[11,"try_into","","",218,[[],["result",4]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"from","","",219,[[]]],[11,"from","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"into","","",219,[[]]],[11,"try_into","","",219,[[],["result",4]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"from","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"from","","",220,[[]]],[11,"from","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"into","","",220,[[]]],[11,"try_into","","",220,[[],["result",4]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"from","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"into","","",221,[[]]],[11,"try_into","","",221,[[],["result",4]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"from","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"into","","",222,[[]]],[11,"try_into","","",222,[[],["result",4]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"from","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"into","","",223,[[]]],[11,"try_into","","",223,[[],["result",4]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"from","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"into","","",224,[[]]],[11,"try_into","","",224,[[],["result",4]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"from","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"into","","",225,[[]]],[11,"try_into","","",225,[[],["result",4]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"from","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"into","","",226,[[]]],[11,"try_into","","",226,[[],["result",4]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"from","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"into","","",227,[[]]],[11,"try_into","","",227,[[],["result",4]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"from","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"into","","",228,[[]]],[11,"try_into","","",228,[[],["result",4]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"from","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"into","","",229,[[]]],[11,"try_into","","",229,[[],["result",4]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"from","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"into","","",230,[[]]],[11,"try_into","","",230,[[],["result",4]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"from","","",231,[[]]],[11,"from","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"into","","",231,[[]]],[11,"try_into","","",231,[[],["result",4]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"from","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"into","","",232,[[]]],[11,"try_into","","",232,[[],["result",4]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"from","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"from","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"from","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"from","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"from","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"from","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"to_string","","",101,[[],["string",3]]],[11,"from","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"from","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"from","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"from","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"from","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"from","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"from","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"from","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"from","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"from","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"from","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"to_string","","",165,[[],["string",3]]],[11,"is_big_endian","gimli","",31,[[]]],[11,"is_big_endian","","",241,[[]]],[11,"is_big_endian","","",240,[[]]],[11,"into","","",24,[[]]],[11,"into","","",25,[[]]],[11,"endian","gimli::read","",181,[[]]],[11,"len","","",181,[[]]],[11,"is_empty","","",181,[[]]],[11,"empty","","",181,[[]]],[11,"truncate","","",181,[[],["result",6]]],[11,"offset_from","","",181,[[]]],[11,"offset_id","","",181,[[],["readeroffsetid",3]]],[11,"lookup_offset_id","","",181,[[["readeroffsetid",3]],["option",4]]],[11,"find","","",181,[[],["result",6]]],[11,"skip","","",181,[[],["result",6]]],[11,"split","","",181,[[],["result",6]]],[11,"to_slice","","",181,[[],[["cow",4],["result",6]]]],[11,"to_string","","",181,[[],[["result",6],["cow",4]]]],[11,"to_string_lossy","","",181,[[],[["result",6],["cow",4]]]],[11,"read_slice","","",181,[[],["result",6]]],[11,"header","","",196,[[],["lineprogramheader",3]]],[11,"add_file","","",196,[[["fileentry",3]]]],[11,"id","","",166,[[],["sectionid",4]]],[11,"reader","","",166,[[]]],[11,"id","","",167,[[],["sectionid",4]]],[11,"reader","","",167,[[]]],[11,"id","","",168,[[],["sectionid",4]]],[11,"reader","","",168,[[]]],[11,"id","","",171,[[],["sectionid",4]]],[11,"reader","","",171,[[]]],[11,"id","","",182,[[],["sectionid",4]]],[11,"reader","","",182,[[]]],[11,"id","","",186,[[],["sectionid",4]]],[11,"reader","","",186,[[]]],[11,"id","","",191,[[],["sectionid",4]]],[11,"reader","","",191,[[]]],[11,"id","","",199,[[],["sectionid",4]]],[11,"reader","","",199,[[]]],[11,"id","","",200,[[],["sectionid",4]]],[11,"reader","","",200,[[]]],[11,"id","","",207,[[],["sectionid",4]]],[11,"reader","","",207,[[]]],[11,"id","","",210,[[],["sectionid",4]]],[11,"reader","","",210,[[]]],[11,"id","","",212,[[],["sectionid",4]]],[11,"reader","","",212,[[]]],[11,"id","","",213,[[],["sectionid",4]]],[11,"reader","","",213,[[]]],[11,"id","","",217,[[],["sectionid",4]]],[11,"reader","","",217,[[]]],[11,"id","","",218,[[],["sectionid",4]]],[11,"reader","","",218,[[]]],[11,"id","","",219,[[],["sectionid",4]]],[11,"reader","","",219,[[]]],[11,"id","","",220,[[],["sectionid",4]]],[11,"reader","","",220,[[]]],[11,"id","","",231,[[],["sectionid",4]]],[11,"reader","","",231,[[]]],[11,"deref","","",181,[[]]],[11,"from","gimli","",24,[[]]],[11,"from","","",25,[[]]],[11,"from","","",28,[[["debuginfooffset",3]]]],[11,"from","","",28,[[["debugtypesoffset",3]]]],[11,"from","gimli::read","",166,[[]]],[11,"from","","",167,[[]]],[11,"from","","",168,[[]]],[11,"from","","",171,[[]]],[11,"from","","",182,[[]]],[11,"from","","",186,[[]]],[11,"from","","",191,[[]]],[11,"from","","",199,[[]]],[11,"from","","",200,[[]]],[11,"from","","",207,[[]]],[11,"from","","",210,[[]]],[11,"from","","",212,[[]]],[11,"from","","",213,[[]]],[11,"from","","",217,[[]]],[11,"from","","",218,[[]]],[11,"from","","",219,[[]]],[11,"from","","",220,[[]]],[11,"from","","",231,[[]]],[11,"fmt","gimli","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","gimli::constants","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","gimli","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",241,[[["formatter",3]],["result",6]]],[11,"fmt","","",240,[[["formatter",3]],["result",6]]],[11,"fmt","gimli::read","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",242,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",243,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",244,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","","",212,[[["formatter",3]],["result",6]]],[11,"fmt","","",213,[[["formatter",3]],["result",6]]],[11,"fmt","","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",216,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",219,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",220,[[["formatter",3]],["result",6]]],[11,"fmt","","",221,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",222,[[["formatter",3]],["result",6]]],[11,"fmt","","",223,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",226,[[["formatter",3]],["result",6]]],[11,"fmt","","",227,[[["formatter",3]],["result",6]]],[11,"fmt","","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",229,[[["formatter",3]],["result",6]]],[11,"fmt","","",230,[[["formatter",3]],["result",6]]],[11,"fmt","","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","gimli::constants","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","gimli::read","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","gimli","",27,[[["format",4]]]],[11,"eq","","",0,[[["encoding",3]]]],[11,"ne","","",0,[[["encoding",3]]]],[11,"eq","","",1,[[["lineencoding",3]]]],[11,"ne","","",1,[[["lineencoding",3]]]],[11,"eq","","",2,[[["register",3]]]],[11,"ne","","",2,[[["register",3]]]],[11,"eq","","",3,[[["debugabbrevoffset",3]]]],[11,"ne","","",3,[[["debugabbrevoffset",3]]]],[11,"eq","","",4,[[["debugaddrbase",3]]]],[11,"ne","","",4,[[["debugaddrbase",3]]]],[11,"eq","","",5,[[["debugaddrindex",3]]]],[11,"ne","","",5,[[["debugaddrindex",3]]]],[11,"eq","","",6,[[["debugarangesoffset",3]]]],[11,"ne","","",6,[[["debugarangesoffset",3]]]],[11,"eq","","",7,[[["debuginfooffset",3]]]],[11,"ne","","",7,[[["debuginfooffset",3]]]],[11,"eq","","",8,[[["debuglineoffset",3]]]],[11,"ne","","",8,[[["debuglineoffset",3]]]],[11,"eq","","",9,[[["debuglinestroffset",3]]]],[11,"ne","","",9,[[["debuglinestroffset",3]]]],[11,"eq","","",10,[[["locationlistsoffset",3]]]],[11,"ne","","",10,[[["locationlistsoffset",3]]]],[11,"eq","","",11,[[["debugloclistsbase",3]]]],[11,"ne","","",11,[[["debugloclistsbase",3]]]],[11,"eq","","",12,[[["debugloclistsindex",3]]]],[11,"ne","","",12,[[["debugloclistsindex",3]]]],[11,"eq","","",13,[[["debugmacinfooffset",3]]]],[11,"ne","","",13,[[["debugmacinfooffset",3]]]],[11,"eq","","",14,[[["debugmacrooffset",3]]]],[11,"ne","","",14,[[["debugmacrooffset",3]]]],[11,"eq","","",15,[[["rawrangelistsoffset",3]]]],[11,"ne","","",15,[[["rawrangelistsoffset",3]]]],[11,"eq","","",16,[[["rangelistsoffset",3]]]],[11,"ne","","",16,[[["rangelistsoffset",3]]]],[11,"eq","","",17,[[["debugrnglistsbase",3]]]],[11,"ne","","",17,[[["debugrnglistsbase",3]]]],[11,"eq","","",18,[[["debugrnglistsindex",3]]]],[11,"ne","","",18,[[["debugrnglistsindex",3]]]],[11,"eq","","",19,[[["debugstroffset",3]]]],[11,"ne","","",19,[[["debugstroffset",3]]]],[11,"eq","","",20,[[["debugstroffsetsbase",3]]]],[11,"ne","","",20,[[["debugstroffsetsbase",3]]]],[11,"eq","","",21,[[["debugstroffsetsindex",3]]]],[11,"ne","","",21,[[["debugstroffsetsindex",3]]]],[11,"eq","","",22,[[["debugtypesoffset",3]]]],[11,"ne","","",22,[[["debugtypesoffset",3]]]],[11,"eq","","",23,[[["debugtypesignature",3]]]],[11,"ne","","",23,[[["debugtypesignature",3]]]],[11,"eq","","",24,[[["debugframeoffset",3]]]],[11,"ne","","",24,[[["debugframeoffset",3]]]],[11,"eq","","",25,[[["ehframeoffset",3]]]],[11,"ne","","",25,[[["ehframeoffset",3]]]],[11,"eq","","",28,[[["unitsectionoffset",4]]]],[11,"ne","","",28,[[["unitsectionoffset",4]]]],[11,"eq","","",29,[[["sectionid",4]]]],[11,"eq","","",26,[[["dwoid",3]]]],[11,"ne","","",26,[[["dwoid",3]]]],[11,"eq","","",30,[[["dwarffiletype",4]]]],[11,"eq","gimli::constants","",35,[[["dwut",3]]]],[11,"ne","","",35,[[["dwut",3]]]],[11,"eq","","",36,[[["dwcfa",3]]]],[11,"ne","","",36,[[["dwcfa",3]]]],[11,"eq","","",37,[[["dwchildren",3]]]],[11,"ne","","",37,[[["dwchildren",3]]]],[11,"eq","","",38,[[["dwtag",3]]]],[11,"ne","","",38,[[["dwtag",3]]]],[11,"eq","","",39,[[["dwat",3]]]],[11,"ne","","",39,[[["dwat",3]]]],[11,"eq","","",40,[[["dwform",3]]]],[11,"ne","","",40,[[["dwform",3]]]],[11,"eq","","",41,[[["dwate",3]]]],[11,"ne","","",41,[[["dwate",3]]]],[11,"eq","","",42,[[["dwlle",3]]]],[11,"ne","","",42,[[["dwlle",3]]]],[11,"eq","","",43,[[["dwds",3]]]],[11,"ne","","",43,[[["dwds",3]]]],[11,"eq","","",44,[[["dwend",3]]]],[11,"ne","","",44,[[["dwend",3]]]],[11,"eq","","",45,[[["dwaccess",3]]]],[11,"ne","","",45,[[["dwaccess",3]]]],[11,"eq","","",46,[[["dwvis",3]]]],[11,"ne","","",46,[[["dwvis",3]]]],[11,"eq","","",47,[[["dwvirtuality",3]]]],[11,"ne","","",47,[[["dwvirtuality",3]]]],[11,"eq","","",48,[[["dwlang",3]]]],[11,"ne","","",48,[[["dwlang",3]]]],[11,"eq","","",49,[[["dwaddr",3]]]],[11,"ne","","",49,[[["dwaddr",3]]]],[11,"eq","","",50,[[["dwid",3]]]],[11,"ne","","",50,[[["dwid",3]]]],[11,"eq","","",51,[[["dwcc",3]]]],[11,"ne","","",51,[[["dwcc",3]]]],[11,"eq","","",52,[[["dwinl",3]]]],[11,"ne","","",52,[[["dwinl",3]]]],[11,"eq","","",53,[[["dword",3]]]],[11,"ne","","",53,[[["dword",3]]]],[11,"eq","","",54,[[["dwdsc",3]]]],[11,"ne","","",54,[[["dwdsc",3]]]],[11,"eq","","",55,[[["dwidx",3]]]],[11,"ne","","",55,[[["dwidx",3]]]],[11,"eq","","",56,[[["dwdefaulted",3]]]],[11,"ne","","",56,[[["dwdefaulted",3]]]],[11,"eq","","",57,[[["dwlns",3]]]],[11,"ne","","",57,[[["dwlns",3]]]],[11,"eq","","",58,[[["dwlne",3]]]],[11,"ne","","",58,[[["dwlne",3]]]],[11,"eq","","",59,[[["dwlnct",3]]]],[11,"ne","","",59,[[["dwlnct",3]]]],[11,"eq","","",60,[[["dwmacro",3]]]],[11,"ne","","",60,[[["dwmacro",3]]]],[11,"eq","","",61,[[["dwrle",3]]]],[11,"ne","","",61,[[["dwrle",3]]]],[11,"eq","","",62,[[["dwop",3]]]],[11,"ne","","",62,[[["dwop",3]]]],[11,"eq","","",63,[[["dwehpe",3]]]],[11,"ne","","",63,[[["dwehpe",3]]]],[11,"eq","gimli","",31,[[["runtimeendian",4]]]],[11,"eq","","",241,[[["littleendian",3]]]],[11,"eq","","",240,[[["bigendian",3]]]],[11,"eq","gimli::read","",167,[[["debugframe",3]]]],[11,"ne","","",167,[[["debugframe",3]]]],[11,"eq","","",168,[[["ehframehdr",3]]]],[11,"ne","","",168,[[["ehframehdr",3]]]],[11,"eq","","",171,[[["ehframe",3]]]],[11,"ne","","",171,[[["ehframe",3]]]],[11,"eq","","",64,[[["baseaddresses",3]]]],[11,"ne","","",64,[[["baseaddresses",3]]]],[11,"eq","","",65,[[["sectionbaseaddresses",3]]]],[11,"ne","","",65,[[["sectionbaseaddresses",3]]]],[11,"eq","","",76,[[["cieorfde",4]]]],[11,"ne","","",76,[[["cieorfde",4]]]],[11,"eq","","",242,[[["augmentation",3]]]],[11,"ne","","",242,[[["augmentation",3]]]],[11,"eq","","",173,[[["commoninformationentry",3]]]],[11,"ne","","",173,[[["commoninformationentry",3]]]],[11,"eq","","",174,[[["partialframedescriptionentry",3]]]],[11,"ne","","",174,[[["partialframedescriptionentry",3]]]],[11,"eq","","",175,[[["framedescriptionentry",3]]]],[11,"ne","","",175,[[["framedescriptionentry",3]]]],[11,"eq","","",243,[[["unwindcontext",3]]]],[11,"eq","","",178,[[["unwindtablerow",3]]]],[11,"ne","","",178,[[["unwindtablerow",3]]]],[11,"eq","","",77,[[["cfarule",4]]]],[11,"ne","","",77,[[["cfarule",4]]]],[11,"eq","","",79,[[["registerrule",4]]]],[11,"ne","","",79,[[["registerrule",4]]]],[11,"eq","","",80,[[["callframeinstruction",4]]]],[11,"ne","","",80,[[["callframeinstruction",4]]]],[11,"eq","","",100,[[["pointer",4]]]],[11,"ne","","",100,[[["pointer",4]]]],[11,"eq","","",181,[[["endianslice",3]]]],[11,"ne","","",181,[[["endianslice",3]]]],[11,"eq","","",68,[[["readeroffsetid",3]]]],[11,"ne","","",68,[[["readeroffsetid",3]]]],[11,"eq","","",184,[[["abbreviation",3]]]],[11,"ne","","",184,[[["abbreviation",3]]]],[11,"eq","","",185,[[["attributespecification",3]]]],[11,"ne","","",185,[[["attributespecification",3]]]],[11,"eq","","",188,[[["arangeheader",3]]]],[11,"ne","","",188,[[["arangeheader",3]]]],[11,"eq","","",190,[[["arangeentry",3]]]],[11,"ne","","",190,[[["arangeentry",3]]]],[11,"eq","","",101,[[["lineinstruction",4]]]],[11,"ne","","",101,[[["lineinstruction",4]]]],[11,"eq","","",194,[[["linerow",3]]]],[11,"ne","","",194,[[["linerow",3]]]],[11,"eq","","",102,[[["columntype",4]]]],[11,"ne","","",102,[[["columntype",4]]]],[11,"eq","","",195,[[["lineprogramheader",3]]]],[11,"ne","","",195,[[["lineprogramheader",3]]]],[11,"eq","","",196,[[["incompletelineprogram",3]]]],[11,"ne","","",196,[[["incompletelineprogram",3]]]],[11,"eq","","",197,[[["completelineprogram",3]]]],[11,"ne","","",197,[[["completelineprogram",3]]]],[11,"eq","","",198,[[["fileentry",3]]]],[11,"ne","","",198,[[["fileentry",3]]]],[11,"eq","","",70,[[["fileentryformat",3]]]],[11,"ne","","",70,[[["fileentryformat",3]]]],[11,"eq","","",71,[[["locationlistentry",3]]]],[11,"ne","","",71,[[["locationlistentry",3]]]],[11,"eq","","",113,[[["diereference",4]]]],[11,"ne","","",113,[[["diereference",4]]]],[11,"eq","","",114,[[["operation",4]]]],[11,"ne","","",114,[[["operation",4]]]],[11,"eq","","",140,[[["location",4]]]],[11,"ne","","",140,[[["location",4]]]],[11,"eq","","",72,[[["piece",3]]]],[11,"ne","","",72,[[["piece",3]]]],[11,"eq","","",146,[[["evaluationresult",4]]]],[11,"ne","","",146,[[["evaluationresult",4]]]],[11,"eq","","",73,[[["expression",3]]]],[11,"ne","","",73,[[["expression",3]]]],[11,"eq","","",74,[[["range",3]]]],[11,"ne","","",74,[[["range",3]]]],[11,"eq","","",75,[[["unitoffset",3]]]],[11,"ne","","",75,[[["unitoffset",3]]]],[11,"eq","","",159,[[["unittype",4]]]],[11,"ne","","",159,[[["unittype",4]]]],[11,"eq","","",222,[[["unitheader",3]]]],[11,"ne","","",222,[[["unitheader",3]]]],[11,"eq","","",162,[[["attributevalue",4]]]],[11,"ne","","",162,[[["attributevalue",4]]]],[11,"eq","","",224,[[["attribute",3]]]],[11,"ne","","",224,[[["attribute",3]]]],[11,"eq","","",163,[[["valuetype",4]]]],[11,"eq","","",164,[[["value",4]]]],[11,"ne","","",164,[[["value",4]]]],[11,"eq","","",165,[[["error",4]]]],[11,"ne","","",165,[[["error",4]]]],[11,"cmp","gimli","",2,[[["register",3]],["ordering",4]]],[11,"cmp","","",7,[[["debuginfooffset",3]],["ordering",4]]],[11,"cmp","","",22,[[["debugtypesoffset",3]],["ordering",4]]],[11,"cmp","","",28,[[["unitsectionoffset",4]],["ordering",4]]],[11,"cmp","","",29,[[["sectionid",4]],["ordering",4]]],[11,"cmp","gimli::constants","",35,[[["dwut",3]],["ordering",4]]],[11,"cmp","","",36,[[["dwcfa",3]],["ordering",4]]],[11,"cmp","","",37,[[["dwchildren",3]],["ordering",4]]],[11,"cmp","","",38,[[["dwtag",3]],["ordering",4]]],[11,"cmp","","",39,[[["dwat",3]],["ordering",4]]],[11,"cmp","","",40,[[["dwform",3]],["ordering",4]]],[11,"cmp","","",41,[[["dwate",3]],["ordering",4]]],[11,"cmp","","",42,[[["dwlle",3]],["ordering",4]]],[11,"cmp","","",43,[[["dwds",3]],["ordering",4]]],[11,"cmp","","",44,[[["dwend",3]],["ordering",4]]],[11,"cmp","","",45,[[["dwaccess",3]],["ordering",4]]],[11,"cmp","","",46,[[["dwvis",3]],["ordering",4]]],[11,"cmp","","",47,[[["dwvirtuality",3]],["ordering",4]]],[11,"cmp","","",48,[[["dwlang",3]],["ordering",4]]],[11,"cmp","","",49,[[["dwaddr",3]],["ordering",4]]],[11,"cmp","","",50,[[["dwid",3]],["ordering",4]]],[11,"cmp","","",51,[[["dwcc",3]],["ordering",4]]],[11,"cmp","","",52,[[["dwinl",3]],["ordering",4]]],[11,"cmp","","",53,[[["dword",3]],["ordering",4]]],[11,"cmp","","",54,[[["dwdsc",3]],["ordering",4]]],[11,"cmp","","",55,[[["dwidx",3]],["ordering",4]]],[11,"cmp","","",56,[[["dwdefaulted",3]],["ordering",4]]],[11,"cmp","","",57,[[["dwlns",3]],["ordering",4]]],[11,"cmp","","",58,[[["dwlne",3]],["ordering",4]]],[11,"cmp","","",59,[[["dwlnct",3]],["ordering",4]]],[11,"cmp","","",60,[[["dwmacro",3]],["ordering",4]]],[11,"cmp","","",61,[[["dwrle",3]],["ordering",4]]],[11,"cmp","","",62,[[["dwop",3]],["ordering",4]]],[11,"cmp","","",63,[[["dwehpe",3]],["ordering",4]]],[11,"cmp","gimli::read","",190,[[["arangeentry",3]],["ordering",4]]],[11,"cmp","","",102,[[["columntype",4]],["ordering",4]]],[11,"cmp","","",75,[[["unitoffset",3]],["ordering",4]]],[11,"partial_cmp","gimli","",2,[[["register",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["register",3]]]],[11,"le","","",2,[[["register",3]]]],[11,"gt","","",2,[[["register",3]]]],[11,"ge","","",2,[[["register",3]]]],[11,"partial_cmp","","",7,[[["debuginfooffset",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["debuginfooffset",3]]]],[11,"le","","",7,[[["debuginfooffset",3]]]],[11,"gt","","",7,[[["debuginfooffset",3]]]],[11,"ge","","",7,[[["debuginfooffset",3]]]],[11,"partial_cmp","","",22,[[["debugtypesoffset",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["debugtypesoffset",3]]]],[11,"le","","",22,[[["debugtypesoffset",3]]]],[11,"gt","","",22,[[["debugtypesoffset",3]]]],[11,"ge","","",22,[[["debugtypesoffset",3]]]],[11,"partial_cmp","","",28,[[["unitsectionoffset",4]],[["option",4],["ordering",4]]]],[11,"lt","","",28,[[["unitsectionoffset",4]]]],[11,"le","","",28,[[["unitsectionoffset",4]]]],[11,"gt","","",28,[[["unitsectionoffset",4]]]],[11,"ge","","",28,[[["unitsectionoffset",4]]]],[11,"partial_cmp","","",29,[[["sectionid",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","gimli::constants","",35,[[["dwut",3]],[["option",4],["ordering",4]]]],[11,"lt","","",35,[[["dwut",3]]]],[11,"le","","",35,[[["dwut",3]]]],[11,"gt","","",35,[[["dwut",3]]]],[11,"ge","","",35,[[["dwut",3]]]],[11,"partial_cmp","","",36,[[["dwcfa",3]],[["option",4],["ordering",4]]]],[11,"lt","","",36,[[["dwcfa",3]]]],[11,"le","","",36,[[["dwcfa",3]]]],[11,"gt","","",36,[[["dwcfa",3]]]],[11,"ge","","",36,[[["dwcfa",3]]]],[11,"partial_cmp","","",37,[[["dwchildren",3]],[["option",4],["ordering",4]]]],[11,"lt","","",37,[[["dwchildren",3]]]],[11,"le","","",37,[[["dwchildren",3]]]],[11,"gt","","",37,[[["dwchildren",3]]]],[11,"ge","","",37,[[["dwchildren",3]]]],[11,"partial_cmp","","",38,[[["dwtag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",38,[[["dwtag",3]]]],[11,"le","","",38,[[["dwtag",3]]]],[11,"gt","","",38,[[["dwtag",3]]]],[11,"ge","","",38,[[["dwtag",3]]]],[11,"partial_cmp","","",39,[[["dwat",3]],[["option",4],["ordering",4]]]],[11,"lt","","",39,[[["dwat",3]]]],[11,"le","","",39,[[["dwat",3]]]],[11,"gt","","",39,[[["dwat",3]]]],[11,"ge","","",39,[[["dwat",3]]]],[11,"partial_cmp","","",40,[[["dwform",3]],[["option",4],["ordering",4]]]],[11,"lt","","",40,[[["dwform",3]]]],[11,"le","","",40,[[["dwform",3]]]],[11,"gt","","",40,[[["dwform",3]]]],[11,"ge","","",40,[[["dwform",3]]]],[11,"partial_cmp","","",41,[[["dwate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",41,[[["dwate",3]]]],[11,"le","","",41,[[["dwate",3]]]],[11,"gt","","",41,[[["dwate",3]]]],[11,"ge","","",41,[[["dwate",3]]]],[11,"partial_cmp","","",42,[[["dwlle",3]],[["option",4],["ordering",4]]]],[11,"lt","","",42,[[["dwlle",3]]]],[11,"le","","",42,[[["dwlle",3]]]],[11,"gt","","",42,[[["dwlle",3]]]],[11,"ge","","",42,[[["dwlle",3]]]],[11,"partial_cmp","","",43,[[["dwds",3]],[["option",4],["ordering",4]]]],[11,"lt","","",43,[[["dwds",3]]]],[11,"le","","",43,[[["dwds",3]]]],[11,"gt","","",43,[[["dwds",3]]]],[11,"ge","","",43,[[["dwds",3]]]],[11,"partial_cmp","","",44,[[["dwend",3]],[["option",4],["ordering",4]]]],[11,"lt","","",44,[[["dwend",3]]]],[11,"le","","",44,[[["dwend",3]]]],[11,"gt","","",44,[[["dwend",3]]]],[11,"ge","","",44,[[["dwend",3]]]],[11,"partial_cmp","","",45,[[["dwaccess",3]],[["option",4],["ordering",4]]]],[11,"lt","","",45,[[["dwaccess",3]]]],[11,"le","","",45,[[["dwaccess",3]]]],[11,"gt","","",45,[[["dwaccess",3]]]],[11,"ge","","",45,[[["dwaccess",3]]]],[11,"partial_cmp","","",46,[[["dwvis",3]],[["option",4],["ordering",4]]]],[11,"lt","","",46,[[["dwvis",3]]]],[11,"le","","",46,[[["dwvis",3]]]],[11,"gt","","",46,[[["dwvis",3]]]],[11,"ge","","",46,[[["dwvis",3]]]],[11,"partial_cmp","","",47,[[["dwvirtuality",3]],[["option",4],["ordering",4]]]],[11,"lt","","",47,[[["dwvirtuality",3]]]],[11,"le","","",47,[[["dwvirtuality",3]]]],[11,"gt","","",47,[[["dwvirtuality",3]]]],[11,"ge","","",47,[[["dwvirtuality",3]]]],[11,"partial_cmp","","",48,[[["dwlang",3]],[["option",4],["ordering",4]]]],[11,"lt","","",48,[[["dwlang",3]]]],[11,"le","","",48,[[["dwlang",3]]]],[11,"gt","","",48,[[["dwlang",3]]]],[11,"ge","","",48,[[["dwlang",3]]]],[11,"partial_cmp","","",49,[[["dwaddr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",49,[[["dwaddr",3]]]],[11,"le","","",49,[[["dwaddr",3]]]],[11,"gt","","",49,[[["dwaddr",3]]]],[11,"ge","","",49,[[["dwaddr",3]]]],[11,"partial_cmp","","",50,[[["dwid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",50,[[["dwid",3]]]],[11,"le","","",50,[[["dwid",3]]]],[11,"gt","","",50,[[["dwid",3]]]],[11,"ge","","",50,[[["dwid",3]]]],[11,"partial_cmp","","",51,[[["dwcc",3]],[["option",4],["ordering",4]]]],[11,"lt","","",51,[[["dwcc",3]]]],[11,"le","","",51,[[["dwcc",3]]]],[11,"gt","","",51,[[["dwcc",3]]]],[11,"ge","","",51,[[["dwcc",3]]]],[11,"partial_cmp","","",52,[[["dwinl",3]],[["option",4],["ordering",4]]]],[11,"lt","","",52,[[["dwinl",3]]]],[11,"le","","",52,[[["dwinl",3]]]],[11,"gt","","",52,[[["dwinl",3]]]],[11,"ge","","",52,[[["dwinl",3]]]],[11,"partial_cmp","","",53,[[["dword",3]],[["option",4],["ordering",4]]]],[11,"lt","","",53,[[["dword",3]]]],[11,"le","","",53,[[["dword",3]]]],[11,"gt","","",53,[[["dword",3]]]],[11,"ge","","",53,[[["dword",3]]]],[11,"partial_cmp","","",54,[[["dwdsc",3]],[["option",4],["ordering",4]]]],[11,"lt","","",54,[[["dwdsc",3]]]],[11,"le","","",54,[[["dwdsc",3]]]],[11,"gt","","",54,[[["dwdsc",3]]]],[11,"ge","","",54,[[["dwdsc",3]]]],[11,"partial_cmp","","",55,[[["dwidx",3]],[["option",4],["ordering",4]]]],[11,"lt","","",55,[[["dwidx",3]]]],[11,"le","","",55,[[["dwidx",3]]]],[11,"gt","","",55,[[["dwidx",3]]]],[11,"ge","","",55,[[["dwidx",3]]]],[11,"partial_cmp","","",56,[[["dwdefaulted",3]],[["option",4],["ordering",4]]]],[11,"lt","","",56,[[["dwdefaulted",3]]]],[11,"le","","",56,[[["dwdefaulted",3]]]],[11,"gt","","",56,[[["dwdefaulted",3]]]],[11,"ge","","",56,[[["dwdefaulted",3]]]],[11,"partial_cmp","","",57,[[["dwlns",3]],[["option",4],["ordering",4]]]],[11,"lt","","",57,[[["dwlns",3]]]],[11,"le","","",57,[[["dwlns",3]]]],[11,"gt","","",57,[[["dwlns",3]]]],[11,"ge","","",57,[[["dwlns",3]]]],[11,"partial_cmp","","",58,[[["dwlne",3]],[["option",4],["ordering",4]]]],[11,"lt","","",58,[[["dwlne",3]]]],[11,"le","","",58,[[["dwlne",3]]]],[11,"gt","","",58,[[["dwlne",3]]]],[11,"ge","","",58,[[["dwlne",3]]]],[11,"partial_cmp","","",59,[[["dwlnct",3]],[["option",4],["ordering",4]]]],[11,"lt","","",59,[[["dwlnct",3]]]],[11,"le","","",59,[[["dwlnct",3]]]],[11,"gt","","",59,[[["dwlnct",3]]]],[11,"ge","","",59,[[["dwlnct",3]]]],[11,"partial_cmp","","",60,[[["dwmacro",3]],[["option",4],["ordering",4]]]],[11,"lt","","",60,[[["dwmacro",3]]]],[11,"le","","",60,[[["dwmacro",3]]]],[11,"gt","","",60,[[["dwmacro",3]]]],[11,"ge","","",60,[[["dwmacro",3]]]],[11,"partial_cmp","","",61,[[["dwrle",3]],[["option",4],["ordering",4]]]],[11,"lt","","",61,[[["dwrle",3]]]],[11,"le","","",61,[[["dwrle",3]]]],[11,"gt","","",61,[[["dwrle",3]]]],[11,"ge","","",61,[[["dwrle",3]]]],[11,"partial_cmp","","",62,[[["dwop",3]],[["option",4],["ordering",4]]]],[11,"lt","","",62,[[["dwop",3]]]],[11,"le","","",62,[[["dwop",3]]]],[11,"gt","","",62,[[["dwop",3]]]],[11,"ge","","",62,[[["dwop",3]]]],[11,"partial_cmp","","",63,[[["dwehpe",3]],[["option",4],["ordering",4]]]],[11,"lt","","",63,[[["dwehpe",3]]]],[11,"le","","",63,[[["dwehpe",3]]]],[11,"gt","","",63,[[["dwehpe",3]]]],[11,"ge","","",63,[[["dwehpe",3]]]],[11,"partial_cmp","gimli::read","",190,[[["arangeentry",3]],[["option",4],["ordering",4]]]],[11,"lt","","",190,[[["arangeentry",3]]]],[11,"le","","",190,[[["arangeentry",3]]]],[11,"gt","","",190,[[["arangeentry",3]]]],[11,"ge","","",190,[[["arangeentry",3]]]],[11,"partial_cmp","","",102,[[["columntype",4]],[["option",4],["ordering",4]]]],[11,"lt","","",102,[[["columntype",4]]]],[11,"le","","",102,[[["columntype",4]]]],[11,"gt","","",102,[[["columntype",4]]]],[11,"ge","","",102,[[["columntype",4]]]],[11,"partial_cmp","","",75,[[["unitoffset",3]],[["option",4],["ordering",4]]]],[11,"lt","","",75,[[["unitoffset",3]]]],[11,"le","","",75,[[["unitoffset",3]]]],[11,"gt","","",75,[[["unitoffset",3]]]],[11,"ge","","",75,[[["unitoffset",3]]]],[11,"index","","",181,[[]]],[11,"index","","",181,[[["rangefrom",3]]]],[11,"hash","gimli","",27,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",26,[[]]],[11,"hash","gimli::constants","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",58,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",63,[[]]],[11,"hash","gimli","",31,[[]]],[11,"hash","","",241,[[]]],[11,"hash","","",240,[[]]],[11,"hash","gimli::read","",181,[[]]],[11,"hash","","",71,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"next","","",244,[[],["option",4]]],[11,"into","","",100,[[]]],[11,"into","","",181,[[]]],[11,"clone","gimli","",27,[[],["format",4]]],[11,"clone","","",0,[[],["encoding",3]]],[11,"clone","","",1,[[],["lineencoding",3]]],[11,"clone","","",2,[[],["register",3]]],[11,"clone","","",3,[[],["debugabbrevoffset",3]]],[11,"clone","","",4,[[],["debugaddrbase",3]]],[11,"clone","","",5,[[],["debugaddrindex",3]]],[11,"clone","","",6,[[],["debugarangesoffset",3]]],[11,"clone","","",7,[[],["debuginfooffset",3]]],[11,"clone","","",8,[[],["debuglineoffset",3]]],[11,"clone","","",9,[[],["debuglinestroffset",3]]],[11,"clone","","",10,[[],["locationlistsoffset",3]]],[11,"clone","","",11,[[],["debugloclistsbase",3]]],[11,"clone","","",12,[[],["debugloclistsindex",3]]],[11,"clone","","",13,[[],["debugmacinfooffset",3]]],[11,"clone","","",14,[[],["debugmacrooffset",3]]],[11,"clone","","",15,[[],["rawrangelistsoffset",3]]],[11,"clone","","",16,[[],["rangelistsoffset",3]]],[11,"clone","","",17,[[],["debugrnglistsbase",3]]],[11,"clone","","",18,[[],["debugrnglistsindex",3]]],[11,"clone","","",19,[[],["debugstroffset",3]]],[11,"clone","","",20,[[],["debugstroffsetsbase",3]]],[11,"clone","","",21,[[],["debugstroffsetsindex",3]]],[11,"clone","","",22,[[],["debugtypesoffset",3]]],[11,"clone","","",23,[[],["debugtypesignature",3]]],[11,"clone","","",24,[[],["debugframeoffset",3]]],[11,"clone","","",25,[[],["ehframeoffset",3]]],[11,"clone","","",28,[[],["unitsectionoffset",4]]],[11,"clone","","",29,[[],["sectionid",4]]],[11,"clone","","",26,[[],["dwoid",3]]],[11,"clone","","",30,[[],["dwarffiletype",4]]],[11,"clone","","",32,[[],["arm",3]]],[11,"clone","","",33,[[],["x86",3]]],[11,"clone","","",34,[[],["x86_64",3]]],[11,"clone","gimli::constants","",35,[[],["dwut",3]]],[11,"clone","","",36,[[],["dwcfa",3]]],[11,"clone","","",37,[[],["dwchildren",3]]],[11,"clone","","",38,[[],["dwtag",3]]],[11,"clone","","",39,[[],["dwat",3]]],[11,"clone","","",40,[[],["dwform",3]]],[11,"clone","","",41,[[],["dwate",3]]],[11,"clone","","",42,[[],["dwlle",3]]],[11,"clone","","",43,[[],["dwds",3]]],[11,"clone","","",44,[[],["dwend",3]]],[11,"clone","","",45,[[],["dwaccess",3]]],[11,"clone","","",46,[[],["dwvis",3]]],[11,"clone","","",47,[[],["dwvirtuality",3]]],[11,"clone","","",48,[[],["dwlang",3]]],[11,"clone","","",49,[[],["dwaddr",3]]],[11,"clone","","",50,[[],["dwid",3]]],[11,"clone","","",51,[[],["dwcc",3]]],[11,"clone","","",52,[[],["dwinl",3]]],[11,"clone","","",53,[[],["dword",3]]],[11,"clone","","",54,[[],["dwdsc",3]]],[11,"clone","","",55,[[],["dwidx",3]]],[11,"clone","","",56,[[],["dwdefaulted",3]]],[11,"clone","","",57,[[],["dwlns",3]]],[11,"clone","","",58,[[],["dwlne",3]]],[11,"clone","","",59,[[],["dwlnct",3]]],[11,"clone","","",60,[[],["dwmacro",3]]],[11,"clone","","",61,[[],["dwrle",3]]],[11,"clone","","",62,[[],["dwop",3]]],[11,"clone","","",63,[[],["dwehpe",3]]],[11,"clone","gimli","",31,[[],["runtimeendian",4]]],[11,"clone","","",241,[[],["littleendian",3]]],[11,"clone","","",240,[[],["bigendian",3]]],[11,"clone","gimli::read","",166,[[],["debugaddr",3]]],[11,"clone","","",167,[[],["debugframe",3]]],[11,"clone","","",168,[[],["ehframehdr",3]]],[11,"clone","","",169,[[],["parsedehframehdr",3]]],[11,"clone","","",170,[[],["ehhdrtable",3]]],[11,"clone","","",171,[[],["ehframe",3]]],[11,"clone","","",64,[[],["baseaddresses",3]]],[11,"clone","","",65,[[],["sectionbaseaddresses",3]]],[11,"clone","","",172,[[],["cfientriesiter",3]]],[11,"clone","","",76,[[],["cieorfde",4]]],[11,"clone","","",242,[[],["augmentation",3]]],[11,"clone","","",173,[[],["commoninformationentry",3]]],[11,"clone","","",174,[[],["partialframedescriptionentry",3]]],[11,"clone","","",175,[[],["framedescriptionentry",3]]],[11,"clone","","",176,[[],["uninitializedunwindcontext",3]]],[11,"clone","","",243,[[],["unwindcontext",3]]],[11,"clone","","",244,[[],["registerruleiter",3]]],[11,"clone","","",178,[[],["unwindtablerow",3]]],[11,"clone","","",77,[[],["cfarule",4]]],[11,"clone","","",79,[[],["registerrule",4]]],[11,"clone","","",80,[[],["callframeinstruction",4]]],[11,"clone","","",179,[[],["callframeinstructioniter",3]]],[11,"clone","","",100,[[],["pointer",4]]],[11,"clone","","",181,[[],["endianslice",3]]],[11,"clone","","",68,[[],["readeroffsetid",3]]],[11,"clone","","",182,[[],["debugabbrev",3]]],[11,"clone","","",183,[[],["abbreviations",3]]],[11,"clone","","",184,[[],["abbreviation",3]]],[11,"clone","","",185,[[],["attributespecification",3]]],[11,"clone","","",186,[[],["debugaranges",3]]],[11,"clone","","",187,[[],["arangeheaderiter",3]]],[11,"clone","","",188,[[],["arangeheader",3]]],[11,"clone","","",189,[[],["arangeentryiter",3]]],[11,"clone","","",190,[[],["arangeentry",3]]],[11,"clone","","",191,[[],["debugline",3]]],[11,"clone","","",192,[[],["linerows",3]]],[11,"clone","","",101,[[],["lineinstruction",4]]],[11,"clone","","",193,[[],["lineinstructions",3]]],[11,"clone","","",194,[[],["linerow",3]]],[11,"clone","","",102,[[],["columntype",4]]],[11,"clone","","",69,[[],["linesequence",3]]],[11,"clone","","",195,[[],["lineprogramheader",3]]],[11,"clone","","",196,[[],["incompletelineprogram",3]]],[11,"clone","","",197,[[],["completelineprogram",3]]],[11,"clone","","",198,[[],["fileentry",3]]],[11,"clone","","",70,[[],["fileentryformat",3]]],[11,"clone","","",199,[[],["debugloc",3]]],[11,"clone","","",200,[[],["debugloclists",3]]],[11,"clone","","",201,[[],["locationlists",3]]],[11,"clone","","",103,[[],["rawloclistentry",4]]],[11,"clone","","",71,[[],["locationlistentry",3]]],[11,"clone","","",113,[[],["diereference",4]]],[11,"clone","","",114,[[],["operation",4]]],[11,"clone","","",140,[[],["location",4]]],[11,"clone","","",72,[[],["piece",3]]],[11,"clone","","",73,[[],["expression",3]]],[11,"clone","","",204,[[],["operationiter",3]]],[11,"clone","","",206,[[],["pubnamesentry",3]]],[11,"clone","","",207,[[],["debugpubnames",3]]],[11,"clone","","",208,[[],["pubnamesentryiter",3]]],[11,"clone","","",209,[[],["pubtypesentry",3]]],[11,"clone","","",210,[[],["debugpubtypes",3]]],[11,"clone","","",211,[[],["pubtypesentryiter",3]]],[11,"clone","","",212,[[],["debugranges",3]]],[11,"clone","","",213,[[],["debugrnglists",3]]],[11,"clone","","",214,[[],["rangelists",3]]],[11,"clone","","",150,[[],["rawrnglistentry",4]]],[11,"clone","","",74,[[],["range",3]]],[11,"clone","","",217,[[],["debugstr",3]]],[11,"clone","","",218,[[],["debugstroffsets",3]]],[11,"clone","","",219,[[],["debuglinestr",3]]],[11,"clone","","",75,[[],["unitoffset",3]]],[11,"clone","","",220,[[],["debuginfo",3]]],[11,"clone","","",221,[[],["debuginfounitheadersiter",3]]],[11,"clone","","",159,[[],["unittype",4]]],[11,"clone","","",222,[[],["unitheader",3]]],[11,"clone","","",223,[[],["debugginginformationentry",3]]],[11,"clone","","",162,[[],["attributevalue",4]]],[11,"clone","","",224,[[],["attribute",3]]],[11,"clone","","",225,[[],["attrsiter",3]]],[11,"clone","","",226,[[],["entriesraw",3]]],[11,"clone","","",227,[[],["entriescursor",3]]],[11,"clone","","",228,[[],["entriestree",3]]],[11,"clone","","",231,[[],["debugtypes",3]]],[11,"clone","","",232,[[],["debugtypesunitheadersiter",3]]],[11,"clone","","",163,[[],["valuetype",4]]],[11,"clone","","",164,[[],["value",4]]],[11,"clone","","",165,[[],["error",4]]],[11,"default","gimli","",1,[[]]],[11,"default","","",30,[[]]],[11,"default","","",31,[[],["runtimeendian",4]]],[11,"default","","",241,[[],["littleendian",3]]],[11,"default","","",240,[[],["bigendian",3]]],[11,"default","gimli::read","",166,[[],["debugaddr",3]]],[11,"default","","",64,[[],["baseaddresses",3]]],[11,"default","","",65,[[],["sectionbaseaddresses",3]]],[11,"default","","",242,[[],["augmentation",3]]],[11,"default","","",176,[[]]],[11,"default","","",178,[[]]],[11,"default","","",77,[[]]],[11,"default","","",100,[[]]],[11,"default","","",66,[[],["dwarf",3]]],[11,"default","","",180,[[]]],[11,"default","","",181,[[],["endianslice",3]]],[11,"default","","",182,[[],["debugabbrev",3]]],[11,"default","","",183,[[],["abbreviations",3]]],[11,"default","","",186,[[],["debugaranges",3]]],[11,"default","","",191,[[],["debugline",3]]],[11,"default","","",199,[[],["debugloc",3]]],[11,"default","","",200,[[],["debugloclists",3]]],[11,"default","","",201,[[],["locationlists",3]]],[11,"default","","",212,[[],["debugranges",3]]],[11,"default","","",213,[[],["debugrnglists",3]]],[11,"default","","",214,[[],["rangelists",3]]],[11,"default","","",217,[[],["debugstr",3]]],[11,"default","","",218,[[],["debugstroffsets",3]]],[11,"default","","",219,[[],["debuglinestr",3]]],[11,"default","","",220,[[],["debuginfo",3]]],[11,"default","","",231,[[],["debugtypes",3]]],[11,"is_little_endian","gimli","Return true for little endian byte order.",239,[[]]],[11,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",239,[[]]],[11,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",239,[[]]],[11,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",239,[[]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",239,[[]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",239,[[]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",239,[[]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",239,[[]]],[11,"read_f32","","Reads a 32 bit floating point number from `buf`.",239,[[]]],[11,"read_f64","","Reads a 32 bit floating point number from `buf`.",239,[[]]],[11,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",239,[[]]],[11,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",239,[[]]],[11,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",239,[[]]],[11,"entries","gimli::read","Iterate over the `CommonInformationEntry`s and…",234,[[["baseaddresses",3]],["cfientriesiter",3]]],[11,"cie_from_offset","","Parse the `CommonInformationEntry` at the given offset.",234,[[["baseaddresses",3]],[["result",6],["commoninformationentry",3]]]],[11,"partial_fde_from_offset","","Parse the `PartialFrameDescriptionEntry` at the given…",234,[[["baseaddresses",3]],[["partialframedescriptionentry",3],["result",6]]]],[11,"fde_from_offset","","Parse the `FrameDescriptionEntry` at the given offset.",234,[[["baseaddresses",3]],[["result",6],["framedescriptionentry",3]]]],[11,"fde_for_address","","Find the `FrameDescriptionEntry` for the given address.",234,[[["baseaddresses",3]],[["result",6],["framedescriptionentry",3]]]],[11,"unwind_info_for_address","","Find the frame unwind information for the given address.",234,[[["uninitializedunwindcontext",3],["baseaddresses",3]],[["unwindtablerow",3],["result",6]]]],[11,"read_u8_array","","Read a u8 array.",236,[[],["result",6]]],[11,"is_empty","","Return true if the number of bytes remaining is zero.",236,[[]]],[11,"read_u8","","Read a u8.",236,[[],["result",6]]],[11,"read_i8","","Read an i8.",236,[[],["result",6]]],[11,"read_u16","","Read a u16.",236,[[],["result",6]]],[11,"read_i16","","Read an i16.",236,[[],["result",6]]],[11,"read_u32","","Read a u32.",236,[[],["result",6]]],[11,"read_i32","","Read an i32.",236,[[],["result",6]]],[11,"read_u64","","Read a u64.",236,[[],["result",6]]],[11,"read_i64","","Read an i64.",236,[[],["result",6]]],[11,"read_f32","","Read a f32.",236,[[],["result",6]]],[11,"read_f64","","Read a f64.",236,[[],["result",6]]],[11,"read_uint","","Read an unsigned n-bytes integer u64.",236,[[],["result",6]]],[11,"read_null_terminated_slice","","Read a null-terminated slice, and return it (excluding the…",236,[[],["result",6]]],[11,"read_uleb128","","Read an unsigned LEB128 encoded integer.",236,[[],["result",6]]],[11,"read_uleb128_u32","","Read an unsigned LEB128 encoded u32.",236,[[],["result",6]]],[11,"read_uleb128_u16","","Read an unsigned LEB128 encoded u16.",236,[[],["result",6]]],[11,"read_sleb128","","Read a signed LEB128 encoded integer.",236,[[],["result",6]]],[11,"read_initial_length","","Read an initial length field.",236,[[],["result",6]]],[11,"read_address","","Read an address-sized integer, and return it as a `u64`.",236,[[],["result",6]]],[11,"read_word","","Parse a word-sized integer according to the DWARF format.",236,[[["format",4]],["result",6]]],[11,"read_length","","Parse a word-sized section length according to the DWARF…",236,[[["format",4]],["result",6]]],[11,"read_offset","","Parse a word-sized section offset according to the DWARF…",236,[[["format",4]],["result",6]]],[11,"read_sized_offset","","Parse a section offset of the given size.",236,[[],["result",6]]]],"p":[[3,"Encoding"],[3,"LineEncoding"],[3,"Register"],[3,"DebugAbbrevOffset"],[3,"DebugAddrBase"],[3,"DebugAddrIndex"],[3,"DebugArangesOffset"],[3,"DebugInfoOffset"],[3,"DebugLineOffset"],[3,"DebugLineStrOffset"],[3,"LocationListsOffset"],[3,"DebugLocListsBase"],[3,"DebugLocListsIndex"],[3,"DebugMacinfoOffset"],[3,"DebugMacroOffset"],[3,"RawRangeListsOffset"],[3,"RangeListsOffset"],[3,"DebugRngListsBase"],[3,"DebugRngListsIndex"],[3,"DebugStrOffset"],[3,"DebugStrOffsetsBase"],[3,"DebugStrOffsetsIndex"],[3,"DebugTypesOffset"],[3,"DebugTypeSignature"],[3,"DebugFrameOffset"],[3,"EhFrameOffset"],[3,"DwoId"],[4,"Format"],[4,"UnitSectionOffset"],[4,"SectionId"],[4,"DwarfFileType"],[4,"RunTimeEndian"],[3,"Arm"],[3,"X86"],[3,"X86_64"],[3,"DwUt"],[3,"DwCfa"],[3,"DwChildren"],[3,"DwTag"],[3,"DwAt"],[3,"DwForm"],[3,"DwAte"],[3,"DwLle"],[3,"DwDs"],[3,"DwEnd"],[3,"DwAccess"],[3,"DwVis"],[3,"DwVirtuality"],[3,"DwLang"],[3,"DwAddr"],[3,"DwId"],[3,"DwCc"],[3,"DwInl"],[3,"DwOrd"],[3,"DwDsc"],[3,"DwIdx"],[3,"DwDefaulted"],[3,"DwLns"],[3,"DwLne"],[3,"DwLnct"],[3,"DwMacro"],[3,"DwRle"],[3,"DwOp"],[3,"DwEhPe"],[3,"BaseAddresses"],[3,"SectionBaseAddresses"],[3,"Dwarf"],[3,"Unit"],[3,"ReaderOffsetId"],[3,"LineSequence"],[3,"FileEntryFormat"],[3,"LocationListEntry"],[3,"Piece"],[3,"Expression"],[3,"Range"],[3,"UnitOffset"],[4,"CieOrFde"],[4,"CfaRule"],[13,"RegisterAndOffset"],[4,"RegisterRule"],[4,"CallFrameInstruction"],[13,"SetLoc"],[13,"AdvanceLoc"],[13,"DefCfa"],[13,"DefCfaSf"],[13,"DefCfaRegister"],[13,"DefCfaOffset"],[13,"DefCfaOffsetSf"],[13,"DefCfaExpression"],[13,"Undefined"],[13,"SameValue"],[13,"Offset"],[13,"OffsetExtendedSf"],[13,"ValOffset"],[13,"ValOffsetSf"],[13,"Register"],[13,"Expression"],[13,"ValExpression"],[13,"Restore"],[13,"ArgsSize"],[4,"Pointer"],[4,"LineInstruction"],[4,"ColumnType"],[4,"RawLocListEntry"],[13,"AddressOrOffsetPair"],[13,"BaseAddress"],[13,"BaseAddressx"],[13,"StartxEndx"],[13,"StartxLength"],[13,"OffsetPair"],[13,"DefaultLocation"],[13,"StartEnd"],[13,"StartLength"],[4,"DieReference"],[4,"Operation"],[13,"Deref"],[13,"Pick"],[13,"PlusConstant"],[13,"Bra"],[13,"Skip"],[13,"UnsignedConstant"],[13,"SignedConstant"],[13,"Register"],[13,"RegisterOffset"],[13,"FrameOffset"],[13,"Call"],[13,"Piece"],[13,"ImplicitValue"],[13,"ImplicitPointer"],[13,"EntryValue"],[13,"ParameterRef"],[13,"Address"],[13,"AddressIndex"],[13,"ConstantIndex"],[13,"TypedLiteral"],[13,"Convert"],[13,"Reinterpret"],[13,"WasmLocal"],[13,"WasmGlobal"],[13,"WasmStack"],[4,"Location"],[13,"Register"],[13,"Address"],[13,"Value"],[13,"Bytes"],[13,"ImplicitPointer"],[4,"EvaluationResult"],[13,"RequiresMemory"],[13,"RequiresRegister"],[13,"RequiresIndexedAddress"],[4,"RawRngListEntry"],[13,"AddressOrOffsetPair"],[13,"BaseAddress"],[13,"BaseAddressx"],[13,"StartxEndx"],[13,"StartxLength"],[13,"OffsetPair"],[13,"StartEnd"],[13,"StartLength"],[4,"UnitType"],[13,"Type"],[13,"SplitType"],[4,"AttributeValue"],[4,"ValueType"],[4,"Value"],[4,"Error"],[3,"DebugAddr"],[3,"DebugFrame"],[3,"EhFrameHdr"],[3,"ParsedEhFrameHdr"],[3,"EhHdrTable"],[3,"EhFrame"],[3,"CfiEntriesIter"],[3,"CommonInformationEntry"],[3,"PartialFrameDescriptionEntry"],[3,"FrameDescriptionEntry"],[3,"UninitializedUnwindContext"],[3,"UnwindTable"],[3,"UnwindTableRow"],[3,"CallFrameInstructionIter"],[3,"RangeIter"],[3,"EndianSlice"],[3,"DebugAbbrev"],[3,"Abbreviations"],[3,"Abbreviation"],[3,"AttributeSpecification"],[3,"DebugAranges"],[3,"ArangeHeaderIter"],[3,"ArangeHeader"],[3,"ArangeEntryIter"],[3,"ArangeEntry"],[3,"DebugLine"],[3,"LineRows"],[3,"LineInstructions"],[3,"LineRow"],[3,"LineProgramHeader"],[3,"IncompleteLineProgram"],[3,"CompleteLineProgram"],[3,"FileEntry"],[3,"DebugLoc"],[3,"DebugLocLists"],[3,"LocationLists"],[3,"RawLocListIter"],[3,"LocListIter"],[3,"OperationIter"],[3,"Evaluation"],[3,"PubNamesEntry"],[3,"DebugPubNames"],[3,"PubNamesEntryIter"],[3,"PubTypesEntry"],[3,"DebugPubTypes"],[3,"PubTypesEntryIter"],[3,"DebugRanges"],[3,"DebugRngLists"],[3,"RangeLists"],[3,"RawRngListIter"],[3,"RngListIter"],[3,"DebugStr"],[3,"DebugStrOffsets"],[3,"DebugLineStr"],[3,"DebugInfo"],[3,"DebugInfoUnitHeadersIter"],[3,"UnitHeader"],[3,"DebuggingInformationEntry"],[3,"Attribute"],[3,"AttrsIter"],[3,"EntriesRaw"],[3,"EntriesCursor"],[3,"EntriesTree"],[3,"EntriesTreeNode"],[3,"EntriesTreeIter"],[3,"DebugTypes"],[3,"DebugTypesUnitHeadersIter"],[8,"UnwindOffset"],[8,"UnwindSection"],[8,"ReaderOffset"],[8,"Reader"],[8,"LineProgram"],[8,"Section"],[8,"Endianity"],[3,"BigEndian"],[3,"LittleEndian"],[3,"Augmentation"],[3,"UnwindContext"],[3,"RegisterRuleIter"]]},\
"hacspec_aes":{"doc":"","i":[[3,"Block","hacspec_aes","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"Word","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"RoundKey","","Fixed length byte array.",null,null],[12,"0","","",2,null],[3,"AesNonce","","Fixed length byte array.",null,null],[12,"0","","",3,null],[3,"SBox","","Fixed length byte array.",null,null],[12,"0","","",4,null],[3,"RCon","","Fixed length byte array.",null,null],[12,"0","","",5,null],[3,"Bytes144","","Fixed length byte array.",null,null],[12,"0","","",6,null],[3,"Bytes176","","Fixed length byte array.",null,null],[12,"0","","",7,null],[3,"Key128","","Fixed length byte array.",null,null],[12,"0","","",8,null],[5,"aes128_encrypt_block","","",null,[[["key128",3],["block",3]],["block",3]]],[5,"aes_ctr_key_block","","",null,[[["aesnonce",3],["u32",3],["byteseq",6]],[["result",4],["block",3]]]],[5,"xor_block","","",null,[[["block",3]],["block",3]]],[5,"aes128_encrypt","","",null,[[["byteseq",6],["aesnonce",3],["key128",3],["u32",3]],["byteseq",6]]],[5,"aes128_decrypt","","",null,[[["byteseq",6],["aesnonce",3],["key128",3],["u32",3]],["byteseq",6]]],[17,"KEY_LENGTH","","",null,null],[17,"ROUNDS","","",null,null],[17,"KEY_SCHEDULE_LENGTH","","",null,null],[17,"ITERATIONS","","",null,null],[17,"INVALID_KEY_EXPANSION_INDEX","","",null,null],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",0,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["block",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["block",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["word",3]]],[11,"from_seq","","",1,[[],["word",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["word",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["word",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["word",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",2,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3],["u8",3]],["roundkey",3]]],[11,"from_seq","","",2,[[],["roundkey",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["roundkey",3]]],[11,"declassify_eq","","",2,[[]]],[11,"to_be_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",2,[[],["roundkey",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",2,[[],["roundkey",3]]],[11,"to_be_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"new","","",3,[[]]],[11,"length","","",3,[[]]],[11,"from_array","","",3,[[]]],[11,"from_native_slice","","",3,[[]]],[11,"capacity","","",3,[[]]],[11,"from_slice","","",3,[[]]],[11,"concat","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",3,[[["range",3]]]],[11,"slice","","",3,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",3,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",3,[[]]],[11,"get_chunk_len","","",3,[[]]],[11,"get_chunk","","",3,[[]]],[11,"set_chunk","","",3,[[]]],[11,"from_vec","","",3,[[["vec",3],["u8",3]],["aesnonce",3]]],[11,"from_seq","","",3,[[],["aesnonce",3]]],[11,"from_hex","","Read hex string to Bytes.",3,[[],["aesnonce",3]]],[11,"declassify_eq","","",3,[[]]],[11,"to_be_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",3,[[],["aesnonce",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",3,[[],["aesnonce",3]]],[11,"to_be_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",3,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",3,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",3,[[],["string",3]]],[11,"new","","",4,[[]]],[11,"length","","",4,[[]]],[11,"from_array","","",4,[[]]],[11,"from_native_slice","","",4,[[]]],[11,"capacity","","",4,[[]]],[11,"from_slice","","",4,[[]]],[11,"concat","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",4,[[["range",3]]]],[11,"slice","","",4,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",4,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",4,[[]]],[11,"get_chunk_len","","",4,[[]]],[11,"get_chunk","","",4,[[]]],[11,"set_chunk","","",4,[[]]],[11,"from_vec","","",4,[[["vec",3],["u8",3]],["sbox",3]]],[11,"from_seq","","",4,[[],["sbox",3]]],[11,"from_hex","","Read hex string to Bytes.",4,[[],["sbox",3]]],[11,"declassify_eq","","",4,[[]]],[11,"to_be_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",4,[[],["sbox",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",4,[[],["sbox",3]]],[11,"to_be_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",4,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",4,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",4,[[],["string",3]]],[11,"new","","",5,[[]]],[11,"length","","",5,[[]]],[11,"from_array","","",5,[[]]],[11,"from_native_slice","","",5,[[]]],[11,"capacity","","",5,[[]]],[11,"from_slice","","",5,[[]]],[11,"concat","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",5,[[["range",3]]]],[11,"slice","","",5,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",5,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",5,[[]]],[11,"get_chunk_len","","",5,[[]]],[11,"get_chunk","","",5,[[]]],[11,"set_chunk","","",5,[[]]],[11,"from_vec","","",5,[[["vec",3],["u8",3]],["rcon",3]]],[11,"from_seq","","",5,[[],["rcon",3]]],[11,"from_hex","","Read hex string to Bytes.",5,[[],["rcon",3]]],[11,"declassify_eq","","",5,[[]]],[11,"to_be_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",5,[[],["rcon",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",5,[[],["rcon",3]]],[11,"to_be_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",5,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",5,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",5,[[],["string",3]]],[11,"new","","",6,[[]]],[11,"length","","",6,[[]]],[11,"from_array","","",6,[[]]],[11,"from_native_slice","","",6,[[]]],[11,"capacity","","",6,[[]]],[11,"from_slice","","",6,[[]]],[11,"concat","","",6,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",6,[[["range",3]]]],[11,"slice","","",6,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",6,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",6,[[]]],[11,"get_chunk_len","","",6,[[]]],[11,"get_chunk","","",6,[[]]],[11,"set_chunk","","",6,[[]]],[11,"from_vec","","",6,[[["vec",3],["u8",3]],["bytes144",3]]],[11,"from_seq","","",6,[[],["bytes144",3]]],[11,"from_hex","","Read hex string to Bytes.",6,[[],["bytes144",3]]],[11,"declassify_eq","","",6,[[]]],[11,"to_be_bytes","","",6,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",6,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",6,[[],["bytes144",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",6,[[],["bytes144",3]]],[11,"to_be_U32s","","",6,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",6,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",6,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",6,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",6,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",6,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",6,[[],["string",3]]],[11,"new","","",7,[[]]],[11,"length","","",7,[[]]],[11,"from_array","","",7,[[]]],[11,"from_native_slice","","",7,[[]]],[11,"capacity","","",7,[[]]],[11,"from_slice","","",7,[[]]],[11,"concat","","",7,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",7,[[["range",3]]]],[11,"slice","","",7,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",7,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",7,[[]]],[11,"get_chunk_len","","",7,[[]]],[11,"get_chunk","","",7,[[]]],[11,"set_chunk","","",7,[[]]],[11,"from_vec","","",7,[[["vec",3],["u8",3]],["bytes176",3]]],[11,"from_seq","","",7,[[],["bytes176",3]]],[11,"from_hex","","Read hex string to Bytes.",7,[[],["bytes176",3]]],[11,"declassify_eq","","",7,[[]]],[11,"to_be_bytes","","",7,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",7,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",7,[[],["bytes176",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",7,[[],["bytes176",3]]],[11,"to_be_U32s","","",7,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",7,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",7,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",7,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",7,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",7,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",7,[[],["string",3]]],[11,"new","","",8,[[]]],[11,"length","","",8,[[]]],[11,"from_array","","",8,[[]]],[11,"from_native_slice","","",8,[[]]],[11,"capacity","","",8,[[]]],[11,"from_slice","","",8,[[]]],[11,"concat","","",8,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",8,[[["range",3]]]],[11,"slice","","",8,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",8,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",8,[[]]],[11,"get_chunk_len","","",8,[[]]],[11,"get_chunk","","",8,[[]]],[11,"set_chunk","","",8,[[]]],[11,"from_vec","","",8,[[["vec",3],["u8",3]],["key128",3]]],[11,"from_seq","","",8,[[],["key128",3]]],[11,"from_hex","","Read hex string to Bytes.",8,[[],["key128",3]]],[11,"declassify_eq","","",8,[[]]],[11,"to_be_bytes","","",8,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",8,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",8,[[],["key128",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",8,[[],["key128",3]]],[11,"to_be_U32s","","",8,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",8,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",8,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",8,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",8,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",8,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",8,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"clone","","",0,[[],["block",3]]],[11,"clone","","",1,[[],["word",3]]],[11,"clone","","",2,[[],["roundkey",3]]],[11,"clone","","",3,[[],["aesnonce",3]]],[11,"clone","","",4,[[],["sbox",3]]],[11,"clone","","",5,[[],["rcon",3]]],[11,"clone","","",6,[[],["bytes144",3]]],[11,"clone","","",7,[[],["bytes176",3]]],[11,"clone","","",8,[[],["key128",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"rem","","",0,[[["block",3]],["block",3]]],[11,"rem","","",1,[[["word",3]],["word",3]]],[11,"rem","","",2,[[["roundkey",3]],["roundkey",3]]],[11,"rem","","",3,[[["aesnonce",3]],["aesnonce",3]]],[11,"rem","","",4,[[["sbox",3]],["sbox",3]]],[11,"rem","","",5,[[["rcon",3]],["rcon",3]]],[11,"rem","","",6,[[["bytes144",3]],["bytes144",3]]],[11,"rem","","",7,[[["bytes176",3]],["bytes176",3]]],[11,"rem","","",8,[[["key128",3]],["key128",3]]],[11,"sub","","",0,[[["block",3]],["block",3]]],[11,"sub","","",1,[[["word",3]],["word",3]]],[11,"sub","","",2,[[["roundkey",3]],["roundkey",3]]],[11,"sub","","",3,[[["aesnonce",3]],["aesnonce",3]]],[11,"sub","","",4,[[["sbox",3]],["sbox",3]]],[11,"sub","","",5,[[["rcon",3]],["rcon",3]]],[11,"sub","","",6,[[["bytes144",3]],["bytes144",3]]],[11,"sub","","",7,[[["bytes176",3]],["bytes176",3]]],[11,"sub","","",8,[[["key128",3]],["key128",3]]],[11,"add","","",0,[[["block",3]],["block",3]]],[11,"add","","",1,[[["word",3]],["word",3]]],[11,"add","","",2,[[["roundkey",3]],["roundkey",3]]],[11,"add","","",3,[[["aesnonce",3]],["aesnonce",3]]],[11,"add","","",4,[[["sbox",3]],["sbox",3]]],[11,"add","","",5,[[["rcon",3]],["rcon",3]]],[11,"add","","",6,[[["bytes144",3]],["bytes144",3]]],[11,"add","","",7,[[["bytes176",3]],["bytes176",3]]],[11,"add","","",8,[[["key128",3]],["key128",3]]],[11,"mul","","",0,[[["block",3]],["block",3]]],[11,"mul","","",1,[[["word",3]],["word",3]]],[11,"mul","","",2,[[["roundkey",3]],["roundkey",3]]],[11,"mul","","",3,[[["aesnonce",3]],["aesnonce",3]]],[11,"mul","","",4,[[["sbox",3]],["sbox",3]]],[11,"mul","","",5,[[["rcon",3]],["rcon",3]]],[11,"mul","","",6,[[["bytes144",3]],["bytes144",3]]],[11,"mul","","",7,[[["bytes176",3]],["bytes176",3]]],[11,"mul","","",8,[[["key128",3]],["key128",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"not","","",6,[[]]],[11,"not","","",7,[[]]],[11,"not","","",8,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitand","","",6,[[]]],[11,"bitand","","",7,[[]]],[11,"bitand","","",8,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitor","","",6,[[]]],[11,"bitor","","",7,[[]]],[11,"bitor","","",8,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"bitxor","","",6,[[]]],[11,"bitxor","","",7,[[]]],[11,"bitxor","","",8,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shl","","",6,[[]]],[11,"shl","","",7,[[]]],[11,"shl","","",8,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"shr","","",6,[[]]],[11,"shr","","",7,[[]]],[11,"shr","","",8,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[["rangefull",3]]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[["rangefull",3]]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[["rangefull",3]]]],[11,"index","","",6,[[],["u8",3]]],[11,"index","","",6,[[],["u8",3]]],[11,"index","","",6,[[],["u8",3]]],[11,"index","","",6,[[],["u8",3]]],[11,"index","","",6,[[["rangefull",3]]]],[11,"index","","",7,[[],["u8",3]]],[11,"index","","",7,[[],["u8",3]]],[11,"index","","",7,[[],["u8",3]]],[11,"index","","",7,[[],["u8",3]]],[11,"index","","",7,[[["rangefull",3]]]],[11,"index","","",8,[[],["u8",3]]],[11,"index","","",8,[[],["u8",3]]],[11,"index","","",8,[[],["u8",3]]],[11,"index","","",8,[[],["u8",3]]],[11,"index","","",8,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",6,[[],["u8",3]]],[11,"index_mut","","",6,[[],["u8",3]]],[11,"index_mut","","",6,[[],["u8",3]]],[11,"index_mut","","",6,[[],["u8",3]]],[11,"index_mut","","",7,[[],["u8",3]]],[11,"index_mut","","",7,[[],["u8",3]]],[11,"index_mut","","",7,[[],["u8",3]]],[11,"index_mut","","",7,[[],["u8",3]]],[11,"index_mut","","",8,[[],["u8",3]]],[11,"index_mut","","",8,[[],["u8",3]]],[11,"index_mut","","",8,[[],["u8",3]]],[11,"index_mut","","",8,[[],["u8",3]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"create","","",3,[[]]],[11,"len","","",3,[[]]],[11,"iter","","",3,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",3,[[]]],[11,"update","","",3,[[]]],[11,"update_start","","",3,[[]]],[11,"create","","",4,[[]]],[11,"len","","",4,[[]]],[11,"iter","","",4,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",4,[[]]],[11,"update","","",4,[[]]],[11,"update_start","","",4,[[]]],[11,"create","","",5,[[]]],[11,"len","","",5,[[]]],[11,"iter","","",5,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",5,[[]]],[11,"update","","",5,[[]]],[11,"update_start","","",5,[[]]],[11,"create","","",6,[[]]],[11,"len","","",6,[[]]],[11,"iter","","",6,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",6,[[]]],[11,"update","","",6,[[]]],[11,"update_start","","",6,[[]]],[11,"create","","",7,[[]]],[11,"len","","",7,[[]]],[11,"iter","","",7,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",7,[[]]],[11,"update","","",7,[[]]],[11,"update_start","","",7,[[]]],[11,"create","","",8,[[]]],[11,"len","","",8,[[]]],[11,"iter","","",8,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",8,[[]]],[11,"update","","",8,[[]]],[11,"update_start","","",8,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","",3,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","",4,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",5,[[]]],[11,"add_mod","","`(self + rhs) % n`",5,[[]]],[11,"mul_mod","","`(self * rhs) % n`",5,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",5,[[]]],[11,"modulo","","`self % n`",5,[[]]],[11,"signed_modulo","","",5,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",5,[[]]],[11,"sub_mod","","(self - rhs) % n.",6,[[]]],[11,"add_mod","","`(self + rhs) % n`",6,[[]]],[11,"mul_mod","","`(self * rhs) % n`",6,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",6,[[]]],[11,"modulo","","`self % n`",6,[[]]],[11,"signed_modulo","","",6,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",6,[[]]],[11,"sub_mod","","(self - rhs) % n.",7,[[]]],[11,"add_mod","","`(self + rhs) % n`",7,[[]]],[11,"mul_mod","","`(self * rhs) % n`",7,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",7,[[]]],[11,"modulo","","`self % n`",7,[[]]],[11,"signed_modulo","","",7,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",7,[[]]],[11,"sub_mod","","(self - rhs) % n.",8,[[]]],[11,"add_mod","","`(self + rhs) % n`",8,[[]]],[11,"mul_mod","","`(self * rhs) % n`",8,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",8,[[]]],[11,"modulo","","`self % n`",8,[[]]],[11,"signed_modulo","","",8,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",8,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]],[11,"max_val","","Return largest value that can be represented.",5,[[]]],[11,"wrap_add","","",5,[[]]],[11,"wrap_sub","","",5,[[]]],[11,"wrap_mul","","",5,[[]]],[11,"wrap_div","","",5,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",5,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",5,[[]]],[11,"divide","","Division.",5,[[]]],[11,"inv","","Invert self modulo n.",5,[[]]],[11,"equal","","",5,[[]]],[11,"greater_than","","",5,[[]]],[11,"greater_than_or_qual","","",5,[[]]],[11,"less_than","","",5,[[]]],[11,"less_than_or_equal","","",5,[[]]],[11,"not_equal_bm","","",5,[[]]],[11,"equal_bm","","",5,[[]]],[11,"greater_than_bm","","",5,[[]]],[11,"greater_than_or_equal_bm","","",5,[[]]],[11,"less_than_bm","","",5,[[]]],[11,"less_than_or_equal_bm","","",5,[[]]],[11,"max_val","","Return largest value that can be represented.",6,[[]]],[11,"wrap_add","","",6,[[]]],[11,"wrap_sub","","",6,[[]]],[11,"wrap_mul","","",6,[[]]],[11,"wrap_div","","",6,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",6,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",6,[[]]],[11,"divide","","Division.",6,[[]]],[11,"inv","","Invert self modulo n.",6,[[]]],[11,"equal","","",6,[[]]],[11,"greater_than","","",6,[[]]],[11,"greater_than_or_qual","","",6,[[]]],[11,"less_than","","",6,[[]]],[11,"less_than_or_equal","","",6,[[]]],[11,"not_equal_bm","","",6,[[]]],[11,"equal_bm","","",6,[[]]],[11,"greater_than_bm","","",6,[[]]],[11,"greater_than_or_equal_bm","","",6,[[]]],[11,"less_than_bm","","",6,[[]]],[11,"less_than_or_equal_bm","","",6,[[]]],[11,"max_val","","Return largest value that can be represented.",7,[[]]],[11,"wrap_add","","",7,[[]]],[11,"wrap_sub","","",7,[[]]],[11,"wrap_mul","","",7,[[]]],[11,"wrap_div","","",7,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",7,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",7,[[]]],[11,"divide","","Division.",7,[[]]],[11,"inv","","Invert self modulo n.",7,[[]]],[11,"equal","","",7,[[]]],[11,"greater_than","","",7,[[]]],[11,"greater_than_or_qual","","",7,[[]]],[11,"less_than","","",7,[[]]],[11,"less_than_or_equal","","",7,[[]]],[11,"not_equal_bm","","",7,[[]]],[11,"equal_bm","","",7,[[]]],[11,"greater_than_bm","","",7,[[]]],[11,"greater_than_or_equal_bm","","",7,[[]]],[11,"less_than_bm","","",7,[[]]],[11,"less_than_or_equal_bm","","",7,[[]]],[11,"max_val","","Return largest value that can be represented.",8,[[]]],[11,"wrap_add","","",8,[[]]],[11,"wrap_sub","","",8,[[]]],[11,"wrap_mul","","",8,[[]]],[11,"wrap_div","","",8,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",8,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",8,[[]]],[11,"divide","","Division.",8,[[]]],[11,"inv","","Invert self modulo n.",8,[[]]],[11,"equal","","",8,[[]]],[11,"greater_than","","",8,[[]]],[11,"greater_than_or_qual","","",8,[[]]],[11,"less_than","","",8,[[]]],[11,"less_than_or_equal","","",8,[[]]],[11,"not_equal_bm","","",8,[[]]],[11,"equal_bm","","",8,[[]]],[11,"greater_than_bm","","",8,[[]]],[11,"greater_than_or_equal_bm","","",8,[[]]],[11,"less_than_bm","","",8,[[]]],[11,"less_than_or_equal_bm","","",8,[[]]]],"p":[[3,"Block"],[3,"Word"],[3,"RoundKey"],[3,"AesNonce"],[3,"SBox"],[3,"RCon"],[3,"Bytes144"],[3,"Bytes176"],[3,"Key128"]]},\
"hacspec_aes128_gcm":{"doc":"","i":[[5,"encrypt_aes128","hacspec_aes128_gcm","",null,[[["aesnonce",3],["byteseq",6],["key128",3]]]],[5,"decrypt_aes128","","",null,[[["aesnonce",3],["byteseq",6],["key128",3],["gf128tag",3]],["aesgcmbyteseqresult",6]]],[6,"AesGcmByteSeqResult","","",null,null],[17,"INVALID_TAG","","",null,null]],"p":[]},\
"hacspec_attributes":{"doc":"","i":[[23,"in_hacspec","hacspec_attributes","This function is within the hacspec subset of Rust: its…",null,null],[23,"unsafe_hacspec","","This function can be called from hacspec programs but its…",null,null],[23,"not_hacspec","","Function that is not part of the language but is offered…",null,null],[23,"hacspec_unsafe","","",null,null]],"p":[]},\
"hacspec_bls12_381":{"doc":"","i":[[3,"FpCanvas","hacspec_bls12_381","",null,null],[3,"Fp","","",null,null],[3,"SerializedFp","","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"ArrayFp","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"ScalarCanvas","","",null,null],[3,"Scalar","","",null,null],[5,"fp12fromfp6","","",null,[[["fp6",6]],["fp12",6]]],[5,"fp12neg","","",null,[[["fp12",6]],["fp12",6]]],[5,"fp12add","","",null,[[["fp12",6]],["fp12",6]]],[5,"fp12sub","","",null,[[["fp12",6]],["fp12",6]]],[5,"fp12mul","","",null,[[["fp12",6]],["fp12",6]]],[5,"fp12inv","","",null,[[["fp12",6]],["fp12",6]]],[5,"fp12exp","","",null,[[["scalar",3],["fp12",6]],["fp12",6]]],[5,"fp12conjugate","","",null,[[["fp12",6]],["fp12",6]]],[5,"fp12zero","","",null,[[],["fp12",6]]],[5,"g1double","","",null,[[["g1",6]],["g1",6]]],[5,"g1add","","",null,[[["g1",6]],["g1",6]]],[5,"g1mul","","",null,[[["scalar",3],["g1",6]],["g1",6]]],[5,"g1neg","","",null,[[["g1",6]],["g1",6]]],[5,"g2double","","",null,[[["g2",6]],["g2",6]]],[5,"g2add","","",null,[[["g2",6]],["g2",6]]],[5,"g2mul","","",null,[[["scalar",3],["g2",6]],["g2",6]]],[5,"g2neg","","",null,[[["g2",6]],["g2",6]]],[5,"pairing","","",null,[[["g1",6],["g2",6]],["fp12",6]]],[6,"G1","","",null,null],[6,"Fp2","","",null,null],[6,"G2","","",null,null],[6,"Fp6","","",null,null],[6,"Fp12","","",null,null],[11,"max_value","","",2,[[]]],[11,"from_literal","","",2,[[]]],[11,"from_signed_literal","","",2,[[]]],[11,"pow2","","Returns 2 to the power of the argument",2,[[],["fpcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",2,[[]]],[11,"from_hex","","",2,[[]]],[11,"from_be_bytes","","",2,[[]]],[11,"from_le_bytes","","",2,[[]]],[11,"to_be_bytes","","",2,[[]]],[11,"to_le_bytes","","",2,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",2,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"inv","","",2,[[]]],[11,"pow_felem","","",2,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",2,[[]]],[11,"from_byte_seq_be","","",2,[[],["fpcanvas",3]]],[11,"from_public_byte_seq_be","","",2,[[["seqtrait",8]],["fpcanvas",3]]],[11,"to_byte_seq_be","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_canvas","","",3,[[["fpcanvas",3]],["fp",3]]],[11,"into_canvas","","",3,[[],["fpcanvas",3]]],[11,"max","","",3,[[],["fpcanvas",3]]],[11,"declassify","","",3,[[],["bigint",3]]],[11,"from_hex","","",3,[[]]],[11,"from_be_bytes","","",3,[[]]],[11,"to_be_bytes","","",3,[[],["vec",3]]],[11,"from_le_bytes","","",3,[[]]],[11,"to_le_bytes","","",3,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_signed_literal","","",3,[[]]],[11,"comp_eq","","",3,[[]]],[11,"comp_ne","","",3,[[]]],[11,"comp_gte","","",3,[[]]],[11,"comp_gt","","",3,[[]]],[11,"comp_lte","","",3,[[]]],[11,"comp_lt","","",3,[[]]],[11,"inv","","",3,[[]]],[11,"pow_felem","","",3,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",3,[[]]],[11,"pow2","","Returns 2 to the power of the argument",3,[[],["fp",3]]],[11,"from_byte_seq_be","","",3,[[],["fp",3]]],[11,"from_public_byte_seq_be","","",3,[[["seqtrait",8]],["fp",3]]],[11,"to_byte_seq_be","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",3,[[],["seq",3]]],[11,"from_byte_seq_le","","",3,[[["seqtrait",8],["u8",3]],["fp",3]]],[11,"from_public_byte_seq_le","","",3,[[["seqtrait",8]],["fp",3]]],[11,"to_byte_seq_le","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",3,[[],["seq",3]]],[11,"from_secret_literal","","",3,[[["u128",3]],["fp",3]]],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["serializedfp",3]]],[11,"from_seq","","",0,[[],["serializedfp",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["serializedfp",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["serializedfp",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["serializedfp",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u64",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u64",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u64",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u64",3]],["arrayfp",3]]],[11,"from_seq","","",1,[[],["arrayfp",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["arrayfp",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["arrayfp",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["arrayfp",3]]],[11,"max_value","","",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_signed_literal","","",4,[[]]],[11,"pow2","","Returns 2 to the power of the argument",4,[[],["scalarcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",4,[[]]],[11,"from_hex","","",4,[[]]],[11,"from_be_bytes","","",4,[[]]],[11,"from_le_bytes","","",4,[[]]],[11,"to_be_bytes","","",4,[[]]],[11,"to_le_bytes","","",4,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",4,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"inv","","",4,[[]]],[11,"pow_felem","","",4,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",4,[[]]],[11,"from_byte_seq_be","","",4,[[],["scalarcanvas",3]]],[11,"from_public_byte_seq_be","","",4,[[["seqtrait",8]],["scalarcanvas",3]]],[11,"to_byte_seq_be","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_canvas","","",5,[[["scalarcanvas",3]],["scalar",3]]],[11,"into_canvas","","",5,[[],["scalarcanvas",3]]],[11,"max","","",5,[[],["scalarcanvas",3]]],[11,"declassify","","",5,[[],["bigint",3]]],[11,"from_hex","","",5,[[]]],[11,"from_be_bytes","","",5,[[]]],[11,"to_be_bytes","","",5,[[],["vec",3]]],[11,"from_le_bytes","","",5,[[]]],[11,"to_le_bytes","","",5,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",5,[[]]],[11,"from_literal","","",5,[[]]],[11,"from_signed_literal","","",5,[[]]],[11,"comp_eq","","",5,[[]]],[11,"comp_ne","","",5,[[]]],[11,"comp_gte","","",5,[[]]],[11,"comp_gt","","",5,[[]]],[11,"comp_lte","","",5,[[]]],[11,"comp_lt","","",5,[[]]],[11,"inv","","",5,[[]]],[11,"pow_felem","","",5,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",5,[[]]],[11,"pow2","","Returns 2 to the power of the argument",5,[[],["scalar",3]]],[11,"from_byte_seq_be","","",5,[[],["scalar",3]]],[11,"from_public_byte_seq_be","","",5,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_be","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",5,[[],["seq",3]]],[11,"from_byte_seq_le","","",5,[[["seqtrait",8],["u8",3]],["scalar",3]]],[11,"from_public_byte_seq_le","","",5,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_le","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",5,[[],["seq",3]]],[11,"from_secret_literal","","",5,[[["u128",3]],["scalar",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",2,[[["biguint",3]],["fpcanvas",3]]],[11,"from","","",2,[[["bigint",3]],["fpcanvas",3]]],[11,"from","","",3,[[["fpcanvas",3]],["fp",3]]],[11,"from","","",4,[[["biguint",3]],["scalarcanvas",3]]],[11,"from","","",4,[[["bigint",3]],["scalarcanvas",3]]],[11,"from","","",5,[[["scalarcanvas",3]],["scalar",3]]],[11,"into","","",2,[[],["bigint",3]]],[11,"into","","",2,[[],["biguint",3]]],[11,"into","","",3,[[],["fpcanvas",3]]],[11,"into","","",4,[[],["bigint",3]]],[11,"into","","",4,[[],["biguint",3]]],[11,"into","","",5,[[],["scalarcanvas",3]]],[11,"clone","","",2,[[],["fpcanvas",3]]],[11,"clone","","",3,[[],["fp",3]]],[11,"clone","","",0,[[],["serializedfp",3]]],[11,"clone","","",1,[[],["arrayfp",3]]],[11,"clone","","",4,[[],["scalarcanvas",3]]],[11,"clone","","",5,[[],["scalar",3]]],[11,"default","","",2,[[],["fpcanvas",3]]],[11,"default","","",3,[[],["fp",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",4,[[],["scalarcanvas",3]]],[11,"default","","",5,[[],["scalar",3]]],[11,"cmp","","",2,[[["fpcanvas",3]],["ordering",4]]],[11,"cmp","","",3,[[],["ordering",4]]],[11,"cmp","","",4,[[["scalarcanvas",3]],["ordering",4]]],[11,"cmp","","",5,[[],["ordering",4]]],[11,"eq","","",2,[[["fpcanvas",3]]]],[11,"eq","","",3,[[]]],[11,"eq","","",4,[[["scalarcanvas",3]]]],[11,"eq","","",5,[[]]],[11,"partial_cmp","","",2,[[["fpcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["scalarcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",5,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"div","","",2,[[["fpcanvas",3]],["fpcanvas",3]]],[11,"div","","",3,[[["fp",3]],["fp",3]]],[11,"div","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"div","","",5,[[["scalar",3]],["scalar",3]]],[11,"rem","","",2,[[["fpcanvas",3]],["fpcanvas",3]]],[11,"rem","","",3,[[["fp",3]],["fp",3]]],[11,"rem","","",0,[[["serializedfp",3]],["serializedfp",3]]],[11,"rem","","",1,[[["arrayfp",3]],["arrayfp",3]]],[11,"rem","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"rem","","",5,[[["scalar",3]],["scalar",3]]],[11,"sub","","",2,[[["fpcanvas",3]],["fpcanvas",3]]],[11,"sub","","",3,[[["fp",3]],["fp",3]]],[11,"sub","","",0,[[["serializedfp",3]],["serializedfp",3]]],[11,"sub","","",1,[[["arrayfp",3]],["arrayfp",3]]],[11,"sub","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"sub","","",5,[[["scalar",3]],["scalar",3]]],[11,"add","","",2,[[["fpcanvas",3]],["fpcanvas",3]]],[11,"add","","",3,[[["fp",3]],["fp",3]]],[11,"add","","",0,[[["serializedfp",3]],["serializedfp",3]]],[11,"add","","",1,[[["arrayfp",3]],["arrayfp",3]]],[11,"add","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"add","","",5,[[["scalar",3]],["scalar",3]]],[11,"mul","","",2,[[["fpcanvas",3]],["fpcanvas",3]]],[11,"mul","","",3,[[["fp",3]],["fp",3]]],[11,"mul","","",0,[[["serializedfp",3]],["serializedfp",3]]],[11,"mul","","",1,[[["arrayfp",3]],["arrayfp",3]]],[11,"mul","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"mul","","",5,[[["scalar",3]],["scalar",3]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["u64",3],["iter",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"ZERO","","",2,[[]]],[11,"ONE","","",2,[[]]],[11,"TWO","","",2,[[]]],[11,"from_literal","","",2,[[]]],[11,"from_hex_string","","",2,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",2,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",2,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",2,[[]]],[11,"rotate_left","","",2,[[]]],[11,"rotate_right","","",2,[[]]],[11,"ZERO","","",3,[[]]],[11,"ONE","","",3,[[]]],[11,"TWO","","",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_hex_string","","",3,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",3,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",3,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",3,[[]]],[11,"rotate_left","","",3,[[]]],[11,"rotate_right","","",3,[[]]],[11,"ZERO","","",4,[[]]],[11,"ONE","","",4,[[]]],[11,"TWO","","",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_hex_string","","",4,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",4,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",4,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",4,[[]]],[11,"rotate_left","","",4,[[]]],[11,"rotate_right","","",4,[[]]],[11,"ZERO","","",5,[[]]],[11,"ONE","","",5,[[]]],[11,"TWO","","",5,[[]]],[11,"from_literal","","",5,[[]]],[11,"from_hex_string","","",5,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",5,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",5,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",5,[[]]],[11,"rotate_left","","",5,[[]]],[11,"rotate_right","","",5,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",2,[[]]],[11,"absolute","","`|self|`",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",3,[[]]],[11,"absolute","","`|self|`",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",4,[[]]],[11,"absolute","","`|self|`",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",5,[[]]],[11,"add_mod","","`(self + rhs) % n`",5,[[]]],[11,"mul_mod","","`(self * rhs) % n`",5,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",5,[[]]],[11,"modulo","","`self % n`",5,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",5,[[]]],[11,"absolute","","`|self|`",5,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]],[11,"max_val","","Return largest value that can be represented.",5,[[]]],[11,"wrap_add","","",5,[[]]],[11,"wrap_sub","","",5,[[]]],[11,"wrap_mul","","",5,[[]]],[11,"wrap_div","","",5,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",5,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",5,[[]]],[11,"divide","","Division.",5,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",5,[[]]],[11,"equal","","",5,[[]]],[11,"greater_than","","",5,[[]]],[11,"greater_than_or_qual","","",5,[[]]],[11,"less_than","","",5,[[]]],[11,"less_than_or_equal","","",5,[[]]],[11,"not_equal_bm","","",5,[[]]],[11,"equal_bm","","",5,[[]]],[11,"greater_than_bm","","",5,[[]]],[11,"greater_than_or_equal_bm","","",5,[[]]],[11,"less_than_bm","","",5,[[]]],[11,"less_than_or_equal_bm","","",5,[[]]]],"p":[[3,"SerializedFp"],[3,"ArrayFp"],[3,"FpCanvas"],[3,"Fp"],[3,"ScalarCanvas"],[3,"Scalar"]]},\
"hacspec_chacha20":{"doc":"","i":[[3,"State","hacspec_chacha20","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"Constants","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"Block","","Fixed length byte array.",null,null],[12,"0","","",2,null],[3,"ChaChaIV","","Fixed length byte array.",null,null],[12,"0","","",3,null],[3,"ChaChaKey","","Fixed length byte array.",null,null],[12,"0","","",4,null],[5,"chacha20_quarter_round","","",null,[[["state",3],["stateidx",6]],["state",3]]],[5,"chacha20_rounds","","",null,[[["state",3]],["state",3]]],[5,"chacha20_core","","",null,[[["u32",3],["state",3]],["state",3]]],[5,"chacha20_constants_init","","",null,[[],["constants",3]]],[5,"chacha20_init","","",null,[[["chachaiv",3],["u32",3],["chachakey",3]],["state",3]]],[5,"chacha20_key_block","","",null,[[["state",3]],["block",3]]],[5,"chacha20_key_block0","","",null,[[["chachaiv",3],["chachakey",3]],["block",3]]],[5,"chacha20_encrypt_block","","",null,[[["block",3],["state",3],["u32",3]],["block",3]]],[5,"chacha20_encrypt_last","","",null,[[["byteseq",6],["state",3],["u32",3]],["byteseq",6]]],[5,"chacha20_update","","",null,[[["state",3],["byteseq",6]],["byteseq",6]]],[5,"chacha20","","",null,[[["chachaiv",3],["byteseq",6],["chachakey",3]],["byteseq",6]]],[6,"StateIdx","","",null,null],[6,"ConstantsIdx","","",null,null],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u32",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u32",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u32",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u32",3]],["state",3]]],[11,"from_seq","","",0,[[],["state",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["state",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["state",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["state",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u32",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u32",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u32",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u32",3]],["constants",3]]],[11,"from_seq","","",1,[[],["constants",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["constants",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["constants",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["constants",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",2,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",2,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["block",3]]],[11,"declassify_eq","","",2,[[]]],[11,"to_be_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",2,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",2,[[],["block",3]]],[11,"to_be_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"new","","",3,[[]]],[11,"length","","",3,[[]]],[11,"from_array","","",3,[[]]],[11,"from_native_slice","","",3,[[]]],[11,"capacity","","",3,[[]]],[11,"from_slice","","",3,[[]]],[11,"concat","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",3,[[["range",3]]]],[11,"slice","","",3,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",3,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",3,[[]]],[11,"get_chunk_len","","",3,[[]]],[11,"get_chunk","","",3,[[]]],[11,"set_chunk","","",3,[[]]],[11,"from_vec","","",3,[[["vec",3],["u8",3]],["chachaiv",3]]],[11,"from_seq","","",3,[[],["chachaiv",3]]],[11,"from_hex","","Read hex string to Bytes.",3,[[],["chachaiv",3]]],[11,"declassify_eq","","",3,[[]]],[11,"to_be_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",3,[[],["chachaiv",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",3,[[],["chachaiv",3]]],[11,"to_be_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",3,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",3,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",3,[[],["string",3]]],[11,"new","","",4,[[]]],[11,"length","","",4,[[]]],[11,"from_array","","",4,[[]]],[11,"from_native_slice","","",4,[[]]],[11,"capacity","","",4,[[]]],[11,"from_slice","","",4,[[]]],[11,"concat","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",4,[[["range",3]]]],[11,"slice","","",4,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",4,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",4,[[]]],[11,"get_chunk_len","","",4,[[]]],[11,"get_chunk","","",4,[[]]],[11,"set_chunk","","",4,[[]]],[11,"from_vec","","",4,[[["vec",3],["u8",3]],["chachakey",3]]],[11,"from_seq","","",4,[[],["chachakey",3]]],[11,"from_hex","","Read hex string to Bytes.",4,[[],["chachakey",3]]],[11,"declassify_eq","","",4,[[]]],[11,"to_be_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",4,[[],["chachakey",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",4,[[],["chachakey",3]]],[11,"to_be_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",4,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",4,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",4,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"clone","","",0,[[],["state",3]]],[11,"clone","","",1,[[],["constants",3]]],[11,"clone","","",2,[[],["block",3]]],[11,"clone","","",3,[[],["chachaiv",3]]],[11,"clone","","",4,[[],["chachakey",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"rem","","",0,[[["state",3]],["state",3]]],[11,"rem","","",1,[[["constants",3]],["constants",3]]],[11,"rem","","",2,[[["block",3]],["block",3]]],[11,"rem","","",3,[[["chachaiv",3]],["chachaiv",3]]],[11,"rem","","",4,[[["chachakey",3]],["chachakey",3]]],[11,"sub","","",0,[[["state",3]],["state",3]]],[11,"sub","","",1,[[["constants",3]],["constants",3]]],[11,"sub","","",2,[[["block",3]],["block",3]]],[11,"sub","","",3,[[["chachaiv",3]],["chachaiv",3]]],[11,"sub","","",4,[[["chachakey",3]],["chachakey",3]]],[11,"add","","",0,[[["state",3]],["state",3]]],[11,"add","","",1,[[["constants",3]],["constants",3]]],[11,"add","","",2,[[["block",3]],["block",3]]],[11,"add","","",3,[[["chachaiv",3]],["chachaiv",3]]],[11,"add","","",4,[[["chachakey",3]],["chachakey",3]]],[11,"mul","","",0,[[["state",3]],["state",3]]],[11,"mul","","",1,[[["constants",3]],["constants",3]]],[11,"mul","","",2,[[["block",3]],["block",3]]],[11,"mul","","",3,[[["chachaiv",3]],["chachaiv",3]]],[11,"mul","","",4,[[["chachakey",3]],["chachakey",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u32",3]]],[11,"index","","",1,[[],["u32",3]]],[11,"index","","",1,[[],["u32",3]]],[11,"index","","",1,[[],["u32",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[["rangefull",3]]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",1,[[],["u32",3]]],[11,"index_mut","","",1,[[],["u32",3]]],[11,"index_mut","","",1,[[],["u32",3]]],[11,"index_mut","","",1,[[],["u32",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u32",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u32",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"create","","",3,[[]]],[11,"len","","",3,[[]]],[11,"iter","","",3,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",3,[[]]],[11,"update","","",3,[[]]],[11,"update_start","","",3,[[]]],[11,"create","","",4,[[]]],[11,"len","","",4,[[]]],[11,"iter","","",4,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",4,[[]]],[11,"update","","",4,[[]]],[11,"update_start","","",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","",3,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","",4,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",4,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]]],"p":[[3,"State"],[3,"Constants"],[3,"Block"],[3,"ChaChaIV"],[3,"ChaChaKey"]]},\
"hacspec_chacha20poly1305":{"doc":"","i":[[4,"Error","hacspec_chacha20poly1305","",null,null],[13,"InvalidTag","","",0,null],[5,"init","","",null,[[["chachapolyiv",6],["chachapolykey",6]],["polystate",6]]],[5,"poly1305_update_padded","","",null,[[["polystate",6],["byteseq",6]],["polystate",6]]],[5,"finish","","",null,[[["polystate",6]],["poly1305tag",3]]],[5,"chacha20_poly1305_encrypt","","",null,[[["chachapolyiv",6],["byteseq",6],["chachapolykey",6]]]],[5,"chacha20_poly1305_decrypt","","",null,[[["chachapolyiv",6],["poly1305tag",3],["byteseq",6],["chachapolykey",6]],["byteseqresult",6]]],[6,"ChaChaPolyKey","","",null,null],[6,"ChaChaPolyIV","","",null,null],[6,"ByteSeqResult","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"Error"]]},\
"hacspec_curve25519":{"doc":"","i":[[3,"FieldCanvas","hacspec_curve25519","",null,null],[3,"X25519FieldElement","","",null,null],[3,"ScalarCanvas","","",null,null],[3,"Scalar","","",null,null],[3,"X25519SerializedPoint","","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"X25519SerializedScalar","","Fixed length byte array.",null,null],[12,"0","","",1,null],[5,"x25519_scalarmult","","",null,[[["x25519serializedscalar",3],["x25519serializedpoint",3]],["x25519serializedpoint",3]]],[5,"x25519_secret_to_public","","",null,[[["x25519serializedscalar",3]],["x25519serializedpoint",3]]],[11,"max_value","","",2,[[]]],[11,"from_literal","","",2,[[]]],[11,"from_signed_literal","","",2,[[]]],[11,"pow2","","Returns 2 to the power of the argument",2,[[],["fieldcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",2,[[]]],[11,"from_hex","","",2,[[]]],[11,"from_be_bytes","","",2,[[]]],[11,"from_le_bytes","","",2,[[]]],[11,"to_be_bytes","","",2,[[]]],[11,"to_le_bytes","","",2,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",2,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"inv","","",2,[[]]],[11,"pow_felem","","",2,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",2,[[]]],[11,"from_byte_seq_be","","",2,[[],["fieldcanvas",3]]],[11,"from_public_byte_seq_be","","",2,[[["seqtrait",8]],["fieldcanvas",3]]],[11,"to_byte_seq_be","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_canvas","","",3,[[["fieldcanvas",3]],["x25519fieldelement",3]]],[11,"into_canvas","","",3,[[],["fieldcanvas",3]]],[11,"max","","",3,[[],["fieldcanvas",3]]],[11,"declassify","","",3,[[],["bigint",3]]],[11,"from_hex","","",3,[[]]],[11,"from_be_bytes","","",3,[[]]],[11,"to_be_bytes","","",3,[[],["vec",3]]],[11,"from_le_bytes","","",3,[[]]],[11,"to_le_bytes","","",3,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_signed_literal","","",3,[[]]],[11,"comp_eq","","",3,[[]]],[11,"comp_ne","","",3,[[]]],[11,"comp_gte","","",3,[[]]],[11,"comp_gt","","",3,[[]]],[11,"comp_lte","","",3,[[]]],[11,"comp_lt","","",3,[[]]],[11,"inv","","",3,[[]]],[11,"pow_felem","","",3,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",3,[[]]],[11,"pow2","","Returns 2 to the power of the argument",3,[[],["x25519fieldelement",3]]],[11,"from_byte_seq_be","","",3,[[],["x25519fieldelement",3]]],[11,"from_public_byte_seq_be","","",3,[[["seqtrait",8]],["x25519fieldelement",3]]],[11,"to_byte_seq_be","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",3,[[],["seq",3]]],[11,"from_byte_seq_le","","",3,[[["seqtrait",8],["u8",3]],["x25519fieldelement",3]]],[11,"from_public_byte_seq_le","","",3,[[["seqtrait",8]],["x25519fieldelement",3]]],[11,"to_byte_seq_le","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",3,[[],["seq",3]]],[11,"from_secret_literal","","",3,[[["u128",3]],["x25519fieldelement",3]]],[11,"max_value","","",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_signed_literal","","",4,[[]]],[11,"pow2","","Returns 2 to the power of the argument",4,[[],["scalarcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",4,[[]]],[11,"from_hex","","",4,[[]]],[11,"from_be_bytes","","",4,[[]]],[11,"from_le_bytes","","",4,[[]]],[11,"to_be_bytes","","",4,[[]]],[11,"to_le_bytes","","",4,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",4,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"inv","","",4,[[]]],[11,"pow_felem","","",4,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",4,[[]]],[11,"from_byte_seq_be","","",4,[[],["scalarcanvas",3]]],[11,"from_public_byte_seq_be","","",4,[[["seqtrait",8]],["scalarcanvas",3]]],[11,"to_byte_seq_be","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_canvas","","",5,[[["scalarcanvas",3]],["scalar",3]]],[11,"into_canvas","","",5,[[],["scalarcanvas",3]]],[11,"max","","",5,[[],["scalarcanvas",3]]],[11,"declassify","","",5,[[],["bigint",3]]],[11,"from_hex","","",5,[[]]],[11,"from_be_bytes","","",5,[[]]],[11,"to_be_bytes","","",5,[[],["vec",3]]],[11,"from_le_bytes","","",5,[[]]],[11,"to_le_bytes","","",5,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",5,[[]]],[11,"from_literal","","",5,[[]]],[11,"from_signed_literal","","",5,[[]]],[11,"comp_eq","","",5,[[]]],[11,"comp_ne","","",5,[[]]],[11,"comp_gte","","",5,[[]]],[11,"comp_gt","","",5,[[]]],[11,"comp_lte","","",5,[[]]],[11,"comp_lt","","",5,[[]]],[11,"inv","","",5,[[]]],[11,"pow_felem","","",5,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",5,[[]]],[11,"pow2","","Returns 2 to the power of the argument",5,[[],["scalar",3]]],[11,"from_byte_seq_be","","",5,[[],["scalar",3]]],[11,"from_public_byte_seq_be","","",5,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_be","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",5,[[],["seq",3]]],[11,"from_byte_seq_le","","",5,[[["seqtrait",8],["u8",3]],["scalar",3]]],[11,"from_public_byte_seq_le","","",5,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_le","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",5,[[],["seq",3]]],[11,"from_secret_literal","","",5,[[["u128",3]],["scalar",3]]],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["x25519serializedpoint",3]]],[11,"from_seq","","",0,[[],["x25519serializedpoint",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["x25519serializedpoint",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["x25519serializedpoint",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["x25519serializedpoint",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["x25519serializedscalar",3]]],[11,"from_seq","","",1,[[],["x25519serializedscalar",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["x25519serializedscalar",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["x25519serializedscalar",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["x25519serializedscalar",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[["biguint",3]],["fieldcanvas",3]]],[11,"from","","",2,[[["bigint",3]],["fieldcanvas",3]]],[11,"from","","",3,[[["fieldcanvas",3]],["x25519fieldelement",3]]],[11,"from","","",4,[[["biguint",3]],["scalarcanvas",3]]],[11,"from","","",4,[[["bigint",3]],["scalarcanvas",3]]],[11,"from","","",5,[[["scalarcanvas",3]],["scalar",3]]],[11,"into","","",2,[[],["bigint",3]]],[11,"into","","",2,[[],["biguint",3]]],[11,"into","","",3,[[],["fieldcanvas",3]]],[11,"into","","",4,[[],["bigint",3]]],[11,"into","","",4,[[],["biguint",3]]],[11,"into","","",5,[[],["scalarcanvas",3]]],[11,"clone","","",2,[[],["fieldcanvas",3]]],[11,"clone","","",3,[[],["x25519fieldelement",3]]],[11,"clone","","",4,[[],["scalarcanvas",3]]],[11,"clone","","",5,[[],["scalar",3]]],[11,"clone","","",0,[[],["x25519serializedpoint",3]]],[11,"clone","","",1,[[],["x25519serializedscalar",3]]],[11,"default","","",2,[[],["fieldcanvas",3]]],[11,"default","","",3,[[],["x25519fieldelement",3]]],[11,"default","","",4,[[],["scalarcanvas",3]]],[11,"default","","",5,[[],["scalar",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"cmp","","",2,[[["fieldcanvas",3]],["ordering",4]]],[11,"cmp","","",3,[[],["ordering",4]]],[11,"cmp","","",4,[[["scalarcanvas",3]],["ordering",4]]],[11,"cmp","","",5,[[],["ordering",4]]],[11,"eq","","",2,[[["fieldcanvas",3]]]],[11,"eq","","",3,[[]]],[11,"eq","","",4,[[["scalarcanvas",3]]]],[11,"eq","","",5,[[]]],[11,"partial_cmp","","",2,[[["fieldcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["scalarcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",5,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"div","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"div","","",3,[[["x25519fieldelement",3]],["x25519fieldelement",3]]],[11,"div","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"div","","",5,[[["scalar",3]],["scalar",3]]],[11,"rem","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"rem","","",3,[[["x25519fieldelement",3]],["x25519fieldelement",3]]],[11,"rem","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"rem","","",5,[[["scalar",3]],["scalar",3]]],[11,"rem","","",0,[[["x25519serializedpoint",3]],["x25519serializedpoint",3]]],[11,"rem","","",1,[[["x25519serializedscalar",3]],["x25519serializedscalar",3]]],[11,"sub","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"sub","","",3,[[["x25519fieldelement",3]],["x25519fieldelement",3]]],[11,"sub","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"sub","","",5,[[["scalar",3]],["scalar",3]]],[11,"sub","","",0,[[["x25519serializedpoint",3]],["x25519serializedpoint",3]]],[11,"sub","","",1,[[["x25519serializedscalar",3]],["x25519serializedscalar",3]]],[11,"add","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"add","","",3,[[["x25519fieldelement",3]],["x25519fieldelement",3]]],[11,"add","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"add","","",5,[[["scalar",3]],["scalar",3]]],[11,"add","","",0,[[["x25519serializedpoint",3]],["x25519serializedpoint",3]]],[11,"add","","",1,[[["x25519serializedscalar",3]],["x25519serializedscalar",3]]],[11,"mul","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"mul","","",3,[[["x25519fieldelement",3]],["x25519fieldelement",3]]],[11,"mul","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"mul","","",5,[[["scalar",3]],["scalar",3]]],[11,"mul","","",0,[[["x25519serializedpoint",3]],["x25519serializedpoint",3]]],[11,"mul","","",1,[[["x25519serializedscalar",3]],["x25519serializedscalar",3]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"ZERO","","",2,[[]]],[11,"ONE","","",2,[[]]],[11,"TWO","","",2,[[]]],[11,"from_literal","","",2,[[]]],[11,"from_hex_string","","",2,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",2,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",2,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",2,[[]]],[11,"rotate_left","","",2,[[]]],[11,"rotate_right","","",2,[[]]],[11,"ZERO","","",3,[[]]],[11,"ONE","","",3,[[]]],[11,"TWO","","",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_hex_string","","",3,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",3,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",3,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",3,[[]]],[11,"rotate_left","","",3,[[]]],[11,"rotate_right","","",3,[[]]],[11,"ZERO","","",4,[[]]],[11,"ONE","","",4,[[]]],[11,"TWO","","",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_hex_string","","",4,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",4,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",4,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",4,[[]]],[11,"rotate_left","","",4,[[]]],[11,"rotate_right","","",4,[[]]],[11,"ZERO","","",5,[[]]],[11,"ONE","","",5,[[]]],[11,"TWO","","",5,[[]]],[11,"from_literal","","",5,[[]]],[11,"from_hex_string","","",5,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",5,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",5,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",5,[[]]],[11,"rotate_left","","",5,[[]]],[11,"rotate_right","","",5,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",2,[[]]],[11,"absolute","","`|self|`",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",3,[[]]],[11,"absolute","","`|self|`",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",4,[[]]],[11,"absolute","","`|self|`",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",5,[[]]],[11,"add_mod","","`(self + rhs) % n`",5,[[]]],[11,"mul_mod","","`(self * rhs) % n`",5,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",5,[[]]],[11,"modulo","","`self % n`",5,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",5,[[]]],[11,"absolute","","`|self|`",5,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]],[11,"max_val","","Return largest value that can be represented.",5,[[]]],[11,"wrap_add","","",5,[[]]],[11,"wrap_sub","","",5,[[]]],[11,"wrap_mul","","",5,[[]]],[11,"wrap_div","","",5,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",5,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",5,[[]]],[11,"divide","","Division.",5,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",5,[[]]],[11,"equal","","",5,[[]]],[11,"greater_than","","",5,[[]]],[11,"greater_than_or_qual","","",5,[[]]],[11,"less_than","","",5,[[]]],[11,"less_than_or_equal","","",5,[[]]],[11,"not_equal_bm","","",5,[[]]],[11,"equal_bm","","",5,[[]]],[11,"greater_than_bm","","",5,[[]]],[11,"greater_than_or_equal_bm","","",5,[[]]],[11,"less_than_bm","","",5,[[]]],[11,"less_than_or_equal_bm","","",5,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]]],"p":[[3,"X25519SerializedPoint"],[3,"X25519SerializedScalar"],[3,"FieldCanvas"],[3,"X25519FieldElement"],[3,"ScalarCanvas"],[3,"Scalar"]]},\
"hacspec_derive":{"doc":"","i":[[24,"Numeric","hacspec_derive","",null,null]],"p":[]},\
"hacspec_dev":{"doc":"This crate can be used for tests that accompany hacspecs.","i":[[5,"hex_to_bytes","hacspec_dev","Convert a hex string to a byte vector.",null,[[],["vec",3]]],[0,"prelude","","",null,null],[8,"DeserializeOwned","hacspec_dev::prelude","A data structure that can be deserialized without…",null,null],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",0,[[],["result",4]]],[24,"Deserialize","","",null,null],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",1,[[],["result",4]]],[24,"Serialize","","",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",2,null],[13,"Bool","","Represents a JSON boolean.",2,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",2,null],[13,"String","","Represents a JSON string.",2,null],[13,"Array","","Represents a JSON array.",2,null],[13,"Object","","Represents a JSON object.",2,null],[3,"File","","A reference to an open file on the filesystem.",null,null],[8,"BufRead","","A `BufRead` is a type of `Read`er which has an internal…",null,null],[10,"fill_buf","","Returns the contents of the internal buffer, filling it…",3,[[],[["result",4],["error",3]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",3,[[]]],[11,"read_until","","Read all bytes into `buf` until the delimiter `byte` or…",3,[[["vec",3]],[["error",3],["result",4]]]],[11,"read_line","","Read all bytes until a newline (the 0xA byte) is reached,…",3,[[["string",3]],[["error",3],["result",4]]]],[11,"split","","Returns an iterator over the contents of this reader split…",3,[[],["split",3]]],[11,"lines","","Returns an iterator over the lines of this reader.",3,[[],["lines",3]]],[8,"Read","","The `Read` trait allows for reading bytes from a source.",null,null],[10,"read","","Pull some bytes from this source into the specified…",4,[[],[["error",3],["result",4]]]],[11,"read_vectored","","Like `read`, except that it reads into a slice of buffers.",4,[[],[["error",3],["result",4]]]],[11,"is_read_vectored","","Determines if this `Read`er has an efficient…",4,[[]]],[11,"initializer","","Determines if this `Read`er can work with buffers of…",4,[[],["initializer",3]]],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into…",4,[[["vec",3]],[["error",3],["result",4]]]],[11,"read_to_string","","Read all bytes until EOF in this source, appending them to…",4,[[["string",3]],[["error",3],["result",4]]]],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",4,[[],[["error",3],["result",4]]]],[11,"by_ref","","Creates a \\\"by reference\\\" adaptor for this instance of…",4,[[]]],[11,"bytes","","Transforms this `Read` instance to an [`Iterator`] over…",4,[[],["bytes",3]]],[11,"chain","","Creates an adaptor which will chain this stream with…",4,[[],["chain",3]]],[11,"take","","Creates an adaptor which will read at most `limit` bytes…",4,[[],["take",3]]],[8,"Seek","","The `Seek` trait provides a cursor which can be moved…",null,null],[10,"seek","","Seek to an offset, in bytes, in a stream.",5,[[["seekfrom",4]],[["result",4],["error",3]]]],[11,"stream_len","","Returns the length of this stream (in bytes).",5,[[],[["result",4],["error",3]]]],[11,"stream_position","","Returns the current seek position from the start of the…",5,[[],[["result",4],["error",3]]]],[8,"Write","","A trait for objects which are byte-oriented sinks.",null,null],[10,"write","","Write a buffer into this writer, returning how many bytes…",6,[[],[["error",3],["result",4]]]],[11,"write_vectored","","Like `write`, except that it writes from a slice of buffers.",6,[[],[["error",3],["result",4]]]],[11,"is_write_vectored","","Determines if this `Write`er has an efficient…",6,[[]]],[10,"flush","","Flush this output stream, ensuring that all intermediately…",6,[[],[["error",3],["result",4]]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",6,[[],[["error",3],["result",4]]]],[11,"write_all_vectored","","Attempts to write multiple buffers into this writer.",6,[[],[["error",3],["result",4]]]],[11,"write_fmt","","Writes a formatted string into this writer, returning any…",6,[[["arguments",3]],[["error",3],["result",4]]]],[11,"by_ref","","Creates a \\\"by reference\\\" adaptor for this instance of…",6,[[]]],[3,"BufReader","","The `BufReader<R>` struct adds buffering to any reader.",null,null],[0,"rand","hacspec_dev","",null,null],[5,"random_public_integer","hacspec_dev::rand","Random public integer",null,[[]]],[5,"random_public_integer_range","","Random public integer in range `[min, max)`",null,[[]]],[5,"random_public_byte","","Random public byte",null,[[]]],[5,"random_byte","","Random byte",null,[[],["u8",3]]],[5,"random_bytes","","Random array",null,[[],[["default",8],["fill",8]]]],[5,"random_byte_vec","","Random vector",null,[[],["vec",3]]],[0,"test_vectors","hacspec_dev","Provide utilities to read test vectors from JSON files.",null,null],[14,"create_test_vectors","","",null,null],[11,"from","hacspec_dev::prelude","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"write","","",7,[[],[["error",3],["result",4]]]],[11,"write_vectored","","",7,[[],[["error",3],["result",4]]]],[11,"is_write_vectored","","",7,[[]]],[11,"flush","","",7,[[],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"read","","",8,[[],[["error",3],["result",4]]]],[11,"read_vectored","","",8,[[],[["error",3],["result",4]]]],[11,"is_read_vectored","","",8,[[]]],[11,"initializer","","",8,[[],["initializer",3]]],[11,"read","","",7,[[],[["error",3],["result",4]]]],[11,"read_vectored","","",7,[[],[["error",3],["result",4]]]],[11,"is_read_vectored","","",7,[[]]],[11,"initializer","","",7,[[],["initializer",3]]],[11,"as_raw_fd","","",7,[[]]],[11,"from_raw_fd","","",7,[[],["file",3]]],[11,"fill_buf","","",8,[[],[["result",4],["error",3]]]],[11,"consume","","",8,[[]]],[11,"seek","","",7,[[["seekfrom",4]],[["result",4],["error",3]]]],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",8,[[["seekfrom",4]],[["result",4],["error",3]]]],[11,"into_raw_fd","","",7,[[]]],[11,"read_at","","",7,[[],[["error",3],["result",4]]]],[11,"write_at","","",7,[[],[["error",3],["result",4]]]],[11,"into_deserializer","","",2,[[]]],[11,"from_str","","",2,[[],[["error",3],["result",4],["value",4]]]],[11,"from_iter","","Convert an iteratable type to a `Value`",2,[[],["value",4]]],[11,"from_iter","","Convert an iteratable type to a `Value`",2,[[],["value",4]]],[11,"from","","Convert 64-bit floating point number to `Value`",2,[[],["value",4]]],[11,"from","","Convert `Number` to `Value`",2,[[["number",3]],["value",4]]],[11,"from","","Convert `()` to `Value`",2,[[],["value",4]]],[11,"from","","Convert a `Vec` to `Value`",2,[[["vec",3]],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","Convert copy-on-write string to `Value`",2,[[["cow",4]],["value",4]]],[11,"from","","Convert string slice to `Value`",2,[[],["value",4]]],[11,"from","","Convert map (with string keys) to `Value`",2,[[["map",3],["value",4],["string",3]],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","Convert 32-bit floating point number to `Value`",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","Convert `String` to `Value`",2,[[["string",3]],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"from","","Convert boolean to `Value`",2,[[],["value",4]]],[11,"from","","Convert a slice to `Value`",2,[[],["value",4]]],[11,"from","","",2,[[],["value",4]]],[11,"index_mut","","Write into a `serde_json::Value` using the syntax…",2,[[],["value",4]]],[11,"deserialize_any","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_i8","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_i16","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_i32","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_i64","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_u8","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_u16","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_u32","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_u64","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_f32","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_f64","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_i128","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_u128","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_option","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_enum","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_newtype_struct","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_bool","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_char","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_str","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_string","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_bytes","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_byte_buf","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_unit","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_unit_struct","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_seq","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_tuple","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_tuple_struct","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_map","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_struct","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_identifier","","",2,[[],[["result",4],["error",3]]]],[11,"deserialize_ignored_any","","",2,[[],[["result",4],["error",3]]]],[11,"fmt","","Display a JSON value as a string.",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"serialize","","",2,[[],["result",4]]],[11,"eq","","",2,[[["string",3]]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[["value",4]]]],[11,"ne","","",2,[[["value",4]]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"eq","","",2,[[]]],[11,"default","","",2,[[],["value",4]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"index","","Index into a `serde_json::Value` using the syntax…",2,[[],["value",4]]],[11,"clone","","",2,[[],["value",4]]],[11,"deserialize","","",2,[[],[["result",4],["value",4]]]],[11,"get","","Index into a JSON array or map. A string index can be used…",2,[[],[["option",4],["value",4]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",2,[[],[["option",4],["value",4]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",2,[[]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",2,[[],[["option",4],["map",3]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",2,[[],[["map",3],["option",4]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",2,[[]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",2,[[],[["option",4],["vec",3]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",2,[[],[["option",4],["vec",3]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",2,[[]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",2,[[],["option",4]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",2,[[]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",2,[[]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",2,[[]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",2,[[]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",2,[[],["option",4]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",2,[[],["option",4]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",2,[[],["option",4]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",2,[[]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",2,[[],["option",4]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",2,[[]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",2,[[],["option",4]]],[11,"pointer","","Looks up a value by a JSON Pointer.",2,[[],[["option",4],["value",4]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",2,[[],[["option",4],["value",4]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",2,[[],["value",4]]],[11,"open","","Attempts to open a file in read-only mode.",7,[[],[["error",3],["result",4],["file",3]]]],[11,"create","","Opens a file in write-only mode.",7,[[],[["error",3],["result",4],["file",3]]]],[11,"with_options","","Returns a new OpenOptions object.",7,[[],["openoptions",3]]],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",7,[[],[["error",3],["result",4]]]],[11,"sync_data","","This function is similar to [`sync_all`], except that it…",7,[[],[["error",3],["result",4]]]],[11,"set_len","","Truncates or extends the underlying file, updating the…",7,[[],[["error",3],["result",4]]]],[11,"metadata","","Queries metadata about the underlying file.",7,[[],[["metadata",3],["error",3],["result",4]]]],[11,"try_clone","","Creates a new `File` instance that shares the same…",7,[[],[["error",3],["result",4],["file",3]]]],[11,"set_permissions","","Changes the permissions on the underlying file.",7,[[["permissions",3]],[["error",3],["result",4]]]],[11,"new","","Creates a new `BufReader<R>` with a default buffer…",8,[[],["bufreader",3]]],[11,"with_capacity","","Creates a new `BufReader<R>` with the specified buffer…",8,[[],["bufreader",3]]],[11,"get_ref","","Gets a reference to the underlying reader.",8,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",8,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",8,[[]]],[11,"capacity","","Returns the number of bytes the internal buffer can hold…",8,[[]]],[11,"into_inner","","Unwraps this `BufReader<R>`, returning the underlying…",8,[[]]],[11,"seek_relative","","Seeks relative to the current position. If the new…",8,[[],[["error",3],["result",4]]]]],"p":[[8,"Deserialize"],[8,"Serialize"],[4,"Value"],[8,"BufRead"],[8,"Read"],[8,"Seek"],[8,"Write"],[3,"File"],[3,"BufReader"]]},\
"hacspec_ecdsa_p256_sha256":{"doc":"","i":[[4,"Error","hacspec_ecdsa_p256_sha256","",null,null],[13,"InvalidScalar","","",0,null],[13,"InvalidSignature","","",0,null],[5,"sign","","",null,[[["secretkey",6],["p256scalar",3],["byteseq",6]],["signatureresult",6]]],[5,"ecdsa_p256_sha256_sign","","",null,[[["secretkey",6],["p256scalar",3],["byteseq",6]],["signatureresult",6]]],[5,"verify","","",null,[[["publickey",6],["signature",6],["byteseq",6]],["verifyresult",6]]],[5,"ecdsa_p256_sha256_verify","","",null,[[["publickey",6],["signature",6],["byteseq",6]],["verifyresult",6]]],[6,"PublicKey","","",null,null],[6,"SecretKey","","",null,null],[6,"Signature","","",null,null],[6,"SignatureResult","","",null,null],[6,"VerifyResult","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"Error"]]},\
"hacspec_gf128":{"doc":"","i":[[3,"Gf128Block","hacspec_gf128","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"Gf128Key","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"Gf128Tag","","Fixed length byte array.",null,null],[12,"0","","",2,null],[5,"gmac","","",null,[[["gf128key",3],["byteseq",6]],["gf128tag",3]]],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["gf128block",3]]],[11,"from_seq","","",0,[[],["gf128block",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["gf128block",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["gf128block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["gf128block",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["gf128key",3]]],[11,"from_seq","","",1,[[],["gf128key",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["gf128key",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["gf128key",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["gf128key",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",2,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3],["u8",3]],["gf128tag",3]]],[11,"from_seq","","",2,[[],["gf128tag",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["gf128tag",3]]],[11,"declassify_eq","","",2,[[]]],[11,"to_be_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",2,[[],["gf128tag",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",2,[[],["gf128tag",3]]],[11,"to_be_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",0,[[],["gf128block",3]]],[11,"clone","","",1,[[],["gf128key",3]]],[11,"clone","","",2,[[],["gf128tag",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"rem","","",0,[[["gf128block",3]],["gf128block",3]]],[11,"rem","","",1,[[["gf128key",3]],["gf128key",3]]],[11,"rem","","",2,[[["gf128tag",3]],["gf128tag",3]]],[11,"sub","","",0,[[["gf128block",3]],["gf128block",3]]],[11,"sub","","",1,[[["gf128key",3]],["gf128key",3]]],[11,"sub","","",2,[[["gf128tag",3]],["gf128tag",3]]],[11,"add","","",0,[[["gf128block",3]],["gf128block",3]]],[11,"add","","",1,[[["gf128key",3]],["gf128key",3]]],[11,"add","","",2,[[["gf128tag",3]],["gf128tag",3]]],[11,"mul","","",0,[[["gf128block",3]],["gf128block",3]]],[11,"mul","","",1,[[["gf128key",3]],["gf128key",3]]],[11,"mul","","",2,[[["gf128tag",3]],["gf128tag",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]]],"p":[[3,"Gf128Block"],[3,"Gf128Key"],[3,"Gf128Tag"]]},\
"hacspec_gimli":{"doc":"","i":[[3,"State","hacspec_gimli","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"Block","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"Digest","","Fixed length byte array.",null,null],[12,"0","","",2,null],[3,"Nonce","","Fixed length byte array.",null,null],[12,"0","","",3,null],[3,"Key","","Fixed length byte array.",null,null],[12,"0","","",4,null],[3,"Tag","","Fixed length byte array.",null,null],[12,"0","","",5,null],[5,"gimli","","",null,[[["state",3]],["state",3]]],[5,"gimli_hash","","",null,[[["byteseq",6]],["digest",3]]],[5,"nonce_to_u32s","","",null,[[["nonce",3]],[["seq",3],["u32",3]]]],[5,"key_to_u32s","","",null,[[["key",3]],[["seq",3],["u32",3]]]],[5,"gimli_aead_encrypt","","",null,[[["nonce",3],["key",3],["byteseq",6]]]],[5,"gimli_aead_decrypt","","",null,[[["nonce",3],["byteseq",6],["key",3],["tag",3]],["byteseq",6]]],[6,"StateIdx","","",null,null],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u32",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u32",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u32",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u32",3]],["state",3]]],[11,"from_seq","","",0,[[],["state",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["state",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["state",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["state",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",1,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["block",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["block",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",2,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3],["u8",3]],["digest",3]]],[11,"from_seq","","",2,[[],["digest",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["digest",3]]],[11,"declassify_eq","","",2,[[]]],[11,"to_be_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",2,[[],["digest",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",2,[[],["digest",3]]],[11,"to_be_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"new","","",3,[[]]],[11,"length","","",3,[[]]],[11,"from_array","","",3,[[]]],[11,"from_native_slice","","",3,[[]]],[11,"capacity","","",3,[[]]],[11,"from_slice","","",3,[[]]],[11,"concat","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",3,[[["range",3]]]],[11,"slice","","",3,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",3,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",3,[[]]],[11,"get_chunk_len","","",3,[[]]],[11,"get_chunk","","",3,[[]]],[11,"set_chunk","","",3,[[]]],[11,"from_vec","","",3,[[["vec",3],["u8",3]],["nonce",3]]],[11,"from_seq","","",3,[[],["nonce",3]]],[11,"from_hex","","Read hex string to Bytes.",3,[[],["nonce",3]]],[11,"declassify_eq","","",3,[[]]],[11,"to_be_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",3,[[],["nonce",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",3,[[],["nonce",3]]],[11,"to_be_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",3,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",3,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",3,[[],["string",3]]],[11,"new","","",4,[[]]],[11,"length","","",4,[[]]],[11,"from_array","","",4,[[]]],[11,"from_native_slice","","",4,[[]]],[11,"capacity","","",4,[[]]],[11,"from_slice","","",4,[[]]],[11,"concat","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",4,[[["range",3]]]],[11,"slice","","",4,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",4,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",4,[[]]],[11,"get_chunk_len","","",4,[[]]],[11,"get_chunk","","",4,[[]]],[11,"set_chunk","","",4,[[]]],[11,"from_vec","","",4,[[["vec",3],["u8",3]],["key",3]]],[11,"from_seq","","",4,[[],["key",3]]],[11,"from_hex","","Read hex string to Bytes.",4,[[],["key",3]]],[11,"declassify_eq","","",4,[[]]],[11,"to_be_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",4,[[],["key",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",4,[[],["key",3]]],[11,"to_be_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",4,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",4,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",4,[[],["string",3]]],[11,"new","","",5,[[]]],[11,"length","","",5,[[]]],[11,"from_array","","",5,[[]]],[11,"from_native_slice","","",5,[[]]],[11,"capacity","","",5,[[]]],[11,"from_slice","","",5,[[]]],[11,"concat","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",5,[[["range",3]]]],[11,"slice","","",5,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",5,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",5,[[]]],[11,"get_chunk_len","","",5,[[]]],[11,"get_chunk","","",5,[[]]],[11,"set_chunk","","",5,[[]]],[11,"from_vec","","",5,[[["vec",3],["u8",3]],["tag",3]]],[11,"from_seq","","",5,[[],["tag",3]]],[11,"from_hex","","Read hex string to Bytes.",5,[[],["tag",3]]],[11,"declassify_eq","","",5,[[]]],[11,"to_be_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",5,[[],["tag",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",5,[[],["tag",3]]],[11,"to_be_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",5,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",5,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",5,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone","","",0,[[],["state",3]]],[11,"clone","","",1,[[],["block",3]]],[11,"clone","","",2,[[],["digest",3]]],[11,"clone","","",3,[[],["nonce",3]]],[11,"clone","","",4,[[],["key",3]]],[11,"clone","","",5,[[],["tag",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"rem","","",0,[[["state",3]],["state",3]]],[11,"rem","","",1,[[["block",3]],["block",3]]],[11,"rem","","",2,[[["digest",3]],["digest",3]]],[11,"rem","","",3,[[["nonce",3]],["nonce",3]]],[11,"rem","","",4,[[["key",3]],["key",3]]],[11,"rem","","",5,[[["tag",3]],["tag",3]]],[11,"sub","","",0,[[["state",3]],["state",3]]],[11,"sub","","",1,[[["block",3]],["block",3]]],[11,"sub","","",2,[[["digest",3]],["digest",3]]],[11,"sub","","",3,[[["nonce",3]],["nonce",3]]],[11,"sub","","",4,[[["key",3]],["key",3]]],[11,"sub","","",5,[[["tag",3]],["tag",3]]],[11,"add","","",0,[[["state",3]],["state",3]]],[11,"add","","",1,[[["block",3]],["block",3]]],[11,"add","","",2,[[["digest",3]],["digest",3]]],[11,"add","","",3,[[["nonce",3]],["nonce",3]]],[11,"add","","",4,[[["key",3]],["key",3]]],[11,"add","","",5,[[["tag",3]],["tag",3]]],[11,"mul","","",0,[[["state",3]],["state",3]]],[11,"mul","","",1,[[["block",3]],["block",3]]],[11,"mul","","",2,[[["digest",3]],["digest",3]]],[11,"mul","","",3,[[["nonce",3]],["nonce",3]]],[11,"mul","","",4,[[["key",3]],["key",3]]],[11,"mul","","",5,[[["tag",3]],["tag",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[],["u32",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[["rangefull",3]]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[["rangefull",3]]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",0,[[],["u32",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u32",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"create","","",3,[[]]],[11,"len","","",3,[[]]],[11,"iter","","",3,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",3,[[]]],[11,"update","","",3,[[]]],[11,"update_start","","",3,[[]]],[11,"create","","",4,[[]]],[11,"len","","",4,[[]]],[11,"iter","","",4,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",4,[[]]],[11,"update","","",4,[[]]],[11,"update_start","","",4,[[]]],[11,"create","","",5,[[]]],[11,"len","","",5,[[]]],[11,"iter","","",5,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",5,[[]]],[11,"update","","",5,[[]]],[11,"update_start","","",5,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","",3,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","",4,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",5,[[]]],[11,"add_mod","","`(self + rhs) % n`",5,[[]]],[11,"mul_mod","","`(self * rhs) % n`",5,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",5,[[]]],[11,"modulo","","`self % n`",5,[[]]],[11,"signed_modulo","","",5,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",5,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]],[11,"max_val","","Return largest value that can be represented.",5,[[]]],[11,"wrap_add","","",5,[[]]],[11,"wrap_sub","","",5,[[]]],[11,"wrap_mul","","",5,[[]]],[11,"wrap_div","","",5,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",5,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",5,[[]]],[11,"divide","","Division.",5,[[]]],[11,"inv","","Invert self modulo n.",5,[[]]],[11,"equal","","",5,[[]]],[11,"greater_than","","",5,[[]]],[11,"greater_than_or_qual","","",5,[[]]],[11,"less_than","","",5,[[]]],[11,"less_than_or_equal","","",5,[[]]],[11,"not_equal_bm","","",5,[[]]],[11,"equal_bm","","",5,[[]]],[11,"greater_than_bm","","",5,[[]]],[11,"greater_than_or_equal_bm","","",5,[[]]],[11,"less_than_bm","","",5,[[]]],[11,"less_than_or_equal_bm","","",5,[[]]]],"p":[[3,"State"],[3,"Block"],[3,"Digest"],[3,"Nonce"],[3,"Key"],[3,"Tag"]]},\
"hacspec_hkdf":{"doc":"","i":[[4,"HkdfError","hacspec_hkdf","",null,null],[13,"InvalidOutputLength","","",0,null],[5,"extract","","Extract a pseudo-random key from input key material (IKM)…",null,[[["byteseq",6]],["prk",3]]],[5,"expand","","Expand a key prk, using potentially empty info, and output…",null,[[["byteseq",6]],["hkdfbyteseqresult",6]]],[6,"HkdfByteSeqResult","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"HkdfError"]]},\
"hacspec_hmac":{"doc":"","i":[[3,"PRK","hacspec_hmac","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"Block","","Fixed length byte array.",null,null],[12,"0","","",1,null],[5,"hmac","","",null,[[["byteseq",6]],["prk",3]]],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["prk",3]]],[11,"from_seq","","",0,[[],["prk",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["prk",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["prk",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["prk",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",1,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["block",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["block",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",0,[[],["prk",3]]],[11,"clone","","",1,[[],["block",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"rem","","",0,[[["prk",3]],["prk",3]]],[11,"rem","","",1,[[["block",3]],["block",3]]],[11,"sub","","",0,[[["prk",3]],["prk",3]]],[11,"sub","","",1,[[["block",3]],["block",3]]],[11,"add","","",0,[[["prk",3]],["prk",3]]],[11,"add","","",1,[[["block",3]],["block",3]]],[11,"mul","","",0,[[["prk",3]],["prk",3]]],[11,"mul","","",1,[[["block",3]],["block",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]]],"p":[[3,"PRK"],[3,"Block"]]},\
"hacspec_lib":{"doc":"The hacspec standard library","i":[[0,"array","hacspec_lib","Arrays",null,null],[0,"math_integers","","Math Integers",null,null],[0,"prelude","","This module conveniently exports common subroutines…",null,null],[0,"abstract_int","hacspec_lib::prelude","",null,null],[0,"nat_mod","","",null,null],[4,"Sign","","A Sign is a `BigInt`\'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[0,"traits","","",null,null],[0,"bounds","hacspec_lib::prelude::traits","",null,null],[8,"Bounded","hacspec_lib::prelude::traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",1,[[]]],[10,"max_value","","returns the largest finite number this type can represent",1,[[]]],[0,"cast","hacspec_lib::prelude::traits","",null,null],[8,"ToPrimitive","hacspec_lib::prelude::traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",2,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",2,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",2,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",2,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",2,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",2,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",2,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",2,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",2,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",2,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",2,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",2,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",2,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",2,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",3,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",3,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",3,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",3,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",3,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",3,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",3,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",3,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",3,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",3,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",3,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",3,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",3,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",3,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",4,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",5,[[]]],[0,"float","hacspec_lib::prelude::traits","",null,null],[8,"FloatCore","hacspec_lib::prelude::traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",6,[[]]],[10,"neg_infinity","","Returns negative infinity.",6,[[]]],[10,"nan","","Returns NaN.",6,[[]]],[10,"neg_zero","","Returns `-0.0`.",6,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",6,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",6,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",6,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",6,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",6,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",6,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",6,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",6,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",6,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",6,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",6,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",6,[[]]],[11,"trunc","","Return the integer part of a number.",6,[[]]],[11,"fract","","Returns the fractional part of a number.",6,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",6,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",6,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",6,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",6,[[]]],[11,"min","","Returns the minimum of the two numbers.",6,[[]]],[11,"max","","Returns the maximum of the two numbers.",6,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",6,[[]]],[11,"powi","","Raise a number to an integer power.",6,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",6,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",6,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",6,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",7,[[]]],[10,"infinity","","Returns the infinite value.",7,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",7,[[]]],[10,"neg_zero","","Returns `-0.0`.",7,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",7,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",7,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",7,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",7,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",7,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",7,[[]]],[10,"trunc","","Return the integer part of a number.",7,[[]]],[10,"fract","","Returns the fractional part of a number.",7,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",7,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",7,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",7,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",7,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",7,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",7,[[]]],[10,"powi","","Raise a number to an integer power.",7,[[]]],[10,"powf","","Raise a number to a floating point power.",7,[[]]],[10,"sqrt","","Take the square root of a number.",7,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",7,[[]]],[10,"exp2","","Returns `2^(self)`.",7,[[]]],[10,"ln","","Returns the natural logarithm of the number.",7,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",7,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",7,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",7,[[]]],[11,"to_degrees","","Converts radians to degrees.",7,[[]]],[11,"to_radians","","Converts degrees to radians.",7,[[]]],[10,"max","","Returns the maximum of the two numbers.",7,[[]]],[10,"min","","Returns the minimum of the two numbers.",7,[[]]],[10,"abs_sub","","The positive difference of two numbers.",7,[[]]],[10,"cbrt","","Take the cubic root of a number.",7,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",7,[[]]],[10,"sin","","Computes the sine of a number (in radians).",7,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",7,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",7,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",7,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",7,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",7,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",7,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",7,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",7,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",7,[[]]],[10,"sinh","","Hyperbolic sine function.",7,[[]]],[10,"cosh","","Hyperbolic cosine function.",7,[[]]],[10,"tanh","","Hyperbolic tangent function.",7,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",7,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",7,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",7,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",8,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",8,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",8,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",8,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",8,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",8,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",8,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",8,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",8,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",8,[[]]],[10,"LN_10","","Return `ln(10.0)`.",8,[[]]],[10,"LN_2","","Return `ln(2.0)`.",8,[[]]],[10,"LOG10_E","","Return `log10(e)`.",8,[[]]],[10,"LOG2_E","","Return `log2(e)`.",8,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",8,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",8,[[]]],[11,"TAU","","Return the full circle constant `τ`.",8,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",8,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",8,[[]]],[0,"identities","hacspec_lib::prelude::traits","",null,null],[8,"Zero","hacspec_lib::prelude::traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",9,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",9,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",10,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",10,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",10,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[0,"int","hacspec_lib::prelude::traits","",null,null],[8,"PrimInt","hacspec_lib::prelude::traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",11,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",11,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",11,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",11,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",11,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",11,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",11,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",11,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",11,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",11,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",11,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",11,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",11,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",11,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",11,[[]]],[0,"ops","hacspec_lib::prelude::traits","",null,null],[0,"checked","hacspec_lib::prelude::traits::ops","",null,null],[8,"CheckedAdd","hacspec_lib::prelude::traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",12,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",13,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",17,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",18,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",19,[[],["option",4]]],[0,"inv","hacspec_lib::prelude::traits::ops","",null,null],[8,"Inv","hacspec_lib::prelude::traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",20,null],[10,"inv","","Returns the multiplicative inverse of `self`.",20,[[]]],[0,"mul_add","hacspec_lib::prelude::traits::ops","",null,null],[8,"MulAdd","hacspec_lib::prelude::traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",21,null],[10,"mul_add","","Performs the fused multiply-add operation.",21,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[]]],[0,"overflowing","hacspec_lib::prelude::traits::ops","",null,null],[8,"OverflowingAdd","hacspec_lib::prelude::traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean indicating…",23,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean…",24,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean…",25,[[]]],[0,"saturating","hacspec_lib::prelude::traits::ops","",null,null],[8,"Saturating","hacspec_lib::prelude::traits::ops::saturating","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",26,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",26,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",27,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",28,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",29,[[]]],[0,"wrapping","hacspec_lib::prelude::traits::ops","",null,null],[8,"WrappingAdd","hacspec_lib::prelude::traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",30,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",31,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",32,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",33,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",34,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",35,[[]]],[0,"pow","hacspec_lib::prelude::traits","",null,null],[8,"Pow","hacspec_lib::prelude::traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",36,null],[10,"pow","","Returns `self` to the power `rhs`.",36,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[0,"real","hacspec_lib::prelude::traits","",null,null],[8,"Real","hacspec_lib::prelude::traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",37,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",37,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",37,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",37,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",37,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",37,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",37,[[]]],[10,"trunc","","Return the integer part of a number.",37,[[]]],[10,"fract","","Returns the fractional part of a number.",37,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",37,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",37,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",37,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",37,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",37,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",37,[[]]],[10,"powi","","Raise a number to an integer power.",37,[[]]],[10,"powf","","Raise a number to a real number power.",37,[[]]],[10,"sqrt","","Take the square root of a number.",37,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",37,[[]]],[10,"exp2","","Returns `2^(self)`.",37,[[]]],[10,"ln","","Returns the natural logarithm of the number.",37,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",37,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",37,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",37,[[]]],[10,"to_degrees","","Converts radians to degrees.",37,[[]]],[10,"to_radians","","Converts degrees to radians.",37,[[]]],[10,"max","","Returns the maximum of the two numbers.",37,[[]]],[10,"min","","Returns the minimum of the two numbers.",37,[[]]],[10,"abs_sub","","The positive difference of two numbers.",37,[[]]],[10,"cbrt","","Take the cubic root of a number.",37,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",37,[[]]],[10,"sin","","Computes the sine of a number (in radians).",37,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",37,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",37,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",37,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",37,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",37,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",37,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",37,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",37,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",37,[[]]],[10,"sinh","","Hyperbolic sine function.",37,[[]]],[10,"cosh","","Hyperbolic cosine function.",37,[[]]],[10,"tanh","","Hyperbolic tangent function.",37,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",37,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",37,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",37,[[]]],[0,"sign","hacspec_lib::prelude::traits","",null,null],[8,"Signed","hacspec_lib::prelude::traits::sign","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"signum","","Returns the sign of the number.",38,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",38,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",38,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","hacspec_lib::prelude::traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",39,null],[10,"from_str_radix","","Convert from a string and radix (typically `2..=36`).",39,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",40,null],[13,"Invalid","","",40,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",41,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",1,[[]]],[10,"max_value","","returns the largest finite number this type can represent",1,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",7,[[]]],[10,"infinity","","Returns the infinite value.",7,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",7,[[]]],[10,"neg_zero","","Returns `-0.0`.",7,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",7,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",7,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",7,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",7,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",7,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",7,[[]]],[10,"trunc","","Return the integer part of a number.",7,[[]]],[10,"fract","","Returns the fractional part of a number.",7,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",7,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",7,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",7,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",7,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",7,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",7,[[]]],[10,"powi","","Raise a number to an integer power.",7,[[]]],[10,"powf","","Raise a number to a floating point power.",7,[[]]],[10,"sqrt","","Take the square root of a number.",7,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",7,[[]]],[10,"exp2","","Returns `2^(self)`.",7,[[]]],[10,"ln","","Returns the natural logarithm of the number.",7,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",7,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",7,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",7,[[]]],[11,"to_degrees","","Converts radians to degrees.",7,[[]]],[11,"to_radians","","Converts degrees to radians.",7,[[]]],[10,"max","","Returns the maximum of the two numbers.",7,[[]]],[10,"min","","Returns the minimum of the two numbers.",7,[[]]],[10,"abs_sub","","The positive difference of two numbers.",7,[[]]],[10,"cbrt","","Take the cubic root of a number.",7,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",7,[[]]],[10,"sin","","Computes the sine of a number (in radians).",7,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",7,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",7,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",7,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",7,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",7,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",7,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",7,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",7,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",7,[[]]],[10,"sinh","","Hyperbolic sine function.",7,[[]]],[10,"cosh","","Hyperbolic cosine function.",7,[[]]],[10,"tanh","","Hyperbolic tangent function.",7,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",7,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",7,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",7,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",8,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",8,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",8,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",8,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",8,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",8,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",8,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",8,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",8,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",8,[[]]],[10,"LN_10","","Return `ln(10.0)`.",8,[[]]],[10,"LN_2","","Return `ln(2.0)`.",8,[[]]],[10,"LOG10_E","","Return `log10(e)`.",8,[[]]],[10,"LOG2_E","","Return `log2(e)`.",8,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",8,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",8,[[]]],[11,"TAU","","Return the full circle constant `τ`.",8,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",8,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",8,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",5,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",3,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",3,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",3,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",3,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",3,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",3,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",3,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",3,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",3,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",3,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",3,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",3,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",3,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",3,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",4,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",2,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",2,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",2,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",2,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",2,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",2,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",2,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",2,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",2,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",2,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",2,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",2,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",2,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",2,[[],["option",4]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",10,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",10,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",10,[[]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",9,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",9,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",11,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",11,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",11,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",11,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",11,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",11,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",11,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",11,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",11,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",11,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",11,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",11,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",11,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",11,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",11,[[]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",12,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",15,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",14,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",17,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",16,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",18,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",19,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",13,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",20,null],[10,"inv","","Returns the multiplicative inverse of `self`.",20,[[]]],[8,"MulAdd","","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",21,null],[10,"mul_add","","Performs the fused multiply-add operation.",21,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",22,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",26,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",26,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",27,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",29,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",28,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",30,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",32,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",33,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",34,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",35,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",31,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",36,null],[10,"pow","","Returns `self` to the power `rhs`.",36,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"signum","","Returns the sign of the number.",38,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",38,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",38,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[3,"BigInt","hacspec_lib::prelude","A big signed integer type.",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",13,[[],["option",4]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",9,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",9,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[]]],[4,"Ordering","","An `Ordering` is the result of a comparison between two…",null,null],[13,"Less","","An ordering where a compared value is less than another.",42,null],[13,"Equal","","An ordering where a compared value is equal to another.",42,null],[13,"Greater","","An ordering where a compared value is greater than another.",42,null],[3,"ParseIntError","","An error which can be returned when parsing an integer.",null,null],[14,"abstract_int","","",null,null],[14,"abstract_public","","",null,null],[14,"abstract_unsigned","","",null,null],[14,"abstract_signed","","",null,null],[14,"abstract_unsigned_public_integer","","",null,null],[14,"abstract_signed_public_integer","","",null,null],[14,"abstract_secret","","",null,null],[14,"abstract_unsigned_secret_integer","","",null,null],[14,"abstract_signed_secret_integer","","",null,null],[14,"define_abstract_integer_checked","","Defines a bounded natural integer with regular arithmetic…",null,null],[14,"modular_integer","","",null,null],[14,"abstract_secret_modular_integer","","",null,null],[14,"abstract_public_modular_integer","","",null,null],[14,"abstract_nat_mod","","",null,null],[14,"abstract_public_nat_mod","","",null,null],[14,"define_refined_modular_integer","","Defines a bounded natural integer with modular arithmetic…",null,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",10,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",10,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",10,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[8,"Add","","The addition operator `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator.",43,null],[10,"add","","Performs the `+` operation.",43,[[]]],[8,"Div","","The division operator `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator.",44,null],[10,"div","","Performs the `/` operation.",44,[[]]],[8,"Mul","","The multiplication operator `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator.",45,null],[10,"mul","","Performs the `*` operation.",45,[[]]],[8,"Neg","","The unary negation operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",46,null],[10,"neg","","Performs the unary `-` operation.",46,[[]]],[8,"Rem","","The remainder operator `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator.",47,null],[10,"rem","","Performs the `%` operation.",47,[[]]],[8,"Sub","","The subtraction operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",48,null],[10,"sub","","Performs the `-` operation.",48,[[]]],[8,"AddAssign","","The addition assignment operator `+=`.",null,null],[10,"add_assign","","Performs the `+=` operation.",49,[[]]],[8,"DivAssign","","The division assignment operator `/=`.",null,null],[10,"div_assign","","Performs the `/=` operation.",50,[[]]],[8,"MulAssign","","The multiplication assignment operator `*=`.",null,null],[10,"mul_assign","","Performs the `*=` operation.",51,[[]]],[8,"RemAssign","","The remainder assignment operator `%=`.",null,null],[10,"rem_assign","","Performs the `%=` operation.",52,[[]]],[8,"SubAssign","","The subtraction assignment operator `-=`.",null,null],[10,"sub_assign","","Performs the `-=` operation.",53,[[]]],[8,"BitAnd","","The bitwise AND operator `&`.",null,null],[16,"Output","","The resulting type after applying the `&` operator.",54,null],[10,"bitand","","Performs the `&` operation.",54,[[]]],[8,"BitOr","","The bitwise OR operator `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator.",55,null],[10,"bitor","","Performs the `|` operation.",55,[[]]],[8,"BitXor","","The bitwise XOR operator `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator.",56,null],[10,"bitxor","","Performs the `^` operation.",56,[[]]],[8,"Not","","The unary logical negation operator `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator.",57,null],[10,"not","","Performs the unary `!` operation.",57,[[]]],[8,"Shl","","The left shift operator `<<`. Note that because this trait…",null,null],[16,"Output","","The resulting type after applying the `<<` operator.",58,null],[10,"shl","","Performs the `<<` operation.",58,[[]]],[8,"Shr","","The right shift operator `>>`. Note that because this…",null,null],[16,"Output","","The resulting type after applying the `>>` operator.",59,null],[10,"shr","","Performs the `>>` operation.",59,[[]]],[8,"BitAndAssign","","The bitwise AND assignment operator `&=`.",null,null],[10,"bitand_assign","","Performs the `&=` operation.",60,[[]]],[8,"BitOrAssign","","The bitwise OR assignment operator `|=`.",null,null],[10,"bitor_assign","","Performs the `|=` operation.",61,[[]]],[8,"BitXorAssign","","The bitwise XOR assignment operator `^=`.",null,null],[10,"bitxor_assign","","Performs the `^=` operation.",62,[[]]],[8,"ShlAssign","","The left shift assignment operator `<<=`.",null,null],[10,"shl_assign","","Performs the `<<=` operation.",63,[[]]],[8,"ShrAssign","","The right shift assignment operator `>>=`.",null,null],[10,"shr_assign","","Performs the `>>=` operation.",64,[[]]],[8,"Deref","","Used for immutable dereferencing operations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing.",65,null],[10,"deref","","Dereferences the value.",65,[[]]],[8,"DerefMut","","Used for mutable dereferencing operations, like in `*v =…",null,null],[10,"deref_mut","","Mutably dereferences the value.",66,[[]]],[8,"Drop","","Custom code within the destructor.",null,null],[10,"drop","","Executes the destructor for this type.",67,[[]]],[8,"Fn","","The version of the call operator that takes an immutable…",null,null],[10,"call","","Performs the call operation.",68,[[]]],[8,"FnMut","","The version of the call operator that takes a mutable…",null,null],[10,"call_mut","","Performs the call operation.",69,[[]]],[8,"FnOnce","","The version of the call operator that takes a by-value…",null,null],[16,"Output","","The returned type after the call operator is used.",70,null],[10,"call_once","","Performs the call operation.",70,[[]]],[8,"Index","","Used for indexing operations (`container[index]`) in…",null,null],[16,"Output","","The returned type after indexing.",71,null],[10,"index","","Performs the indexing (`container[index]`) operation.",71,[[]]],[8,"IndexMut","","Used for indexing operations (`container[index]`) in…",null,null],[10,"index_mut","","Performs the mutable indexing (`container[index]`)…",72,[[]]],[3,"Range","","A (half-open) range bounded inclusively below and…",null,null],[12,"start","","The lower bound of the range (inclusive).",73,null],[12,"end","","The upper bound of the range (exclusive).",73,null],[3,"RangeFrom","","A range only bounded inclusively below (`start..`).",null,null],[12,"start","","The lower bound of the range (inclusive).",74,null],[3,"RangeFull","","An unbounded range (`..`).",null,null],[3,"RangeTo","","A range only bounded exclusively above (`..end`).",null,null],[12,"end","","The upper bound of the range (exclusive).",75,null],[4,"Bound","","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",76,null],[13,"Excluded","","An exclusive bound.",76,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in…",76,null],[8,"RangeBounds","","`RangeBounds` is implemented by Rust\'s built-in range…",null,null],[10,"start_bound","","Start index bound.",77,[[],["bound",4]]],[10,"end_bound","","End index bound.",77,[[],["bound",4]]],[11,"contains","","Returns `true` if `item` is contained in the range.",77,[[]]],[3,"RangeInclusive","","A range bounded inclusively below and above (`start..=end`).",null,null],[3,"RangeToInclusive","","A range only bounded inclusively above (`..=end`).",null,null],[12,"end","","The upper bound of the range (inclusive)",78,null],[8,"Try","","A trait for customizing the behavior of the `?` operator.",null,null],[16,"Ok","","The type of this value when viewed as successful.",79,null],[16,"Error","","The type of this value when viewed as failed.",79,null],[10,"into_result","","Applies the \\\"?\\\" operator. A return of `Ok(t)` means that…",79,[[],["result",4]]],[10,"from_error","","Wrap an error value to construct the composite result. For…",79,[[]]],[10,"from_ok","","Wrap an OK value to construct the composite result. For…",79,[[]]],[8,"Generator","","The trait implemented by builtin generator types.",null,null],[16,"Yield","","The type of value this generator yields.",80,null],[16,"Return","","The type of value this generator returns.",80,null],[10,"resume","","Resumes the execution of this generator.",80,[[["pin",3]],["generatorstate",4]]],[4,"GeneratorState","","The result of a generator resumption.",null,null],[13,"Yielded","","The generator suspended with a value.",81,null],[13,"Complete","","The generator completed with a return value.",81,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper…",null,null],[8,"DispatchFromDyn","","This is used for object safety, to check that a method\'s…",null,null],[23,"in_hacspec","","This function is within the hacspec subset of Rust: its…",null,null],[23,"unsafe_hacspec","","This function can be called from hacspec programs but its…",null,null],[23,"not_hacspec","","Function that is not part of the language but is offered…",null,null],[23,"hacspec_unsafe","","",null,null],[3,"U8","","",null,null],[12,"0","","",82,null],[3,"U16","","",null,null],[12,"0","","",83,null],[3,"U32","","",null,null],[12,"0","","",84,null],[3,"U64","","",null,null],[12,"0","","",85,null],[3,"U128","","",null,null],[12,"0","","",86,null],[3,"I8","","",null,null],[12,"0","","",87,null],[3,"I16","","",null,null],[12,"0","","",88,null],[3,"I32","","",null,null],[12,"0","","",89,null],[3,"I64","","",null,null],[12,"0","","",90,null],[3,"I128","","",null,null],[12,"0","","",91,null],[5,"U128_from_U8","","",null,[[["u8",3]],["u128",3]]],[5,"U8_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u8",3]]],[5,"U128_from_U16","","",null,[[["u16",3]],["u128",3]]],[5,"U16_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u16",3]]],[5,"U128_from_U32","","",null,[[["u32",3]],["u128",3]]],[5,"U32_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u32",3]]],[5,"U128_from_U64","","",null,[[["u64",3]],["u128",3]]],[5,"U64_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u64",3]]],[5,"U64_from_U8","","",null,[[["u8",3]],["u64",3]]],[5,"U8_from_U64","","Warning: wrapping semantics.",null,[[["u64",3]],["u8",3]]],[5,"U64_from_U16","","",null,[[["u16",3]],["u64",3]]],[5,"U16_from_U64","","Warning: wrapping semantics.",null,[[["u64",3]],["u16",3]]],[5,"U64_from_U32","","",null,[[["u32",3]],["u64",3]]],[5,"U32_from_U64","","Warning: wrapping semantics.",null,[[["u64",3]],["u32",3]]],[5,"U32_from_U8","","",null,[[["u8",3]],["u32",3]]],[5,"U8_from_U32","","Warning: wrapping semantics.",null,[[["u32",3]],["u8",3]]],[5,"U32_from_U16","","",null,[[["u16",3]],["u32",3]]],[5,"U16_from_U32","","Warning: wrapping semantics.",null,[[["u32",3]],["u16",3]]],[5,"U16_from_U8","","",null,[[["u8",3]],["u16",3]]],[5,"U8_from_U16","","Warning: wrapping semantics.",null,[[["u16",3]],["u8",3]]],[5,"declassify_u8_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u16_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u32_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u64_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u128_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_usize_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"U8_from_usize","","",null,[[],["u8",3]]],[5,"declassify_u16_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"declassify_u32_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"declassify_u64_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"u128_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"declassify_u32_from_U32","","Warning: conversion can be lossy!",null,[[["u32",3]]]],[5,"declassify_u64_from_U32","","Warning: conversion can be lossy!",null,[[["u32",3]]]],[5,"declassify_u128_from_U32","","Warning: conversion can be lossy!",null,[[["u32",3]]]],[5,"declassify_u64_from_U64","","Warning: conversion can be lossy!",null,[[["u64",3]]]],[5,"declassify_u128_from_U64","","Warning: conversion can be lossy!",null,[[["u64",3]]]],[5,"declassify_u128_from_U128","","Warning: conversion can be lossy!",null,[[["u128",3]]]],[5,"u8_from_U16","","",null,[[],["u16",3]]],[5,"u8_from_U32","","",null,[[],["u32",3]]],[5,"u16_from_U32","","",null,[[],["u32",3]]],[5,"u8_from_U64","","",null,[[],["u64",3]]],[5,"u16_from_U64","","",null,[[],["u64",3]]],[5,"u32_from_U64","","",null,[[],["u64",3]]],[5,"U64_from_usize","","",null,[[],["u64",3]]],[5,"u8_from_U128","","",null,[[],["u128",3]]],[5,"u16_from_U128","","",null,[[],["u128",3]]],[5,"u32_from_U128","","",null,[[],["u128",3]]],[5,"u64_from_U128","","",null,[[],["u128",3]]],[5,"U128_from_usize","","",null,[[],["u128",3]]],[5,"I128_from_I8","","",null,[[["i8",3]],["i128",3]]],[5,"I8_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i8",3]]],[5,"I128_from_I16","","",null,[[["i16",3]],["i128",3]]],[5,"I16_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i16",3]]],[5,"I128_from_I32","","",null,[[["i32",3]],["i128",3]]],[5,"I32_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i32",3]]],[5,"I128_from_I64","","",null,[[["i64",3]],["i128",3]]],[5,"I64_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i64",3]]],[5,"I64_from_I8","","",null,[[["i8",3]],["i64",3]]],[5,"I8_from_I64","","Warning: wrapping semantics.",null,[[["i64",3]],["i8",3]]],[5,"I64_from_I16","","",null,[[["i16",3]],["i64",3]]],[5,"I16_from_I64","","Warning: wrapping semantics.",null,[[["i64",3]],["i16",3]]],[5,"I64_from_I32","","",null,[[["i32",3]],["i64",3]]],[5,"I32_from_I64","","Warning: wrapping semantics.",null,[[["i64",3]],["i32",3]]],[5,"I32_from_I8","","",null,[[["i8",3]],["i32",3]]],[5,"I8_from_I32","","Warning: wrapping semantics.",null,[[["i32",3]],["i8",3]]],[5,"I32_from_I16","","",null,[[["i16",3]],["i32",3]]],[5,"I16_from_I32","","Warning: wrapping semantics.",null,[[["i32",3]],["i16",3]]],[5,"I16_from_I8","","",null,[[["i8",3]],["i16",3]]],[5,"I8_from_I16","","Warning: wrapping semantics.",null,[[["i16",3]],["i8",3]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"signum","","Returns the sign of the number.",38,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",38,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",38,[[]]],[3,"BigUint","","A big unsigned integer type.",null,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",13,[[],["option",4]]],[8,"Num","","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",39,null],[10,"from_str_radix","","Convert from a string and radix (typically `2..=36`).",39,[[],["result",4]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",9,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",9,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",9,[[]]],[3,"ParseIntError","","An error which can be returned when parsing an integer.",null,null],[8,"Add","","The addition operator `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator.",43,null],[10,"add","","Performs the `+` operation.",43,[[]]],[8,"Div","","The division operator `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator.",44,null],[10,"div","","Performs the `/` operation.",44,[[]]],[8,"Mul","","The multiplication operator `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator.",45,null],[10,"mul","","Performs the `*` operation.",45,[[]]],[8,"Neg","","The unary negation operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",46,null],[10,"neg","","Performs the unary `-` operation.",46,[[]]],[8,"Rem","","The remainder operator `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator.",47,null],[10,"rem","","Performs the `%` operation.",47,[[]]],[8,"Sub","","The subtraction operator `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator.",48,null],[10,"sub","","Performs the `-` operation.",48,[[]]],[8,"AddAssign","","The addition assignment operator `+=`.",null,null],[10,"add_assign","","Performs the `+=` operation.",49,[[]]],[8,"DivAssign","","The division assignment operator `/=`.",null,null],[10,"div_assign","","Performs the `/=` operation.",50,[[]]],[8,"MulAssign","","The multiplication assignment operator `*=`.",null,null],[10,"mul_assign","","Performs the `*=` operation.",51,[[]]],[8,"RemAssign","","The remainder assignment operator `%=`.",null,null],[10,"rem_assign","","Performs the `%=` operation.",52,[[]]],[8,"SubAssign","","The subtraction assignment operator `-=`.",null,null],[10,"sub_assign","","Performs the `-=` operation.",53,[[]]],[8,"BitAnd","","The bitwise AND operator `&`.",null,null],[16,"Output","","The resulting type after applying the `&` operator.",54,null],[10,"bitand","","Performs the `&` operation.",54,[[]]],[8,"BitOr","","The bitwise OR operator `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator.",55,null],[10,"bitor","","Performs the `|` operation.",55,[[]]],[8,"BitXor","","The bitwise XOR operator `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator.",56,null],[10,"bitxor","","Performs the `^` operation.",56,[[]]],[8,"Not","","The unary logical negation operator `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator.",57,null],[10,"not","","Performs the unary `!` operation.",57,[[]]],[8,"Shl","","The left shift operator `<<`. Note that because this trait…",null,null],[16,"Output","","The resulting type after applying the `<<` operator.",58,null],[10,"shl","","Performs the `<<` operation.",58,[[]]],[8,"Shr","","The right shift operator `>>`. Note that because this…",null,null],[16,"Output","","The resulting type after applying the `>>` operator.",59,null],[10,"shr","","Performs the `>>` operation.",59,[[]]],[8,"BitAndAssign","","The bitwise AND assignment operator `&=`.",null,null],[10,"bitand_assign","","Performs the `&=` operation.",60,[[]]],[8,"BitOrAssign","","The bitwise OR assignment operator `|=`.",null,null],[10,"bitor_assign","","Performs the `|=` operation.",61,[[]]],[8,"BitXorAssign","","The bitwise XOR assignment operator `^=`.",null,null],[10,"bitxor_assign","","Performs the `^=` operation.",62,[[]]],[8,"ShlAssign","","The left shift assignment operator `<<=`.",null,null],[10,"shl_assign","","Performs the `<<=` operation.",63,[[]]],[8,"ShrAssign","","The right shift assignment operator `>>=`.",null,null],[10,"shr_assign","","Performs the `>>=` operation.",64,[[]]],[8,"Deref","","Used for immutable dereferencing operations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing.",65,null],[10,"deref","","Dereferences the value.",65,[[]]],[8,"DerefMut","","Used for mutable dereferencing operations, like in `*v =…",null,null],[10,"deref_mut","","Mutably dereferences the value.",66,[[]]],[8,"Drop","","Custom code within the destructor.",null,null],[10,"drop","","Executes the destructor for this type.",67,[[]]],[8,"Fn","","The version of the call operator that takes an immutable…",null,null],[10,"call","","Performs the call operation.",68,[[]]],[8,"FnMut","","The version of the call operator that takes a mutable…",null,null],[10,"call_mut","","Performs the call operation.",69,[[]]],[8,"FnOnce","","The version of the call operator that takes a by-value…",null,null],[16,"Output","","The returned type after the call operator is used.",70,null],[10,"call_once","","Performs the call operation.",70,[[]]],[8,"Index","","Used for indexing operations (`container[index]`) in…",null,null],[16,"Output","","The returned type after indexing.",71,null],[10,"index","","Performs the indexing (`container[index]`) operation.",71,[[]]],[8,"IndexMut","","Used for indexing operations (`container[index]`) in…",null,null],[10,"index_mut","","Performs the mutable indexing (`container[index]`)…",72,[[]]],[3,"Range","","A (half-open) range bounded inclusively below and…",null,null],[12,"start","","The lower bound of the range (inclusive).",73,null],[12,"end","","The upper bound of the range (exclusive).",73,null],[3,"RangeFrom","","A range only bounded inclusively below (`start..`).",null,null],[12,"start","","The lower bound of the range (inclusive).",74,null],[3,"RangeFull","","An unbounded range (`..`).",null,null],[3,"RangeTo","","A range only bounded exclusively above (`..end`).",null,null],[12,"end","","The upper bound of the range (exclusive).",75,null],[4,"Bound","","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",76,null],[13,"Excluded","","An exclusive bound.",76,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in…",76,null],[8,"RangeBounds","","`RangeBounds` is implemented by Rust\'s built-in range…",null,null],[10,"start_bound","","Start index bound.",77,[[],["bound",4]]],[10,"end_bound","","End index bound.",77,[[],["bound",4]]],[11,"contains","","Returns `true` if `item` is contained in the range.",77,[[]]],[3,"RangeInclusive","","A range bounded inclusively below and above (`start..=end`).",null,null],[3,"RangeToInclusive","","A range only bounded inclusively above (`..=end`).",null,null],[12,"end","","The upper bound of the range (inclusive)",78,null],[8,"Try","","A trait for customizing the behavior of the `?` operator.",null,null],[16,"Ok","","The type of this value when viewed as successful.",79,null],[16,"Error","","The type of this value when viewed as failed.",79,null],[10,"into_result","","Applies the \\\"?\\\" operator. A return of `Ok(t)` means that…",79,[[],["result",4]]],[10,"from_error","","Wrap an error value to construct the composite result. For…",79,[[]]],[10,"from_ok","","Wrap an OK value to construct the composite result. For…",79,[[]]],[8,"Generator","","The trait implemented by builtin generator types.",null,null],[16,"Yield","","The type of value this generator yields.",80,null],[16,"Return","","The type of value this generator returns.",80,null],[10,"resume","","Resumes the execution of this generator.",80,[[["pin",3]],["generatorstate",4]]],[4,"GeneratorState","","The result of a generator resumption.",null,null],[13,"Yielded","","The generator suspended with a value.",81,null],[13,"Complete","","The generator completed with a return value.",81,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper…",null,null],[8,"DispatchFromDyn","","This is used for object safety, to check that a method\'s…",null,null],[8,"FromStr","","Parse a value from a string",null,null],[16,"Err","","The associated error which can be returned from parsing.",92,null],[10,"from_str","","Parses a string `s` to return a value of this type.",92,[[],["result",4]]],[5,"min","","Compares and returns the minimum of two values.",null,[[]]],[8,"PartialEq","","Trait for equality comparisons which are partial…",null,null],[10,"eq","","This method tests for `self` and `other` values to be…",93,[[]]],[11,"ne","","This method tests for `!=`.",93,[[]]],[14,"PartialEq","","Derive macro generating an impl of the trait `PartialEq`.",null,null],[0,"fmt","","Utilities for formatting and printing `String`s.",null,null],[5,"format","hacspec_lib::prelude::fmt","The `format` function takes an [`Arguments`] struct and…",null,[[["arguments",3]],["string",3]]],[4,"Alignment","","Possible alignments returned by `Formatter::align`",null,null],[13,"Left","","Indication that contents should be left-aligned.",94,null],[13,"Right","","Indication that contents should be right-aligned.",94,null],[13,"Center","","Indication that contents should be center-aligned.",94,null],[3,"Error","","The error type which is returned from formatting a message…",null,null],[5,"write","","The `write` function takes an output stream, and an…",null,[[["arguments",3],["write",8]],[["result",4],["error",3]]]],[3,"Arguments","","This structure represents a safely precompiled version of…",null,null],[8,"Binary","","`b` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",95,[[["formatter",3]],[["result",4],["error",3]]]],[8,"Octal","","`o` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",96,[[["formatter",3]],[["result",4],["error",3]]]],[8,"Debug","","`?` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",97,[[["formatter",3]],[["result",4],["error",3]]]],[14,"Debug","","Derive macro generating an impl of the trait `Debug`.",null,null],[8,"Display","","Format trait for an empty format, `{}`.",null,null],[10,"fmt","","Formats the value using the given formatter.",98,[[["formatter",3]],[["result",4],["error",3]]]],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugStruct","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"Formatter","","Configuration for formatting.",null,null],[6,"Result","","The type returned by formatter methods.",null,null],[8,"Write","","A collection of methods that are required to format a…",null,null],[10,"write_str","","Writes a string slice into this writer, returning whether…",99,[[],[["result",4],["error",3]]]],[11,"write_char","","Writes a [`char`] into this writer, returning whether the…",99,[[],[["result",4],["error",3]]]],[11,"write_fmt","","Glue for usage of the [`write!`] macro with implementors…",99,[[["arguments",3]],[["result",4],["error",3]]]],[8,"LowerExp","","`e` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",100,[[["formatter",3]],[["result",4],["error",3]]]],[8,"UpperExp","","`E` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",101,[[["formatter",3]],[["result",4],["error",3]]]],[8,"LowerHex","","`x` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",102,[[["formatter",3]],[["result",4],["error",3]]]],[8,"Pointer","","`p` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",103,[[["formatter",3]],[["result",4],["error",3]]]],[8,"UpperHex","","`X` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",104,[[["formatter",3]],[["result",4],["error",3]]]],[8,"Debug","hacspec_lib::prelude","`?` formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",97,[[["formatter",3]],[["result",4],["error",3]]]],[14,"Debug","","Derive macro generating an impl of the trait `Debug`.",null,null],[8,"TryFrom","","Simple and safe type conversions that may fail in a…",null,null],[16,"Error","","The type returned in the event of a conversion error.",105,null],[10,"try_from","","Performs the conversion.",105,[[],["result",4]]],[3,"U16Word","","Fixed length byte array.",null,null],[12,"0","","",106,null],[3,"U32Word","","Fixed length byte array.",null,null],[12,"0","","",107,null],[3,"U64Word","","Fixed length byte array.",null,null],[12,"0","","",108,null],[3,"U128Word","","Fixed length byte array.",null,null],[12,"0","","",109,null],[3,"u16Word","","Fixed length byte array.",null,null],[12,"0","","",110,null],[3,"u32Word","","Fixed length byte array.",null,null],[12,"0","","",111,null],[3,"u64Word","","Fixed length byte array.",null,null],[12,"0","","",112,null],[3,"u128Word","","Fixed length byte array.",null,null],[12,"0","","",113,null],[5,"cswap_bit","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]]]],[5,"cswap","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]]]],[5,"cset_bit","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["copy",8],["integer",8]]]],[5,"cadd","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["copy",8],["integer",8]]]],[5,"csub","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["copy",8],["integer",8]]]],[5,"cmul","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["copy",8],["integer",8]]]],[5,"ct_div","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]]]],[5,"sub_poly","","This function can be called from hacspec programs but its…",null,[[["seq",3],["numeric",8],["copy",8]],[["copy",8],["seq",3],["numeric",8]]]],[5,"add_poly","","This function can be called from hacspec programs but its…",null,[[["seq",3],["numeric",8],["copy",8]],[["copy",8],["seq",3],["numeric",8]]]],[5,"mul_poly","","Simple polynomial multiplication for two fixed size…",null,[[["seq",3],["numeric",8],["copy",8]],[["copy",8],["seq",3],["numeric",8]]]],[5,"div_poly","","Euclidean polynomial division, calculates `a/b` in `R_n`.…",null,[[["seq",3],["integer",8],["copy",8]],["result",4]]],[5,"div_scalar","","Function that is not part of the language but is offered…",null,[[["seq",3],["copy",8],["integer",8]],[["integer",8],["seq",3],["copy",8]]]],[5,"degree_poly","","This function can be called from hacspec programs but its…",null,[[["seq",3]]]],[5,"extended_euclid","","This function can be called from hacspec programs but its…",null,[[["seq",3],["integer",8],["copy",8]],[["result",4],["seq",3]]]],[5,"weight","","Returns number of coefficient != 0, e.g. for -3x⁵ + 3x² +…",null,[[["seq",3]]]],[5,"make_positive","","makes coefficients positiv, e.g. -3 mod 4 = 1",null,[[["seq",3],["numeric",8],["copy",8]],[["copy",8],["seq",3],["numeric",8]]]],[5,"poly_to_ring","","This function can be called from hacspec programs but its…",null,[[["seq",3],["integer",8],["copy",8]]]],[5,"mul_poly_irr","","This function can be called from hacspec programs but its…",null,[[["seq",3],["integer",8],["copy",8]],[["integer",8],["seq",3],["copy",8]]]],[5,"U16_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u16",3]],["u16word",3]]],[5,"U16_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u16",3]],["u16word",3]]],[5,"U16_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u16word",3]],["u16",3]]],[5,"U16_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u16word",3]],["u16",3]]],[5,"U32_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u32",3]],["u32word",3]]],[5,"U32_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u32",3]],["u32word",3]]],[5,"U32_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u32word",3]],["u32",3]]],[5,"U32_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u32word",3]],["u32",3]]],[5,"U64_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u64",3]],["u64word",3]]],[5,"U64_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u64",3]],["u64word",3]]],[5,"U64_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u64word",3]],["u64",3]]],[5,"U64_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u64word",3]],["u64",3]]],[5,"U128_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u128",3]],["u128word",3]]],[5,"U128_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u128",3]],["u128word",3]]],[5,"U128_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u128word",3]],["u128",3]]],[5,"U128_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u128word",3]],["u128",3]]],[5,"u16_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u16word",3]]],[5,"u16_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u16word",3]]],[5,"u16_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u16word",3]]]],[5,"u16_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u16word",3]]]],[5,"u32_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u32word",3]]],[5,"u32_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u32word",3]]],[5,"u32_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u32word",3]]]],[5,"u32_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u32word",3]]]],[5,"u64_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u64word",3]]],[5,"u64_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u64word",3]]],[5,"u64_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u64word",3]]]],[5,"u64_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u64word",3]]]],[5,"u128_to_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u128word",3]]],[5,"u128_to_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[],["u128word",3]]],[5,"u128_from_be_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u128word",3]]]],[5,"u128_from_le_bytes","","This function is within the hacspec subset of Rust: its…",null,[[["u128word",3]]]],[5,"hex_string_to_bytes","","Function that is not part of the language but is offered…",null,[[],["vec",3]]],[5,"to_array","","Function that is not part of the language but is offered…",null,[[]]],[5,"vec_poly_mul","","This function is within the hacspec subset of Rust: its…",null,[[["seqtrait",8],["numeric",8],["copy",8]],[["numeric",8],["seqtrait",8],["copy",8]]]],[5,"vec_poly_add","","This function is within the hacspec subset of Rust: its…",null,[[["seqtrait",8],["numeric",8],["copy",8]],[["numeric",8],["seqtrait",8],["copy",8]]]],[5,"vec_poly_sub","","This function is within the hacspec subset of Rust: its…",null,[[["seqtrait",8],["numeric",8],["copy",8]],[["numeric",8],["seqtrait",8],["copy",8]]]],[0,"ct_util","","",null,null],[5,"cswap_bit","hacspec_lib::prelude::ct_util","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]]]],[5,"cswap","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]]]],[5,"cset_bit","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["copy",8],["integer",8]]]],[5,"cadd","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["copy",8],["integer",8]]]],[5,"csub","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["copy",8],["integer",8]]]],[5,"cmul","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]],[["copy",8],["integer",8]]]],[5,"ct_div","","Function that is not part of the language but is offered…",null,[[["integer",8],["copy",8]]]],[0,"poly","hacspec_lib::prelude","",null,null],[8,"SeqTrait","","Common trait for all byte arrays and sequences.",null,null],[10,"len","","",114,[[]]],[10,"iter","","",114,[[],["iter",3]]],[10,"create","","",114,[[]]],[10,"update_slice","","Update this sequence with `l` elements of `v`, starting at…",114,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",114,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",114,[[]]],[8,"Integer","","This trait extends the `Numeric` trait and is implemented…",null,null],[18,"NUM_BITS","","",115,null],[10,"ZERO","","",115,[[]]],[10,"ONE","","",115,[[]]],[10,"TWO","","",115,[[]]],[10,"from_literal","","Get an integer with value `val`.",115,[[]]],[10,"from_hex_string","","Read a hex string (starting with 0x) into an `Integer`.",115,[[["string",3]]]],[10,"get_bit","","",115,[[]]],[10,"set_bit","","",115,[[]]],[10,"set","","",115,[[]]],[10,"rotate_left","","",115,[[]]],[10,"rotate_right","","",115,[[]]],[8,"SecretInteger","","",null,null],[16,"PublicVersion","","",116,null],[10,"classify","","",116,[[]]],[8,"SecretIntegerCopy","","",null,null],[16,"PublicVersionCopy","","",117,null],[10,"classify","","",117,[[]]],[8,"PublicInteger","","",null,null],[16,"SecretVersion","","",118,null],[8,"PublicIntegerCopy","","",null,null],[16,"SecretVersionCopy","","",119,null],[8,"UnsignedInteger","","",null,null],[8,"UnsignedIntegerCopy","","",null,null],[8,"SignedInteger","","",null,null],[8,"SignedIntegerCopy","","",null,null],[8,"UnsignedSecretInteger","","",null,null],[10,"to_le_bytes","","",120,[[],[["u8",3],["seq",3]]]],[10,"to_be_bytes","","",120,[[],[["u8",3],["seq",3]]]],[10,"from_le_bytes","","",120,[[["seq",3]]]],[10,"from_be_bytes","","",120,[[["seq",3]]]],[11,"get_byte","","This function is within the hacspec subset of Rust: its…",120,[[]]],[8,"UnsignedSecretIntegerCopy","","",null,null],[8,"UnsignedPublicInteger","","",null,null],[10,"to_le_bytes","","",121,[[],["seq",3]]],[10,"to_be_bytes","","",121,[[],["seq",3]]],[10,"from_le_bytes","","",121,[[["seq",3]]]],[10,"from_be_bytes","","",121,[[["seq",3]]]],[8,"UnsignedPublicIntegerCopy","","",null,null],[8,"ModNumeric","","",null,null],[10,"sub_mod","","(self - rhs) % n.",122,[[]]],[10,"add_mod","","`(self + rhs) % n`",122,[[]]],[10,"mul_mod","","`(self * rhs) % n`",122,[[]]],[10,"pow_mod","","`(self ^ exp) % n`",122,[[]]],[10,"modulo","","`self % n`",122,[[]]],[10,"signed_modulo","","`self % n` that always returns a positive integer",122,[[]]],[10,"absolute","","`|self|`",122,[[]]],[8,"NumericCopy","","",null,null],[8,"Numeric","","The `Numeric` trait has to be implemented by all numeric…",null,null],[10,"max_val","","Return largest value that can be represented.",123,[[]]],[10,"wrap_add","","",123,[[]]],[10,"wrap_sub","","",123,[[]]],[10,"wrap_mul","","",123,[[]]],[10,"wrap_div","","",123,[[]]],[10,"exp","","`self ^ exp` where `exp` is a `u32`.",123,[[]]],[10,"pow_self","","`self ^ exp` where `exp` is a `Self`.",123,[[]]],[10,"divide","","Division.",123,[[]]],[10,"inv","","Invert self modulo n.",123,[[]]],[10,"equal","","",123,[[]]],[10,"greater_than","","",123,[[]]],[10,"greater_than_or_qual","","",123,[[]]],[10,"less_than","","",123,[[]]],[10,"less_than_or_equal","","",123,[[]]],[10,"not_equal_bm","","",123,[[]]],[10,"equal_bm","","",123,[[]]],[10,"greater_than_bm","","",123,[[]]],[10,"greater_than_or_equal_bm","","",123,[[]]],[10,"less_than_bm","","",123,[[]]],[10,"less_than_or_equal_bm","","",123,[[]]],[11,"new","","This function can be called from hacspec programs but its…",106,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",106,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",106,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",106,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",106,[[],[["u8",3],["seq",3]]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",106,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",106,[[],[["u8",3],["seq",3]]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",106,[[["range",3]],[["u8",3],["seq",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",106,[[["u8",3],["vec",3]],["u16word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",106,[[],["u16word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",106,[[],["u16word",3]]],[11,"declassify_eq","","This function can be called from hacspec programs but its…",106,[[]]],[11,"to_be_bytes","","This function can be called from hacspec programs but its…",106,[[],[["u8",3],["seq",3]]]],[11,"to_le_bytes","","This function can be called from hacspec programs but its…",106,[[],[["u8",3],["seq",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",106,[[],["u16word",3]]],[11,"from_public_array","","Function that is not part of the language but is offered…",106,[[],["u16word",3]]],[11,"to_be_U32s","","This function can be called from hacspec programs but its…",106,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","This function can be called from hacspec programs but its…",106,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","This function can be called from hacspec programs but its…",106,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","This function can be called from hacspec programs but its…",106,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","This function can be called from hacspec programs but its…",106,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","This function can be called from hacspec programs but its…",106,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","Function that is not part of the language but is offered…",106,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",107,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",107,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",107,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",107,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",107,[[],[["u8",3],["seq",3]]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",107,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",107,[[],[["u8",3],["seq",3]]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",107,[[["range",3]],[["u8",3],["seq",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",107,[[["u8",3],["vec",3]],["u32word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",107,[[],["u32word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",107,[[],["u32word",3]]],[11,"declassify_eq","","This function can be called from hacspec programs but its…",107,[[]]],[11,"to_be_bytes","","This function can be called from hacspec programs but its…",107,[[],[["u8",3],["seq",3]]]],[11,"to_le_bytes","","This function can be called from hacspec programs but its…",107,[[],[["u8",3],["seq",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",107,[[],["u32word",3]]],[11,"from_public_array","","Function that is not part of the language but is offered…",107,[[],["u32word",3]]],[11,"to_be_U32s","","This function can be called from hacspec programs but its…",107,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","This function can be called from hacspec programs but its…",107,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","This function can be called from hacspec programs but its…",107,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","This function can be called from hacspec programs but its…",107,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","This function can be called from hacspec programs but its…",107,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","This function can be called from hacspec programs but its…",107,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","Function that is not part of the language but is offered…",107,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",108,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",108,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",108,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",108,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",108,[[],[["u8",3],["seq",3]]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",108,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",108,[[],[["u8",3],["seq",3]]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",108,[[["range",3]],[["u8",3],["seq",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",108,[[["u8",3],["vec",3]],["u64word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",108,[[],["u64word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",108,[[],["u64word",3]]],[11,"declassify_eq","","This function can be called from hacspec programs but its…",108,[[]]],[11,"to_be_bytes","","This function can be called from hacspec programs but its…",108,[[],[["u8",3],["seq",3]]]],[11,"to_le_bytes","","This function can be called from hacspec programs but its…",108,[[],[["u8",3],["seq",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",108,[[],["u64word",3]]],[11,"from_public_array","","Function that is not part of the language but is offered…",108,[[],["u64word",3]]],[11,"to_be_U32s","","This function can be called from hacspec programs but its…",108,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","This function can be called from hacspec programs but its…",108,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","This function can be called from hacspec programs but its…",108,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","This function can be called from hacspec programs but its…",108,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","This function can be called from hacspec programs but its…",108,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","This function can be called from hacspec programs but its…",108,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","Function that is not part of the language but is offered…",108,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",109,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",109,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",109,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",109,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",109,[[],[["u8",3],["seq",3]]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",109,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",109,[[],[["u8",3],["seq",3]]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",109,[[["range",3]],[["u8",3],["seq",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",109,[[["u8",3],["vec",3]],["u128word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",109,[[],["u128word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",109,[[],["u128word",3]]],[11,"declassify_eq","","This function can be called from hacspec programs but its…",109,[[]]],[11,"to_be_bytes","","This function can be called from hacspec programs but its…",109,[[],[["u8",3],["seq",3]]]],[11,"to_le_bytes","","This function can be called from hacspec programs but its…",109,[[],[["u8",3],["seq",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",109,[[],["u128word",3]]],[11,"from_public_array","","Function that is not part of the language but is offered…",109,[[],["u128word",3]]],[11,"to_be_U32s","","This function can be called from hacspec programs but its…",109,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","This function can be called from hacspec programs but its…",109,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","This function can be called from hacspec programs but its…",109,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","This function can be called from hacspec programs but its…",109,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","This function can be called from hacspec programs but its…",109,[[],[["seq",3],["u128",3]]]],[11,"to_U128s_le","","This function can be called from hacspec programs but its…",109,[[],[["seq",3],["u128",3]]]],[11,"to_hex","","Function that is not part of the language but is offered…",109,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",110,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",110,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",110,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",110,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",110,[[],["seq",3]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",110,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",110,[[],["seq",3]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",110,[[["range",3]],["seq",3]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",110,[[["vec",3]],["u16word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",110,[[],["u16word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",110,[[],["u16word",3]]],[11,"to_be_u32s","","This function can be called from hacspec programs but its…",110,[[],["seq",3]]],[11,"to_le_u32s","","This function can be called from hacspec programs but its…",110,[[],["seq",3]]],[11,"to_be_u64s","","This function can be called from hacspec programs but its…",110,[[],["seq",3]]],[11,"to_le_u64s","","This function can be called from hacspec programs but its…",110,[[],["seq",3]]],[11,"to_u128s_be","","This function can be called from hacspec programs but its…",110,[[],["seq",3]]],[11,"to_u128s_le","","This function can be called from hacspec programs but its…",110,[[],["seq",3]]],[11,"to_hex","","Function that is not part of the language but is offered…",110,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",111,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",111,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",111,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",111,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",111,[[],["seq",3]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",111,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",111,[[],["seq",3]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",111,[[["range",3]],["seq",3]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",111,[[["vec",3]],["u32word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",111,[[],["u32word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",111,[[],["u32word",3]]],[11,"to_be_u32s","","This function can be called from hacspec programs but its…",111,[[],["seq",3]]],[11,"to_le_u32s","","This function can be called from hacspec programs but its…",111,[[],["seq",3]]],[11,"to_be_u64s","","This function can be called from hacspec programs but its…",111,[[],["seq",3]]],[11,"to_le_u64s","","This function can be called from hacspec programs but its…",111,[[],["seq",3]]],[11,"to_u128s_be","","This function can be called from hacspec programs but its…",111,[[],["seq",3]]],[11,"to_u128s_le","","This function can be called from hacspec programs but its…",111,[[],["seq",3]]],[11,"to_hex","","Function that is not part of the language but is offered…",111,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",112,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",112,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",112,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",112,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",112,[[],["seq",3]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",112,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",112,[[],["seq",3]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",112,[[["range",3]],["seq",3]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",112,[[["vec",3]],["u64word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",112,[[],["u64word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",112,[[],["u64word",3]]],[11,"to_be_u32s","","This function can be called from hacspec programs but its…",112,[[],["seq",3]]],[11,"to_le_u32s","","This function can be called from hacspec programs but its…",112,[[],["seq",3]]],[11,"to_be_u64s","","This function can be called from hacspec programs but its…",112,[[],["seq",3]]],[11,"to_le_u64s","","This function can be called from hacspec programs but its…",112,[[],["seq",3]]],[11,"to_u128s_be","","This function can be called from hacspec programs but its…",112,[[],["seq",3]]],[11,"to_u128s_le","","This function can be called from hacspec programs but its…",112,[[],["seq",3]]],[11,"to_hex","","Function that is not part of the language but is offered…",112,[[],["string",3]]],[11,"new","","This function can be called from hacspec programs but its…",113,[[]]],[11,"length","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"from_array","","This function can be called from hacspec programs but its…",113,[[]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",113,[[]]],[11,"capacity","","Function that is not part of the language but is offered…",113,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",113,[[],["seq",3]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",113,[[["range",3]]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",113,[[],["seq",3]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",113,[[["range",3]],["seq",3]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"get_chunk_len","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",113,[[["vec",3]],["u128word",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",113,[[],["u128word",3]]],[11,"from_hex","","This function can be called from hacspec programs but its…",113,[[],["u128word",3]]],[11,"to_be_u32s","","This function can be called from hacspec programs but its…",113,[[],["seq",3]]],[11,"to_le_u32s","","This function can be called from hacspec programs but its…",113,[[],["seq",3]]],[11,"to_be_u64s","","This function can be called from hacspec programs but its…",113,[[],["seq",3]]],[11,"to_le_u64s","","This function can be called from hacspec programs but its…",113,[[],["seq",3]]],[11,"to_u128s_be","","This function can be called from hacspec programs but its…",113,[[],["seq",3]]],[11,"to_u128s_le","","This function can be called from hacspec programs but its…",113,[[],["seq",3]]],[11,"to_hex","","Function that is not part of the language but is offered…",113,[[],["string",3]]],[0,"seq","hacspec_lib","Sequences",null,null],[3,"SecretSeq","hacspec_lib::seq","Variable length byte arrays.",null,null],[3,"PublicSeq","","Variable length byte arrays.",null,null],[3,"Seq","","Variable length byte arrays.",null,null],[6,"ByteSeq","","",null,null],[6,"PublicByteSeq","","",null,null],[11,"new","","This function can be called from hacspec programs but its…",124,[[]]],[11,"with_capacity","","This function can be called from hacspec programs but its…",124,[[]]],[11,"reserve","","This function can be called from hacspec programs but its…",124,[[]]],[11,"len","","This function can be called from hacspec programs but its…",124,[[]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"native_slice","","Function that is not part of the language but is offered…",124,[[]]],[11,"into_slice","","This function can be called from hacspec programs but its…",124,[[]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",124,[[["range",3]]]],[11,"into_slice_range","","This function can be called from hacspec programs but its…",124,[[["range",3]]]],[11,"split_off","","This function can be called from hacspec programs but its…",124,[[]]],[11,"truncate","","This function can be called from hacspec programs but its…",124,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"concat_owned","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",124,[[["range",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"num_exact_chunks","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"get_exact_chunk","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"get_remainder_chunk","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"set_exact_chunk","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",124,[[["vec",3]],["secretseq",3]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",124,[[],["secretseq",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",124,[[],["secretseq",3]]],[11,"new","","This function can be called from hacspec programs but its…",125,[[]]],[11,"with_capacity","","This function can be called from hacspec programs but its…",125,[[]]],[11,"reserve","","This function can be called from hacspec programs but its…",125,[[]]],[11,"len","","This function can be called from hacspec programs but its…",125,[[]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"native_slice","","Function that is not part of the language but is offered…",125,[[]]],[11,"into_slice","","This function can be called from hacspec programs but its…",125,[[]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",125,[[["range",3]]]],[11,"into_slice_range","","This function can be called from hacspec programs but its…",125,[[["range",3]]]],[11,"split_off","","This function can be called from hacspec programs but its…",125,[[]]],[11,"truncate","","This function can be called from hacspec programs but its…",125,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"concat_owned","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",125,[[["range",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"num_exact_chunks","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"get_exact_chunk","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"get_remainder_chunk","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"set_exact_chunk","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",125,[[["vec",3]],["publicseq",3]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",125,[[],["publicseq",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",125,[[],["publicseq",3]]],[11,"new","","This function can be called from hacspec programs but its…",126,[[]]],[11,"with_capacity","","This function can be called from hacspec programs but its…",126,[[]]],[11,"reserve","","This function can be called from hacspec programs but its…",126,[[]]],[11,"len","","This function can be called from hacspec programs but its…",126,[[]]],[11,"slice","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"native_slice","","Function that is not part of the language but is offered…",126,[[]]],[11,"into_slice","","This function can be called from hacspec programs but its…",126,[[]]],[11,"slice_range","","This function is within the hacspec subset of Rust: its…",126,[[["range",3]]]],[11,"into_slice_range","","This function can be called from hacspec programs but its…",126,[[["range",3]]]],[11,"split_off","","This function can be called from hacspec programs but its…",126,[[]]],[11,"truncate","","This function can be called from hacspec programs but its…",126,[[]]],[11,"from_slice","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"concat","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"concat_owned","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"from_slice_range","","This function is within the hacspec subset of Rust: its…",126,[[["range",3]]]],[11,"num_chunks","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"num_exact_chunks","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"get_chunk","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"get_exact_chunk","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"get_remainder_chunk","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"set_chunk","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"set_exact_chunk","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"from_vec","","Function that is not part of the language but is offered…",126,[[["vec",3]],["seq",3]]],[11,"from_native_slice","","Function that is not part of the language but is offered…",126,[[],["seq",3]]],[11,"from_seq","","This function is within the hacspec subset of Rust: its…",126,[[],["seq",3]]],[11,"from_hex","","Function that is not part of the language but is offered…",126,[[],[["u8",3],["seq",3]]]],[11,"from_string","","Function that is not part of the language but is offered…",126,[[["string",3]],[["u8",3],["seq",3]]]],[11,"from_hex","","This function can be called from hacspec programs but its…",125,[[],["publicseq",3]]],[11,"from_string","","Function that is not part of the language but is offered…",125,[[["string",3]],["publicseq",3]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",126,[[],[["u8",3],["seq",3]]]],[11,"from_public_seq","","This function is within the hacspec subset of Rust: its…",126,[[],[["u8",3],["seq",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",126,[[],[["u16",3],["seq",3]]]],[11,"from_public_seq","","This function is within the hacspec subset of Rust: its…",126,[[],[["u16",3],["seq",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",126,[[],[["seq",3],["u32",3]]]],[11,"from_public_seq","","This function is within the hacspec subset of Rust: its…",126,[[],[["seq",3],["u32",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",126,[[],[["seq",3],["u64",3]]]],[11,"from_public_seq","","This function is within the hacspec subset of Rust: its…",126,[[],[["seq",3],["u64",3]]]],[11,"from_public_slice","","Function that is not part of the language but is offered…",126,[[],[["seq",3],["u128",3]]]],[11,"from_public_seq","","This function is within the hacspec subset of Rust: its…",126,[[],[["seq",3],["u128",3]]]],[11,"declassify","","This function is within the hacspec subset of Rust: its…",126,[[],["seq",3]]],[11,"into_native","","Function that is not part of the language but is offered…",126,[[],["vec",3]]],[11,"to_native","","Function that is not part of the language but is offered…",126,[[],["vec",3]]],[11,"declassify","","This function is within the hacspec subset of Rust: its…",126,[[],["seq",3]]],[11,"into_native","","Function that is not part of the language but is offered…",126,[[],["vec",3]]],[11,"to_native","","Function that is not part of the language but is offered…",126,[[],["vec",3]]],[11,"declassify","","This function is within the hacspec subset of Rust: its…",126,[[],["seq",3]]],[11,"into_native","","Function that is not part of the language but is offered…",126,[[],["vec",3]]],[11,"to_native","","Function that is not part of the language but is offered…",126,[[],["vec",3]]],[11,"declassify","","This function is within the hacspec subset of Rust: its…",126,[[],["seq",3]]],[11,"into_native","","Function that is not part of the language but is offered…",126,[[],["vec",3]]],[11,"to_native","","Function that is not part of the language but is offered…",126,[[],["vec",3]]],[11,"declassify","","This function is within the hacspec subset of Rust: its…",126,[[],["seq",3]]],[11,"into_native","","Function that is not part of the language but is offered…",126,[[],["vec",3]]],[11,"to_native","","Function that is not part of the language but is offered…",126,[[],["vec",3]]],[11,"to_hex","","Function that is not part of the language but is offered…",126,[[],["string",3]]],[11,"to_hex","","Function that is not part of the language but is offered…",125,[[],["string",3]]],[11,"update","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",114,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",114,[[]]],[18,"NUM_BITS","","",115,null],[11,"get_byte","","This function is within the hacspec subset of Rust: its…",120,[[]]],[14,"generic_array","hacspec_lib","",null,null],[14,"array","","Create a new array with the given name, length, and type.",null,null],[14,"bytes","","Convenience function to create a new byte array (of type…",null,null],[14,"public_bytes","","Convenience function to create a new public byte array (of…",null,null],[14,"secret_array","","",null,null],[14,"secret_bytes","","",null,null],[14,"assert_secret_array_eq","","",null,null],[14,"assert_bytes_eq","","",null,null],[14,"both_arrays","","",null,null],[14,"both_bytes","","",null,null],[14,"unsigned_public_integer","","",null,null],[14,"signed_public_integer","","",null,null],[14,"unsigned_integer","","",null,null],[14,"signed_integer","","",null,null],[14,"nat_mod","","",null,null],[14,"public_nat_mod","","",null,null],[14,"assert_secret_seq_eq","","",null,null],[14,"public_byte_seq","","",null,null],[14,"byte_seq","","",null,null],[11,"from","hacspec_lib::prelude","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","hacspec_lib::prelude::traits","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","hacspec_lib::prelude","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"to_string","","",127,[[],["string",3]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",127,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"to_string","","",128,[[],["string",3]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",128,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",128,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"to_string","","",129,[[],["string",3]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"into_iter","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"into_iter","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"into_iter","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"to_string","","",85,[[],["string",3]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"to_string","","",86,[[],["string",3]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"to_string","","",89,[[],["string",3]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"to_string","","",90,[[],["string",3]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"to_string","","",91,[[],["string",3]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","hacspec_lib::prelude::fmt","",94,[[]]],[11,"into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"to_string","","",132,[[],["string",3]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"to_string","","",133,[[],["string",3]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","hacspec_lib::prelude","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","hacspec_lib::seq","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"description","hacspec_lib::prelude","",129,[[]]],[11,"description","hacspec_lib::prelude::fmt","",132,[[]]],[11,"clone","hacspec_lib::prelude","",75,[[],["rangeto",3]]],[11,"clone","","",131,[[],["rangeinclusive",3]]],[11,"clone","hacspec_lib::prelude::fmt","",133,[[],["arguments",3]]],[11,"clone","hacspec_lib::prelude","",42,[[],["ordering",4]]],[11,"clone","","",81,[[],["generatorstate",4]]],[11,"clone","hacspec_lib::prelude::fmt","",132,[[],["error",3]]],[11,"clone","hacspec_lib::prelude","",130,[[],["rangefull",3]]],[11,"clone","","",73,[[],["range",3]]],[11,"clone","","",129,[[],["parseinterror",3]]],[11,"clone","","",76,[[],["bound",4]]],[11,"clone","","",74,[[],["rangefrom",3]]],[11,"clone","","",78,[[],["rangetoinclusive",3]]],[11,"hash","hacspec_lib::prelude::fmt","",132,[[]]],[11,"hash","hacspec_lib::prelude","",131,[[]]],[11,"hash","","",42,[[]]],[11,"hash","","",130,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",76,[[]]],[11,"next_back","","",73,[[],["option",4]]],[11,"nth_back","","",73,[[],["option",4]]],[11,"next_back","","",131,[[],["option",4]]],[11,"nth_back","","",131,[[],["option",4]]],[11,"try_rfold","","",131,[[]]],[11,"default","hacspec_lib::prelude::fmt","",132,[[],["error",3]]],[11,"next","hacspec_lib::prelude","",131,[[],["option",4]]],[11,"size_hint","","",131,[[]]],[11,"nth","","",131,[[],["option",4]]],[11,"try_fold","","",131,[[]]],[11,"last","","",131,[[],["option",4]]],[11,"min","","",131,[[],["option",4]]],[11,"max","","",131,[[],["option",4]]],[11,"next","","",73,[[],["option",4]]],[11,"size_hint","","",73,[[]]],[11,"nth","","",73,[[],["option",4]]],[11,"last","","",73,[[],["option",4]]],[11,"min","","",73,[[],["option",4]]],[11,"max","","",73,[[],["option",4]]],[11,"next","","",74,[[],["option",4]]],[11,"size_hint","","",74,[[]]],[11,"nth","","",74,[[],["option",4]]],[11,"eq","","",42,[[["ordering",4]]]],[11,"eq","","",78,[[["rangetoinclusive",3]]]],[11,"ne","","",78,[[["rangetoinclusive",3]]]],[11,"eq","","",131,[[["rangeinclusive",3]]]],[11,"ne","","",131,[[["rangeinclusive",3]]]],[11,"eq","hacspec_lib::prelude::fmt","",132,[[["error",3]]]],[11,"eq","hacspec_lib::prelude","",73,[[["range",3]]]],[11,"ne","","",73,[[["range",3]]]],[11,"eq","","",76,[[["bound",4]]]],[11,"ne","","",76,[[["bound",4]]]],[11,"eq","","",75,[[["rangeto",3]]]],[11,"ne","","",75,[[["rangeto",3]]]],[11,"eq","","",130,[[["rangefull",3]]]],[11,"eq","","",81,[[["generatorstate",4]]]],[11,"ne","","",81,[[["generatorstate",4]]]],[11,"eq","","",74,[[["rangefrom",3]]]],[11,"ne","","",74,[[["rangefrom",3]]]],[11,"eq","","",129,[[["parseinterror",3]]]],[11,"ne","","",129,[[["parseinterror",3]]]],[11,"cmp","","",81,[[["generatorstate",4]],["ordering",4]]],[11,"cmp","hacspec_lib::prelude::fmt","",132,[[["error",3]],["ordering",4]]],[11,"cmp","hacspec_lib::prelude","",42,[[["ordering",4]],["ordering",4]]],[11,"fmt","hacspec_lib::prelude::fmt","",132,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",133,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude","",129,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",129,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",130,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",131,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",81,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude::fmt","",94,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude::fmt","",132,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude","",78,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",73,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude::fmt","",133,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","hacspec_lib::prelude","",74,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",76,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",75,[[["formatter",3]],[["result",4],["error",3]]]],[11,"start_bound","","",78,[[],["bound",4]]],[11,"end_bound","","",78,[[],["bound",4]]],[11,"start_bound","","",73,[[],["bound",4]]],[11,"end_bound","","",73,[[],["bound",4]]],[11,"start_bound","","",75,[[],["bound",4]]],[11,"end_bound","","",75,[[],["bound",4]]],[11,"start_bound","","",131,[[],["bound",4]]],[11,"end_bound","","",131,[[],["bound",4]]],[11,"start_bound","","",74,[[],["bound",4]]],[11,"end_bound","","",74,[[],["bound",4]]],[11,"start_bound","","",78,[[],["bound",4]]],[11,"end_bound","","",78,[[],["bound",4]]],[11,"start_bound","","",130,[[],["bound",4]]],[11,"end_bound","","",130,[[],["bound",4]]],[11,"start_bound","","",74,[[],["bound",4]]],[11,"end_bound","","",74,[[],["bound",4]]],[11,"start_bound","","",131,[[],["bound",4]]],[11,"end_bound","","",131,[[],["bound",4]]],[11,"start_bound","","",75,[[],["bound",4]]],[11,"end_bound","","",75,[[],["bound",4]]],[11,"start_bound","","",73,[[],["bound",4]]],[11,"end_bound","","",73,[[],["bound",4]]],[11,"partial_cmp","","",81,[[["generatorstate",4]],[["option",4],["ordering",4]]]],[11,"lt","","",81,[[["generatorstate",4]]]],[11,"le","","",81,[[["generatorstate",4]]]],[11,"gt","","",81,[[["generatorstate",4]]]],[11,"ge","","",81,[[["generatorstate",4]]]],[11,"partial_cmp","","",42,[[["ordering",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","hacspec_lib::prelude::fmt","",132,[[["error",3]],[["option",4],["ordering",4]]]],[11,"get","hacspec_lib::prelude","",74,[[],["option",4]]],[11,"get_mut","","",74,[[],["option",4]]],[11,"get_unchecked","","",74,[[]]],[11,"get_unchecked_mut","","",74,[[]]],[11,"index","","",74,[[]]],[11,"index_mut","","",74,[[]]],[11,"get","","",130,[[],["option",4]]],[11,"get_mut","","",130,[[],["option",4]]],[11,"get_unchecked","","",130,[[]]],[11,"get_unchecked_mut","","",130,[[]]],[11,"index","","",130,[[]]],[11,"index_mut","","",130,[[]]],[11,"get","","",74,[[],["option",4]]],[11,"get_mut","","",74,[[],["option",4]]],[11,"get_unchecked","","",74,[[]]],[11,"get_unchecked_mut","","",74,[[]]],[11,"index","","",74,[[]]],[11,"index_mut","","",74,[[]]],[11,"get","","",131,[[],["option",4]]],[11,"get_mut","","",131,[[],["option",4]]],[11,"get_unchecked","","",131,[[]]],[11,"get_unchecked_mut","","",131,[[]]],[11,"index","","",131,[[]]],[11,"index_mut","","",131,[[]]],[11,"get","","",73,[[],["option",4]]],[11,"get_mut","","",73,[[],["option",4]]],[11,"get_unchecked","","",73,[[]]],[11,"get_unchecked_mut","","",73,[[]]],[11,"index","","",73,[[]]],[11,"index_mut","","",73,[[]]],[11,"get","","",78,[[],["option",4]]],[11,"get_mut","","",78,[[],["option",4]]],[11,"get_unchecked","","",78,[[]]],[11,"get_unchecked_mut","","",78,[[]]],[11,"index","","",78,[[]]],[11,"index_mut","","",78,[[]]],[11,"get","","",75,[[],["option",4]]],[11,"get_mut","","",75,[[],["option",4]]],[11,"get_unchecked","","",75,[[]]],[11,"get_unchecked_mut","","",75,[[]]],[11,"index","","",75,[[]]],[11,"index_mut","","",75,[[]]],[11,"get","","",78,[[],["option",4]]],[11,"get_mut","","",78,[[],["option",4]]],[11,"get_unchecked","","",78,[[]]],[11,"get_unchecked_mut","","",78,[[]]],[11,"index","","",78,[[]]],[11,"index_mut","","",78,[[]]],[11,"get","","",131,[[],["option",4]]],[11,"get_mut","","",131,[[],["option",4]]],[11,"get_unchecked","","",131,[[]]],[11,"get_unchecked_mut","","",131,[[]]],[11,"index","","",131,[[]]],[11,"index_mut","","",131,[[]]],[11,"get","","",75,[[],["option",4]]],[11,"get_mut","","",75,[[],["option",4]]],[11,"get_unchecked","","",75,[[]]],[11,"get_unchecked_mut","","",75,[[]]],[11,"index","","",75,[[]]],[11,"index_mut","","",75,[[]]],[11,"get","","",73,[[],["option",4]]],[11,"get_mut","","",73,[[],["option",4]]],[11,"get_unchecked","","",73,[[]]],[11,"get_unchecked_mut","","",73,[[]]],[11,"index","","",73,[[]]],[11,"index_mut","","",73,[[]]],[11,"get","","",130,[[],["option",4]]],[11,"get_mut","","",130,[[],["option",4]]],[11,"get_unchecked","","",130,[[]]],[11,"get_unchecked_mut","","",130,[[]]],[11,"index","","",130,[[]]],[11,"index_mut","","",130,[[]]],[11,"write_str","hacspec_lib::prelude::fmt","",139,[[],[["result",4],["error",3]]]],[11,"write_char","","",139,[[],[["result",4],["error",3]]]],[11,"write_fmt","","",139,[[["arguments",3]],[["result",4],["error",3]]]],[11,"bitxor","hacspec_lib::prelude","",128,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",127,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",128,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",127,[[["bigint",3]],["bigint",3]]],[11,"hash","","",127,[[]]],[11,"hash","","",128,[[]]],[11,"hash","","",0,[[]]],[11,"neg","","Negate Sign value.",0,[[],["sign",4]]],[11,"neg","","",127,[[],["bigint",3]]],[11,"bitand_assign","","",128,[[["biguint",3]]]],[11,"bitand_assign","","",127,[[["bigint",3]]]],[11,"bitand_assign","","",128,[[["biguint",3]]]],[11,"bitand_assign","","",127,[[["bigint",3]]]],[11,"add","","",128,[[],["biguint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",128,[[],["biguint",3]]],[11,"add","","",128,[[["biguint",3]],["biguint",3]]],[11,"add","","",127,[[["bigint",3]],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",128,[[],["biguint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",128,[[],["biguint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",128,[[["biguint",3]],["biguint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",128,[[],["biguint",3]]],[11,"add","","",128,[[],["biguint",3]]],[11,"add","","",128,[[],["biguint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",128,[[],["biguint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",128,[[],["biguint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",128,[[],["biguint",3]]],[11,"add","","",128,[[],["biguint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[["bigint",3]],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",128,[[],["biguint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"add","","",127,[[],["bigint",3]]],[11,"fmt","","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",128,[[],["biguint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"shl","","",127,[[],["bigint",3]]],[11,"default","","",127,[[],["bigint",3]]],[11,"default","","",128,[[],["biguint",3]]],[11,"bitand","","",127,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",127,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",128,[[["biguint",3]],["biguint",3]]],[11,"bitand","","",128,[[["biguint",3]],["biguint",3]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",127,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"shl_assign","","",128,[[]]],[11,"from_i64","","",128,[[],[["biguint",3],["option",4]]]],[11,"from_i128","","",128,[[],[["biguint",3],["option",4]]]],[11,"from_u64","","",128,[[],[["biguint",3],["option",4]]]],[11,"from_u128","","",128,[[],[["biguint",3],["option",4]]]],[11,"from_f64","","",128,[[],[["biguint",3],["option",4]]]],[11,"from_i64","","",127,[[],[["option",4],["bigint",3]]]],[11,"from_i128","","",127,[[],[["option",4],["bigint",3]]]],[11,"from_u64","","",127,[[],[["option",4],["bigint",3]]]],[11,"from_u128","","",127,[[],[["option",4],["bigint",3]]]],[11,"from_f64","","",127,[[],[["option",4],["bigint",3]]]],[11,"clone","","",0,[[],["sign",4]]],[11,"clone","","",128,[[],["biguint",3]]],[11,"clone_from","","",128,[[["biguint",3]]]],[11,"clone","","",127,[[],["bigint",3]]],[11,"clone_from","","",127,[[["bigint",3]]]],[11,"to_biguint","","",128,[[],[["biguint",3],["option",4]]]],[11,"to_biguint","","",127,[[],[["biguint",3],["option",4]]]],[11,"rem_assign","","",127,[[["bigint",3]]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",128,[[["biguint",3]]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",128,[[["biguint",3]]]],[11,"rem_assign","","",127,[[]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",127,[[["bigint",3]]]],[11,"rem_assign","","",128,[[]]],[11,"rem_assign","","",127,[[]]],[11,"from","","",128,[[],["biguint",3]]],[11,"from","","",128,[[],["biguint",3]]],[11,"from","","",128,[[],["biguint",3]]],[11,"from","","",127,[[],["bigint",3]]],[11,"from","","",128,[[],["biguint",3]]],[11,"from","","",127,[[["biguint",3]],["bigint",3]]],[11,"from","","",127,[[],["bigint",3]]],[11,"from","","",127,[[],["bigint",3]]],[11,"from","","",127,[[],["bigint",3]]],[11,"from","","",127,[[],["bigint",3]]],[11,"from","","",127,[[],["bigint",3]]],[11,"from","","",128,[[],["biguint",3]]],[11,"from","","",127,[[],["bigint",3]]],[11,"from","","",127,[[],["bigint",3]]],[11,"from","","",127,[[],["bigint",3]]],[11,"from","","",127,[[],["bigint",3]]],[11,"from","","",127,[[],["bigint",3]]],[11,"from","","",127,[[],["bigint",3]]],[11,"from","","",128,[[],["biguint",3]]],[11,"eq","","",0,[[["sign",4]]]],[11,"eq","","",127,[[["bigint",3]]]],[11,"eq","","",128,[[["biguint",3]]]],[11,"nth_root","","",127,[[],["bigint",3]]],[11,"sqrt","","",127,[[],["bigint",3]]],[11,"cbrt","","",127,[[],["bigint",3]]],[11,"nth_root","","",128,[[],["biguint",3]]],[11,"sqrt","","",128,[[],["biguint",3]]],[11,"cbrt","","",128,[[],["biguint",3]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",128,[[["biguint",3]]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",127,[[["bigint",3]]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",128,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",127,[[["bigint",3]]]],[11,"mul_assign","","",128,[[["biguint",3]]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",127,[[]]],[11,"mul_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",127,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr_assign","","",128,[[]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"shr","","",128,[[],["biguint",3]]],[11,"shr","","",127,[[],["bigint",3]]],[11,"mul","","",128,[[],["biguint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",128,[[],["biguint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",128,[[],["biguint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",128,[[],["biguint",3]]],[11,"mul","","",128,[[],["biguint",3]]],[11,"mul","","",128,[[],["biguint",3]]],[11,"mul","","",128,[[],["biguint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",0,[[["sign",4]],["sign",4]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",128,[[["biguint",3]],["biguint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",127,[[["bigint",3]],["bigint",3]]],[11,"mul","","",128,[[],["biguint",3]]],[11,"mul","","",128,[[],["biguint",3]]],[11,"mul","","",128,[[],["biguint",3]]],[11,"mul","","",127,[[["bigint",3]],["bigint",3]]],[11,"mul","","",128,[[["biguint",3]],["biguint",3]]],[11,"mul","","",127,[[],["bigint",3]]],[11,"mul","","",128,[[],["biguint",3]]],[11,"mul","","",128,[[],["biguint",3]]],[11,"cmp","","",128,[[["biguint",3]],["ordering",4]]],[11,"cmp","","",127,[[["bigint",3]],["ordering",4]]],[11,"cmp","","",0,[[["sign",4]],["ordering",4]]],[11,"abs","","",127,[[],["bigint",3]]],[11,"abs_sub","","",127,[[["bigint",3]],["bigint",3]]],[11,"signum","","",127,[[],["bigint",3]]],[11,"is_positive","","",127,[[]]],[11,"is_negative","","",127,[[]]],[11,"sum","","",128,[[],["biguint",3]]],[11,"sum","","",127,[[],["bigint",3]]],[11,"product","","",127,[[],["bigint",3]]],[11,"product","","",128,[[],["biguint",3]]],[11,"div_rem","","",127,[[["bigint",3]]]],[11,"div_floor","","",127,[[["bigint",3]],["bigint",3]]],[11,"mod_floor","","",127,[[["bigint",3]],["bigint",3]]],[11,"div_mod_floor","","",127,[[["bigint",3]]]],[11,"div_ceil","","",127,[[["bigint",3]],["bigint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",127,[[["bigint",3]],["bigint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",127,[[["bigint",3]],["bigint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",127,[[["bigint",3]]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",127,[[["bigint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",127,[[["bigint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",127,[[["bigint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",127,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",127,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",127,[[["bigint",3]],["bigint",3]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",127,[[["bigint",3]],["bigint",3]]],[11,"div_rem","","",128,[[["biguint",3]]]],[11,"div_floor","","",128,[[["biguint",3]],["biguint",3]]],[11,"mod_floor","","",128,[[["biguint",3]],["biguint",3]]],[11,"div_mod_floor","","",128,[[["biguint",3]]]],[11,"div_ceil","","",128,[[["biguint",3]],["biguint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",128,[[["biguint",3]],["biguint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",128,[[["biguint",3]],["biguint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",128,[[["biguint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",128,[[["biguint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",128,[[["biguint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",128,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",128,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",128,[[["biguint",3]],["biguint",3]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",128,[[["biguint",3]],["biguint",3]]],[11,"checked_div","","",127,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",128,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"not","","",127,[[],["bigint",3]]],[11,"checked_mul","","",128,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_mul","","",127,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"bitxor_assign","","",128,[[["biguint",3]]]],[11,"bitxor_assign","","",128,[[["biguint",3]]]],[11,"bitxor_assign","","",127,[[["bigint",3]]]],[11,"bitxor_assign","","",127,[[["bigint",3]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",128,[[],[["result",4],["parsebiginterror",3],["biguint",3]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",127,[[],[["parsebiginterror",3],["result",4],["bigint",3]]]],[11,"div","","",128,[[["biguint",3]],["biguint",3]]],[11,"div","","",128,[[],["biguint",3]]],[11,"div","","",128,[[],["biguint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[["bigint",3]],["bigint",3]]],[11,"div","","",127,[[["bigint",3]],["bigint",3]]],[11,"div","","",128,[[["biguint",3]],["biguint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",128,[[],["biguint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",128,[[],["biguint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",128,[[],["biguint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",128,[[],["biguint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",128,[[],["biguint",3]]],[11,"div","","",128,[[],["biguint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",128,[[],["biguint",3]]],[11,"div","","",128,[[],["biguint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",128,[[],["biguint",3]]],[11,"div","","",128,[[],["biguint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"div","","",127,[[],["bigint",3]]],[11,"fmt","","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"rem","","",128,[[["biguint",3]],["biguint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",128,[[["biguint",3]],["biguint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",128,[[],["biguint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",128,[[],["biguint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",128,[[],["biguint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",128,[[],["biguint",3]]],[11,"rem","","",128,[[],["biguint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",128,[[],["biguint",3]]],[11,"rem","","",128,[[],["biguint",3]]],[11,"rem","","",128,[[],["biguint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",128,[[],["biguint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",127,[[["bigint",3]],["bigint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",127,[[["bigint",3]],["bigint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",128,[[],["biguint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",128,[[],["biguint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"rem","","",128,[[],["biguint",3]]],[11,"rem","","",127,[[],["bigint",3]]],[11,"fmt","","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"try_from","","",128,[[],[["tryfrombiginterror",3],["result",4],["biguint",3]]]],[11,"try_from","","",128,[[],[["tryfrombiginterror",3],["result",4],["biguint",3]]]],[11,"try_from","","",128,[[["bigint",3]],[["tryfrombiginterror",3],["result",4],["biguint",3]]]],[11,"try_from","","",128,[[],[["tryfrombiginterror",3],["result",4],["biguint",3]]]],[11,"try_from","","",128,[[["bigint",3]],[["result",4],["tryfrombiginterror",3],["biguint",3]]]],[11,"try_from","","",128,[[],[["tryfrombiginterror",3],["result",4],["biguint",3]]]],[11,"try_from","","",128,[[],[["tryfrombiginterror",3],["result",4],["biguint",3]]]],[11,"try_from","","",128,[[],[["tryfrombiginterror",3],["result",4],["biguint",3]]]],[11,"from_str","","",127,[[],[["parsebiginterror",3],["result",4],["bigint",3]]]],[11,"from_str","","",128,[[],[["result",4],["parsebiginterror",3],["biguint",3]]]],[11,"to_i64","","",128,[[],["option",4]]],[11,"to_i128","","",128,[[],["option",4]]],[11,"to_u64","","",128,[[],["option",4]]],[11,"to_u128","","",128,[[],["option",4]]],[11,"to_f32","","",128,[[],["option",4]]],[11,"to_f64","","",128,[[],["option",4]]],[11,"to_i64","","",127,[[],["option",4]]],[11,"to_i128","","",127,[[],["option",4]]],[11,"to_u64","","",127,[[],["option",4]]],[11,"to_u128","","",127,[[],["option",4]]],[11,"to_f32","","",127,[[],["option",4]]],[11,"to_f64","","",127,[[],["option",4]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",128,[[["biguint",3]]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",128,[[["biguint",3]]]],[11,"div_assign","","",127,[[["bigint",3]]]],[11,"div_assign","","",127,[[["bigint",3]]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",128,[[]]],[11,"div_assign","","",127,[[]]],[11,"div_assign","","",128,[[]]],[11,"one","","",128,[[],["biguint",3]]],[11,"set_one","","",128,[[]]],[11,"is_one","","",128,[[]]],[11,"one","","",127,[[],["bigint",3]]],[11,"set_one","","",127,[[]]],[11,"is_one","","",127,[[]]],[11,"zero","","",127,[[],["bigint",3]]],[11,"set_zero","","",127,[[]]],[11,"is_zero","","",127,[[]]],[11,"zero","","",128,[[],["biguint",3]]],[11,"set_zero","","",128,[[]]],[11,"is_zero","","",128,[[]]],[11,"checked_add","","",127,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_add","","",128,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",127,[[["bigint",3]]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",127,[[["bigint",3]]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",128,[[["biguint",3]]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",128,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",128,[[["biguint",3]]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",127,[[]]],[11,"add_assign","","",127,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",128,[[["biguint",3]]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",128,[[["biguint",3]]]],[11,"sub_assign","","",127,[[["bigint",3]]]],[11,"sub_assign","","",128,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",127,[[["bigint",3]]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",127,[[]]],[11,"sub_assign","","",127,[[]]],[11,"bitor_assign","","",128,[[["biguint",3]]]],[11,"bitor_assign","","",128,[[["biguint",3]]]],[11,"bitor_assign","","",127,[[["bigint",3]]]],[11,"bitor_assign","","",127,[[["bigint",3]]]],[11,"bitor","","",127,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",127,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",128,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",128,[[["biguint",3]],["biguint",3]]],[11,"checked_sub","","",128,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_sub","","",127,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"to_bigint","","",128,[[],[["option",4],["bigint",3]]]],[11,"to_bigint","","",127,[[],[["option",4],["bigint",3]]]],[11,"fmt","","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",127,[[["bigint",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",128,[[["biguint",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",0,[[["sign",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","","",127,[[["bigint",3]],["bigint",3]]],[11,"sub","","",128,[[],["biguint",3]]],[11,"sub","","",128,[[["biguint",3]],["biguint",3]]],[11,"sub","","",128,[[],["biguint",3]]],[11,"sub","","",128,[[],["biguint",3]]],[11,"sub","","",127,[[["bigint",3]],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",128,[[],["biguint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",128,[[],["biguint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",128,[[],["biguint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",128,[[],["biguint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",128,[[],["biguint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",128,[[],["biguint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",128,[[["biguint",3]],["biguint",3]]],[11,"sub","","",128,[[],["biguint",3]]],[11,"sub","","",128,[[],["biguint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",128,[[],["biguint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"sub","","",127,[[],["bigint",3]]],[11,"pow","","",127,[[],["bigint",3]]],[11,"pow","","",128,[[],["biguint",3]]],[11,"pow","","",128,[[],["biguint",3]]],[11,"pow","","",128,[[],["biguint",3]]],[11,"pow","","",127,[[],["bigint",3]]],[11,"pow","","",128,[[],["biguint",3]]],[11,"pow","","",128,[[],["biguint",3]]],[11,"pow","","",127,[[],["bigint",3]]],[11,"pow","","",127,[[],["bigint",3]]],[11,"pow","","",127,[[],["bigint",3]]],[11,"pow","","",128,[[],["biguint",3]]],[11,"pow","","",127,[[],["bigint",3]]],[11,"pow","","",128,[[["biguint",3]],["biguint",3]]],[11,"pow","","",127,[[],["bigint",3]]],[11,"pow","","",128,[[],["biguint",3]]],[11,"pow","","",127,[[],["bigint",3]]],[11,"pow","","",128,[[],["biguint",3]]],[11,"pow","","",127,[[["biguint",3]],["bigint",3]]],[11,"pow","","",128,[[],["biguint",3]]],[11,"pow","","",127,[[],["bigint",3]]],[11,"pow","","",127,[[],["bigint",3]]],[11,"pow","","",127,[[],["bigint",3]]],[11,"pow","","",128,[[["biguint",3]],["biguint",3]]],[11,"pow","","",128,[[],["biguint",3]]],[11,"pow","","",128,[[],["biguint",3]]],[11,"pow","","",128,[[],["biguint",3]]],[11,"pow","","",127,[[],["bigint",3]]],[11,"pow","","",127,[[["biguint",3]],["bigint",3]]],[11,"fmt","hacspec_lib::prelude::traits","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"shr","hacspec_lib::prelude","",86,[[],["u128",3]]],[11,"shr","","",91,[[],["i128",3]]],[11,"shr","","",89,[[],["i32",3]]],[11,"shr","","",83,[[],["u16",3]]],[11,"shr","","",82,[[],["u8",3]]],[11,"shr","","",87,[[],["i8",3]]],[11,"shr","","",88,[[],["i16",3]]],[11,"shr","","",84,[[],["u32",3]]],[11,"shr","","",85,[[],["u64",3]]],[11,"shr","","",90,[[],["i64",3]]],[11,"bitxor","","",87,[[["i8",3]],["i8",3]]],[11,"bitxor","","",85,[[["u64",3]],["u64",3]]],[11,"bitxor","","",86,[[["u128",3]],["u128",3]]],[11,"bitxor","","",90,[[["i64",3]],["i64",3]]],[11,"bitxor","","",83,[[["u16",3]],["u16",3]]],[11,"bitxor","","",88,[[["i16",3]],["i16",3]]],[11,"bitxor","","",84,[[["u32",3]],["u32",3]]],[11,"bitxor","","",82,[[["u8",3]],["u8",3]]],[11,"bitxor","","",91,[[["i128",3]],["i128",3]]],[11,"bitxor","","",89,[[["i32",3]],["i32",3]]],[11,"mul_assign","","",85,[[["u64",3]]]],[11,"mul_assign","","",84,[[["u32",3]]]],[11,"mul_assign","","",90,[[["i64",3]]]],[11,"mul_assign","","",87,[[["i8",3]]]],[11,"mul_assign","","",83,[[["u16",3]]]],[11,"mul_assign","","",86,[[["u128",3]]]],[11,"mul_assign","","",82,[[["u8",3]]]],[11,"mul_assign","","",91,[[["i128",3]]]],[11,"mul_assign","","",89,[[["i32",3]]]],[11,"mul_assign","","",88,[[["i16",3]]]],[11,"shl","","",82,[[],["u8",3]]],[11,"shl","","",86,[[],["u128",3]]],[11,"shl","","",83,[[],["u16",3]]],[11,"shl","","",84,[[],["u32",3]]],[11,"shl","","",90,[[],["i64",3]]],[11,"shl","","",87,[[],["i8",3]]],[11,"shl","","",85,[[],["u64",3]]],[11,"shl","","",91,[[],["i128",3]]],[11,"shl","","",89,[[],["i32",3]]],[11,"shl","","",88,[[],["i16",3]]],[11,"bitand_assign","","",83,[[["u16",3]]]],[11,"bitand_assign","","",88,[[["i16",3]]]],[11,"bitand_assign","","",91,[[["i128",3]]]],[11,"bitand_assign","","",87,[[["i8",3]]]],[11,"bitand_assign","","",85,[[["u64",3]]]],[11,"bitand_assign","","",82,[[["u8",3]]]],[11,"bitand_assign","","",84,[[["u32",3]]]],[11,"bitand_assign","","",86,[[["u128",3]]]],[11,"bitand_assign","","",89,[[["i32",3]]]],[11,"bitand_assign","","",90,[[["i64",3]]]],[11,"default","","",87,[[],["i8",3]]],[11,"default","","",82,[[],["u8",3]]],[11,"default","","",88,[[],["i16",3]]],[11,"default","","",84,[[],["u32",3]]],[11,"default","","",89,[[],["i32",3]]],[11,"default","","",91,[[],["i128",3]]],[11,"default","","",83,[[],["u16",3]]],[11,"default","","",85,[[],["u64",3]]],[11,"default","","",90,[[],["i64",3]]],[11,"default","","",86,[[],["u128",3]]],[11,"bitand","","",91,[[["i128",3]],["i128",3]]],[11,"bitand","","",87,[[["i8",3]],["i8",3]]],[11,"bitand","","",88,[[["i16",3]],["i16",3]]],[11,"bitand","","",82,[[["u8",3]],["u8",3]]],[11,"bitand","","",86,[[["u128",3]],["u128",3]]],[11,"bitand","","",85,[[["u64",3]],["u64",3]]],[11,"bitand","","",90,[[["i64",3]],["i64",3]]],[11,"bitand","","",84,[[["u32",3]],["u32",3]]],[11,"bitand","","",89,[[["i32",3]],["i32",3]]],[11,"bitand","","",83,[[["u16",3]],["u16",3]]],[11,"mul","","",87,[[["i8",3]],["i8",3]]],[11,"mul","","",88,[[["i16",3]],["i16",3]]],[11,"mul","","",86,[[["u128",3]],["u128",3]]],[11,"mul","","",83,[[["u16",3]],["u16",3]]],[11,"mul","","",82,[[["u8",3]],["u8",3]]],[11,"mul","","",89,[[["i32",3]],["i32",3]]],[11,"mul","","",84,[[["u32",3]],["u32",3]]],[11,"mul","","",85,[[["u64",3]],["u64",3]]],[11,"mul","","",91,[[["i128",3]],["i128",3]]],[11,"mul","","",90,[[["i64",3]],["i64",3]]],[11,"shr_assign","","",83,[[]]],[11,"shr_assign","","",84,[[]]],[11,"shr_assign","","",89,[[]]],[11,"shr_assign","","",85,[[]]],[11,"shr_assign","","",82,[[]]],[11,"shr_assign","","",90,[[]]],[11,"shr_assign","","",87,[[]]],[11,"shr_assign","","",86,[[]]],[11,"shr_assign","","",91,[[]]],[11,"shr_assign","","",88,[[]]],[11,"fmt","","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",86,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",90,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",89,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",91,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",87,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitxor_assign","","",82,[[["u8",3]]]],[11,"bitxor_assign","","",90,[[["i64",3]]]],[11,"bitxor_assign","","",84,[[["u32",3]]]],[11,"bitxor_assign","","",86,[[["u128",3]]]],[11,"bitxor_assign","","",87,[[["i8",3]]]],[11,"bitxor_assign","","",88,[[["i16",3]]]],[11,"bitxor_assign","","",89,[[["i32",3]]]],[11,"bitxor_assign","","",83,[[["u16",3]]]],[11,"bitxor_assign","","",91,[[["i128",3]]]],[11,"bitxor_assign","","",85,[[["u64",3]]]],[11,"neg","","",89,[[],["i32",3]]],[11,"neg","","",84,[[],["u32",3]]],[11,"neg","","",82,[[],["u8",3]]],[11,"neg","","",83,[[],["u16",3]]],[11,"neg","","",91,[[],["i128",3]]],[11,"neg","","",86,[[],["u128",3]]],[11,"neg","","",88,[[],["i16",3]]],[11,"neg","","",87,[[],["i8",3]]],[11,"neg","","",85,[[],["u64",3]]],[11,"neg","","",90,[[],["i64",3]]],[11,"bitor","","",83,[[["u16",3]],["u16",3]]],[11,"bitor","","",86,[[["u128",3]],["u128",3]]],[11,"bitor","","",89,[[["i32",3]],["i32",3]]],[11,"bitor","","",82,[[["u8",3]],["u8",3]]],[11,"bitor","","",85,[[["u64",3]],["u64",3]]],[11,"bitor","","",88,[[["i16",3]],["i16",3]]],[11,"bitor","","",84,[[["u32",3]],["u32",3]]],[11,"bitor","","",87,[[["i8",3]],["i8",3]]],[11,"bitor","","",90,[[["i64",3]],["i64",3]]],[11,"bitor","","",91,[[["i128",3]],["i128",3]]],[11,"from","","",89,[[["i8",3]],["i32",3]]],[11,"from","","",88,[[["i32",3]],["i16",3]]],[11,"from","","",84,[[],["u32",3]]],[11,"from","","",85,[[["i64",3]],["u64",3]]],[11,"from","","",86,[[],["u128",3]]],[11,"from","","",86,[[],["u128",3]]],[11,"from","","",84,[[["u128",3]],["u32",3]]],[11,"from","","",84,[[["i32",3]],["u32",3]]],[11,"from","","",86,[[["u32",3]],["u128",3]]],[11,"from","","",85,[[["u128",3]],["u64",3]]],[11,"from","","",88,[[["u16",3]],["i16",3]]],[11,"from","","",88,[[],["i16",3]]],[11,"from","","",87,[[["i128",3]],["i8",3]]],[11,"from","","",86,[[],["u128",3]]],[11,"from","","",86,[[],["u128",3]]],[11,"from","","",88,[[["i128",3]],["i16",3]]],[11,"from","","",83,[[["u128",3]],["u16",3]]],[11,"from","","",85,[[],["u64",3]]],[11,"from","","",85,[[],["u64",3]]],[11,"from","","",87,[[["i64",3]],["i8",3]]],[11,"from","","",88,[[["i8",3]],["i16",3]]],[11,"from","","",85,[[["u8",3]],["u64",3]]],[11,"from","","",87,[[],["i8",3]]],[11,"from","","",82,[[],["u8",3]]],[11,"from","","",84,[[["u16",3]],["u32",3]]],[11,"from","","",85,[[["u16",3]],["u64",3]]],[11,"from","","",88,[[["i64",3]],["i16",3]]],[11,"from","","",83,[[["u32",3]],["u16",3]]],[11,"from","","",91,[[["i8",3]],["i128",3]]],[11,"from","","",82,[[["u32",3]],["u8",3]]],[11,"from","","",83,[[["u8",3]],["u16",3]]],[11,"from","","",89,[[["i64",3]],["i32",3]]],[11,"from","","",82,[[["u64",3]],["u8",3]]],[11,"from","","",86,[[["i128",3]],["u128",3]]],[11,"from","","",91,[[["i16",3]],["i128",3]]],[11,"from","","",89,[[["i128",3]],["i32",3]]],[11,"from","","",82,[[],["u8",3]]],[11,"from","","",82,[[["u128",3]],["u8",3]]],[11,"from","","",86,[[["u8",3]],["u128",3]]],[11,"from","","",84,[[["u8",3]],["u32",3]]],[11,"from","","",83,[[["u64",3]],["u16",3]]],[11,"from","","",84,[[],["u32",3]]],[11,"from","","",87,[[["u8",3]],["i8",3]]],[11,"from","","",83,[[["i16",3]],["u16",3]]],[11,"from","","",89,[[["u32",3]],["i32",3]]],[11,"from","","",90,[[["i8",3]],["i64",3]]],[11,"from","","",84,[[],["u32",3]]],[11,"from","","",89,[[["i16",3]],["i32",3]]],[11,"from","","",89,[[],["i32",3]]],[11,"from","","",91,[[["i64",3]],["i128",3]]],[11,"from","","",86,[[["u64",3]],["u128",3]]],[11,"from","","",91,[[],["i128",3]]],[11,"from","","",87,[[["i16",3]],["i8",3]]],[11,"from","","",85,[[],["u64",3]]],[11,"from","","",90,[[["i16",3]],["i64",3]]],[11,"from","","",91,[[["i32",3]],["i128",3]]],[11,"from","","",85,[[["u32",3]],["u64",3]]],[11,"from","","",84,[[["u64",3]],["u32",3]]],[11,"from","","",83,[[],["u16",3]]],[11,"from","","",91,[[["u128",3]],["i128",3]]],[11,"from","","",87,[[["i32",3]],["i8",3]]],[11,"from","","",86,[[],["u128",3]]],[11,"from","","",83,[[],["u16",3]]],[11,"from","","",85,[[],["u64",3]]],[11,"from","","",82,[[["u16",3]],["u8",3]]],[11,"from","","",86,[[["u16",3]],["u128",3]]],[11,"from","","",85,[[],["u64",3]]],[11,"from","","",82,[[["i8",3]],["u8",3]]],[11,"from","","",90,[[["i128",3]],["i64",3]]],[11,"from","","",90,[[],["i64",3]]],[11,"from","","",90,[[["i32",3]],["i64",3]]],[11,"from","","",90,[[["u64",3]],["i64",3]]],[11,"from","","",86,[[],["u128",3]]],[11,"add","","",91,[[["i128",3]],["i128",3]]],[11,"add","","",88,[[["i16",3]],["i16",3]]],[11,"add","","",90,[[["i64",3]],["i64",3]]],[11,"add","","",85,[[["u64",3]],["u64",3]]],[11,"add","","",84,[[["u32",3]],["u32",3]]],[11,"add","","",87,[[["i8",3]],["i8",3]]],[11,"add","","",89,[[["i32",3]],["i32",3]]],[11,"add","","",82,[[["u8",3]],["u8",3]]],[11,"add","","",83,[[["u16",3]],["u16",3]]],[11,"add","","",86,[[["u128",3]],["u128",3]]],[11,"bitor_assign","","",91,[[["i128",3]]]],[11,"bitor_assign","","",89,[[["i32",3]]]],[11,"bitor_assign","","",86,[[["u128",3]]]],[11,"bitor_assign","","",84,[[["u32",3]]]],[11,"bitor_assign","","",88,[[["i16",3]]]],[11,"bitor_assign","","",90,[[["i64",3]]]],[11,"bitor_assign","","",83,[[["u16",3]]]],[11,"bitor_assign","","",87,[[["i8",3]]]],[11,"bitor_assign","","",85,[[["u64",3]]]],[11,"bitor_assign","","",82,[[["u8",3]]]],[11,"clone","","",86,[[],["u128",3]]],[11,"clone","","",90,[[],["i64",3]]],[11,"clone","","",84,[[],["u32",3]]],[11,"clone","","",82,[[],["u8",3]]],[11,"clone","","",85,[[],["u64",3]]],[11,"clone","","",89,[[],["i32",3]]],[11,"clone","","",88,[[],["i16",3]]],[11,"clone","","",87,[[],["i8",3]]],[11,"clone","","",91,[[],["i128",3]]],[11,"clone","","",83,[[],["u16",3]]],[11,"sub_assign","","",84,[[["u32",3]]]],[11,"sub_assign","","",82,[[["u8",3]]]],[11,"sub_assign","","",89,[[["i32",3]]]],[11,"sub_assign","","",87,[[["i8",3]]]],[11,"sub_assign","","",83,[[["u16",3]]]],[11,"sub_assign","","",86,[[["u128",3]]]],[11,"sub_assign","","",88,[[["i16",3]]]],[11,"sub_assign","","",91,[[["i128",3]]]],[11,"sub_assign","","",85,[[["u64",3]]]],[11,"sub_assign","","",90,[[["i64",3]]]],[11,"sub","","",85,[[["u64",3]],["u64",3]]],[11,"sub","","",88,[[["i16",3]],["i16",3]]],[11,"sub","","",82,[[["u8",3]],["u8",3]]],[11,"sub","","",90,[[["i64",3]],["i64",3]]],[11,"sub","","",89,[[["i32",3]],["i32",3]]],[11,"sub","","",87,[[["i8",3]],["i8",3]]],[11,"sub","","",86,[[["u128",3]],["u128",3]]],[11,"sub","","",84,[[["u32",3]],["u32",3]]],[11,"sub","","",83,[[["u16",3]],["u16",3]]],[11,"sub","","",91,[[["i128",3]],["i128",3]]],[11,"shl_assign","","",87,[[]]],[11,"shl_assign","","",89,[[]]],[11,"shl_assign","","",84,[[]]],[11,"shl_assign","","",83,[[]]],[11,"shl_assign","","",85,[[]]],[11,"shl_assign","","",88,[[]]],[11,"shl_assign","","",91,[[]]],[11,"shl_assign","","",90,[[]]],[11,"shl_assign","","",82,[[]]],[11,"shl_assign","","",86,[[]]],[11,"not","","",85,[[],["u64",3]]],[11,"not","","",83,[[],["u16",3]]],[11,"not","","",91,[[],["i128",3]]],[11,"not","","",86,[[],["u128",3]]],[11,"not","","",90,[[],["i64",3]]],[11,"not","","",87,[[],["i8",3]]],[11,"not","","",82,[[],["u8",3]]],[11,"not","","",88,[[],["i16",3]]],[11,"not","","",89,[[],["i32",3]]],[11,"not","","",84,[[],["u32",3]]],[11,"fmt","","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",87,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",89,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",86,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",91,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",90,[[["formatter",3]],[["result",4],["error",3]]]],[11,"add_assign","","",85,[[["u64",3]]]],[11,"add_assign","","",86,[[["u128",3]]]],[11,"add_assign","","",82,[[["u8",3]]]],[11,"add_assign","","",88,[[["i16",3]]]],[11,"add_assign","","",87,[[["i8",3]]]],[11,"add_assign","","",91,[[["i128",3]]]],[11,"add_assign","","",84,[[["u32",3]]]],[11,"add_assign","","",90,[[["i64",3]]]],[11,"add_assign","","",89,[[["i32",3]]]],[11,"add_assign","","",83,[[["u16",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",91,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",86,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",90,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",89,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",87,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"create","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"len","","This function can be called from hacspec programs but its…",106,[[]]],[11,"iter","","Function that is not part of the language but is offered…",106,[[],[["u8",3],["iter",3]]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"len","","This function can be called from hacspec programs but its…",107,[[]]],[11,"iter","","Function that is not part of the language but is offered…",107,[[],[["u8",3],["iter",3]]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"len","","This function can be called from hacspec programs but its…",108,[[]]],[11,"iter","","Function that is not part of the language but is offered…",108,[[],[["u8",3],["iter",3]]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"len","","This function can be called from hacspec programs but its…",109,[[]]],[11,"iter","","Function that is not part of the language but is offered…",109,[[],[["u8",3],["iter",3]]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"len","","This function can be called from hacspec programs but its…",110,[[]]],[11,"iter","","Function that is not part of the language but is offered…",110,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"len","","This function can be called from hacspec programs but its…",111,[[]]],[11,"iter","","Function that is not part of the language but is offered…",111,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"len","","This function can be called from hacspec programs but its…",112,[[]]],[11,"iter","","Function that is not part of the language but is offered…",112,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"len","","This function can be called from hacspec programs but its…",113,[[]]],[11,"iter","","Function that is not part of the language but is offered…",113,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"create","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"len","","This function can be called from hacspec programs but its…",124,[[]]],[11,"iter","","Function that is not part of the language but is offered…",124,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",124,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"len","","This function can be called from hacspec programs but its…",125,[[]]],[11,"iter","","Function that is not part of the language but is offered…",125,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"create","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"len","","This function can be called from hacspec programs but its…",126,[[]]],[11,"iter","","Function that is not part of the language but is offered…",126,[[],["iter",3]]],[11,"update_slice","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"update","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"update_start","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"ZERO","hacspec_lib::prelude","Function that is not part of the language but is offered…",127,[[]]],[11,"ONE","","Function that is not part of the language but is offered…",127,[[]]],[11,"TWO","","Function that is not part of the language but is offered…",127,[[]]],[11,"from_literal","","Function that is not part of the language but is offered…",127,[[]]],[11,"from_hex_string","","Function that is not part of the language but is offered…",127,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",127,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",127,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",127,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",127,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",127,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",82,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",83,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",84,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",85,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",86,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",87,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",88,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",89,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",90,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"ZERO","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"ONE","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"TWO","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"from_literal","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"from_hex_string","","This function can be called from hacspec programs but its…",91,[[["string",3]]]],[11,"get_bit","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"set_bit","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"set","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"rotate_left","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"rotate_right","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"classify","","Function that is not part of the language but is offered…",127,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"classify","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"classify","","",87,[[]]],[11,"classify","","",88,[[]]],[11,"classify","","",89,[[]]],[11,"classify","","",90,[[]]],[11,"classify","","",91,[[]]],[11,"classify","","",82,[[]]],[11,"classify","","",83,[[]]],[11,"classify","","",84,[[]]],[11,"classify","","",85,[[]]],[11,"classify","","",86,[[]]],[11,"to_le_bytes","","This function is within the hacspec subset of Rust: its…",82,[[],[["u8",3],["seq",3]]]],[11,"to_be_bytes","","This function is within the hacspec subset of Rust: its…",82,[[],[["u8",3],["seq",3]]]],[11,"from_le_bytes","","This function is within the hacspec subset of Rust: its…",82,[[["seq",3]]]],[11,"from_be_bytes","","This function is within the hacspec subset of Rust: its…",82,[[["seq",3]]]],[11,"to_le_bytes","","This function is within the hacspec subset of Rust: its…",83,[[],[["u8",3],["seq",3]]]],[11,"to_be_bytes","","This function is within the hacspec subset of Rust: its…",83,[[],[["u8",3],["seq",3]]]],[11,"from_le_bytes","","This function is within the hacspec subset of Rust: its…",83,[[["seq",3]]]],[11,"from_be_bytes","","This function is within the hacspec subset of Rust: its…",83,[[["seq",3]]]],[11,"to_le_bytes","","This function is within the hacspec subset of Rust: its…",84,[[],[["u8",3],["seq",3]]]],[11,"to_be_bytes","","This function is within the hacspec subset of Rust: its…",84,[[],[["u8",3],["seq",3]]]],[11,"from_le_bytes","","This function is within the hacspec subset of Rust: its…",84,[[["seq",3]]]],[11,"from_be_bytes","","This function is within the hacspec subset of Rust: its…",84,[[["seq",3]]]],[11,"to_le_bytes","","This function is within the hacspec subset of Rust: its…",85,[[],[["u8",3],["seq",3]]]],[11,"to_be_bytes","","This function is within the hacspec subset of Rust: its…",85,[[],[["u8",3],["seq",3]]]],[11,"from_le_bytes","","This function is within the hacspec subset of Rust: its…",85,[[["seq",3]]]],[11,"from_be_bytes","","This function is within the hacspec subset of Rust: its…",85,[[["seq",3]]]],[11,"to_le_bytes","","This function is within the hacspec subset of Rust: its…",86,[[],[["u8",3],["seq",3]]]],[11,"to_be_bytes","","This function is within the hacspec subset of Rust: its…",86,[[],[["u8",3],["seq",3]]]],[11,"from_le_bytes","","This function is within the hacspec subset of Rust: its…",86,[[["seq",3]]]],[11,"from_be_bytes","","This function is within the hacspec subset of Rust: its…",86,[[["seq",3]]]],[11,"sub_mod","","Function that is not part of the language but is offered…",127,[[]]],[11,"add_mod","","Function that is not part of the language but is offered…",127,[[]]],[11,"mul_mod","","Function that is not part of the language but is offered…",127,[[]]],[11,"pow_mod","","Function that is not part of the language but is offered…",127,[[]]],[11,"modulo","","Function that is not part of the language but is offered…",127,[[]]],[11,"signed_modulo","","Function that is not part of the language but is offered…",127,[[]]],[11,"absolute","","Function that is not part of the language but is offered…",127,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"signed_modulo","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"signed_modulo","","",106,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"signed_modulo","","",107,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"signed_modulo","","",108,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"signed_modulo","","",109,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"signed_modulo","","`self % n` (coefficient-wise)",110,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"signed_modulo","","`self % n` (coefficient-wise)",111,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"signed_modulo","","`self % n` (coefficient-wise)",112,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"sub_mod","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"add_mod","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"mul_mod","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"pow_mod","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"modulo","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"signed_modulo","","`self % n` (coefficient-wise)",113,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"sub_mod","hacspec_lib::seq","(self - rhs) % n.",125,[[]]],[11,"add_mod","","`(self + rhs) % n`",125,[[]]],[11,"mul_mod","","`(self * rhs) % n`",125,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",125,[[]]],[11,"modulo","","`self % n`",125,[[]]],[11,"signed_modulo","","",125,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"sub_mod","","(self - rhs) % n.",126,[[]]],[11,"add_mod","","`(self + rhs) % n`",126,[[]]],[11,"mul_mod","","`(self * rhs) % n`",126,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",126,[[]]],[11,"modulo","","`self % n`",126,[[]]],[11,"signed_modulo","","",126,[[]]],[11,"absolute","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"max_val","hacspec_lib::prelude","Function that is not part of the language but is offered…",127,[[]]],[11,"wrap_add","","Function that is not part of the language but is offered…",127,[[]]],[11,"wrap_sub","","Function that is not part of the language but is offered…",127,[[]]],[11,"wrap_mul","","Function that is not part of the language but is offered…",127,[[]]],[11,"wrap_div","","Function that is not part of the language but is offered…",127,[[]]],[11,"exp","","Function that is not part of the language but is offered…",127,[[]]],[11,"pow_self","","Function that is not part of the language but is offered…",127,[[]]],[11,"divide","","Function that is not part of the language but is offered…",127,[[]]],[11,"inv","","Function that is not part of the language but is offered…",127,[[]]],[11,"equal","","Function that is not part of the language but is offered…",127,[[]]],[11,"greater_than","","Function that is not part of the language but is offered…",127,[[]]],[11,"greater_than_or_qual","","Function that is not part of the language but is offered…",127,[[]]],[11,"less_than","","Function that is not part of the language but is offered…",127,[[]]],[11,"less_than_or_equal","","Function that is not part of the language but is offered…",127,[[]]],[11,"not_equal_bm","","Function that is not part of the language but is offered…",127,[[]]],[11,"equal_bm","","Function that is not part of the language but is offered…",127,[[]]],[11,"greater_than_bm","","Function that is not part of the language but is offered…",127,[[]]],[11,"greater_than_or_equal_bm","","Function that is not part of the language but is offered…",127,[[]]],[11,"less_than_bm","","Function that is not part of the language but is offered…",127,[[]]],[11,"less_than_or_equal_bm","","Function that is not part of the language but is offered…",127,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",82,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",83,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",84,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",85,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",86,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",87,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",88,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",89,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",90,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",91,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"max_val","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"wrap_add","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"wrap_sub","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"wrap_mul","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"wrap_div","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"exp","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"pow_self","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"divide","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"inv","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"equal","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"greater_than","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"greater_than_or_qual","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"less_than","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"less_than_or_equal","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"not_equal_bm","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"equal_bm","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"greater_than_bm","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"greater_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"less_than_bm","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"less_than_or_equal_bm","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"max_val","hacspec_lib::seq","Return largest value that can be represented.",125,[[]]],[11,"wrap_add","","",125,[[]]],[11,"wrap_sub","","",125,[[]]],[11,"wrap_mul","","",125,[[]]],[11,"wrap_div","","",125,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",125,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",125,[[]]],[11,"divide","","Division.",125,[[]]],[11,"inv","","Invert self modulo n.",125,[[]]],[11,"equal","","",125,[[]]],[11,"greater_than","","",125,[[]]],[11,"greater_than_or_qual","","",125,[[]]],[11,"less_than","","",125,[[]]],[11,"less_than_or_equal","","",125,[[]]],[11,"not_equal_bm","","",125,[[]]],[11,"equal_bm","","",125,[[]]],[11,"greater_than_bm","","",125,[[]]],[11,"greater_than_or_equal_bm","","",125,[[]]],[11,"less_than_bm","","",125,[[]]],[11,"less_than_or_equal_bm","","",125,[[]]],[11,"max_val","","Return largest value that can be represented.",126,[[]]],[11,"wrap_add","","",126,[[]]],[11,"wrap_sub","","",126,[[]]],[11,"wrap_mul","","",126,[[]]],[11,"wrap_div","","",126,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",126,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",126,[[]]],[11,"divide","","Division.",126,[[]]],[11,"inv","","Invert self modulo n.",126,[[]]],[11,"equal","","",126,[[]]],[11,"greater_than","","",126,[[]]],[11,"greater_than_or_qual","","",126,[[]]],[11,"less_than","","",126,[[]]],[11,"less_than_or_equal","","",126,[[]]],[11,"not_equal_bm","","",126,[[]]],[11,"equal_bm","","",126,[[]]],[11,"greater_than_bm","","",126,[[]]],[11,"greater_than_or_equal_bm","","",126,[[]]],[11,"less_than_bm","","",126,[[]]],[11,"less_than_or_equal_bm","","",126,[[]]],[11,"clone","hacspec_lib::prelude","",106,[[],["u16word",3]]],[11,"clone","","",107,[[],["u32word",3]]],[11,"clone","","",108,[[],["u64word",3]]],[11,"clone","","",109,[[],["u128word",3]]],[11,"clone","","",110,[[],["u16word",3]]],[11,"clone","","",111,[[],["u32word",3]]],[11,"clone","","",112,[[],["u64word",3]]],[11,"clone","","",113,[[],["u128word",3]]],[11,"clone","hacspec_lib::seq","",124,[[],["secretseq",3]]],[11,"clone","","",125,[[],["publicseq",3]]],[11,"clone","","",126,[[],["seq",3]]],[11,"default","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"default","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"default","hacspec_lib::seq","",124,[[],["secretseq",3]]],[11,"default","","",125,[[],["publicseq",3]]],[11,"default","","",126,[[],["seq",3]]],[11,"cmp","hacspec_lib::prelude","This function can be called from hacspec programs but its…",110,[[],["ordering",4]]],[11,"cmp","","This function can be called from hacspec programs but its…",111,[[],["ordering",4]]],[11,"cmp","","This function can be called from hacspec programs but its…",112,[[],["ordering",4]]],[11,"cmp","","This function can be called from hacspec programs but its…",113,[[],["ordering",4]]],[11,"eq","","This function can be called from hacspec programs but its…",110,[[]]],[11,"eq","","This function can be called from hacspec programs but its…",111,[[]]],[11,"eq","","This function can be called from hacspec programs but its…",112,[[]]],[11,"eq","","This function can be called from hacspec programs but its…",113,[[]]],[11,"eq","hacspec_lib::seq","Function that is not part of the language but is offered…",125,[[]]],[11,"eq","","Function that is not part of the language but is offered…",126,[[]]],[11,"partial_cmp","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",110,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","This function is within the hacspec subset of Rust: its…",111,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","This function is within the hacspec subset of Rust: its…",112,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","This function is within the hacspec subset of Rust: its…",113,[[],[["option",4],["ordering",4]]]],[11,"fmt","","Function that is not part of the language but is offered…",106,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",107,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",108,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",109,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",110,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",111,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",112,[[["formatter",3]],["result",6]]],[11,"fmt","","Function that is not part of the language but is offered…",113,[[["formatter",3]],["result",6]]],[11,"fmt","hacspec_lib::seq","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"div","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",110,[[["u16word",3]],["u16word",3]]],[11,"div","","This function is within the hacspec subset of Rust: its…",111,[[["u32word",3]],["u32word",3]]],[11,"div","","This function is within the hacspec subset of Rust: its…",112,[[["u64word",3]],["u64word",3]]],[11,"div","","This function is within the hacspec subset of Rust: its…",113,[[["u128word",3]],["u128word",3]]],[11,"rem","","This function is within the hacspec subset of Rust: its…",106,[[["u16word",3]],["u16word",3]]],[11,"rem","","This function is within the hacspec subset of Rust: its…",107,[[["u32word",3]],["u32word",3]]],[11,"rem","","This function is within the hacspec subset of Rust: its…",108,[[["u64word",3]],["u64word",3]]],[11,"rem","","This function is within the hacspec subset of Rust: its…",109,[[["u128word",3]],["u128word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",106,[[["u16word",3]],["u16word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",107,[[["u32word",3]],["u32word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",108,[[["u64word",3]],["u64word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",109,[[["u128word",3]],["u128word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",110,[[["u16word",3]],["u16word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",111,[[["u32word",3]],["u32word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",112,[[["u64word",3]],["u64word",3]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",113,[[["u128word",3]],["u128word",3]]],[11,"sub","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"sub","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"add","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[["u16word",3]],["u16word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",107,[[["u32word",3]],["u32word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",108,[[["u64word",3]],["u64word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",109,[[["u128word",3]],["u128word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",110,[[["u16word",3]],["u16word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",111,[[["u32word",3]],["u32word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",112,[[["u64word",3]],["u64word",3]]],[11,"add","","This function is within the hacspec subset of Rust: its…",113,[[["u128word",3]],["u128word",3]]],[11,"add","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"add","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"mul","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[["u16word",3]],["u16word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",107,[[["u32word",3]],["u32word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",108,[[["u64word",3]],["u64word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",109,[[["u128word",3]],["u128word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",110,[[["u16word",3]],["u16word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",111,[[["u32word",3]],["u32word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",112,[[["u64word",3]],["u64word",3]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",113,[[["u128word",3]],["u128word",3]]],[11,"mul","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"mul","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"not","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"not","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"not","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"bitand","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"bitand","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"bitand","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"bitor","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"bitor","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"bitor","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"bitxor","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"bitxor","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"bitxor","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"shl","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"shl","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"shl","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"shr","hacspec_lib::prelude","This function is within the hacspec subset of Rust: its…",106,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",107,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",108,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",109,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",110,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",111,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",112,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",113,[[]]],[11,"shr","hacspec_lib::seq","This function is within the hacspec subset of Rust: its…",125,[[]]],[11,"shr","","This function is within the hacspec subset of Rust: its…",126,[[]]],[11,"index","hacspec_lib::prelude","This function can be called from hacspec programs but its…",106,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",106,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",106,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",106,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",106,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",107,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",107,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",107,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",107,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",107,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",108,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",108,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",108,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",108,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",108,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",109,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",109,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",109,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",109,[[],["u8",3]]],[11,"index","","This function can be called from hacspec programs but its…",109,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",110,[[]]],[11,"index","","This function can be called from hacspec programs but its…",110,[[]]],[11,"index","","This function can be called from hacspec programs but its…",110,[[]]],[11,"index","","This function can be called from hacspec programs but its…",110,[[]]],[11,"index","","This function can be called from hacspec programs but its…",110,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",111,[[]]],[11,"index","","This function can be called from hacspec programs but its…",111,[[]]],[11,"index","","This function can be called from hacspec programs but its…",111,[[]]],[11,"index","","This function can be called from hacspec programs but its…",111,[[]]],[11,"index","","This function can be called from hacspec programs but its…",111,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",112,[[]]],[11,"index","","This function can be called from hacspec programs but its…",112,[[]]],[11,"index","","This function can be called from hacspec programs but its…",112,[[]]],[11,"index","","This function can be called from hacspec programs but its…",112,[[]]],[11,"index","","This function can be called from hacspec programs but its…",112,[[["rangefull",3]]]],[11,"index","","This function can be called from hacspec programs but its…",113,[[]]],[11,"index","","This function can be called from hacspec programs but its…",113,[[]]],[11,"index","","This function can be called from hacspec programs but its…",113,[[]]],[11,"index","","This function can be called from hacspec programs but its…",113,[[]]],[11,"index","","This function can be called from hacspec programs but its…",113,[[["rangefull",3]]]],[11,"index","hacspec_lib::seq","This function can be called from hacspec programs but its…",124,[[]]],[11,"index","","This function can be called from hacspec programs but its…",124,[[]]],[11,"index","","This function can be called from hacspec programs but its…",124,[[]]],[11,"index","","This function can be called from hacspec programs but its…",124,[[]]],[11,"index","","This function can be called from hacspec programs but its…",124,[[["range",3]]]],[11,"index","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index","","This function can be called from hacspec programs but its…",125,[[["range",3]]]],[11,"index","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index","","This function can be called from hacspec programs but its…",126,[[["range",3]]]],[11,"index_mut","hacspec_lib::prelude","This function can be called from hacspec programs but its…",106,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",106,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",106,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",106,[[],["u8",3]]],[11,"index_mut","","This function can be called from hacspec programs but its…",107,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",107,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",107,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",107,[[],["u8",3]]],[11,"index_mut","","This function can be called from hacspec programs but its…",108,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",108,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",108,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",108,[[],["u8",3]]],[11,"index_mut","","This function can be called from hacspec programs but its…",109,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",109,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",109,[[],["u8",3]]],[11,"index_mut","","Function that is not part of the language but is offered…",109,[[],["u8",3]]],[11,"index_mut","","This function can be called from hacspec programs but its…",110,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",110,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",110,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",110,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",111,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",111,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",111,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",111,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",112,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",112,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",112,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",112,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",113,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",113,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",113,[[]]],[11,"index_mut","","Function that is not part of the language but is offered…",113,[[]]],[11,"index_mut","hacspec_lib::seq","This function can be called from hacspec programs but its…",124,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",124,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",124,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",124,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",125,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",126,[[]]],[11,"index_mut","","This function can be called from hacspec programs but its…",126,[[]]],[11,"new","hacspec_lib::prelude","Creates and initializes a BigInt.",127,[[["vec",3],["sign",4]],["bigint",3]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",127,[[["biguint",3],["sign",4]],["bigint",3]]],[11,"from_slice","","Creates and initializes a `BigInt`.",127,[[["sign",4]],["bigint",3]]],[11,"assign_from_slice","","Reinitializes a `BigInt`.",127,[[["sign",4]]]],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",127,[[["sign",4]],["bigint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",127,[[["sign",4]],["bigint",3]]],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",127,[[],["bigint",3]]],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",127,[[],["bigint",3]]],[11,"parse_bytes","","Creates and initializes a `BigInt`.",127,[[],[["option",4],["bigint",3]]]],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",127,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",127,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",127,[[]]],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",127,[[]]],[11,"to_u32_digits","","Returns the sign and the `u32` digits representation of…",127,[[]]],[11,"to_u64_digits","","Returns the sign and the `u64` digits representation of…",127,[[]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",127,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",127,[[],["u64digits",3]]],[11,"to_signed_bytes_be","","Returns the two\'s-complement byte representation of the…",127,[[],["vec",3]]],[11,"to_signed_bytes_le","","Returns the two\'s-complement byte representation of the…",127,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",127,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",127,[[]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",127,[[]]],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",127,[[],["sign",4]]],[11,"magnitude","","Returns the magnitude of the `BigInt` as a `BigUint`.",127,[[],["biguint",3]]],[11,"into_parts","","Convert this `BigInt` into its `Sign` and `BigUint`…",127,[[]]],[11,"bits","","Determines the fewest bits necessary to express the…",127,[[]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it\'s not…",127,[[],[["biguint",3],["option",4]]]],[11,"checked_add","","",127,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_sub","","",127,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",127,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",127,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"pow","","Returns `self ^ exponent`.",127,[[],["bigint",3]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",127,[[["bigint",3]],["bigint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",127,[[],["bigint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",127,[[],["bigint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",127,[[],["bigint",3]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",127,[[],["option",4]]],[11,"bit","","Returns whether the bit in position `bit` is set, using…",127,[[]]],[11,"set_bit","","Sets or clears the bit in the given position, using the…",127,[[]]],[11,"new","","Creates and initializes a `BigUint`.",128,[[["vec",3]],["biguint",3]]],[11,"from_slice","","Creates and initializes a `BigUint`.",128,[[],["biguint",3]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",128,[[]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",128,[[],["biguint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",128,[[],["biguint",3]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",128,[[],[["biguint",3],["option",4]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",128,[[],[["biguint",3],["option",4]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",128,[[],[["biguint",3],["option",4]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",128,[[],["vec",3]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",128,[[],["vec",3]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",128,[[],["vec",3]]],[11,"to_u64_digits","","Returns the `u64` digits representation of the `BigUint`…",128,[[],["vec",3]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",128,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",128,[[],["u64digits",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",128,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",128,[[],["vec",3]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",128,[[],["vec",3]]],[11,"bits","","Determines the fewest bits necessary to express the…",128,[[]]],[11,"pow","","Returns `self ^ exponent`.",128,[[],["biguint",3]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",128,[[["biguint",3]],["biguint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",128,[[],["biguint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",128,[[],["biguint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",128,[[],["biguint",3]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",128,[[],["option",4]]],[11,"trailing_ones","","Returns the number of least-significant bits that are ones.",128,[[]]],[11,"count_ones","","Returns the number of one bits.",128,[[]]],[11,"bit","","Returns whether the bit in the given position is set",128,[[]]],[11,"set_bit","","Sets or clears the bit in the given position",128,[[]]],[11,"reverse","","Reverses the `Ordering`.",42,[[],["ordering",4]]],[11,"then","","Chains two orderings.",42,[[["ordering",4]],["ordering",4]]],[11,"then_with","","Chains the ordering with the given function.",42,[[],["ordering",4]]],[11,"kind","","Outputs the detailed cause of parsing an integer failing.",129,[[],["interrorkind",4]]],[11,"contains","","Returns `true` if `item` is contained in the range.",73,[[]]],[11,"is_empty","","Returns `true` if the range contains no items.",73,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",74,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",75,[[]]],[11,"cloned","","Map a `Bound<&T>` to a `Bound<T>` by cloning the contents…",76,[[],["bound",4]]],[11,"new","","Creates a new inclusive range. Equivalent to writing…",131,[[],["rangeinclusive",3]]],[11,"start","","Returns the lower bound of the range (inclusive).",131,[[]]],[11,"end","","Returns the upper bound of the range (inclusive).",131,[[]]],[11,"into_inner","","Destructures the `RangeInclusive` into (lower bound, upper…",131,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",131,[[]]],[11,"is_empty","","Returns `true` if the range contains no items.",131,[[]]],[11,"contains","","Returns `true` if `item` is contained in the range.",78,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",82,[[["u8",3]],["u8",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",82,[[["u8",3]],["u8",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",82,[[["u8",3]],["u8",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",82,[[["u8",3]],["u8",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",82,[[["u8",3]],["u8",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",82,[[["u8",3]],["u8",3]]],[11,"classify","","",82,[[],["u8",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",82,[[]]],[11,"zero","","",82,[[],["u8",3]]],[11,"one","","",82,[[],["u8",3]]],[11,"ones","","",82,[[],["u8",3]]],[11,"from_le_bytes","","",82,[[],[["u8",3],["vec",3]]]],[11,"to_le_bytes","","",82,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",82,[[],[["u8",3],["vec",3]]]],[11,"to_be_bytes","","",82,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",82,[[],["u8",3]]],[11,"rotate_left","","",82,[[],["u8",3]]],[11,"rotate_right","","",82,[[],["u8",3]]],[11,"checked_add","","Warning: panics when overflow.",82,[[["u8",3]],["u8",3]]],[11,"checked_sub","","Warning: panics when overflow.",82,[[["u8",3]],["u8",3]]],[11,"checked_mul","","Warning: panics when overflow.",82,[[["u8",3]],["u8",3]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",83,[[["u16",3]],["u16",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",83,[[["u16",3]],["u16",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",83,[[["u16",3]],["u16",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",83,[[["u16",3]],["u16",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",83,[[["u16",3]],["u16",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",83,[[["u16",3]],["u16",3]]],[11,"classify","","",83,[[],["u16",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",83,[[]]],[11,"zero","","",83,[[],["u16",3]]],[11,"one","","",83,[[],["u16",3]]],[11,"ones","","",83,[[],["u16",3]]],[11,"from_le_bytes","","",83,[[],[["vec",3],["u16",3]]]],[11,"to_le_bytes","","",83,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",83,[[],[["vec",3],["u16",3]]]],[11,"to_be_bytes","","",83,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",83,[[],["u16",3]]],[11,"rotate_left","","",83,[[],["u16",3]]],[11,"rotate_right","","",83,[[],["u16",3]]],[11,"checked_add","","Warning: panics when overflow.",83,[[["u16",3]],["u16",3]]],[11,"checked_sub","","Warning: panics when overflow.",83,[[["u16",3]],["u16",3]]],[11,"checked_mul","","Warning: panics when overflow.",83,[[["u16",3]],["u16",3]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",84,[[["u32",3]],["u32",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",84,[[["u32",3]],["u32",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",84,[[["u32",3]],["u32",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",84,[[["u32",3]],["u32",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",84,[[["u32",3]],["u32",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",84,[[["u32",3]],["u32",3]]],[11,"classify","","",84,[[],["u32",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",84,[[]]],[11,"zero","","",84,[[],["u32",3]]],[11,"one","","",84,[[],["u32",3]]],[11,"ones","","",84,[[],["u32",3]]],[11,"from_le_bytes","","",84,[[],[["u32",3],["vec",3]]]],[11,"to_le_bytes","","",84,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",84,[[],[["u32",3],["vec",3]]]],[11,"to_be_bytes","","",84,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",84,[[],["u32",3]]],[11,"rotate_left","","",84,[[],["u32",3]]],[11,"rotate_right","","",84,[[],["u32",3]]],[11,"checked_add","","Warning: panics when overflow.",84,[[["u32",3]],["u32",3]]],[11,"checked_sub","","Warning: panics when overflow.",84,[[["u32",3]],["u32",3]]],[11,"checked_mul","","Warning: panics when overflow.",84,[[["u32",3]],["u32",3]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",85,[[["u64",3]],["u64",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",85,[[["u64",3]],["u64",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",85,[[["u64",3]],["u64",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",85,[[["u64",3]],["u64",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",85,[[["u64",3]],["u64",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",85,[[["u64",3]],["u64",3]]],[11,"classify","","",85,[[],["u64",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",85,[[]]],[11,"zero","","",85,[[],["u64",3]]],[11,"one","","",85,[[],["u64",3]]],[11,"ones","","",85,[[],["u64",3]]],[11,"from_le_bytes","","",85,[[],[["vec",3],["u64",3]]]],[11,"to_le_bytes","","",85,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",85,[[],[["vec",3],["u64",3]]]],[11,"to_be_bytes","","",85,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",85,[[],["u64",3]]],[11,"rotate_left","","",85,[[],["u64",3]]],[11,"rotate_right","","",85,[[],["u64",3]]],[11,"checked_add","","Warning: panics when overflow.",85,[[["u64",3]],["u64",3]]],[11,"checked_sub","","Warning: panics when overflow.",85,[[["u64",3]],["u64",3]]],[11,"checked_mul","","Warning: panics when overflow.",85,[[["u64",3]],["u64",3]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",86,[[["u128",3]],["u128",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",86,[[["u128",3]],["u128",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",86,[[["u128",3]],["u128",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",86,[[["u128",3]],["u128",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",86,[[["u128",3]],["u128",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",86,[[["u128",3]],["u128",3]]],[11,"classify","","",86,[[],["u128",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",86,[[]]],[11,"zero","","",86,[[],["u128",3]]],[11,"one","","",86,[[],["u128",3]]],[11,"ones","","",86,[[],["u128",3]]],[11,"from_le_bytes","","",86,[[],[["vec",3],["u128",3]]]],[11,"to_le_bytes","","",86,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",86,[[],[["vec",3],["u128",3]]]],[11,"to_be_bytes","","",86,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",86,[[],["u128",3]]],[11,"rotate_left","","",86,[[],["u128",3]]],[11,"rotate_right","","",86,[[],["u128",3]]],[11,"checked_add","","Warning: panics when overflow.",86,[[["u128",3]],["u128",3]]],[11,"checked_sub","","Warning: panics when overflow.",86,[[["u128",3]],["u128",3]]],[11,"checked_mul","","Warning: panics when overflow.",86,[[["u128",3]],["u128",3]]],[11,"comp_eq","","",87,[[["i8",3]],["i8",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",87,[[["i8",3]],["i8",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",87,[[["i8",3]],["i8",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",87,[[["i8",3]],["i8",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",87,[[["i8",3]],["i8",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",87,[[["i8",3]],["i8",3]]],[11,"classify","","",87,[[],["i8",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",87,[[]]],[11,"zero","","",87,[[],["i8",3]]],[11,"one","","",87,[[],["i8",3]]],[11,"ones","","",87,[[],["i8",3]]],[11,"from_le_bytes","","",87,[[],[["i8",3],["vec",3]]]],[11,"to_le_bytes","","",87,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",87,[[],[["i8",3],["vec",3]]]],[11,"to_be_bytes","","",87,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",87,[[],["i8",3]]],[11,"rotate_left","","",87,[[],["i8",3]]],[11,"rotate_right","","",87,[[],["i8",3]]],[11,"checked_add","","Warning: panics when overflow.",87,[[["i8",3]],["i8",3]]],[11,"checked_sub","","Warning: panics when overflow.",87,[[["i8",3]],["i8",3]]],[11,"checked_mul","","Warning: panics when overflow.",87,[[["i8",3]],["i8",3]]],[11,"comp_eq","","",88,[[["i16",3]],["i16",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",88,[[["i16",3]],["i16",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",88,[[["i16",3]],["i16",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",88,[[["i16",3]],["i16",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",88,[[["i16",3]],["i16",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",88,[[["i16",3]],["i16",3]]],[11,"classify","","",88,[[],["i16",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",88,[[]]],[11,"zero","","",88,[[],["i16",3]]],[11,"one","","",88,[[],["i16",3]]],[11,"ones","","",88,[[],["i16",3]]],[11,"from_le_bytes","","",88,[[],[["vec",3],["i16",3]]]],[11,"to_le_bytes","","",88,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",88,[[],[["vec",3],["i16",3]]]],[11,"to_be_bytes","","",88,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",88,[[],["i16",3]]],[11,"rotate_left","","",88,[[],["i16",3]]],[11,"rotate_right","","",88,[[],["i16",3]]],[11,"checked_add","","Warning: panics when overflow.",88,[[["i16",3]],["i16",3]]],[11,"checked_sub","","Warning: panics when overflow.",88,[[["i16",3]],["i16",3]]],[11,"checked_mul","","Warning: panics when overflow.",88,[[["i16",3]],["i16",3]]],[11,"comp_eq","","",89,[[["i32",3]],["i32",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",89,[[["i32",3]],["i32",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",89,[[["i32",3]],["i32",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",89,[[["i32",3]],["i32",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",89,[[["i32",3]],["i32",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",89,[[["i32",3]],["i32",3]]],[11,"classify","","",89,[[],["i32",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",89,[[]]],[11,"zero","","",89,[[],["i32",3]]],[11,"one","","",89,[[],["i32",3]]],[11,"ones","","",89,[[],["i32",3]]],[11,"from_le_bytes","","",89,[[],[["vec",3],["i32",3]]]],[11,"to_le_bytes","","",89,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",89,[[],[["vec",3],["i32",3]]]],[11,"to_be_bytes","","",89,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",89,[[],["i32",3]]],[11,"rotate_left","","",89,[[],["i32",3]]],[11,"rotate_right","","",89,[[],["i32",3]]],[11,"checked_add","","Warning: panics when overflow.",89,[[["i32",3]],["i32",3]]],[11,"checked_sub","","Warning: panics when overflow.",89,[[["i32",3]],["i32",3]]],[11,"checked_mul","","Warning: panics when overflow.",89,[[["i32",3]],["i32",3]]],[11,"comp_eq","","",90,[[["i64",3]],["i64",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",90,[[["i64",3]],["i64",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",90,[[["i64",3]],["i64",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",90,[[["i64",3]],["i64",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",90,[[["i64",3]],["i64",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",90,[[["i64",3]],["i64",3]]],[11,"classify","","",90,[[],["i64",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",90,[[]]],[11,"zero","","",90,[[],["i64",3]]],[11,"one","","",90,[[],["i64",3]]],[11,"ones","","",90,[[],["i64",3]]],[11,"from_le_bytes","","",90,[[],[["vec",3],["i64",3]]]],[11,"to_le_bytes","","",90,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",90,[[],[["vec",3],["i64",3]]]],[11,"to_be_bytes","","",90,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",90,[[],["i64",3]]],[11,"rotate_left","","",90,[[],["i64",3]]],[11,"rotate_right","","",90,[[],["i64",3]]],[11,"checked_add","","Warning: panics when overflow.",90,[[["i64",3]],["i64",3]]],[11,"checked_sub","","Warning: panics when overflow.",90,[[["i64",3]],["i64",3]]],[11,"checked_mul","","Warning: panics when overflow.",90,[[["i64",3]],["i64",3]]],[11,"comp_eq","","",91,[[["i128",3]],["i128",3]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",91,[[["i128",3]],["i128",3]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",91,[[["i128",3]],["i128",3]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",91,[[["i128",3]],["i128",3]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",91,[[["i128",3]],["i128",3]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",91,[[["i128",3]],["i128",3]]],[11,"classify","","",91,[[],["i128",3]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",91,[[]]],[11,"zero","","",91,[[],["i128",3]]],[11,"one","","",91,[[],["i128",3]]],[11,"ones","","",91,[[],["i128",3]]],[11,"from_le_bytes","","",91,[[],[["i128",3],["vec",3]]]],[11,"to_le_bytes","","",91,[[],[["u8",3],["vec",3]]]],[11,"from_be_bytes","","",91,[[],[["i128",3],["vec",3]]]],[11,"to_be_bytes","","",91,[[],[["u8",3],["vec",3]]]],[11,"max_value","","",91,[[],["i128",3]]],[11,"rotate_left","","",91,[[],["i128",3]]],[11,"rotate_right","","",91,[[],["i128",3]]],[11,"checked_add","","Warning: panics when overflow.",91,[[["i128",3]],["i128",3]]],[11,"checked_sub","","Warning: panics when overflow.",91,[[["i128",3]],["i128",3]]],[11,"checked_mul","","Warning: panics when overflow.",91,[[["i128",3]],["i128",3]]],[11,"entry","hacspec_lib::prelude::fmt","Adds a new entry to the list output.",134,[[["debug",8]],["debuglist",3]]],[11,"entries","","Adds the contents of an iterator of entries to the list…",134,[[],["debuglist",3]]],[11,"finish","","Finishes output and returns any error encountered.",134,[[],[["result",4],["error",3]]]],[11,"entry","","Adds a new entry to the map output.",135,[[["debug",8]],["debugmap",3]]],[11,"key","","Adds the key part of a new entry to the map output.",135,[[["debug",8]],["debugmap",3]]],[11,"value","","Adds the value part of a new entry to the map output.",135,[[["debug",8]],["debugmap",3]]],[11,"entries","","Adds the contents of an iterator of entries to the map…",135,[[],["debugmap",3]]],[11,"finish","","Finishes output and returns any error encountered.",135,[[],[["result",4],["error",3]]]],[11,"entry","","Adds a new entry to the set output.",136,[[["debug",8]],["debugset",3]]],[11,"entries","","Adds the contents of an iterator of entries to the set…",136,[[],["debugset",3]]],[11,"finish","","Finishes output and returns any error encountered.",136,[[],[["result",4],["error",3]]]],[11,"field","","Adds a new field to the generated struct output.",137,[[["debug",8]],["debugstruct",3]]],[11,"finish_non_exhaustive","","Marks the struct as non-exhaustive, indicating to the…",137,[[],[["result",4],["error",3]]]],[11,"finish","","Finishes output and returns any error encountered.",137,[[],[["result",4],["error",3]]]],[11,"field","","Adds a new field to the generated tuple struct output.",138,[[["debug",8]],["debugtuple",3]]],[11,"finish","","Finishes output and returns any error encountered.",138,[[],[["result",4],["error",3]]]],[11,"pad_integral","","Performs the correct padding for an integer which has…",139,[[],[["result",4],["error",3]]]],[11,"pad","","This function takes a string slice and emits it to the…",139,[[],[["result",4],["error",3]]]],[11,"write_str","","Writes some data to the underlying buffer contained within…",139,[[],[["result",4],["error",3]]]],[11,"write_fmt","","Writes some formatted information into this instance.",139,[[["arguments",3]],[["result",4],["error",3]]]],[11,"flags","","Flags for formatting",139,[[]]],[11,"fill","","Character used as \'fill\' whenever there is alignment.",139,[[]]],[11,"align","","Flag indicating what form of alignment was requested.",139,[[],[["option",4],["alignment",4]]]],[11,"width","","Optionally specified integer width that the output should…",139,[[],["option",4]]],[11,"precision","","Optionally specified precision for numeric types.",139,[[],["option",4]]],[11,"sign_plus","","Determines if the `+` flag was specified.",139,[[]]],[11,"sign_minus","","Determines if the `-` flag was specified.",139,[[]]],[11,"alternate","","Determines if the `#` flag was specified.",139,[[]]],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",139,[[]]],[11,"debug_struct","","Creates a [`DebugStruct`] builder designed to assist with…",139,[[],["debugstruct",3]]],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with…",139,[[],["debugtuple",3]]],[11,"debug_list","","Creates a `DebugList` builder designed to assist with…",139,[[],["debuglist",3]]],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with…",139,[[],["debugset",3]]],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with…",139,[[],["debugmap",3]]]],"p":[[4,"Sign"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[4,"Ordering"],[8,"Add"],[8,"Div"],[8,"Mul"],[8,"Neg"],[8,"Rem"],[8,"Sub"],[8,"AddAssign"],[8,"DivAssign"],[8,"MulAssign"],[8,"RemAssign"],[8,"SubAssign"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Not"],[8,"Shl"],[8,"Shr"],[8,"BitAndAssign"],[8,"BitOrAssign"],[8,"BitXorAssign"],[8,"ShlAssign"],[8,"ShrAssign"],[8,"Deref"],[8,"DerefMut"],[8,"Drop"],[8,"Fn"],[8,"FnMut"],[8,"FnOnce"],[8,"Index"],[8,"IndexMut"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Bound"],[8,"RangeBounds"],[3,"RangeToInclusive"],[8,"Try"],[8,"Generator"],[4,"GeneratorState"],[3,"U8"],[3,"U16"],[3,"U32"],[3,"U64"],[3,"U128"],[3,"I8"],[3,"I16"],[3,"I32"],[3,"I64"],[3,"I128"],[8,"FromStr"],[8,"PartialEq"],[4,"Alignment"],[8,"Binary"],[8,"Octal"],[8,"Debug"],[8,"Display"],[8,"Write"],[8,"LowerExp"],[8,"UpperExp"],[8,"LowerHex"],[8,"Pointer"],[8,"UpperHex"],[8,"TryFrom"],[3,"U16Word"],[3,"U32Word"],[3,"U64Word"],[3,"U128Word"],[3,"u16Word"],[3,"u32Word"],[3,"u64Word"],[3,"u128Word"],[8,"SeqTrait"],[8,"Integer"],[8,"SecretInteger"],[8,"SecretIntegerCopy"],[8,"PublicInteger"],[8,"PublicIntegerCopy"],[8,"UnsignedSecretInteger"],[8,"UnsignedPublicInteger"],[8,"ModNumeric"],[8,"Numeric"],[3,"SecretSeq"],[3,"PublicSeq"],[3,"Seq"],[3,"BigInt"],[3,"BigUint"],[3,"ParseIntError"],[3,"RangeFull"],[3,"RangeInclusive"],[3,"Error"],[3,"Arguments"],[3,"DebugList"],[3,"DebugMap"],[3,"DebugSet"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"Formatter"]]},\
"hacspec_ntru_prime":{"doc":"","i":[[5,"round_to_3","hacspec_ntru_prime","First transform each coefficients to a value between…",null,[[["seq",3]],["seq",3]]],[5,"ntru_prime_653_encrypt","","NTRU Prime 653 basic encryption",null,[[["seq",3]],["seq",3]]],[5,"ntru_prime_653_decrypt","","NTRU Prime 653 basic decryption",null,[[["seq",3]]]]],"p":[]},\
"hacspec_p256":{"doc":"","i":[[3,"FieldCanvas","hacspec_p256","",null,null],[3,"P256FieldElement","","",null,null],[3,"ScalarCanvas","","",null,null],[3,"P256Scalar","","",null,null],[3,"Element","","Fixed length byte array.",null,null],[12,"0","","",0,null],[4,"Error","","",null,null],[13,"InvalidAddition","","",1,null],[5,"p256_point_mul_base","","",null,[[["p256scalar",3]],["affineresult",6]]],[5,"p256_point_mul","","",null,[[["p256scalar",3],["affine",6]],["affineresult",6]]],[5,"point_add","","",null,[[["affine",6]],["affineresult",6]]],[6,"Affine","","",null,null],[6,"AffineResult","","",null,null],[11,"max_value","","",2,[[]]],[11,"from_literal","","",2,[[]]],[11,"from_signed_literal","","",2,[[]]],[11,"pow2","","Returns 2 to the power of the argument",2,[[],["fieldcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",2,[[]]],[11,"from_hex","","",2,[[]]],[11,"from_be_bytes","","",2,[[]]],[11,"from_le_bytes","","",2,[[]]],[11,"to_be_bytes","","",2,[[]]],[11,"to_le_bytes","","",2,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",2,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"inv","","",2,[[]]],[11,"pow_felem","","",2,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",2,[[]]],[11,"from_byte_seq_be","","",2,[[],["fieldcanvas",3]]],[11,"from_public_byte_seq_be","","",2,[[["seqtrait",8]],["fieldcanvas",3]]],[11,"to_byte_seq_be","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_canvas","","",3,[[["fieldcanvas",3]],["p256fieldelement",3]]],[11,"into_canvas","","",3,[[],["fieldcanvas",3]]],[11,"max","","",3,[[],["fieldcanvas",3]]],[11,"declassify","","",3,[[],["bigint",3]]],[11,"from_hex","","",3,[[]]],[11,"from_be_bytes","","",3,[[]]],[11,"to_be_bytes","","",3,[[],["vec",3]]],[11,"from_le_bytes","","",3,[[]]],[11,"to_le_bytes","","",3,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_signed_literal","","",3,[[]]],[11,"comp_eq","","",3,[[]]],[11,"comp_ne","","",3,[[]]],[11,"comp_gte","","",3,[[]]],[11,"comp_gt","","",3,[[]]],[11,"comp_lte","","",3,[[]]],[11,"comp_lt","","",3,[[]]],[11,"inv","","",3,[[]]],[11,"pow_felem","","",3,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",3,[[]]],[11,"pow2","","Returns 2 to the power of the argument",3,[[],["p256fieldelement",3]]],[11,"from_byte_seq_be","","",3,[[],["p256fieldelement",3]]],[11,"from_public_byte_seq_be","","",3,[[["seqtrait",8]],["p256fieldelement",3]]],[11,"to_byte_seq_be","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",3,[[],["seq",3]]],[11,"from_byte_seq_le","","",3,[[["seqtrait",8],["u8",3]],["p256fieldelement",3]]],[11,"from_public_byte_seq_le","","",3,[[["seqtrait",8]],["p256fieldelement",3]]],[11,"to_byte_seq_le","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",3,[[],["seq",3]]],[11,"from_secret_literal","","",3,[[["u128",3]],["p256fieldelement",3]]],[11,"max_value","","",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_signed_literal","","",4,[[]]],[11,"pow2","","Returns 2 to the power of the argument",4,[[],["scalarcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",4,[[]]],[11,"from_hex","","",4,[[]]],[11,"from_be_bytes","","",4,[[]]],[11,"from_le_bytes","","",4,[[]]],[11,"to_be_bytes","","",4,[[]]],[11,"to_le_bytes","","",4,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",4,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"inv","","",4,[[]]],[11,"pow_felem","","",4,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",4,[[]]],[11,"from_byte_seq_be","","",4,[[],["scalarcanvas",3]]],[11,"from_public_byte_seq_be","","",4,[[["seqtrait",8]],["scalarcanvas",3]]],[11,"to_byte_seq_be","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_canvas","","",5,[[["scalarcanvas",3]],["p256scalar",3]]],[11,"into_canvas","","",5,[[],["scalarcanvas",3]]],[11,"max","","",5,[[],["scalarcanvas",3]]],[11,"declassify","","",5,[[],["bigint",3]]],[11,"from_hex","","",5,[[]]],[11,"from_be_bytes","","",5,[[]]],[11,"to_be_bytes","","",5,[[],["vec",3]]],[11,"from_le_bytes","","",5,[[]]],[11,"to_le_bytes","","",5,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",5,[[]]],[11,"from_literal","","",5,[[]]],[11,"from_signed_literal","","",5,[[]]],[11,"comp_eq","","",5,[[]]],[11,"comp_ne","","",5,[[]]],[11,"comp_gte","","",5,[[]]],[11,"comp_gt","","",5,[[]]],[11,"comp_lte","","",5,[[]]],[11,"comp_lt","","",5,[[]]],[11,"inv","","",5,[[]]],[11,"pow_felem","","",5,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",5,[[]]],[11,"pow2","","Returns 2 to the power of the argument",5,[[],["p256scalar",3]]],[11,"from_byte_seq_be","","",5,[[],["p256scalar",3]]],[11,"from_public_byte_seq_be","","",5,[[["seqtrait",8]],["p256scalar",3]]],[11,"to_byte_seq_be","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",5,[[],["seq",3]]],[11,"from_byte_seq_le","","",5,[[["seqtrait",8],["u8",3]],["p256scalar",3]]],[11,"from_public_byte_seq_le","","",5,[[["seqtrait",8]],["p256scalar",3]]],[11,"to_byte_seq_le","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",5,[[],["seq",3]]],[11,"from_secret_literal","","",5,[[["u128",3]],["p256scalar",3]]],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["element",3]]],[11,"from_seq","","",0,[[],["element",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["element",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["element",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["element",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[["biguint",3]],["fieldcanvas",3]]],[11,"from","","",2,[[["bigint",3]],["fieldcanvas",3]]],[11,"from","","",3,[[["fieldcanvas",3]],["p256fieldelement",3]]],[11,"from","","",4,[[["biguint",3]],["scalarcanvas",3]]],[11,"from","","",4,[[["bigint",3]],["scalarcanvas",3]]],[11,"from","","",5,[[["scalarcanvas",3]],["p256scalar",3]]],[11,"into","","",2,[[],["bigint",3]]],[11,"into","","",2,[[],["biguint",3]]],[11,"into","","",3,[[],["fieldcanvas",3]]],[11,"into","","",4,[[],["bigint",3]]],[11,"into","","",4,[[],["biguint",3]]],[11,"into","","",5,[[],["scalarcanvas",3]]],[11,"clone","","",2,[[],["fieldcanvas",3]]],[11,"clone","","",3,[[],["p256fieldelement",3]]],[11,"clone","","",4,[[],["scalarcanvas",3]]],[11,"clone","","",5,[[],["p256scalar",3]]],[11,"clone","","",0,[[],["element",3]]],[11,"default","","",2,[[],["fieldcanvas",3]]],[11,"default","","",3,[[],["p256fieldelement",3]]],[11,"default","","",4,[[],["scalarcanvas",3]]],[11,"default","","",5,[[],["p256scalar",3]]],[11,"default","","",0,[[]]],[11,"cmp","","",2,[[["fieldcanvas",3]],["ordering",4]]],[11,"cmp","","",3,[[],["ordering",4]]],[11,"cmp","","",4,[[["scalarcanvas",3]],["ordering",4]]],[11,"cmp","","",5,[[],["ordering",4]]],[11,"eq","","",2,[[["fieldcanvas",3]]]],[11,"eq","","",3,[[]]],[11,"eq","","",4,[[["scalarcanvas",3]]]],[11,"eq","","",5,[[]]],[11,"partial_cmp","","",2,[[["fieldcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[["scalarcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",5,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"div","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"div","","",3,[[["p256fieldelement",3]],["p256fieldelement",3]]],[11,"div","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"div","","",5,[[["p256scalar",3]],["p256scalar",3]]],[11,"rem","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"rem","","",3,[[["p256fieldelement",3]],["p256fieldelement",3]]],[11,"rem","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"rem","","",5,[[["p256scalar",3]],["p256scalar",3]]],[11,"rem","","",0,[[["element",3]],["element",3]]],[11,"sub","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"sub","","",3,[[["p256fieldelement",3]],["p256fieldelement",3]]],[11,"sub","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"sub","","",5,[[["p256scalar",3]],["p256scalar",3]]],[11,"sub","","",0,[[["element",3]],["element",3]]],[11,"add","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"add","","",3,[[["p256fieldelement",3]],["p256fieldelement",3]]],[11,"add","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"add","","",5,[[["p256scalar",3]],["p256scalar",3]]],[11,"add","","",0,[[["element",3]],["element",3]]],[11,"mul","","",2,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"mul","","",3,[[["p256fieldelement",3]],["p256fieldelement",3]]],[11,"mul","","",4,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"mul","","",5,[[["p256scalar",3]],["p256scalar",3]]],[11,"mul","","",0,[[["element",3]],["element",3]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"not","","",0,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitand","","",0,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitor","","",0,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"bitxor","","",0,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shl","","",0,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"shr","","",0,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"ZERO","","",2,[[]]],[11,"ONE","","",2,[[]]],[11,"TWO","","",2,[[]]],[11,"from_literal","","",2,[[]]],[11,"from_hex_string","","",2,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",2,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",2,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",2,[[]]],[11,"rotate_left","","",2,[[]]],[11,"rotate_right","","",2,[[]]],[11,"ZERO","","",3,[[]]],[11,"ONE","","",3,[[]]],[11,"TWO","","",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_hex_string","","",3,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",3,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",3,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",3,[[]]],[11,"rotate_left","","",3,[[]]],[11,"rotate_right","","",3,[[]]],[11,"ZERO","","",4,[[]]],[11,"ONE","","",4,[[]]],[11,"TWO","","",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_hex_string","","",4,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",4,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",4,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",4,[[]]],[11,"rotate_left","","",4,[[]]],[11,"rotate_right","","",4,[[]]],[11,"ZERO","","",5,[[]]],[11,"ONE","","",5,[[]]],[11,"TWO","","",5,[[]]],[11,"from_literal","","",5,[[]]],[11,"from_hex_string","","",5,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",5,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",5,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",5,[[]]],[11,"rotate_left","","",5,[[]]],[11,"rotate_right","","",5,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",2,[[]]],[11,"absolute","","`|self|`",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",3,[[]]],[11,"absolute","","`|self|`",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",4,[[]]],[11,"absolute","","`|self|`",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",5,[[]]],[11,"add_mod","","`(self + rhs) % n`",5,[[]]],[11,"mul_mod","","`(self * rhs) % n`",5,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",5,[[]]],[11,"modulo","","`self % n`",5,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",5,[[]]],[11,"absolute","","`|self|`",5,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]],[11,"max_val","","Return largest value that can be represented.",5,[[]]],[11,"wrap_add","","",5,[[]]],[11,"wrap_sub","","",5,[[]]],[11,"wrap_mul","","",5,[[]]],[11,"wrap_div","","",5,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",5,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",5,[[]]],[11,"divide","","Division.",5,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",5,[[]]],[11,"equal","","",5,[[]]],[11,"greater_than","","",5,[[]]],[11,"greater_than_or_qual","","",5,[[]]],[11,"less_than","","",5,[[]]],[11,"less_than_or_equal","","",5,[[]]],[11,"not_equal_bm","","",5,[[]]],[11,"equal_bm","","",5,[[]]],[11,"greater_than_bm","","",5,[[]]],[11,"greater_than_or_equal_bm","","",5,[[]]],[11,"less_than_bm","","",5,[[]]],[11,"less_than_or_equal_bm","","",5,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]]],"p":[[3,"Element"],[4,"Error"],[3,"FieldCanvas"],[3,"P256FieldElement"],[3,"ScalarCanvas"],[3,"P256Scalar"]]},\
"hacspec_poly1305":{"doc":"","i":[[3,"PolyKey","hacspec_poly1305","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"PolyBlock","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"Poly1305Tag","","Fixed length byte array.",null,null],[12,"0","","",2,null],[3,"FieldCanvas","","",null,null],[3,"FieldElement","","",null,null],[5,"poly1305_encode_r","","",null,[[["polyblock",3]],["fieldelement",3]]],[5,"poly1305_encode_block","","",null,[[["polyblock",3]],["fieldelement",3]]],[5,"poly1305_encode_last","","",null,[[["blockindex",6],["subblock",6]],["fieldelement",3]]],[5,"poly1305_init","","",null,[[["polykey",3]],["polystate",6]]],[5,"poly1305_update_block","","",null,[[["polystate",6],["polyblock",3]],["polystate",6]]],[5,"poly1305_update_blocks","","",null,[[["polystate",6],["byteseq",6]],["polystate",6]]],[5,"poly1305_update_last","","",null,[[["polystate",6],["subblock",6]],["polystate",6]]],[5,"poly1305_update","","",null,[[["polystate",6],["byteseq",6]],["polystate",6]]],[5,"poly1305_finish","","",null,[[["polystate",6]],["poly1305tag",3]]],[5,"poly1305","","",null,[[["polykey",3],["byteseq",6]],["poly1305tag",3]]],[6,"SubBlock","","",null,null],[6,"BlockIndex","","",null,null],[6,"PolyState","","",null,null],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["polykey",3]]],[11,"from_seq","","",0,[[],["polykey",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["polykey",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["polykey",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["polykey",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["polyblock",3]]],[11,"from_seq","","",1,[[],["polyblock",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["polyblock",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["polyblock",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["polyblock",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",2,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3],["u8",3]],["poly1305tag",3]]],[11,"from_seq","","",2,[[],["poly1305tag",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["poly1305tag",3]]],[11,"declassify_eq","","",2,[[]]],[11,"to_be_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",2,[[],["poly1305tag",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",2,[[],["poly1305tag",3]]],[11,"to_be_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"max_value","","",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_signed_literal","","",3,[[]]],[11,"pow2","","Returns 2 to the power of the argument",3,[[],["fieldcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",3,[[]]],[11,"from_hex","","",3,[[]]],[11,"from_be_bytes","","",3,[[]]],[11,"from_le_bytes","","",3,[[]]],[11,"to_be_bytes","","",3,[[]]],[11,"to_le_bytes","","",3,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",3,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"inv","","",3,[[]]],[11,"pow_felem","","",3,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",3,[[]]],[11,"from_byte_seq_be","","",3,[[],["fieldcanvas",3]]],[11,"from_public_byte_seq_be","","",3,[[["seqtrait",8]],["fieldcanvas",3]]],[11,"to_byte_seq_be","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_canvas","","",4,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"into_canvas","","",4,[[],["fieldcanvas",3]]],[11,"max","","",4,[[],["fieldcanvas",3]]],[11,"declassify","","",4,[[],["bigint",3]]],[11,"from_hex","","",4,[[]]],[11,"from_be_bytes","","",4,[[]]],[11,"to_be_bytes","","",4,[[],["vec",3]]],[11,"from_le_bytes","","",4,[[]]],[11,"to_le_bytes","","",4,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_signed_literal","","",4,[[]]],[11,"comp_eq","","",4,[[]]],[11,"comp_ne","","",4,[[]]],[11,"comp_gte","","",4,[[]]],[11,"comp_gt","","",4,[[]]],[11,"comp_lte","","",4,[[]]],[11,"comp_lt","","",4,[[]]],[11,"inv","","",4,[[]]],[11,"pow_felem","","",4,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",4,[[]]],[11,"pow2","","Returns 2 to the power of the argument",4,[[],["fieldelement",3]]],[11,"from_byte_seq_be","","",4,[[],["fieldelement",3]]],[11,"from_public_byte_seq_be","","",4,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_be","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",4,[[],["seq",3]]],[11,"from_byte_seq_le","","",4,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_le","","",4,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_le","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",4,[[],["seq",3]]],[11,"from_secret_literal","","",4,[[["u128",3]],["fieldelement",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[["biguint",3]],["fieldcanvas",3]]],[11,"from","","",3,[[["bigint",3]],["fieldcanvas",3]]],[11,"from","","",4,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"into","","",3,[[],["bigint",3]]],[11,"into","","",3,[[],["biguint",3]]],[11,"into","","",4,[[],["fieldcanvas",3]]],[11,"clone","","",0,[[],["polykey",3]]],[11,"clone","","",1,[[],["polyblock",3]]],[11,"clone","","",2,[[],["poly1305tag",3]]],[11,"clone","","",3,[[],["fieldcanvas",3]]],[11,"clone","","",4,[[],["fieldelement",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[],["fieldcanvas",3]]],[11,"default","","",4,[[],["fieldelement",3]]],[11,"cmp","","",3,[[["fieldcanvas",3]],["ordering",4]]],[11,"cmp","","",4,[[],["ordering",4]]],[11,"eq","","",3,[[["fieldcanvas",3]]]],[11,"eq","","",4,[[]]],[11,"partial_cmp","","",3,[[["fieldcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",4,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"div","","",3,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"div","","",4,[[["fieldelement",3]],["fieldelement",3]]],[11,"rem","","",0,[[["polykey",3]],["polykey",3]]],[11,"rem","","",1,[[["polyblock",3]],["polyblock",3]]],[11,"rem","","",2,[[["poly1305tag",3]],["poly1305tag",3]]],[11,"rem","","",3,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"rem","","",4,[[["fieldelement",3]],["fieldelement",3]]],[11,"sub","","",0,[[["polykey",3]],["polykey",3]]],[11,"sub","","",1,[[["polyblock",3]],["polyblock",3]]],[11,"sub","","",2,[[["poly1305tag",3]],["poly1305tag",3]]],[11,"sub","","",3,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"sub","","",4,[[["fieldelement",3]],["fieldelement",3]]],[11,"add","","",0,[[["polykey",3]],["polykey",3]]],[11,"add","","",1,[[["polyblock",3]],["polyblock",3]]],[11,"add","","",2,[[["poly1305tag",3]],["poly1305tag",3]]],[11,"add","","",3,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"add","","",4,[[["fieldelement",3]],["fieldelement",3]]],[11,"mul","","",0,[[["polykey",3]],["polykey",3]]],[11,"mul","","",1,[[["polyblock",3]],["polyblock",3]]],[11,"mul","","",2,[[["poly1305tag",3]],["poly1305tag",3]]],[11,"mul","","",3,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"mul","","",4,[[["fieldelement",3]],["fieldelement",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"ZERO","","",3,[[]]],[11,"ONE","","",3,[[]]],[11,"TWO","","",3,[[]]],[11,"from_literal","","",3,[[]]],[11,"from_hex_string","","",3,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",3,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",3,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",3,[[]]],[11,"rotate_left","","",3,[[]]],[11,"rotate_right","","",3,[[]]],[11,"ZERO","","",4,[[]]],[11,"ONE","","",4,[[]]],[11,"TWO","","",4,[[]]],[11,"from_literal","","",4,[[]]],[11,"from_hex_string","","",4,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",4,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",4,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",4,[[]]],[11,"rotate_left","","",4,[[]]],[11,"rotate_right","","",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",3,[[]]],[11,"absolute","","`|self|`",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",4,[[]]],[11,"absolute","","`|self|`",4,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]]],"p":[[3,"PolyKey"],[3,"PolyBlock"],[3,"Poly1305Tag"],[3,"FieldCanvas"],[3,"FieldElement"]]},\
"hacspec_provider":{"doc":"Hacspec Provider","i":[[8,"Aead","hacspec_provider","Authenticated Encryption with Associated Data (AEAD)…",null,null],[10,"encrypt","","Encrypt the given plaintext payload, and return the…",0,[[["genericarray",3]],[["error",3],["result",4],["vec",3]]]],[10,"decrypt","","Decrypt the given ciphertext slice, and return the…",0,[[["genericarray",3]],[["error",3],["result",4],["vec",3]]]],[8,"AeadCore","","Authenticated Encryption with Associated Data (AEAD)…",null,null],[16,"NonceSize","","The length of a nonce.",1,null],[16,"TagSize","","The maximum length of the nonce.",1,null],[16,"CiphertextOverhead","","The upper bound amount of additional space required to…",1,null],[8,"AeadInPlace","","In-place stateless AEAD trait.",null,null],[11,"encrypt_in_place","","Encrypt the given buffer containing a plaintext message…",2,[[["buffer",8],["genericarray",3]],[["error",3],["result",4]]]],[10,"encrypt_in_place_detached","","Encrypt the data in-place, returning the authentication tag",2,[[["genericarray",3]],[["error",3],["result",4],["genericarray",3]]]],[11,"decrypt_in_place","","Decrypt the message in-place, returning an error in the…",2,[[["buffer",8],["genericarray",3]],[["error",3],["result",4]]]],[10,"decrypt_in_place_detached","","Decrypt the message in-place, returning an error in the…",2,[[["genericarray",3],["genericarray",3]],[["error",3],["result",4]]]],[3,"Error","","Error type.",null,null],[8,"NewAead","","Instantiate either a stateless [`Aead`] or stateful…",null,null],[16,"KeySize","","The size of the key array required by this algorithm.",3,null],[10,"new","","Create a new AEAD instance with the given key.",3,[[["genericarray",3]]]],[11,"new_from_slice","","Create new AEAD instance from key given as a byte slice..",3,[[],[["result",4],["error",3]]]],[3,"Payload","","AEAD payloads are a combination of a message (plaintext or…",null,null],[12,"msg","","Message to be encrypted/decrypted",4,null],[12,"aad","","Optional \\\"additional associated data\\\" to authenticate…",4,null],[3,"Chacha20Poly1305","","",null,null],[11,"encrypt_in_place","","Encrypt the given buffer containing a plaintext message…",2,[[["buffer",8],["genericarray",3]],[["error",3],["result",4]]]],[11,"decrypt_in_place","","Decrypt the message in-place, returning an error in the…",2,[[["buffer",8],["genericarray",3]],[["error",3],["result",4]]]],[11,"new_from_slice","","Create new AEAD instance from key given as a byte slice..",3,[[],[["result",4],["error",3]]]],[6,"Key","","",null,null],[6,"Nonce","","",null,null],[6,"Tag","","",null,null],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"encrypt","","",6,[[["genericarray",3]],[["error",3],["result",4],["vec",3]]]],[11,"decrypt","","",6,[[["genericarray",3]],[["error",3],["result",4],["vec",3]]]],[11,"encrypt","","",6,[[["genericarray",3]],[["error",3],["result",4],["vec",3]]]],[11,"decrypt","","",6,[[["genericarray",3]],[["error",3],["result",4],["vec",3]]]],[11,"encrypt_in_place","","",6,[[["genericarray",3]],[["error",3],["result",4]]]],[11,"encrypt_in_place_detached","","",6,[[["genericarray",3]],[["error",3],["genericarray",3],["result",4]]]],[11,"decrypt_in_place","","",6,[[["genericarray",3]],[["error",3],["result",4]]]],[11,"decrypt_in_place_detached","","",6,[[["genericarray",3],["genericarray",3]],[["error",3],["result",4]]]],[11,"clone","","",5,[[],["error",3]]],[11,"from","","",4,[[],["payload",3]]],[11,"eq","","",5,[[["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",5,[[["error",3]],["ordering",4]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",5,[[["error",3]],[["option",4],["ordering",4]]]],[11,"hash","","",5,[[]]],[11,"new","","",6,[[["key",6]]]],[11,"encrypt_in_place_detached","","",6,[[["nonce",6]],[["result",4],["tag",6],["error",3]]]],[11,"decrypt_in_place_detached","","",6,[[["tag",6],["nonce",6]],[["result",4],["error",3]]]]],"p":[[8,"Aead"],[8,"AeadCore"],[8,"AeadInPlace"],[8,"NewAead"],[3,"Payload"],[3,"Error"],[3,"Chacha20Poly1305"]]},\
"hacspec_riot_bootloader":{"doc":"","i":[[5,"new_fletcher","hacspec_riot_bootloader","",null,[[]]],[5,"max_chunk_size","","",null,[[]]],[5,"update_fletcher","","",null,[[["seq",3]]]],[5,"value","","Returns the current checksum value of the `Fletcher` object",null,[[]]],[5,"is_valid_header","","",null,[[]]],[5,"choose_image","","",null,[[["seq",3]]]]],"p":[]},\
"hacspec_riot_runqueue":{"doc":"","i":[[3,"RunqueueId","hacspec_riot_runqueue","",null,null],[3,"ThreadId","","",null,null],[3,"Tail","","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"NextIds","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"Clist","","",null,null],[3,"RunQueue","","",null,null],[5,"clist_new","","",null,[[],["clist",3]]],[5,"clist_is_empty","","",null,[[["runqueueid",3],["clist",3]]]],[5,"clist_push","","",null,[[["threadid",3],["runqueueid",3],["clist",3]],["clist",3]]],[5,"clist_pop_head","","",null,[[["runqueueid",3],["clist",3]]]],[5,"clist_peek_head","","",null,[[["runqueueid",3],["clist",3]],["option",4]]],[5,"clist_advance","","",null,[[["runqueueid",3],["clist",3]],["clist",3]]],[5,"runqueue_new","","",null,[[],["runqueue",3]]],[5,"runqueue_add","","",null,[[["threadid",3],["runqueueid",3],["runqueue",3]],["runqueue",3]]],[5,"runqueue_del","","",null,[[["threadid",3],["runqueueid",3],["runqueue",3]],["runqueue",3]]],[5,"runqueue_ffs","","",null,[[]]],[5,"runqueue_get_next","","get pid that should run next returns the next runnable…",null,[[["runqueue",3]],["option",4]]],[5,"runqueue_advance","","advance runqueue number rq (this is used to \\\"yield\\\" to…",null,[[["runqueueid",3],["runqueue",3]],["runqueue",3]]],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],["seq",3]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],["seq",3]]],[11,"slice_range","","",0,[[["range",3]],["seq",3]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3]],["tail",3]]],[11,"from_seq","","",0,[[],["tail",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["tail",3]]],[11,"to_be_u32s","","",0,[[],["seq",3]]],[11,"to_le_u32s","","",0,[[],["seq",3]]],[11,"to_be_u64s","","",0,[[],["seq",3]]],[11,"to_le_u64s","","",0,[[],["seq",3]]],[11,"to_u128s_be","","",0,[[],["seq",3]]],[11,"to_u128s_le","","",0,[[],["seq",3]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],["seq",3]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],["seq",3]]],[11,"slice_range","","",1,[[["range",3]],["seq",3]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3]],["nextids",3]]],[11,"from_seq","","",1,[[],["nextids",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["nextids",3]]],[11,"to_be_u32s","","",1,[[],["seq",3]]],[11,"to_le_u32s","","",1,[[],["seq",3]]],[11,"to_be_u64s","","",1,[[],["seq",3]]],[11,"to_le_u64s","","",1,[[],["seq",3]]],[11,"to_u128s_be","","",1,[[],["seq",3]]],[11,"to_u128s_le","","",1,[[],["seq",3]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone","","",2,[[],["runqueueid",3]]],[11,"clone","","",3,[[],["threadid",3]]],[11,"clone","","",0,[[],["tail",3]]],[11,"clone","","",1,[[],["nextids",3]]],[11,"clone","","",4,[[],["clist",3]]],[11,"clone","","",5,[[],["runqueue",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"cmp","","",1,[[],["ordering",4]]],[11,"eq","","",0,[[]]],[11,"eq","","",1,[[]]],[11,"partial_cmp","","",0,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["tail",3]],["tail",3]]],[11,"div","","",1,[[["nextids",3]],["nextids",3]]],[11,"sub","","",0,[[["tail",3]],["tail",3]]],[11,"sub","","",1,[[["nextids",3]],["nextids",3]]],[11,"add","","",0,[[["tail",3]],["tail",3]]],[11,"add","","",1,[[["nextids",3]],["nextids",3]]],[11,"mul","","",0,[[["tail",3]],["tail",3]]],[11,"mul","","",1,[[["nextids",3]],["nextids",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"index","","",0,[[]]],[11,"index","","",0,[[]]],[11,"index","","",0,[[]]],[11,"index","","",0,[[]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index_mut","","",0,[[]]],[11,"index_mut","","",0,[[]]],[11,"index_mut","","",0,[[]]],[11,"index_mut","","",0,[[]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],["iter",3]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],["iter",3]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"sub_mod","","`(self - rhs) % n` (coefficient-wise)",0,[[]]],[11,"add_mod","","`(self + rhs) % n` (coefficient-wise)",0,[[]]],[11,"mul_mod","","`(self * rhs) % n` (coefficient-wise) Note that the…",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n` (coefficient-wise) Note that the…",0,[[]]],[11,"modulo","","`self % n` (coefficient-wise)",0,[[]]],[11,"signed_modulo","","`self % n` (coefficient-wise)",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","`(self - rhs) % n` (coefficient-wise)",1,[[]]],[11,"add_mod","","`(self + rhs) % n` (coefficient-wise)",1,[[]]],[11,"mul_mod","","`(self * rhs) % n` (coefficient-wise) Note that the…",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n` (coefficient-wise) Note that the…",1,[[]]],[11,"modulo","","`self % n` (coefficient-wise)",1,[[]]],[11,"signed_modulo","","`self % n` (coefficient-wise)",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"max_val","","Return largest value that can be represented. Not…",0,[[]]],[11,"wrap_add","","`self + rhs` (coefficient-wise and wrapping)",0,[[]]],[11,"wrap_sub","","`self - rhs` (coefficient-wise and wrapping)",0,[[]]],[11,"wrap_mul","","`self * rhs` (coefficient-wise and wrapping)",0,[[]]],[11,"wrap_div","","`self + rhs` (coefficient-wise and wrapping)",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32` (coefficient-wise and…",0,[[]]],[11,"pow_self","","Not implemented.",0,[[]]],[11,"divide","","`self / rhs` (coefficient-wise and wrapping).",0,[[]]],[11,"inv","","Not implemented",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented. Not…",1,[[]]],[11,"wrap_add","","`self + rhs` (coefficient-wise and wrapping)",1,[[]]],[11,"wrap_sub","","`self - rhs` (coefficient-wise and wrapping)",1,[[]]],[11,"wrap_mul","","`self * rhs` (coefficient-wise and wrapping)",1,[[]]],[11,"wrap_div","","`self + rhs` (coefficient-wise and wrapping)",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32` (coefficient-wise and…",1,[[]]],[11,"pow_self","","Not implemented.",1,[[]]],[11,"divide","","`self / rhs` (coefficient-wise and wrapping).",1,[[]]],[11,"inv","","Not implemented",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]]],"p":[[3,"Tail"],[3,"NextIds"],[3,"RunqueueId"],[3,"ThreadId"],[3,"Clist"],[3,"RunQueue"]]},\
"hacspec_sha256":{"doc":"","i":[[3,"Block","hacspec_sha256","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"OpTableType","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"Sha256Digest","","Fixed length byte array.",null,null],[12,"0","","",2,null],[3,"RoundConstantsTable","","Fixed length byte array.",null,null],[12,"0","","",3,null],[3,"Hash","","Fixed length byte array.",null,null],[12,"0","","",4,null],[5,"hash","","",null,[[["byteseq",6]],["sha256digest",3]]],[5,"sha256","","",null,[[["byteseq",6]],["sha256digest",3]]],[17,"K_SIZE","","",null,null],[17,"HASH_SIZE","","",null,null],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",0,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["block",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["block",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],["seq",3]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],["seq",3]]],[11,"slice_range","","",1,[[["range",3]],["seq",3]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3]],["optabletype",3]]],[11,"from_seq","","",1,[[],["optabletype",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["optabletype",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",2,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3],["u8",3]],["sha256digest",3]]],[11,"from_seq","","",2,[[],["sha256digest",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["sha256digest",3]]],[11,"declassify_eq","","",2,[[]]],[11,"to_be_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",2,[[],["sha256digest",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",2,[[],["sha256digest",3]]],[11,"to_be_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"new","","",3,[[]]],[11,"length","","",3,[[]]],[11,"from_array","","",3,[[]]],[11,"from_native_slice","","",3,[[]]],[11,"capacity","","",3,[[]]],[11,"from_slice","","",3,[[]]],[11,"concat","","",3,[[],[["seq",3],["u32",3]]]],[11,"from_slice_range","","",3,[[["range",3]]]],[11,"slice","","",3,[[],[["seq",3],["u32",3]]]],[11,"slice_range","","",3,[[["range",3]],[["seq",3],["u32",3]]]],[11,"num_chunks","","",3,[[]]],[11,"get_chunk_len","","",3,[[]]],[11,"get_chunk","","",3,[[]]],[11,"set_chunk","","",3,[[]]],[11,"from_vec","","",3,[[["vec",3],["u32",3]],["roundconstantstable",3]]],[11,"from_seq","","",3,[[],["roundconstantstable",3]]],[11,"from_hex","","Read hex string to Bytes.",3,[[],["roundconstantstable",3]]],[11,"declassify_eq","","",3,[[]]],[11,"to_be_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",3,[[],["roundconstantstable",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",3,[[],["roundconstantstable",3]]],[11,"new","","",4,[[]]],[11,"length","","",4,[[]]],[11,"from_array","","",4,[[]]],[11,"from_native_slice","","",4,[[]]],[11,"capacity","","",4,[[]]],[11,"from_slice","","",4,[[]]],[11,"concat","","",4,[[],[["seq",3],["u32",3]]]],[11,"from_slice_range","","",4,[[["range",3]]]],[11,"slice","","",4,[[],[["seq",3],["u32",3]]]],[11,"slice_range","","",4,[[["range",3]],[["seq",3],["u32",3]]]],[11,"num_chunks","","",4,[[]]],[11,"get_chunk_len","","",4,[[]]],[11,"get_chunk","","",4,[[]]],[11,"set_chunk","","",4,[[]]],[11,"from_vec","","",4,[[["vec",3],["u32",3]],["hash",3]]],[11,"from_seq","","",4,[[],["hash",3]]],[11,"from_hex","","Read hex string to Bytes.",4,[[],["hash",3]]],[11,"declassify_eq","","",4,[[]]],[11,"to_be_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",4,[[],["hash",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",4,[[],["hash",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"clone","","",0,[[],["block",3]]],[11,"clone","","",1,[[],["optabletype",3]]],[11,"clone","","",2,[[],["sha256digest",3]]],[11,"clone","","",3,[[],["roundconstantstable",3]]],[11,"clone","","",4,[[],["hash",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"eq","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"rem","","",0,[[["block",3]],["block",3]]],[11,"rem","","",2,[[["sha256digest",3]],["sha256digest",3]]],[11,"rem","","",3,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"rem","","",4,[[["hash",3]],["hash",3]]],[11,"sub","","",0,[[["block",3]],["block",3]]],[11,"sub","","",2,[[["sha256digest",3]],["sha256digest",3]]],[11,"sub","","",3,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"sub","","",4,[[["hash",3]],["hash",3]]],[11,"add","","",0,[[["block",3]],["block",3]]],[11,"add","","",2,[[["sha256digest",3]],["sha256digest",3]]],[11,"add","","",3,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"add","","",4,[[["hash",3]],["hash",3]]],[11,"mul","","",0,[[["block",3]],["block",3]]],[11,"mul","","",2,[[["sha256digest",3]],["sha256digest",3]]],[11,"mul","","",3,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"mul","","",4,[[["hash",3]],["hash",3]]],[11,"not","","",0,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index","","",3,[[],["u32",3]]],[11,"index","","",3,[[],["u32",3]]],[11,"index","","",3,[[],["u32",3]]],[11,"index","","",3,[[],["u32",3]]],[11,"index","","",3,[[["rangefull",3]]]],[11,"index","","",4,[[],["u32",3]]],[11,"index","","",4,[[],["u32",3]]],[11,"index","","",4,[[],["u32",3]]],[11,"index","","",4,[[],["u32",3]]],[11,"index","","",4,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",1,[[]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u32",3]]],[11,"index_mut","","",3,[[],["u32",3]]],[11,"index_mut","","",3,[[],["u32",3]]],[11,"index_mut","","",3,[[],["u32",3]]],[11,"index_mut","","",4,[[],["u32",3]]],[11,"index_mut","","",4,[[],["u32",3]]],[11,"index_mut","","",4,[[],["u32",3]]],[11,"index_mut","","",4,[[],["u32",3]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],["iter",3]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"create","","",3,[[]]],[11,"len","","",3,[[]]],[11,"iter","","",3,[[],[["iter",3],["u32",3]]]],[11,"update_slice","","",3,[[]]],[11,"update","","",3,[[]]],[11,"update_start","","",3,[[]]],[11,"create","","",4,[[]]],[11,"len","","",4,[[]]],[11,"iter","","",4,[[],[["iter",3],["u32",3]]]],[11,"update_slice","","",4,[[]]],[11,"update","","",4,[[]]],[11,"update_start","","",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","",3,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","",4,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",4,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]]],"p":[[3,"Block"],[3,"OpTableType"],[3,"Sha256Digest"],[3,"RoundConstantsTable"],[3,"Hash"]]},\
"hacspec_sha3":{"doc":"","i":[[3,"State","hacspec_sha3","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"Row","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"Digest224","","Fixed length byte array.",null,null],[12,"0","","",2,null],[3,"Digest256","","Fixed length byte array.",null,null],[12,"0","","",3,null],[3,"Digest384","","Fixed length byte array.",null,null],[12,"0","","",4,null],[3,"Digest512","","Fixed length byte array.",null,null],[12,"0","","",5,null],[3,"RoundConstants","","Fixed length byte array.",null,null],[12,"0","","",6,null],[3,"RotationConstants","","Fixed length byte array.",null,null],[12,"0","","",7,null],[5,"keccakf1600","","",null,[[["state",3]],["state",3]]],[5,"sha3224","","",null,[[["byteseq",6]],["digest224",3]]],[5,"sha3256","","",null,[[["byteseq",6]],["digest256",3]]],[5,"sha3384","","",null,[[["byteseq",6]],["digest384",3]]],[5,"sha3512","","",null,[[["byteseq",6]],["digest512",3]]],[5,"shake128","","",null,[[["byteseq",6]],["byteseq",6]]],[5,"shake256","","",null,[[["byteseq",6]],["byteseq",6]]],[17,"SHA3224_RATE","","",null,null],[17,"SHA3256_RATE","","",null,null],[17,"SHA3384_RATE","","",null,null],[17,"SHA3512_RATE","","",null,null],[17,"SHAKE128_RATE","","",null,null],[17,"SHAKE256_RATE","","",null,null],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u64",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u64",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u64",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u64",3]],["state",3]]],[11,"from_seq","","",0,[[],["state",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["state",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["state",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["state",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u64",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u64",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u64",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u64",3]],["row",3]]],[11,"from_seq","","",1,[[],["row",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["row",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["row",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["row",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",2,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3],["u8",3]],["digest224",3]]],[11,"from_seq","","",2,[[],["digest224",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["digest224",3]]],[11,"declassify_eq","","",2,[[]]],[11,"to_be_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",2,[[],["digest224",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",2,[[],["digest224",3]]],[11,"to_be_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"new","","",3,[[]]],[11,"length","","",3,[[]]],[11,"from_array","","",3,[[]]],[11,"from_native_slice","","",3,[[]]],[11,"capacity","","",3,[[]]],[11,"from_slice","","",3,[[]]],[11,"concat","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",3,[[["range",3]]]],[11,"slice","","",3,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",3,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",3,[[]]],[11,"get_chunk_len","","",3,[[]]],[11,"get_chunk","","",3,[[]]],[11,"set_chunk","","",3,[[]]],[11,"from_vec","","",3,[[["vec",3],["u8",3]],["digest256",3]]],[11,"from_seq","","",3,[[],["digest256",3]]],[11,"from_hex","","Read hex string to Bytes.",3,[[],["digest256",3]]],[11,"declassify_eq","","",3,[[]]],[11,"to_be_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",3,[[],["digest256",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",3,[[],["digest256",3]]],[11,"to_be_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",3,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",3,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",3,[[],["string",3]]],[11,"new","","",4,[[]]],[11,"length","","",4,[[]]],[11,"from_array","","",4,[[]]],[11,"from_native_slice","","",4,[[]]],[11,"capacity","","",4,[[]]],[11,"from_slice","","",4,[[]]],[11,"concat","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",4,[[["range",3]]]],[11,"slice","","",4,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",4,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",4,[[]]],[11,"get_chunk_len","","",4,[[]]],[11,"get_chunk","","",4,[[]]],[11,"set_chunk","","",4,[[]]],[11,"from_vec","","",4,[[["vec",3],["u8",3]],["digest384",3]]],[11,"from_seq","","",4,[[],["digest384",3]]],[11,"from_hex","","Read hex string to Bytes.",4,[[],["digest384",3]]],[11,"declassify_eq","","",4,[[]]],[11,"to_be_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",4,[[],["digest384",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",4,[[],["digest384",3]]],[11,"to_be_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",4,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",4,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",4,[[],["string",3]]],[11,"new","","",5,[[]]],[11,"length","","",5,[[]]],[11,"from_array","","",5,[[]]],[11,"from_native_slice","","",5,[[]]],[11,"capacity","","",5,[[]]],[11,"from_slice","","",5,[[]]],[11,"concat","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",5,[[["range",3]]]],[11,"slice","","",5,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",5,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",5,[[]]],[11,"get_chunk_len","","",5,[[]]],[11,"get_chunk","","",5,[[]]],[11,"set_chunk","","",5,[[]]],[11,"from_vec","","",5,[[["vec",3],["u8",3]],["digest512",3]]],[11,"from_seq","","",5,[[],["digest512",3]]],[11,"from_hex","","Read hex string to Bytes.",5,[[],["digest512",3]]],[11,"declassify_eq","","",5,[[]]],[11,"to_be_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",5,[[],["digest512",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",5,[[],["digest512",3]]],[11,"to_be_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",5,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",5,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",5,[[],["string",3]]],[11,"new","","",6,[[]]],[11,"length","","",6,[[]]],[11,"from_array","","",6,[[]]],[11,"from_native_slice","","",6,[[]]],[11,"capacity","","",6,[[]]],[11,"from_slice","","",6,[[]]],[11,"concat","","",6,[[],["seq",3]]],[11,"from_slice_range","","",6,[[["range",3]]]],[11,"slice","","",6,[[],["seq",3]]],[11,"slice_range","","",6,[[["range",3]],["seq",3]]],[11,"num_chunks","","",6,[[]]],[11,"get_chunk_len","","",6,[[]]],[11,"get_chunk","","",6,[[]]],[11,"set_chunk","","",6,[[]]],[11,"from_vec","","",6,[[["vec",3]],["roundconstants",3]]],[11,"from_seq","","",6,[[],["roundconstants",3]]],[11,"from_hex","","Read hex string to Bytes.",6,[[],["roundconstants",3]]],[11,"new","","",7,[[]]],[11,"length","","",7,[[]]],[11,"from_array","","",7,[[]]],[11,"from_native_slice","","",7,[[]]],[11,"capacity","","",7,[[]]],[11,"from_slice","","",7,[[]]],[11,"concat","","",7,[[],["seq",3]]],[11,"from_slice_range","","",7,[[["range",3]]]],[11,"slice","","",7,[[],["seq",3]]],[11,"slice_range","","",7,[[["range",3]],["seq",3]]],[11,"num_chunks","","",7,[[]]],[11,"get_chunk_len","","",7,[[]]],[11,"get_chunk","","",7,[[]]],[11,"set_chunk","","",7,[[]]],[11,"from_vec","","",7,[[["vec",3]],["rotationconstants",3]]],[11,"from_seq","","",7,[[],["rotationconstants",3]]],[11,"from_hex","","Read hex string to Bytes.",7,[[],["rotationconstants",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"clone","","",0,[[],["state",3]]],[11,"clone","","",1,[[],["row",3]]],[11,"clone","","",2,[[],["digest224",3]]],[11,"clone","","",3,[[],["digest256",3]]],[11,"clone","","",4,[[],["digest384",3]]],[11,"clone","","",5,[[],["digest512",3]]],[11,"clone","","",6,[[],["roundconstants",3]]],[11,"clone","","",7,[[],["rotationconstants",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"cmp","","",6,[[],["ordering",4]]],[11,"eq","","",6,[[]]],[11,"eq","","",7,[[]]],[11,"partial_cmp","","",6,[[],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"div","","",6,[[["roundconstants",3]],["roundconstants",3]]],[11,"rem","","",0,[[["state",3]],["state",3]]],[11,"rem","","",1,[[["row",3]],["row",3]]],[11,"rem","","",2,[[["digest224",3]],["digest224",3]]],[11,"rem","","",3,[[["digest256",3]],["digest256",3]]],[11,"rem","","",4,[[["digest384",3]],["digest384",3]]],[11,"rem","","",5,[[["digest512",3]],["digest512",3]]],[11,"sub","","",0,[[["state",3]],["state",3]]],[11,"sub","","",1,[[["row",3]],["row",3]]],[11,"sub","","",2,[[["digest224",3]],["digest224",3]]],[11,"sub","","",3,[[["digest256",3]],["digest256",3]]],[11,"sub","","",4,[[["digest384",3]],["digest384",3]]],[11,"sub","","",5,[[["digest512",3]],["digest512",3]]],[11,"sub","","",6,[[["roundconstants",3]],["roundconstants",3]]],[11,"add","","",0,[[["state",3]],["state",3]]],[11,"add","","",1,[[["row",3]],["row",3]]],[11,"add","","",2,[[["digest224",3]],["digest224",3]]],[11,"add","","",3,[[["digest256",3]],["digest256",3]]],[11,"add","","",4,[[["digest384",3]],["digest384",3]]],[11,"add","","",5,[[["digest512",3]],["digest512",3]]],[11,"add","","",6,[[["roundconstants",3]],["roundconstants",3]]],[11,"mul","","",0,[[["state",3]],["state",3]]],[11,"mul","","",1,[[["row",3]],["row",3]]],[11,"mul","","",2,[[["digest224",3]],["digest224",3]]],[11,"mul","","",3,[[["digest256",3]],["digest256",3]]],[11,"mul","","",4,[[["digest384",3]],["digest384",3]]],[11,"mul","","",5,[[["digest512",3]],["digest512",3]]],[11,"mul","","",6,[[["roundconstants",3]],["roundconstants",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"not","","",6,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitand","","",6,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitor","","",6,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"bitxor","","",6,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shl","","",6,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"shr","","",6,[[]]],[11,"index","","",0,[[],["u64",3]]],[11,"index","","",0,[[],["u64",3]]],[11,"index","","",0,[[],["u64",3]]],[11,"index","","",0,[[],["u64",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[],["u64",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[["rangefull",3]]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[["rangefull",3]]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[["rangefull",3]]]],[11,"index","","",6,[[]]],[11,"index","","",6,[[]]],[11,"index","","",6,[[]]],[11,"index","","",6,[[]]],[11,"index","","",6,[[["rangefull",3]]]],[11,"index","","",7,[[]]],[11,"index","","",7,[[]]],[11,"index","","",7,[[]]],[11,"index","","",7,[[]]],[11,"index","","",7,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u64",3]]],[11,"index_mut","","",0,[[],["u64",3]]],[11,"index_mut","","",0,[[],["u64",3]]],[11,"index_mut","","",0,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",1,[[],["u64",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",6,[[]]],[11,"index_mut","","",6,[[]]],[11,"index_mut","","",6,[[]]],[11,"index_mut","","",6,[[]]],[11,"index_mut","","",7,[[]]],[11,"index_mut","","",7,[[]]],[11,"index_mut","","",7,[[]]],[11,"index_mut","","",7,[[]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["u64",3],["iter",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["u64",3],["iter",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"create","","",3,[[]]],[11,"len","","",3,[[]]],[11,"iter","","",3,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",3,[[]]],[11,"update","","",3,[[]]],[11,"update_start","","",3,[[]]],[11,"create","","",4,[[]]],[11,"len","","",4,[[]]],[11,"iter","","",4,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",4,[[]]],[11,"update","","",4,[[]]],[11,"update_start","","",4,[[]]],[11,"create","","",5,[[]]],[11,"len","","",5,[[]]],[11,"iter","","",5,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",5,[[]]],[11,"update","","",5,[[]]],[11,"update_start","","",5,[[]]],[11,"create","","",6,[[]]],[11,"len","","",6,[[]]],[11,"iter","","",6,[[],["iter",3]]],[11,"update_slice","","",6,[[]]],[11,"update","","",6,[[]]],[11,"update_start","","",6,[[]]],[11,"create","","",7,[[]]],[11,"len","","",7,[[]]],[11,"iter","","",7,[[],["iter",3]]],[11,"update_slice","","",7,[[]]],[11,"update","","",7,[[]]],[11,"update_start","","",7,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","",3,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","",4,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",5,[[]]],[11,"add_mod","","`(self + rhs) % n`",5,[[]]],[11,"mul_mod","","`(self * rhs) % n`",5,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",5,[[]]],[11,"modulo","","`self % n`",5,[[]]],[11,"signed_modulo","","",5,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",5,[[]]],[11,"sub_mod","","`(self - rhs) % n` (coefficient-wise)",6,[[]]],[11,"add_mod","","`(self + rhs) % n` (coefficient-wise)",6,[[]]],[11,"mul_mod","","`(self * rhs) % n` (coefficient-wise) Note that the…",6,[[]]],[11,"pow_mod","","`(self ^ exp) % n` (coefficient-wise) Note that the…",6,[[]]],[11,"modulo","","`self % n` (coefficient-wise)",6,[[]]],[11,"signed_modulo","","`self % n` (coefficient-wise)",6,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",6,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]],[11,"max_val","","Return largest value that can be represented.",5,[[]]],[11,"wrap_add","","",5,[[]]],[11,"wrap_sub","","",5,[[]]],[11,"wrap_mul","","",5,[[]]],[11,"wrap_div","","",5,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",5,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",5,[[]]],[11,"divide","","Division.",5,[[]]],[11,"inv","","Invert self modulo n.",5,[[]]],[11,"equal","","",5,[[]]],[11,"greater_than","","",5,[[]]],[11,"greater_than_or_qual","","",5,[[]]],[11,"less_than","","",5,[[]]],[11,"less_than_or_equal","","",5,[[]]],[11,"not_equal_bm","","",5,[[]]],[11,"equal_bm","","",5,[[]]],[11,"greater_than_bm","","",5,[[]]],[11,"greater_than_or_equal_bm","","",5,[[]]],[11,"less_than_bm","","",5,[[]]],[11,"less_than_or_equal_bm","","",5,[[]]],[11,"max_val","","Return largest value that can be represented. Not…",6,[[]]],[11,"wrap_add","","`self + rhs` (coefficient-wise and wrapping)",6,[[]]],[11,"wrap_sub","","`self - rhs` (coefficient-wise and wrapping)",6,[[]]],[11,"wrap_mul","","`self * rhs` (coefficient-wise and wrapping)",6,[[]]],[11,"wrap_div","","`self + rhs` (coefficient-wise and wrapping)",6,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32` (coefficient-wise and…",6,[[]]],[11,"pow_self","","Not implemented.",6,[[]]],[11,"divide","","`self / rhs` (coefficient-wise and wrapping).",6,[[]]],[11,"inv","","Not implemented",6,[[]]],[11,"equal","","",6,[[]]],[11,"greater_than","","",6,[[]]],[11,"greater_than_or_qual","","",6,[[]]],[11,"less_than","","",6,[[]]],[11,"less_than_or_equal","","",6,[[]]],[11,"not_equal_bm","","",6,[[]]],[11,"equal_bm","","",6,[[]]],[11,"greater_than_bm","","",6,[[]]],[11,"greater_than_or_equal_bm","","",6,[[]]],[11,"less_than_bm","","",6,[[]]],[11,"less_than_or_equal_bm","","",6,[[]]]],"p":[[3,"State"],[3,"Row"],[3,"Digest224"],[3,"Digest256"],[3,"Digest384"],[3,"Digest512"],[3,"RoundConstants"],[3,"RotationConstants"]]},\
"hacspec_util":{"doc":"","i":[[3,"Signature","hacspec_util","",null,null],[12,"name","","",0,null],[5,"syn_sig_to_reduced","","",null,[[["signature",3]],["signature",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"eq","","",0,[[["signature",3]]]],[11,"ne","","",0,[[["signature",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Signature"]]},\
"itoa":{"doc":"![github] ![crates-io] ![docs-rs]","i":[[3,"Buffer","itoa","A safe API for formatting integers to text.",null,null],[5,"write","","Write integer to an `io::Write`.",null,[[["integer",8],["write",8]],["result",6]]],[5,"fmt","","Write integer to an `fmt::Write`.",null,[[["write",8],["integer",8]],["result",6]]],[8,"Integer","","An integer that can be formatted by `itoa::write` and…",null,null],[11,"new","","This is a cheap operation; you don\'t need to worry about…",0,[[],["buffer",3]]],[11,"format","","Print an integer into this buffer and return a reference…",0,[[["integer",8]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[],["buffer",3]]]],"p":[[3,"Buffer"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[4,"c_void","libc","Equivalent to C\'s `void` type when used as a [pointer].",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"uinput_ff_upload","","",null,null],[12,"request_id","","",65,null],[12,"retval","","",65,null],[12,"effect","","",65,null],[12,"old","","",65,null],[3,"uinput_ff_erase","","",null,null],[12,"request_id","","",66,null],[12,"retval","","",66,null],[12,"effect_id","","",66,null],[3,"uinput_abs_setup","","",null,null],[12,"code","","",67,null],[12,"absinfo","","",67,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",68,null],[12,"dlpi_name","","",68,null],[12,"dlpi_phdr","","",68,null],[12,"dlpi_phnum","","",68,null],[12,"dlpi_adds","","",68,null],[12,"dlpi_subs","","",68,null],[12,"dlpi_tls_modid","","",68,null],[12,"dlpi_tls_data","","",68,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",69,null],[12,"e_type","","",69,null],[12,"e_machine","","",69,null],[12,"e_version","","",69,null],[12,"e_entry","","",69,null],[12,"e_phoff","","",69,null],[12,"e_shoff","","",69,null],[12,"e_flags","","",69,null],[12,"e_ehsize","","",69,null],[12,"e_phentsize","","",69,null],[12,"e_phnum","","",69,null],[12,"e_shentsize","","",69,null],[12,"e_shnum","","",69,null],[12,"e_shstrndx","","",69,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",70,null],[12,"e_type","","",70,null],[12,"e_machine","","",70,null],[12,"e_version","","",70,null],[12,"e_entry","","",70,null],[12,"e_phoff","","",70,null],[12,"e_shoff","","",70,null],[12,"e_flags","","",70,null],[12,"e_ehsize","","",70,null],[12,"e_phentsize","","",70,null],[12,"e_phnum","","",70,null],[12,"e_shentsize","","",70,null],[12,"e_shnum","","",70,null],[12,"e_shstrndx","","",70,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",71,null],[12,"st_value","","",71,null],[12,"st_size","","",71,null],[12,"st_info","","",71,null],[12,"st_other","","",71,null],[12,"st_shndx","","",71,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",72,null],[12,"st_info","","",72,null],[12,"st_other","","",72,null],[12,"st_shndx","","",72,null],[12,"st_value","","",72,null],[12,"st_size","","",72,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",73,null],[12,"p_offset","","",73,null],[12,"p_vaddr","","",73,null],[12,"p_paddr","","",73,null],[12,"p_filesz","","",73,null],[12,"p_memsz","","",73,null],[12,"p_flags","","",73,null],[12,"p_align","","",73,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",74,null],[12,"p_flags","","",74,null],[12,"p_offset","","",74,null],[12,"p_vaddr","","",74,null],[12,"p_paddr","","",74,null],[12,"p_filesz","","",74,null],[12,"p_memsz","","",74,null],[12,"p_align","","",74,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",75,null],[12,"sh_type","","",75,null],[12,"sh_flags","","",75,null],[12,"sh_addr","","",75,null],[12,"sh_offset","","",75,null],[12,"sh_size","","",75,null],[12,"sh_link","","",75,null],[12,"sh_info","","",75,null],[12,"sh_addralign","","",75,null],[12,"sh_entsize","","",75,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",76,null],[12,"sh_type","","",76,null],[12,"sh_flags","","",76,null],[12,"sh_addr","","",76,null],[12,"sh_offset","","",76,null],[12,"sh_size","","",76,null],[12,"sh_link","","",76,null],[12,"sh_info","","",76,null],[12,"sh_addralign","","",76,null],[12,"sh_entsize","","",76,null],[3,"ucred","","",null,null],[12,"pid","","",77,null],[12,"uid","","",77,null],[12,"gid","","",77,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",78,null],[12,"mnt_dir","","",78,null],[12,"mnt_type","","",78,null],[12,"mnt_opts","","",78,null],[12,"mnt_freq","","",78,null],[12,"mnt_passno","","",78,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",79,null],[12,"version","","",79,null],[12,"reserved","","",79,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",80,null],[12,"ipi6_ifindex","","",80,null],[3,"arpd_request","","",null,null],[12,"req","","",81,null],[12,"ip","","",81,null],[12,"dev","","",81,null],[12,"stamp","","",81,null],[12,"updated","","",81,null],[12,"ha","","",81,null],[3,"inotify_event","","",null,null],[12,"wd","","",82,null],[12,"mask","","",82,null],[12,"cookie","","",82,null],[12,"len","","",82,null],[3,"fanotify_response","","",null,null],[12,"fd","","",83,null],[12,"response","","",83,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",84,null],[12,"svm_reserved1","","",84,null],[12,"svm_port","","",84,null],[12,"svm_cid","","",84,null],[12,"svm_zero","","",84,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",85,null],[12,"rm_eo","","",85,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",86,null],[12,"ee_origin","","",86,null],[12,"ee_type","","",86,null],[12,"ee_code","","",86,null],[12,"ee_pad","","",86,null],[12,"ee_info","","",86,null],[12,"ee_data","","",86,null],[3,"__c_anonymous_sockaddr_can_tp","","",null,null],[12,"rx_id","","",87,null],[12,"tx_id","","",87,null],[3,"__c_anonymous_sockaddr_can_j1939","","",null,null],[12,"name","","",88,null],[12,"pgn","","",88,null],[12,"addr","","",88,null],[3,"can_filter","","",null,null],[12,"can_id","","",89,null],[12,"can_mask","","",89,null],[3,"sock_filter","","",null,null],[12,"code","","",90,null],[12,"jt","","",90,null],[12,"jf","","",90,null],[12,"k","","",90,null],[3,"sock_fprog","","",null,null],[12,"len","","",91,null],[12,"filter","","",91,null],[3,"seccomp_data","","",null,null],[12,"nr","","",92,null],[12,"arch","","",92,null],[12,"instruction_pointer","","",92,null],[12,"args","","",92,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",93,null],[12,"nlmsg_type","","",93,null],[12,"nlmsg_flags","","",93,null],[12,"nlmsg_seq","","",93,null],[12,"nlmsg_pid","","",93,null],[3,"nlmsgerr","","",null,null],[12,"error","","",94,null],[12,"msg","","",94,null],[3,"nlattr","","",null,null],[12,"nla_len","","",95,null],[12,"nla_type","","",95,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",96,null],[12,"nl_pid","","",96,null],[12,"nl_groups","","",96,null],[3,"dirent","","",null,null],[12,"d_ino","","",97,null],[12,"d_off","","",97,null],[12,"d_reclen","","",97,null],[12,"d_type","","",97,null],[12,"d_name","","",97,null],[3,"dirent64","","",null,null],[12,"d_ino","","",98,null],[12,"d_off","","",98,null],[12,"d_reclen","","",98,null],[12,"d_type","","",98,null],[12,"d_name","","",98,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",99,null],[12,"salg_type","","",99,null],[12,"salg_feat","","",99,null],[12,"salg_mask","","",99,null],[12,"salg_name","","",99,null],[3,"uinput_setup","","",null,null],[12,"id","","",100,null],[12,"name","","",100,null],[12,"ff_effects_max","","",100,null],[3,"uinput_user_dev","","",null,null],[12,"name","","",101,null],[12,"id","","",101,null],[12,"ff_effects_max","","",101,null],[12,"absmax","","",101,null],[12,"absmin","","",101,null],[12,"absfuzz","","",101,null],[12,"absflat","","",101,null],[3,"af_alg_iv","","WARNING: The `PartialEq`, `Eq` and `Hash` implementations…",null,null],[12,"ivlen","","",102,null],[12,"iv","","",102,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",103,null],[12,"mq_maxmsg","","",103,null],[12,"mq_msgsize","","",103,null],[12,"mq_curmsgs","","",103,null],[3,"sock_txtime","","",null,null],[12,"clockid","","",104,null],[12,"flags","","",104,null],[3,"sockaddr_can","","",null,null],[12,"can_family","","",105,null],[12,"can_ifindex","","",105,null],[12,"can_addr","","",105,null],[3,"statx","","",null,null],[12,"stx_mask","","",106,null],[12,"stx_blksize","","",106,null],[12,"stx_attributes","","",106,null],[12,"stx_nlink","","",106,null],[12,"stx_uid","","",106,null],[12,"stx_gid","","",106,null],[12,"stx_mode","","",106,null],[12,"stx_ino","","",106,null],[12,"stx_size","","",106,null],[12,"stx_blocks","","",106,null],[12,"stx_attributes_mask","","",106,null],[12,"stx_atime","","",106,null],[12,"stx_btime","","",106,null],[12,"stx_ctime","","",106,null],[12,"stx_mtime","","",106,null],[12,"stx_rdev_major","","",106,null],[12,"stx_rdev_minor","","",106,null],[12,"stx_dev_major","","",106,null],[12,"stx_dev_minor","","",106,null],[12,"stx_mnt_id","","",106,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",107,null],[12,"tv_nsec","","",107,null],[12,"__statx_timestamp_pad1","","",107,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",108,null],[12,"aio_lio_opcode","","",108,null],[12,"aio_reqprio","","",108,null],[12,"aio_buf","","",108,null],[12,"aio_nbytes","","",108,null],[12,"aio_sigevent","","",108,null],[12,"aio_offset","","",108,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",109,null],[12,"e_exit","","",109,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",110,null],[12,"tv_usec","","",110,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",111,null],[12,"gl_pathv","","",111,null],[12,"gl_offs","","",111,null],[12,"gl_flags","","",111,null],[3,"msghdr","","",null,null],[12,"msg_name","","",112,null],[12,"msg_namelen","","",112,null],[12,"msg_iov","","",112,null],[12,"msg_iovlen","","",112,null],[12,"msg_control","","",112,null],[12,"msg_controllen","","",112,null],[12,"msg_flags","","",112,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",113,null],[12,"cmsg_level","","",113,null],[12,"cmsg_type","","",113,null],[3,"termios","","",null,null],[12,"c_iflag","","",114,null],[12,"c_oflag","","",114,null],[12,"c_cflag","","",114,null],[12,"c_lflag","","",114,null],[12,"c_line","","",114,null],[12,"c_cc","","",114,null],[12,"c_ispeed","","",114,null],[12,"c_ospeed","","",114,null],[3,"mallinfo","","",null,null],[12,"arena","","",115,null],[12,"ordblks","","",115,null],[12,"smblks","","",115,null],[12,"hblks","","",115,null],[12,"hblkhd","","",115,null],[12,"usmblks","","",115,null],[12,"fsmblks","","",115,null],[12,"uordblks","","",115,null],[12,"fordblks","","",115,null],[12,"keepcost","","",115,null],[3,"mallinfo2","","",null,null],[12,"arena","","",116,null],[12,"ordblks","","",116,null],[12,"smblks","","",116,null],[12,"hblks","","",116,null],[12,"hblkhd","","",116,null],[12,"usmblks","","",116,null],[12,"fsmblks","","",116,null],[12,"uordblks","","",116,null],[12,"fordblks","","",116,null],[12,"keepcost","","",116,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",117,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",118,null],[12,"nm_block_nr","","",118,null],[12,"nm_frame_size","","",118,null],[12,"nm_frame_nr","","",118,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",119,null],[12,"nm_len","","",119,null],[12,"nm_group","","",119,null],[12,"nm_pid","","",119,null],[12,"nm_uid","","",119,null],[12,"nm_gid","","",119,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",120,null],[12,"rt_dst","","",120,null],[12,"rt_gateway","","",120,null],[12,"rt_genmask","","",120,null],[12,"rt_flags","","",120,null],[12,"rt_pad2","","",120,null],[12,"rt_pad3","","",120,null],[12,"rt_tos","","",120,null],[12,"rt_class","","",120,null],[12,"rt_pad4","","",120,null],[12,"rt_metric","","",120,null],[12,"rt_dev","","",120,null],[12,"rt_mtu","","",120,null],[12,"rt_window","","",120,null],[12,"rt_irtt","","",120,null],[3,"timex","","",null,null],[12,"modes","","",121,null],[12,"offset","","",121,null],[12,"freq","","",121,null],[12,"maxerror","","",121,null],[12,"esterror","","",121,null],[12,"status","","",121,null],[12,"constant","","",121,null],[12,"precision","","",121,null],[12,"tolerance","","",121,null],[12,"time","","",121,null],[12,"tick","","",121,null],[12,"ppsfreq","","",121,null],[12,"jitter","","",121,null],[12,"shift","","",121,null],[12,"stabil","","",121,null],[12,"jitcnt","","",121,null],[12,"calcnt","","",121,null],[12,"errcnt","","",121,null],[12,"stbcnt","","",121,null],[12,"tai","","",121,null],[12,"__unused1","","",121,null],[12,"__unused2","","",121,null],[12,"__unused3","","",121,null],[12,"__unused4","","",121,null],[12,"__unused5","","",121,null],[12,"__unused6","","",121,null],[12,"__unused7","","",121,null],[12,"__unused8","","",121,null],[12,"__unused9","","",121,null],[12,"__unused10","","",121,null],[12,"__unused11","","",121,null],[3,"ntptimeval","","",null,null],[12,"time","","",122,null],[12,"maxerror","","",122,null],[12,"esterror","","",122,null],[12,"tai","","",122,null],[12,"__glibc_reserved1","","",122,null],[12,"__glibc_reserved2","","",122,null],[12,"__glibc_reserved3","","",122,null],[12,"__glibc_reserved4","","",122,null],[3,"regex_t","","",null,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",123,null],[12,"ch_reserved","","",123,null],[12,"ch_size","","",123,null],[12,"ch_addralign","","",123,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",124,null],[12,"ch_size","","",124,null],[12,"ch_addralign","","",124,null],[3,"seminfo","","",null,null],[12,"semmap","","",125,null],[12,"semmni","","",125,null],[12,"semmns","","",125,null],[12,"semmnu","","",125,null],[12,"semmsl","","",125,null],[12,"semopm","","",125,null],[12,"semume","","",125,null],[12,"semusz","","",125,null],[12,"semvmx","","",125,null],[12,"semaem","","",125,null],[3,"utmpx","","",null,null],[12,"ut_type","","",126,null],[12,"ut_pid","","",126,null],[12,"ut_line","","",126,null],[12,"ut_id","","",126,null],[12,"ut_user","","",126,null],[12,"ut_host","","",126,null],[12,"ut_exit","","",126,null],[12,"ut_session","","",126,null],[12,"ut_tv","","",126,null],[12,"ut_addr_v6","","",126,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",127,null],[12,"loads","","",127,null],[12,"totalram","","",127,null],[12,"freeram","","",127,null],[12,"sharedram","","",127,null],[12,"bufferram","","",127,null],[12,"totalswap","","",127,null],[12,"freeswap","","",127,null],[12,"procs","","",127,null],[12,"pad","","",127,null],[12,"totalhigh","","",127,null],[12,"freehigh","","",127,null],[12,"mem_unit","","",127,null],[12,"_f","","",127,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",128,null],[12,"msg_stime","","",128,null],[12,"msg_rtime","","",128,null],[12,"msg_ctime","","",128,null],[12,"msg_qnum","","",128,null],[12,"msg_qbytes","","",128,null],[12,"msg_lspid","","",128,null],[12,"msg_lrpid","","",128,null],[3,"semid_ds","","",null,null],[12,"sem_perm","","",129,null],[12,"sem_otime","","",129,null],[12,"sem_ctime","","",129,null],[12,"sem_nsems","","",129,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",130,null],[12,"sa_mask","","",130,null],[12,"sa_flags","","",130,null],[12,"sa_restorer","","",130,null],[3,"statfs","","",null,null],[12,"f_type","","",131,null],[12,"f_bsize","","",131,null],[12,"f_blocks","","",131,null],[12,"f_bfree","","",131,null],[12,"f_bavail","","",131,null],[12,"f_files","","",131,null],[12,"f_ffree","","",131,null],[12,"f_fsid","","",131,null],[12,"f_namelen","","",131,null],[12,"f_frsize","","",131,null],[3,"flock","","",null,null],[12,"l_type","","",132,null],[12,"l_whence","","",132,null],[12,"l_start","","",132,null],[12,"l_len","","",132,null],[12,"l_pid","","",132,null],[3,"flock64","","",null,null],[12,"l_type","","",133,null],[12,"l_whence","","",133,null],[12,"l_start","","",133,null],[12,"l_len","","",133,null],[12,"l_pid","","",133,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",134,null],[12,"si_errno","","",134,null],[12,"si_code","","",134,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",135,null],[12,"ss_flags","","",135,null],[12,"ss_size","","",135,null],[3,"stat","","",null,null],[12,"st_dev","","",136,null],[12,"st_ino","","",136,null],[12,"st_nlink","","",136,null],[12,"st_mode","","",136,null],[12,"st_uid","","",136,null],[12,"st_gid","","",136,null],[12,"st_rdev","","",136,null],[12,"st_size","","",136,null],[12,"st_blksize","","",136,null],[12,"st_blocks","","",136,null],[12,"st_atime","","",136,null],[12,"st_atime_nsec","","",136,null],[12,"st_mtime","","",136,null],[12,"st_mtime_nsec","","",136,null],[12,"st_ctime","","",136,null],[12,"st_ctime_nsec","","",136,null],[3,"stat64","","",null,null],[12,"st_dev","","",137,null],[12,"st_ino","","",137,null],[12,"st_nlink","","",137,null],[12,"st_mode","","",137,null],[12,"st_uid","","",137,null],[12,"st_gid","","",137,null],[12,"st_rdev","","",137,null],[12,"st_size","","",137,null],[12,"st_blksize","","",137,null],[12,"st_blocks","","",137,null],[12,"st_atime","","",137,null],[12,"st_atime_nsec","","",137,null],[12,"st_mtime","","",137,null],[12,"st_mtime_nsec","","",137,null],[12,"st_ctime","","",137,null],[12,"st_ctime_nsec","","",137,null],[3,"statfs64","","",null,null],[12,"f_type","","",138,null],[12,"f_bsize","","",138,null],[12,"f_blocks","","",138,null],[12,"f_bfree","","",138,null],[12,"f_bavail","","",138,null],[12,"f_files","","",138,null],[12,"f_ffree","","",138,null],[12,"f_fsid","","",138,null],[12,"f_namelen","","",138,null],[12,"f_frsize","","",138,null],[12,"f_flags","","",138,null],[12,"f_spare","","",138,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",139,null],[12,"f_frsize","","",139,null],[12,"f_blocks","","",139,null],[12,"f_bfree","","",139,null],[12,"f_bavail","","",139,null],[12,"f_files","","",139,null],[12,"f_ffree","","",139,null],[12,"f_favail","","",139,null],[12,"f_fsid","","",139,null],[12,"f_flag","","",139,null],[12,"f_namemax","","",139,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",140,null],[12,"exponent","","",140,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",141,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",142,null],[12,"swd","","",142,null],[12,"ftw","","",142,null],[12,"fop","","",142,null],[12,"rip","","",142,null],[12,"rdp","","",142,null],[12,"mxcsr","","",142,null],[12,"mxcr_mask","","",142,null],[12,"_st","","",142,null],[12,"_xmm","","",142,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",143,null],[12,"r14","","",143,null],[12,"r13","","",143,null],[12,"r12","","",143,null],[12,"rbp","","",143,null],[12,"rbx","","",143,null],[12,"r11","","",143,null],[12,"r10","","",143,null],[12,"r9","","",143,null],[12,"r8","","",143,null],[12,"rax","","",143,null],[12,"rcx","","",143,null],[12,"rdx","","",143,null],[12,"rsi","","",143,null],[12,"rdi","","",143,null],[12,"orig_rax","","",143,null],[12,"rip","","",143,null],[12,"cs","","",143,null],[12,"eflags","","",143,null],[12,"rsp","","",143,null],[12,"ss","","",143,null],[12,"fs_base","","",143,null],[12,"gs_base","","",143,null],[12,"ds","","",143,null],[12,"es","","",143,null],[12,"fs","","",143,null],[12,"gs","","",143,null],[3,"user","","",null,null],[12,"regs","","",144,null],[12,"u_fpvalid","","",144,null],[12,"i387","","",144,null],[12,"u_tsize","","",144,null],[12,"u_dsize","","",144,null],[12,"u_ssize","","",144,null],[12,"start_code","","",144,null],[12,"start_stack","","",144,null],[12,"signal","","",144,null],[12,"u_ar0","","",144,null],[12,"u_fpstate","","",144,null],[12,"magic","","",144,null],[12,"u_comm","","",144,null],[12,"u_debugreg","","",144,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",145,null],[12,"fpregs","","",145,null],[3,"ipc_perm","","",null,null],[12,"__key","","",146,null],[12,"uid","","",146,null],[12,"gid","","",146,null],[12,"cuid","","",146,null],[12,"cgid","","",146,null],[12,"mode","","",146,null],[12,"__seq","","",146,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",147,null],[12,"shm_segsz","","",147,null],[12,"shm_atime","","",147,null],[12,"shm_dtime","","",147,null],[12,"shm_ctime","","",147,null],[12,"shm_cpid","","",147,null],[12,"shm_lpid","","",147,null],[12,"shm_nattch","","",147,null],[3,"termios2","","",null,null],[12,"c_iflag","","",148,null],[12,"c_oflag","","",148,null],[12,"c_cflag","","",148,null],[12,"c_lflag","","",148,null],[12,"c_line","","",148,null],[12,"c_cc","","",148,null],[12,"c_ispeed","","",148,null],[12,"c_ospeed","","",148,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",149,null],[12,"imr_address","","",149,null],[12,"imr_ifindex","","",149,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",150,null],[12,"swd","","",150,null],[12,"ftw","","",150,null],[12,"fop","","",150,null],[12,"rip","","",150,null],[12,"rdp","","",150,null],[12,"mxcsr","","",150,null],[12,"mxcr_mask","","",150,null],[12,"st_space","","",150,null],[12,"xmm_space","","",150,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",151,null],[12,"uc_link","","",151,null],[12,"uc_stack","","",151,null],[12,"uc_mcontext","","",151,null],[12,"uc_sigmask","","",151,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",152,null],[12,"f_frsize","","",152,null],[12,"f_blocks","","",152,null],[12,"f_bfree","","",152,null],[12,"f_bavail","","",152,null],[12,"f_files","","",152,null],[12,"f_ffree","","",152,null],[12,"f_favail","","",152,null],[12,"f_fsid","","",152,null],[12,"f_flag","","",152,null],[12,"f_namemax","","",152,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"fanotify_event_metadata","","",null,null],[12,"event_len","","",153,null],[12,"vers","","",153,null],[12,"reserved","","",153,null],[12,"metadata_len","","",153,null],[12,"mask","","",153,null],[12,"fd","","",153,null],[12,"pid","","",153,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"can_frame","","",null,null],[12,"can_id","","",154,null],[12,"can_dlc","","",154,null],[12,"data","","",154,null],[3,"canfd_frame","","",null,null],[12,"can_id","","",155,null],[12,"len","","",155,null],[12,"flags","","",155,null],[12,"data","","",155,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",156,null],[19,"__c_anonymous_sockaddr_can_can_addr","","",null,null],[12,"tp","","",157,null],[12,"j1939","","",157,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"SIGRTMAX","","",null,[[],["c_int",6]]],[5,"SIGRTMIN","","",null,[[],["c_int",6]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]]]],[5,"W_EXITCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"W_STOPCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[5,"IPOPT_COPIED","","",null,[[]]],[5,"IPOPT_CLASS","","",null,[[]]],[5,"IPOPT_NUMBER","","",null,[[]]],[5,"IPTOS_ECN","","",null,[[]]],[5,"NLA_ALIGN","","",null,[[["c_int",6]],["c_int",6]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ALLOC_SIZE","","",null,[[["c_int",6]],["size_t",6]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t",3]]]],[5,"CPU_SET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_CLR","","",null,[[["cpu_set_t",3]]]],[5,"CPU_ISSET","","",null,[[["cpu_set_t",3]]]],[5,"CPU_COUNT_S","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_COUNT","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t",3]]]],[5,"major","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"minor","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"makedev","","",null,[[["c_uint",6]],["dev_t",6]]],[5,"IPTOS_TOS","","",null,[[]]],[5,"IPTOS_PREC","","",null,[[]]],[5,"RT_TOS","","",null,[[]]],[5,"RT_ADDRCLASS","","",null,[[]]],[5,"RT_LOCALADDR","","",null,[[]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtof","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"hstrerror","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"timegm","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"endservent","","",null,null],[5,"getservbyname","","",null,null],[5,"getservbyport","","",null,null],[5,"getservent","","",null,null],[5,"setservent","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"open_wmemstream","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"clock_getcpuclockid","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"posix_fadvise64","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"preadv64","","",null,null],[5,"pwritev64","","",null,null],[5,"forkpty","","",null,null],[5,"openpty","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"getnameinfo","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"futimes","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"accept4","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syncfs","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_consistent","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"pthread_spin_init","","",null,null],[5,"pthread_spin_destroy","","",null,null],[5,"pthread_spin_lock","","",null,null],[5,"pthread_spin_trylock","","",null,null],[5,"pthread_spin_unlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sendfile64","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"pthread_mutexattr_getrobust","","",null,null],[5,"pthread_mutexattr_setrobust","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fanotify_init","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"iconv_open","","",null,null],[5,"iconv","","",null,null],[5,"iconv_close","","",null,null],[5,"gettid","","",null,null],[5,"timer_create","","",null,null],[5,"timer_delete","","",null,null],[5,"timer_getoverrun","","",null,null],[5,"timer_gettime","","",null,null],[5,"timer_settime","","",null,null],[5,"gethostid","","",null,null],[5,"pthread_getcpuclockid","","",null,null],[5,"memmem","","",null,null],[5,"sched_getcpu","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"clock_adjtime","","",null,null],[5,"copy_file_range","","",null,null],[5,"fanotify_mark","","",null,null],[5,"preadv2","","",null,null],[5,"pwritev2","","",null,null],[5,"preadv64v2","","",null,null],[5,"pwritev64v2","","",null,null],[5,"renameat2","","",null,null],[5,"explicit_bzero","","",null,null],[5,"reallocarray","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"mallinfo","","",null,null],[5,"mallinfo2","","",null,null],[5,"malloc_info","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"sethostid","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"dladdr1","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"si_addr","","",134,[[]]],[11,"si_value","","",134,[[],["sigval",3]]],[11,"si_pid","","",134,[[],["pid_t",6]]],[11,"si_uid","","",134,[[],["uid_t",6]]],[11,"si_status","","",134,[[],["c_int",6]]],[11,"si_utime","","",134,[[],["c_long",6]]],[11,"si_stime","","",134,[[],["c_long",6]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"timer_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"pthread_spinlock_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"canid_t","","",null,null],[6,"can_err_mask_t","","",null,null],[6,"iconv_t","","",null,null],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"regoff_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__syscall_ulong_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_LAZYTIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_OPTIONS","","",null,null],[17,"IP_ROUTER_ALERT","","",null,null],[17,"IP_RECVOPTS","","",null,null],[17,"IP_RETOPTS","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_PKTOPTIONS","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_RECVTTL","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_MTU","","",null,null],[17,"IP_FREEBIND","","",null,null],[17,"IP_IPSEC_POLICY","","",null,null],[17,"IP_XFRM_POLICY","","",null,null],[17,"IP_PASSSEC","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IP_MINTTL","","",null,null],[17,"IP_NODEFRAG","","",null,null],[17,"IP_CHECKSUM","","",null,null],[17,"IP_BIND_ADDRESS_NO_PORT","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_UNBLOCK_SOURCE","","",null,null],[17,"IP_BLOCK_SOURCE","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"IP_DEFAULT_MULTICAST_TTL","","",null,null],[17,"IP_DEFAULT_MULTICAST_LOOP","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"IP_PMTUDISC_INTERFACE","","",null,null],[17,"IP_PMTUDISC_OMIT","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"MCAST_EXCLUDE","","",null,null],[17,"MCAST_INCLUDE","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_AUTHHDR","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_IPSEC_POLICY","","",null,null],[17,"IPV6_XFRM_POLICY","","",null,null],[17,"IPV6_HDRINCL","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVHOPLIMIT","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVHOPOPTS","","",null,null],[17,"IPV6_HOPOPTS","","",null,null],[17,"IPV6_RTHDRDSTOPTS","","",null,null],[17,"IPV6_RECVRTHDR","","",null,null],[17,"IPV6_RTHDR","","",null,null],[17,"IPV6_RECVDSTOPTS","","",null,null],[17,"IPV6_DSTOPTS","","",null,null],[17,"IPV6_RECVPATHMTU","","",null,null],[17,"IPV6_PATHMTU","","",null,null],[17,"IPV6_DONTFRAG","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_AUTOFLOWLABEL","","",null,null],[17,"IPV6_ADDR_PREFERENCES","","",null,null],[17,"IPV6_MINHOPCOUNT","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_IF","","",null,null],[17,"IPV6_PREFER_SRC_TMP","","",null,null],[17,"IPV6_PREFER_SRC_PUBLIC","","",null,null],[17,"IPV6_PREFER_SRC_PUBTMP_DEFAULT","","",null,null],[17,"IPV6_PREFER_SRC_COA","","",null,null],[17,"IPV6_PREFER_SRC_HOME","","",null,null],[17,"IPV6_PREFER_SRC_CGA","","",null,null],[17,"IPV6_PREFER_SRC_NONCGA","","",null,null],[17,"IPV6_PMTUDISC_DONT","","",null,null],[17,"IPV6_PMTUDISC_WANT","","",null,null],[17,"IPV6_PMTUDISC_DO","","",null,null],[17,"IPV6_PMTUDISC_PROBE","","",null,null],[17,"IPV6_PMTUDISC_INTERFACE","","",null,null],[17,"IPV6_PMTUDISC_OMIT","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_NOTSENT_LOWAT","","",null,null],[17,"TCP_CC_INFO","","",null,null],[17,"TCP_SAVE_SYN","","",null,null],[17,"TCP_SAVED_SYN","","",null,null],[17,"TCP_REPAIR_WINDOW","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"TCP_ULP","","",null,null],[17,"TCP_MD5SIG_EXT","","",null,null],[17,"TCP_FASTOPEN_KEY","","",null,null],[17,"TCP_FASTOPEN_NO_COOKIE","","",null,null],[17,"TCP_ZEROCOPY_RECEIVE","","",null,null],[17,"TCP_INQ","","",null,null],[17,"TCP_CM_INQ","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"UIO_MAXIOV","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"ADDR_NO_RANDOMIZE","","",null,null],[17,"MMAP_PAGE_ZERO","","",null,null],[17,"ADDR_COMPAT_LAYOUT","","",null,null],[17,"READ_IMPLIES_EXEC","","",null,null],[17,"ADDR_LIMIT_32BIT","","",null,null],[17,"SHORT_INODE","","",null,null],[17,"WHOLE_SECONDS","","",null,null],[17,"STICKY_TIMEOUTS","","",null,null],[17,"ADDR_LIMIT_3GB","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"CLD_EXITED","","",null,null],[17,"CLD_KILLED","","",null,null],[17,"CLD_DUMPED","","",null,null],[17,"CLD_TRAPPED","","",null,null],[17,"CLD_STOPPED","","",null,null],[17,"CLD_CONTINUED","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"P_PIDFD","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_CAN","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_GSO_MAX_SEGS","","",null,null],[17,"IFLA_GSO_MAX_SIZE","","",null,null],[17,"IFLA_PAD","","",null,null],[17,"IFLA_XDP","","",null,null],[17,"IFLA_EVENT","","",null,null],[17,"IFLA_NEW_NETNSID","","",null,null],[17,"IFLA_IF_NETNSID","","",null,null],[17,"IFLA_TARGET_NETNSID","","",null,null],[17,"IFLA_CARRIER_UP_COUNT","","",null,null],[17,"IFLA_CARRIER_DOWN_COUNT","","",null,null],[17,"IFLA_NEW_IFINDEX","","",null,null],[17,"IFLA_MIN_MTU","","",null,null],[17,"IFLA_MAX_MTU","","",null,null],[17,"IFLA_PROP_LIST","","",null,null],[17,"IFLA_ALT_IFNAME","","",null,null],[17,"IFLA_PERM_ADDRESS","","",null,null],[17,"IFLA_PROTO_DOWN_REASON","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_MUTEX_STALLED","","",null,null],[17,"PTHREAD_MUTEX_ROBUST","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"CLONE_PIDFD","","",null,null],[17,"IPPROTO_MPTCP","","Multipath TCP",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"IPV6_MULTICAST_ALL","","",null,null],[17,"IPV6_ROUTER_ALERT_ISOLATE","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"PTRACE_EVENT_STOP","","",null,null],[17,"UDP_SEGMENT","","",null,null],[17,"UDP_GRO","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"MREMAP_DONTUNMAP","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"SECCOMP_FILTER_FLAG_TSYNC","","",null,null],[17,"SECCOMP_FILTER_FLAG_LOG","","",null,null],[17,"SECCOMP_FILTER_FLAG_SPEC_ALLOW","","",null,null],[17,"SECCOMP_RET_KILL_PROCESS","","",null,null],[17,"SECCOMP_RET_KILL_THREAD","","",null,null],[17,"SECCOMP_RET_KILL","","",null,null],[17,"SECCOMP_RET_TRAP","","",null,null],[17,"SECCOMP_RET_ERRNO","","",null,null],[17,"SECCOMP_RET_TRACE","","",null,null],[17,"SECCOMP_RET_LOG","","",null,null],[17,"SECCOMP_RET_ALLOW","","",null,null],[17,"SECCOMP_RET_ACTION_FULL","","",null,null],[17,"SECCOMP_RET_ACTION","","",null,null],[17,"SECCOMP_RET_DATA","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_RECVFRAGSIZE","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_RECVFRAGSIZE","","",null,null],[17,"IPV6_FREEBIND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IPV6_RTHDR_LOOSE","","",null,null],[17,"IPV6_RTHDR_STRICT","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"CLOSE_RANGE_UNSHARE","","",null,null],[17,"CLOSE_RANGE_CLOEXEC","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"PT_HIOS","","",null,null],[17,"PT_LOPROC","","",null,null],[17,"PT_HIPROC","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NETLINK_EXT_ACK","","",null,null],[17,"NETLINK_GET_STRICT_CHK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"SOF_TXTIME_DEADLINE_MODE","","",null,null],[17,"SOF_TXTIME_REPORT_ERRORS","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"UDP_CORK","","",null,null],[17,"UDP_ENCAP","","",null,null],[17,"UDP_NO_CHECK6_TX","","",null,null],[17,"UDP_NO_CHECK6_RX","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_LOCAL","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"FF_MAX","","",null,null],[17,"FF_CNT","","",null,null],[17,"INPUT_PROP_MAX","","",null,null],[17,"INPUT_PROP_CNT","","",null,null],[17,"EV_MAX","","",null,null],[17,"EV_CNT","","",null,null],[17,"SYN_MAX","","",null,null],[17,"SYN_CNT","","",null,null],[17,"KEY_MAX","","",null,null],[17,"KEY_CNT","","",null,null],[17,"REL_MAX","","",null,null],[17,"REL_CNT","","",null,null],[17,"ABS_MAX","","",null,null],[17,"ABS_CNT","","",null,null],[17,"SW_MAX","","",null,null],[17,"SW_CNT","","",null,null],[17,"MSC_MAX","","",null,null],[17,"MSC_CNT","","",null,null],[17,"LED_MAX","","",null,null],[17,"LED_CNT","","",null,null],[17,"REP_MAX","","",null,null],[17,"REP_CNT","","",null,null],[17,"SND_MAX","","",null,null],[17,"SND_CNT","","",null,null],[17,"UINPUT_VERSION","","",null,null],[17,"UINPUT_MAX_NAME_SIZE","","",null,null],[17,"FAN_ACCESS","","",null,null],[17,"FAN_MODIFY","","",null,null],[17,"FAN_CLOSE_WRITE","","",null,null],[17,"FAN_CLOSE_NOWRITE","","",null,null],[17,"FAN_OPEN","","",null,null],[17,"FAN_Q_OVERFLOW","","",null,null],[17,"FAN_OPEN_PERM","","",null,null],[17,"FAN_ACCESS_PERM","","",null,null],[17,"FAN_ONDIR","","",null,null],[17,"FAN_EVENT_ON_CHILD","","",null,null],[17,"FAN_CLOSE","","",null,null],[17,"FAN_CLOEXEC","","",null,null],[17,"FAN_NONBLOCK","","",null,null],[17,"FAN_CLASS_NOTIF","","",null,null],[17,"FAN_CLASS_CONTENT","","",null,null],[17,"FAN_CLASS_PRE_CONTENT","","",null,null],[17,"FAN_UNLIMITED_QUEUE","","",null,null],[17,"FAN_UNLIMITED_MARKS","","",null,null],[17,"FAN_MARK_ADD","","",null,null],[17,"FAN_MARK_REMOVE","","",null,null],[17,"FAN_MARK_DONT_FOLLOW","","",null,null],[17,"FAN_MARK_ONLYDIR","","",null,null],[17,"FAN_MARK_IGNORED_MASK","","",null,null],[17,"FAN_MARK_IGNORED_SURV_MODIFY","","",null,null],[17,"FAN_MARK_FLUSH","","",null,null],[17,"FANOTIFY_METADATA_VERSION","","",null,null],[17,"FAN_ALLOW","","",null,null],[17,"FAN_DENY","","",null,null],[17,"FAN_NOFD","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_ENOSYS","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"CAN_EFF_FLAG","","",null,null],[17,"CAN_RTR_FLAG","","",null,null],[17,"CAN_ERR_FLAG","","",null,null],[17,"CAN_SFF_MASK","","",null,null],[17,"CAN_EFF_MASK","","",null,null],[17,"CAN_ERR_MASK","","",null,null],[17,"CAN_SFF_ID_BITS","","",null,null],[17,"CAN_EFF_ID_BITS","","",null,null],[17,"CAN_MAX_DLC","","",null,null],[17,"CAN_MAX_DLEN","","",null,null],[17,"CANFD_MAX_DLC","","",null,null],[17,"CANFD_MAX_DLEN","","",null,null],[17,"CANFD_BRS","","",null,null],[17,"CANFD_ESI","","",null,null],[17,"CAN_MTU","","",null,null],[17,"CANFD_MTU","","",null,null],[17,"CAN_RAW","","",null,null],[17,"CAN_BCM","","",null,null],[17,"CAN_TP16","","",null,null],[17,"CAN_TP20","","",null,null],[17,"CAN_MCNET","","",null,null],[17,"CAN_ISOTP","","",null,null],[17,"CAN_J1939","","",null,null],[17,"CAN_NPROTO","","",null,null],[17,"SOL_CAN_BASE","","",null,null],[17,"CAN_INV_FILTER","","",null,null],[17,"CAN_RAW_FILTER_MAX","","",null,null],[17,"SOL_CAN_RAW","","",null,null],[17,"CAN_RAW_FILTER","","",null,null],[17,"CAN_RAW_ERR_FILTER","","",null,null],[17,"CAN_RAW_LOOPBACK","","",null,null],[17,"CAN_RAW_RECV_OWN_MSGS","","",null,null],[17,"CAN_RAW_FD_FRAMES","","",null,null],[17,"CAN_RAW_JOIN_FILTERS","","",null,null],[17,"POLLRDHUP","","",null,null],[17,"HUGETLB_FLAG_ENCODE_SHIFT","","",null,null],[17,"HUGETLB_FLAG_ENCODE_MASK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_64KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_8MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_32MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_256MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16GB","","",null,null],[17,"MAP_HUGE_SHIFT","","",null,null],[17,"MAP_HUGE_MASK","","",null,null],[17,"MAP_HUGE_64KB","","",null,null],[17,"MAP_HUGE_512KB","","",null,null],[17,"MAP_HUGE_1MB","","",null,null],[17,"MAP_HUGE_2MB","","",null,null],[17,"MAP_HUGE_8MB","","",null,null],[17,"MAP_HUGE_16MB","","",null,null],[17,"MAP_HUGE_32MB","","",null,null],[17,"MAP_HUGE_256MB","","",null,null],[17,"MAP_HUGE_512MB","","",null,null],[17,"MAP_HUGE_1GB","","",null,null],[17,"MAP_HUGE_2GB","","",null,null],[17,"MAP_HUGE_16GB","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"FAN_MARK_INODE","","",null,null],[17,"FAN_MARK_MOUNT","","",null,null],[17,"FAN_MARK_FILESYSTEM","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"AFS_SUPER_MAGIC","","",null,null],[17,"AUTOFS_SUPER_MAGIC","","",null,null],[17,"BINDERFS_SUPER_MAGIC","","",null,null],[17,"BPF_FS_MAGIC","","",null,null],[17,"BTRFS_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"DEBUGFS_MAGIC","","",null,null],[17,"DEVPTS_SUPER_MAGIC","","",null,null],[17,"ECRYPTFS_SUPER_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"F2FS_SUPER_MAGIC","","",null,null],[17,"FUTEXFS_SUPER_MAGIC","","",null,null],[17,"HOSTFS_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX3_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"NILFS_SUPER_MAGIC","","",null,null],[17,"OCFS2_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"OVERLAYFS_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"QNX6_SUPER_MAGIC","","",null,null],[17,"RDTGROUP_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SECURITYFS_MAGIC","","",null,null],[17,"SELINUX_MAGIC","","",null,null],[17,"SMACK_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"SYSFS_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"TRACEFS_MAGIC","","",null,null],[17,"UDF_SUPER_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"XENFS_SUPER_MAGIC","","",null,null],[17,"XFS_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"RWF_HIPRI","","",null,null],[17,"RWF_DSYNC","","",null,null],[17,"RWF_SYNC","","",null,null],[17,"RWF_NOWAIT","","",null,null],[17,"RWF_APPEND","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"UNAME26","","",null,null],[17,"FDPIC_FUNCPTRS","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NT_PRSTATUS","","",null,null],[17,"NT_PRFPREG","","",null,null],[17,"NT_FPREGSET","","",null,null],[17,"NT_PRPSINFO","","",null,null],[17,"NT_PRXREG","","",null,null],[17,"NT_TASKSTRUCT","","",null,null],[17,"NT_PLATFORM","","",null,null],[17,"NT_AUXV","","",null,null],[17,"NT_GWINDOWS","","",null,null],[17,"NT_ASRS","","",null,null],[17,"NT_PSTATUS","","",null,null],[17,"NT_PSINFO","","",null,null],[17,"NT_PRCRED","","",null,null],[17,"NT_UTSNAME","","",null,null],[17,"NT_LWPSTATUS","","",null,null],[17,"NT_LWPSINFO","","",null,null],[17,"NT_PRFPXREG","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_MNT_ID","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_EEND","","",null,null],[17,"REG_ESIZE","","",null,null],[17,"REG_ERPAREN","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"PTRACE_SYSEMU","","",null,null],[17,"PTRACE_SYSEMU_SINGLESTEP","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[17,"SYS_pidfd_send_signal","","",null,null],[17,"SYS_io_uring_setup","","",null,null],[17,"SYS_io_uring_enter","","",null,null],[17,"SYS_io_uring_register","","",null,null],[17,"SYS_open_tree","","",null,null],[17,"SYS_move_mount","","",null,null],[17,"SYS_fsopen","","",null,null],[17,"SYS_fsconfig","","",null,null],[17,"SYS_fsmount","","",null,null],[17,"SYS_fspick","","",null,null],[17,"SYS_pidfd_open","","",null,null],[17,"SYS_clone3","","",null,null],[17,"SYS_close_range","","",null,null],[17,"SYS_openat2","","",null,null],[17,"SYS_pidfd_getfd","","",null,null],[17,"SYS_faccessat2","","",null,null],[17,"SYS_process_madvise","","",null,null],[17,"SYS_epoll_pwait2","","",null,null],[17,"SYS_mount_setattr","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_CBPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_EBPF","","",null,null],[17,"SO_CNX_ADVICE","","",null,null],[17,"SCM_TIMESTAMPING_OPT_STATS","","",null,null],[17,"SO_MEMINFO","","",null,null],[17,"SO_INCOMING_NAPI_ID","","",null,null],[17,"SO_COOKIE","","",null,null],[17,"SCM_TIMESTAMPING_PKTINFO","","",null,null],[17,"SO_PEERGROUPS","","",null,null],[17,"SO_ZEROCOPY","","",null,null],[17,"SO_TXTIME","","",null,null],[17,"SCM_TXTIME","","",null,null],[17,"SO_BINDTOIFINDEX","","",null,null],[17,"SO_TIMESTAMP_NEW","","",null,null],[17,"SO_TIMESTAMPNS_NEW","","",null,null],[17,"SO_TIMESTAMPING_NEW","","",null,null],[17,"SO_RCVTIMEO_NEW","","",null,null],[17,"SO_SNDTIMEO_NEW","","",null,null],[17,"SO_DETACH_REUSEPORT_BPF","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[11,"from","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"into","","",176,[[]]],[11,"try_into","","",176,[[],["result",4]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"into","","",178,[[]]],[11,"try_into","","",178,[[],["result",4]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"into","","",179,[[]]],[11,"try_into","","",179,[[],["result",4]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"fmt","","",158,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",176,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",177,[[],["file",4]]],[11,"clone","","",178,[[],["fpos_t",4]]],[11,"clone","","",179,[[],["timezone",4]]],[11,"clone","","",17,[[],["in_addr",3]]],[11,"clone","","",18,[[],["ip_mreq",3]]],[11,"clone","","",19,[[],["ip_mreq_source",3]]],[11,"clone","","",20,[[],["sockaddr",3]]],[11,"clone","","",21,[[],["sockaddr_in",3]]],[11,"clone","","",22,[[],["sockaddr_in6",3]]],[11,"clone","","",23,[[],["addrinfo",3]]],[11,"clone","","",24,[[],["sockaddr_ll",3]]],[11,"clone","","",159,[[],["fd_set",3]]],[11,"clone","","",25,[[],["tm",3]]],[11,"clone","","",26,[[],["sched_param",3]]],[11,"clone","","",27,[[],["dl_info",3]]],[11,"clone","","",28,[[],["lconv",3]]],[11,"clone","","",29,[[],["in_pktinfo",3]]],[11,"clone","","",30,[[],["ifaddrs",3]]],[11,"clone","","",160,[[],["in6_rtmsg",3]]],[11,"clone","","",31,[[],["arpreq",3]]],[11,"clone","","",32,[[],["arpreq_old",3]]],[11,"clone","","",33,[[],["arphdr",3]]],[11,"clone","","",34,[[],["mmsghdr",3]]],[11,"clone","","",35,[[],["epoll_event",3]]],[11,"clone","","",36,[[],["sockaddr_un",3]]],[11,"clone","","",37,[[],["sockaddr_storage",3]]],[11,"clone","","",38,[[],["utsname",3]]],[11,"clone","","",39,[[],["sigevent",3]]],[11,"clone","","",180,[[],["fpos64_t",4]]],[11,"clone","","",40,[[],["rlimit64",3]]],[11,"clone","","",41,[[],["glob_t",3]]],[11,"clone","","",42,[[],["passwd",3]]],[11,"clone","","",43,[[],["spwd",3]]],[11,"clone","","",44,[[],["dqblk",3]]],[11,"clone","","",45,[[],["signalfd_siginfo",3]]],[11,"clone","","",46,[[],["itimerspec",3]]],[11,"clone","","",161,[[],["fsid_t",3]]],[11,"clone","","",47,[[],["packet_mreq",3]]],[11,"clone","","",162,[[],["cpu_set_t",3]]],[11,"clone","","",48,[[],["if_nameindex",3]]],[11,"clone","","",49,[[],["msginfo",3]]],[11,"clone","","",50,[[],["sembuf",3]]],[11,"clone","","",51,[[],["input_event",3]]],[11,"clone","","",52,[[],["input_id",3]]],[11,"clone","","",53,[[],["input_absinfo",3]]],[11,"clone","","",54,[[],["input_keymap_entry",3]]],[11,"clone","","",55,[[],["input_mask",3]]],[11,"clone","","",56,[[],["ff_replay",3]]],[11,"clone","","",57,[[],["ff_trigger",3]]],[11,"clone","","",58,[[],["ff_envelope",3]]],[11,"clone","","",59,[[],["ff_constant_effect",3]]],[11,"clone","","",60,[[],["ff_ramp_effect",3]]],[11,"clone","","",61,[[],["ff_condition_effect",3]]],[11,"clone","","",62,[[],["ff_periodic_effect",3]]],[11,"clone","","",63,[[],["ff_rumble_effect",3]]],[11,"clone","","",64,[[],["ff_effect",3]]],[11,"clone","","",65,[[],["uinput_ff_upload",3]]],[11,"clone","","",66,[[],["uinput_ff_erase",3]]],[11,"clone","","",67,[[],["uinput_abs_setup",3]]],[11,"clone","","",68,[[],["dl_phdr_info",3]]],[11,"clone","","",69,[[],["elf32_ehdr",3]]],[11,"clone","","",70,[[],["elf64_ehdr",3]]],[11,"clone","","",71,[[],["elf32_sym",3]]],[11,"clone","","",72,[[],["elf64_sym",3]]],[11,"clone","","",73,[[],["elf32_phdr",3]]],[11,"clone","","",74,[[],["elf64_phdr",3]]],[11,"clone","","",75,[[],["elf32_shdr",3]]],[11,"clone","","",76,[[],["elf64_shdr",3]]],[11,"clone","","",77,[[],["ucred",3]]],[11,"clone","","",78,[[],["mntent",3]]],[11,"clone","","",163,[[],["posix_spawn_file_actions_t",3]]],[11,"clone","","",164,[[],["posix_spawnattr_t",3]]],[11,"clone","","",79,[[],["genlmsghdr",3]]],[11,"clone","","",80,[[],["in6_pktinfo",3]]],[11,"clone","","",81,[[],["arpd_request",3]]],[11,"clone","","",82,[[],["inotify_event",3]]],[11,"clone","","",83,[[],["fanotify_response",3]]],[11,"clone","","",84,[[],["sockaddr_vm",3]]],[11,"clone","","",85,[[],["regmatch_t",3]]],[11,"clone","","",86,[[],["sock_extended_err",3]]],[11,"clone","","",87,[[],["__c_anonymous_sockaddr_can_tp",3]]],[11,"clone","","",88,[[],["__c_anonymous_sockaddr_can_j1939",3]]],[11,"clone","","",89,[[],["can_filter",3]]],[11,"clone","","",90,[[],["sock_filter",3]]],[11,"clone","","",91,[[],["sock_fprog",3]]],[11,"clone","","",92,[[],["seccomp_data",3]]],[11,"clone","","",93,[[],["nlmsghdr",3]]],[11,"clone","","",94,[[],["nlmsgerr",3]]],[11,"clone","","",95,[[],["nlattr",3]]],[11,"clone","","",96,[[],["sockaddr_nl",3]]],[11,"clone","","",97,[[],["dirent",3]]],[11,"clone","","",98,[[],["dirent64",3]]],[11,"clone","","",99,[[],["sockaddr_alg",3]]],[11,"clone","","",100,[[],["uinput_setup",3]]],[11,"clone","","",101,[[],["uinput_user_dev",3]]],[11,"clone","","",102,[[],["af_alg_iv",3]]],[11,"clone","","",103,[[],["mq_attr",3]]],[11,"clone","","",104,[[],["sock_txtime",3]]],[11,"clone","","",157,[[],["__c_anonymous_sockaddr_can_can_addr",19]]],[11,"clone","","",105,[[],["sockaddr_can",3]]],[11,"clone","","",106,[[],["statx",3]]],[11,"clone","","",107,[[],["statx_timestamp",3]]],[11,"clone","","",108,[[],["aiocb",3]]],[11,"clone","","",109,[[],["__exit_status",3]]],[11,"clone","","",110,[[],["__timeval",3]]],[11,"clone","","",111,[[],["glob64_t",3]]],[11,"clone","","",112,[[],["msghdr",3]]],[11,"clone","","",113,[[],["cmsghdr",3]]],[11,"clone","","",114,[[],["termios",3]]],[11,"clone","","",115,[[],["mallinfo",3]]],[11,"clone","","",116,[[],["mallinfo2",3]]],[11,"clone","","",117,[[],["nl_pktinfo",3]]],[11,"clone","","",118,[[],["nl_mmap_req",3]]],[11,"clone","","",119,[[],["nl_mmap_hdr",3]]],[11,"clone","","",120,[[],["rtentry",3]]],[11,"clone","","",121,[[],["timex",3]]],[11,"clone","","",122,[[],["ntptimeval",3]]],[11,"clone","","",165,[[],["regex_t",3]]],[11,"clone","","",123,[[],["elf64_chdr",3]]],[11,"clone","","",124,[[],["elf32_chdr",3]]],[11,"clone","","",125,[[],["seminfo",3]]],[11,"clone","","",126,[[],["utmpx",3]]],[11,"clone","","",166,[[],["sigset_t",3]]],[11,"clone","","",127,[[],["sysinfo",3]]],[11,"clone","","",128,[[],["msqid_ds",3]]],[11,"clone","","",129,[[],["semid_ds",3]]],[11,"clone","","",130,[[],["sigaction",3]]],[11,"clone","","",131,[[],["statfs",3]]],[11,"clone","","",132,[[],["flock",3]]],[11,"clone","","",133,[[],["flock64",3]]],[11,"clone","","",134,[[],["siginfo_t",3]]],[11,"clone","","",135,[[],["stack_t",3]]],[11,"clone","","",136,[[],["stat",3]]],[11,"clone","","",137,[[],["stat64",3]]],[11,"clone","","",138,[[],["statfs64",3]]],[11,"clone","","",139,[[],["statvfs64",3]]],[11,"clone","","",167,[[],["pthread_attr_t",3]]],[11,"clone","","",140,[[],["_libc_fpxreg",3]]],[11,"clone","","",141,[[],["_libc_xmmreg",3]]],[11,"clone","","",142,[[],["_libc_fpstate",3]]],[11,"clone","","",143,[[],["user_regs_struct",3]]],[11,"clone","","",144,[[],["user",3]]],[11,"clone","","",145,[[],["mcontext_t",3]]],[11,"clone","","",146,[[],["ipc_perm",3]]],[11,"clone","","",147,[[],["shmid_ds",3]]],[11,"clone","","",148,[[],["termios2",3]]],[11,"clone","","",149,[[],["ip_mreqn",3]]],[11,"clone","","",150,[[],["user_fpregs_struct",3]]],[11,"clone","","",151,[[],["ucontext_t",3]]],[11,"clone","","",152,[[],["statvfs",3]]],[11,"clone","","",168,[[],["max_align_t",3]]],[11,"clone","","",169,[[],["sem_t",3]]],[11,"clone","","",170,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",171,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",172,[[],["pthread_condattr_t",3]]],[11,"clone","","",153,[[],["fanotify_event_metadata",3]]],[11,"clone","","",173,[[],["pthread_cond_t",3]]],[11,"clone","","",174,[[],["pthread_mutex_t",3]]],[11,"clone","","",175,[[],["pthread_rwlock_t",3]]],[11,"clone","","",154,[[],["can_frame",3]]],[11,"clone","","",155,[[],["canfd_frame",3]]],[11,"clone","","",156,[[],["in6_addr",3]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"uinput_ff_upload"],[3,"uinput_ff_erase"],[3,"uinput_abs_setup"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"can_filter"],[3,"sock_filter"],[3,"sock_fprog"],[3,"seccomp_data"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nlattr"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"uinput_setup"],[3,"uinput_user_dev"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"sock_txtime"],[3,"sockaddr_can"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"mallinfo2"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"Elf64_Chdr"],[3,"Elf32_Chdr"],[3,"seminfo"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"semid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"can_frame"],[3,"canfd_frame"],[3,"in6_addr"],[19,"__c_anonymous_sockaddr_can_can_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"regex_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]},\
"memchr":{"doc":"This library provides heavily optimized routines for…","i":[[3,"Memchr","memchr","An iterator for `memchr`.",null,null],[3,"Memchr2","","An iterator for `memchr2`.",null,null],[3,"Memchr3","","An iterator for `memchr3`.",null,null],[5,"memchr","","Search for the first occurrence of a byte in a slice.",null,[[],["option",4]]],[5,"memchr2","","Like `memchr`, but searches for either of two bytes…",null,[[],["option",4]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[],["memchr2",3]]],[5,"memchr3","","Like `memchr`, but searches for any of three bytes instead…",null,[[],["option",4]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[],["memchr3",3]]],[5,"memchr_iter","","An iterator over all occurrences of the needle in a…",null,[[],["memchr",3]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[],["option",4]]],[5,"memrchr2","","Like `memrchr`, but searches for either of two bytes…",null,[[],["option",4]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a…",null,[[],[["memchr2",3],["rev",3]]]],[5,"memrchr3","","Like `memrchr`, but searches for any of three bytes…",null,[[],["option",4]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a…",null,[[],[["memchr3",3],["rev",3]]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a…",null,[[],[["memchr",3],["rev",3]]]],[11,"new","","Creates a new iterator that yields all positions of needle…",0,[[],["memchr",3]]],[11,"new","","Creates a new iterator that yields all positions of needle…",1,[[],["memchr2",3]]],[11,"new","","Create a new `Memchr3` that\'s initialized to zero with a…",2,[[],["memchr3",3]]],[0,"memmem","","This module provides forward and reverse substring search…",null,null],[3,"FindIter","memchr::memmem","An iterator over non-overlapping substring matches.",null,null],[3,"FindRevIter","","An iterator over non-overlapping substring matches in…",null,null],[3,"Finder","","A single substring searcher fixed to a particular needle.",null,null],[3,"FinderRev","","A single substring reverse searcher fixed to a particular…",null,null],[3,"FinderBuilder","","A builder for constructing non-default forward or reverse…",null,null],[4,"Prefilter","","Prefilter controls whether heuristics are used to…",null,null],[13,"None","","Never used a prefilter in substring search.",3,null],[13,"Auto","","Automatically detect whether a heuristic prefilter should…",3,null],[5,"find_iter","","Returns an iterator over all occurrences of a substring in…",null,[[],["finditer",3]]],[5,"rfind_iter","","Returns a reverse iterator over all occurrences of a…",null,[[],["findreviter",3]]],[5,"find","","Returns the index of the first occurrence of the given…",null,[[],["option",4]]],[5,"rfind","","Returns the index of the last occurrence of the given…",null,[[],["option",4]]],[11,"new","","Create a new finder for the given needle.",4,[[],["finder",3]]],[11,"find","","Returns the index of the first occurrence of this needle…",4,[[],["option",4]]],[11,"find_iter","","Returns an iterator over all occurrences of a substring in…",4,[[],["finditer",3]]],[11,"into_owned","","Convert this finder into its owned variant, such that it…",4,[[],["finder",3]]],[11,"as_ref","","Convert this finder into its borrowed variant.",4,[[],["finder",3]]],[11,"needle","","Returns the needle that this finder searches for.",4,[[]]],[11,"new","","Create a new reverse finder for the given needle.",5,[[],["finderrev",3]]],[11,"rfind","","Returns the index of the last occurrence of this needle in…",5,[[["asref",8]],["option",4]]],[11,"rfind_iter","","Returns a reverse iterator over all occurrences of a…",5,[[],["findreviter",3]]],[11,"into_owned","","Convert this finder into its owned variant, such that it…",5,[[],["finderrev",3]]],[11,"as_ref","","Convert this finder into its borrowed variant.",5,[[],["finderrev",3]]],[11,"needle","","Returns the needle that this finder searches for.",5,[[]]],[11,"new","","Create a new finder builder with default settings.",6,[[],["finderbuilder",3]]],[11,"build_forward","","Build a forward finder using the given needle from the…",6,[[],["finder",3]]],[11,"build_reverse","","Build a reverse finder using the given needle from the…",6,[[],["finderrev",3]]],[11,"prefilter","","Configure the prefilter setting for the finder.",6,[[["prefilter",4]],["finderbuilder",3]]],[11,"from","memchr","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","memchr::memmem","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"next_back","memchr","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"next","memchr::memmem","",7,[[],["option",4]]],[11,"next","","",8,[[],["option",4]]],[11,"clone","","",3,[[],["prefilter",4]]],[11,"clone","","",4,[[],["finder",3]]],[11,"clone","","",5,[[],["finderrev",3]]],[11,"clone","","",6,[[],["finderbuilder",3]]],[11,"default","","",3,[[],["prefilter",4]]],[11,"default","","",6,[[],["finderbuilder",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"],[4,"Prefilter"],[3,"Finder"],[3,"FinderRev"],[3,"FinderBuilder"],[3,"FindIter"],[3,"FindRevIter"]]},\
"miniz_oxide":{"doc":"A pure rust replacement for the miniz DEFLATE/zlib…","i":[[3,"StreamResult","miniz_oxide","A structure containg the result of a call to the inflate…",null,null],[12,"bytes_consumed","","The number of bytes consumed from the input slice.",0,null],[12,"bytes_written","","The number of bytes written to the output slice.",0,null],[12,"status","","The return status of the call.",0,null],[4,"MZFlush","","A list of flush types.",null,null],[13,"None","","Don\'t force any flushing. Used when more input data is…",1,null],[13,"Partial","","Zlib partial flush. Currently treated as `Sync`.",1,null],[13,"Sync","","Finish compressing the currently buffered data, and output…",1,null],[13,"Full","","Same as `Sync`, but resets the compression dictionary so…",1,null],[13,"Finish","","Attempt to flush the remaining data and end the stream.",1,null],[13,"Block","","Not implemented.",1,null],[4,"MZStatus","","A list of miniz successful status codes.",null,null],[13,"Ok","","",2,null],[13,"StreamEnd","","",2,null],[13,"NeedDict","","",2,null],[4,"MZError","","A list of miniz failed status codes.",null,null],[13,"ErrNo","","",3,null],[13,"Stream","","",3,null],[13,"Data","","",3,null],[13,"Mem","","",3,null],[13,"Buf","","",3,null],[13,"Version","","",3,null],[13,"Param","","",3,null],[4,"DataFormat","","How compressed data is wrapped.",null,null],[13,"Zlib","","Wrapped using the zlib format.",4,null],[13,"Raw","","Raw DEFLATE.",4,null],[0,"deflate","","This module contains functionality for compression.",null,null],[4,"CompressionLevel","miniz_oxide::deflate","How much processing the compressor should do to compress…",null,null],[13,"NoCompression","","Don\'t do any compression, only output uncompressed blocks.",5,null],[13,"BestSpeed","","Fast compression. Uses a special compression routine that…",5,null],[13,"BestCompression","","Slow/high compression. Do a lot of checks to try to find…",5,null],[13,"UberCompression","","Even more checks, can be very slow.",5,null],[13,"DefaultLevel","","Default compromise between speed and compression.",5,null],[13,"DefaultCompression","","Use the default compression level.",5,null],[5,"compress_to_vec","","Compress the input data to a vector, using the specified…",null,[[],["vec",3]]],[5,"compress_to_vec_zlib","","Compress the input data to a vector, using the specified…",null,[[],["vec",3]]],[0,"core","","Streaming compression functionality.",null,null],[3,"CompressorOxide","miniz_oxide::deflate::core","Main compression struct.",null,null],[3,"CallbackFunc","","Callback function and user used in `compress_to_output`.",null,null],[12,"put_buf_func","","",6,null],[4,"CompressionStrategy","","Strategy setting for compression.",null,null],[13,"Default","","Don\'t use any of the special strategies.",7,null],[13,"Filtered","","Only use matches that are at least 5 bytes long.",7,null],[13,"HuffmanOnly","","Don\'t look for matches, only huffman encode the literals.",7,null],[13,"RLE","","Only look for matches with a distance of 1, i.e do…",7,null],[13,"Fixed","","Only use static/fixed blocks. (Blocks using the default…",7,null],[4,"TDEFLFlush","","A list of deflate flush types.",null,null],[13,"None","","Compress as much as there is space for, and then return…",8,null],[13,"Sync","","Try to flush the current data and output an empty raw block.",8,null],[13,"Full","","Same as sync, but reset the dictionary so that the…",8,null],[13,"Finish","","Try to flush everything and end the stream.",8,null],[4,"TDEFLStatus","","Return status codes.",null,null],[13,"BadParam","","",9,null],[13,"PutBufFailed","","",9,null],[13,"Okay","","",9,null],[13,"Done","","",9,null],[5,"compress","","Main compression function. Tries to compress as much as…",null,[[["compressoroxide",3],["tdeflflush",4]]]],[5,"compress_to_output","","Main compression function. Callbacks output.",null,[[["compressoroxide",3],["tdeflflush",4]]]],[5,"create_comp_flags_from_zip_params","","Create a set of compression flags using parameters used by…",null,[[]]],[0,"deflate_flags","","",null,null],[17,"TDEFL_WRITE_ZLIB_HEADER","miniz_oxide::deflate::core::deflate_flags","Whether to use a zlib wrapper.",null,null],[17,"TDEFL_COMPUTE_ADLER32","","Should we compute the adler32 checksum.",null,null],[17,"TDEFL_GREEDY_PARSING_FLAG","","Should we use greedy parsing (as opposed to lazy parsing…",null,null],[17,"TDEFL_NONDETERMINISTIC_PARSING_FLAG","","Used in miniz to skip zero-initializing hash and dict. We…",null,null],[17,"TDEFL_RLE_MATCHES","","Only look for matches with a distance of 0.",null,null],[17,"TDEFL_FILTER_MATCHES","","Only use matches that are at least 6 bytes long.",null,null],[17,"TDEFL_FORCE_ALL_STATIC_BLOCKS","","Force the compressor to only output static blocks. (Blocks…",null,null],[17,"TDEFL_FORCE_ALL_RAW_BLOCKS","","Force the compressor to only output raw/uncompressed blocks.",null,null],[11,"new","miniz_oxide::deflate::core","",8,[[],[["mzerror",4],["result",4]]]],[11,"new","","Create a new `CompressorOxide` with the given flags.",10,[[]]],[11,"adler32","","Get the adler32 checksum of the currently encoded data.",10,[[]]],[11,"prev_return_status","","Get the return status of the previous `compress` call with…",10,[[],["tdeflstatus",4]]],[11,"flags","","Get the raw compressor flags.",10,[[]]],[11,"data_format","","Returns whether the compressor is wrapping the data in a…",10,[[],["dataformat",4]]],[11,"reset","","Reset the state of the compressor, keeping the same…",10,[[]]],[11,"set_compression_level","","Set the compression level of the compressor.",10,[[["compressionlevel",4]]]],[11,"set_compression_level_raw","","Set the compression level of the compressor using an…",10,[[]]],[11,"set_format_and_level","","Update the compression settings of the compressor.",10,[[["dataformat",4]]]],[0,"stream","miniz_oxide::deflate","Extra streaming compression functionality.",null,null],[5,"deflate","miniz_oxide::deflate::stream","Try to compress from input to output with the given…",null,[[["mzflush",4],["compressoroxide",3]],["streamresult",3]]],[0,"inflate","miniz_oxide","This module contains functionality for decompression.",null,null],[4,"TINFLStatus","miniz_oxide::inflate","Return status codes.",null,null],[13,"FailedCannotMakeProgress","","More input data was expected, but the caller indicated…",11,null],[13,"BadParam","","One or more of the input parameters were invalid.",11,null],[13,"Adler32Mismatch","","The decompression went fine, but the adler32 checksum did…",11,null],[13,"Failed","","Failed to decompress due to invalid data.",11,null],[13,"Done","","Finished decomression without issues.",11,null],[13,"NeedsMoreInput","","The decompressor needs more input data to continue…",11,null],[13,"HasMoreOutput","","There is still pending data that didn\'t fit in the output…",11,null],[5,"decompress_to_vec","","Decompress the deflate-encoded data in `input` to a vector.",null,[[],[["result",4],["tinflstatus",4],["vec",3]]]],[5,"decompress_to_vec_zlib","","Decompress the deflate-encoded data (with a zlib wrapper)…",null,[[],[["result",4],["tinflstatus",4],["vec",3]]]],[5,"decompress_to_vec_with_limit","","Decompress the deflate-encoded data in `input` to a…",null,[[],[["result",4],["tinflstatus",4],["vec",3]]]],[5,"decompress_to_vec_zlib_with_limit","","Decompress the deflate-encoded data (with a zlib wrapper)…",null,[[],[["result",4],["tinflstatus",4],["vec",3]]]],[0,"core","","Streaming decompression functionality.",null,null],[3,"DecompressorOxide","miniz_oxide::inflate::core","Main decompression struct.",null,null],[5,"decompress","","Main decompression function. Keeps decompressing data from…",null,[[["decompressoroxide",3]]]],[0,"inflate_flags","","",null,null],[17,"TINFL_FLAG_PARSE_ZLIB_HEADER","miniz_oxide::inflate::core::inflate_flags","Should we try to parse a zlib header?",null,null],[17,"TINFL_FLAG_HAS_MORE_INPUT","","There is more input that hasn\'t been given to the…",null,null],[17,"TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","","The output buffer should not wrap around.",null,null],[17,"TINFL_FLAG_COMPUTE_ADLER32","","Should we calculate the adler32 checksum of the output data?",null,null],[17,"TINFL_LZ_DICT_SIZE","miniz_oxide::inflate::core","",null,null],[11,"new","","Create a new tinfl_decompressor with all fields set to 0.",12,[[],["decompressoroxide",3]]],[11,"init","","Set the current state to `Start`.",12,[[]]],[11,"adler32","","Returns the adler32 checksum of the currently decompressed…",12,[[],["option",4]]],[0,"stream","miniz_oxide::inflate","Extra streaming decompression functionality.",null,null],[3,"MinReset","miniz_oxide::inflate::stream","Resets state, without performing expensive ops (e.g.…",null,null],[3,"ZeroReset","","Resets state and zero memory, continuing to use the same…",null,null],[3,"FullReset","","Full reset of the state, including zeroing memory.",null,null],[12,"0","","",13,null],[3,"InflateState","","A struct that compbines a decompressor with extra data for…",null,null],[5,"inflate","","Try to decompress from `input` to `output` with the given…",null,[[["mzflush",4],["inflatestate",3]],["streamresult",3]]],[8,"ResetPolicy","","Tag that determines reset policy of InflateState",null,null],[10,"reset","","Performs reset",14,[[["inflatestate",3]]]],[11,"new","","Create a new state.",15,[[["dataformat",4]],["inflatestate",3]]],[11,"new_boxed","","Create a new state on the heap.",15,[[["dataformat",4]],[["inflatestate",3],["box",3]]]],[11,"decompressor","","Access the innner decompressor.",15,[[],["decompressoroxide",3]]],[11,"last_status","","Return the status of the last call to `inflate` with this…",15,[[],["tinflstatus",4]]],[11,"new_boxed_with_window_bits","","Create a new state using miniz/zlib style window bits…",15,[[],[["inflatestate",3],["box",3]]]],[11,"reset","","Reset the decompressor without re-allocating memory, using…",15,[[["dataformat",4]]]],[11,"reset_as","","Resets the state according to specified policy.",15,[[["resetpolicy",8]]]],[11,"from_i32","miniz_oxide::inflate","",11,[[],[["option",4],["tinflstatus",4]]]],[6,"MZResult","miniz_oxide","`Result` alias for all miniz status codes both successful…",null,null],[11,"new","","Create an MZFlush value from an integer value.",1,[[],[["mzerror",4],["result",4]]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","miniz_oxide::deflate","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","miniz_oxide::deflate::core","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"from","miniz_oxide::inflate","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","miniz_oxide::inflate::core","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","miniz_oxide::inflate::stream","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"reset","","",16,[[["inflatestate",3]]]],[11,"reset","","",17,[[["inflatestate",3]]]],[11,"reset","","",13,[[["inflatestate",3]]]],[11,"from","miniz_oxide::deflate::core","",8,[[["mzflush",4]]]],[11,"from","miniz_oxide","",18,[[["streamresult",3]]]],[11,"from","","",18,[[["streamresult",3]]]],[11,"fmt","miniz_oxide::deflate::core","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide::deflate","",5,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide::inflate","",11,[[["formatter",3]],["result",6]]],[11,"fmt","miniz_oxide","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","miniz_oxide::deflate::core","",7,[[["compressionstrategy",4]]]],[11,"eq","","",8,[[["tdeflflush",4]]]],[11,"eq","","",9,[[["tdeflstatus",4]]]],[11,"eq","miniz_oxide::deflate","",5,[[["compressionlevel",4]]]],[11,"eq","miniz_oxide::inflate","",11,[[["tinflstatus",4]]]],[11,"eq","miniz_oxide","",1,[[["mzflush",4]]]],[11,"eq","","",2,[[["mzstatus",4]]]],[11,"eq","","",3,[[["mzerror",4]]]],[11,"eq","","",4,[[["dataformat",4]]]],[11,"eq","","",0,[[["streamresult",3]]]],[11,"ne","","",0,[[["streamresult",3]]]],[11,"hash","miniz_oxide::deflate::core","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","miniz_oxide::deflate","",5,[[]]],[11,"hash","miniz_oxide::inflate","",11,[[]]],[11,"hash","miniz_oxide","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",0,[[]]],[11,"clone","miniz_oxide::deflate::core","",7,[[],["compressionstrategy",4]]],[11,"clone","","",8,[[],["tdeflflush",4]]],[11,"clone","","",9,[[],["tdeflstatus",4]]],[11,"clone","miniz_oxide::deflate","",5,[[],["compressionlevel",4]]],[11,"clone","miniz_oxide::inflate","",11,[[],["tinflstatus",4]]],[11,"clone","miniz_oxide","",1,[[],["mzflush",4]]],[11,"clone","","",2,[[],["mzstatus",4]]],[11,"clone","","",3,[[],["mzerror",4]]],[11,"clone","","",4,[[],["dataformat",4]]],[11,"clone","","",0,[[],["streamresult",3]]],[11,"default","miniz_oxide::deflate::core","Initialize the compressor with a level of 4, zlib wrapper…",10,[[]]],[11,"default","miniz_oxide::inflate::core","Create a new tinfl_decompressor with all fields set to 0.",12,[[]]],[11,"default","miniz_oxide::inflate::stream","",15,[[]]]],"p":[[3,"StreamResult"],[4,"MZFlush"],[4,"MZStatus"],[4,"MZError"],[4,"DataFormat"],[4,"CompressionLevel"],[3,"CallbackFunc"],[4,"CompressionStrategy"],[4,"TDEFLFlush"],[4,"TDEFLStatus"],[3,"CompressorOxide"],[4,"TINFLStatus"],[3,"DecompressorOxide"],[3,"FullReset"],[8,"ResetPolicy"],[3,"InflateState"],[3,"MinReset"],[3,"ZeroReset"],[6,"MZResult"]]},\
"num":{"doc":"A collection of numeric types and traits for Rust.","i":[[3,"BigInt","num","A big signed integer type.",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[3,"Complex","","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",null,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[]]],[11,"div_ceil","","Ceiled integer division.",1,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",1,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",1,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",1,[[]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[]]],[10,"is_even","","Returns `true` if the number is even.",1,[[]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[]]],[5,"range","","Returns an iterator over the given range [start, stop)…",null,[[],["range",3]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",null,[[],["rangestep",3]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",null,[[],["rangestepinclusive",3]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",2,[[]]],[10,"infinity","","Returns the infinite value.",2,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",2,[[]]],[10,"neg_zero","","Returns `-0.0`.",2,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",2,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",2,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",2,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",2,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",2,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",2,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",2,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",2,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",2,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",2,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",2,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",2,[[]]],[10,"trunc","","Return the integer part of a number.",2,[[]]],[10,"fract","","Returns the fractional part of a number.",2,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",2,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",2,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",2,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",2,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",2,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",2,[[]]],[10,"powi","","Raise a number to an integer power.",2,[[]]],[10,"powf","","Raise a number to a floating point power.",2,[[]]],[10,"sqrt","","Take the square root of a number.",2,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",2,[[]]],[10,"exp2","","Returns `2^(self)`.",2,[[]]],[10,"ln","","Returns the natural logarithm of the number.",2,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",2,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",2,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",2,[[]]],[11,"to_degrees","","Converts radians to degrees.",2,[[]]],[11,"to_radians","","Converts degrees to radians.",2,[[]]],[10,"max","","Returns the maximum of the two numbers.",2,[[]]],[10,"min","","Returns the minimum of the two numbers.",2,[[]]],[10,"abs_sub","","The positive difference of two numbers.",2,[[]]],[10,"cbrt","","Take the cubic root of a number.",2,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",2,[[]]],[10,"sin","","Computes the sine of a number (in radians).",2,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",2,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",2,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",2,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",2,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",2,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",2,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",2,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",2,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",2,[[]]],[10,"sinh","","Hyperbolic sine function.",2,[[]]],[10,"cosh","","Hyperbolic cosine function.",2,[[]]],[10,"tanh","","Hyperbolic tangent function.",2,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",2,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",2,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",2,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",2,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",3,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[5,"cast","num","Cast from one machine scalar to another.",null,[[],["option",4]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[0,"pow","","",null,null],[8,"Pow","num::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",7,null],[10,"pow","","Returns `self` to the power `rhs`.",7,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"pow","num","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,[[]]],[10,"max_value","","returns the largest finite number this type can represent",8,[[]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",9,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",10,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",11,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",12,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[8,"Num","","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",13,null],[10,"from_str_radix","","Convert from a string and radix (typically `2..=36`).",13,[[],["result",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[],["option",4]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",14,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",14,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",14,[[]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",15,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",15,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",15,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",15,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",15,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",15,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",15,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",15,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",15,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",15,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",16,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",16,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",17,[[]]],[10,"abs_sub","","The positive difference of two numbers.",17,[[]]],[10,"signum","","Returns the sign of the number.",17,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",17,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",17,[[]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",3,[[],["option",4]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",18,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",18,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",18,[[]]],[0,"bigint","","",null,null],[3,"ParseBigIntError","num::bigint","",null,null],[3,"TryFromBigIntError","","The error type returned when a checked conversion…",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",19,[[],[["option",4],["biguint",3]]]],[3,"U32Digits","","An iterator of `u32` digits representation of a `BigUint`…",null,null],[3,"U64Digits","","An iterator of `u64` digits representation of a `BigUint`…",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`\'s composing element.",null,null],[13,"Minus","","",20,null],[13,"NoSign","","",20,null],[13,"Plus","","",20,null],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`. This…",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",21,[[],[["option",4],["bigint",3]]]],[0,"complex","num","",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[3,"ParseComplexError","","",null,null],[0,"integer","num","",null,null],[8,"Integer","num::integer","",null,null],[10,"div_floor","","Floored integer division.",1,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[]]],[11,"div_ceil","","Ceiled integer division.",1,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",1,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",1,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",1,[[]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[]]],[10,"is_even","","Returns `true` if the number is even.",1,[[]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",1,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",1,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[]]],[3,"ExtendedGcd","","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",22,null],[12,"x","","",22,null],[12,"y","","",22,null],[5,"div_rem","","Simultaneous integer division and modulus",null,[[]]],[5,"div_floor","","Floored integer division",null,[[]]],[5,"mod_floor","","Floored integer modulus",null,[[]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[]]],[5,"div_ceil","","Ceiled integer division",null,[[]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[]]],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"binomial","","Calculate the binomial coefficient.",null,[[]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[]]],[8,"Roots","","Provides methods to compute an integer\'s square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",23,[[]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",23,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",23,[[]]],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[]]],[8,"Average","","Provides methods to compute the average of two integers,…",null,null],[10,"average_ceil","","Returns the ceiling value of the average of `self` and…",24,[[]]],[10,"average_floor","","Returns the floor value of the average of `self` and…",24,[[]]],[5,"average_ceil","","Returns the ceiling value of the average of `x` and `y` --…",null,[[]]],[5,"average_floor","","Returns the floor value of the average of `x` and `y` --…",null,[[]]],[0,"iter","num","",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[5,"range","","Returns an iterator over the given range [start, stop)…",null,[[],["range",3]]],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",null,null],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",null,[[],["rangestep",3]]],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",null,null],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",null,[[],["rangestepinclusive",3]]],[3,"RangeFrom","","An iterator over the infinite range starting at `start`",null,null],[5,"range_from","","Return an iterator over the infinite range starting at…",null,[[],["rangefrom",3]]],[3,"RangeStepFrom","","An iterator over the infinite range starting at `start` by…",null,null],[5,"range_step_from","","Return an iterator over the infinite range starting at…",null,[[],["rangestepfrom",3]]],[0,"traits","num","",null,null],[0,"bounds","num::traits","",null,null],[8,"Bounded","num::traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,[[]]],[10,"max_value","","returns the largest finite number this type can represent",8,[[]]],[0,"cast","num::traits","",null,null],[8,"ToPrimitive","num::traits::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",3,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[0,"float","num::traits","",null,null],[8,"FloatCore","num::traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",25,[[]]],[10,"neg_infinity","","Returns negative infinity.",25,[[]]],[10,"nan","","Returns NaN.",25,[[]]],[10,"neg_zero","","Returns `-0.0`.",25,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",25,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",25,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",25,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",25,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",25,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",25,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",25,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",25,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",25,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",25,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",25,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",25,[[]]],[11,"trunc","","Return the integer part of a number.",25,[[]]],[11,"fract","","Returns the fractional part of a number.",25,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",25,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",25,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",25,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",25,[[]]],[11,"min","","Returns the minimum of the two numbers.",25,[[]]],[11,"max","","Returns the maximum of the two numbers.",25,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",25,[[]]],[11,"powi","","Raise a number to an integer power.",25,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",25,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",25,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",25,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",2,[[]]],[10,"infinity","","Returns the infinite value.",2,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",2,[[]]],[10,"neg_zero","","Returns `-0.0`.",2,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",2,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",2,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",2,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",2,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",2,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",2,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",2,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",2,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",2,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",2,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",2,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",2,[[]]],[10,"trunc","","Return the integer part of a number.",2,[[]]],[10,"fract","","Returns the fractional part of a number.",2,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",2,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",2,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",2,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",2,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",2,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",2,[[]]],[10,"powi","","Raise a number to an integer power.",2,[[]]],[10,"powf","","Raise a number to a floating point power.",2,[[]]],[10,"sqrt","","Take the square root of a number.",2,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",2,[[]]],[10,"exp2","","Returns `2^(self)`.",2,[[]]],[10,"ln","","Returns the natural logarithm of the number.",2,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",2,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",2,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",2,[[]]],[11,"to_degrees","","Converts radians to degrees.",2,[[]]],[11,"to_radians","","Converts degrees to radians.",2,[[]]],[10,"max","","Returns the maximum of the two numbers.",2,[[]]],[10,"min","","Returns the minimum of the two numbers.",2,[[]]],[10,"abs_sub","","The positive difference of two numbers.",2,[[]]],[10,"cbrt","","Take the cubic root of a number.",2,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",2,[[]]],[10,"sin","","Computes the sine of a number (in radians).",2,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",2,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",2,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",2,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",2,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",2,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",2,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",2,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",2,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",2,[[]]],[10,"sinh","","Hyperbolic sine function.",2,[[]]],[10,"cosh","","Hyperbolic cosine function.",2,[[]]],[10,"tanh","","Hyperbolic tangent function.",2,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",2,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",2,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",2,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",2,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",26,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",26,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",26,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",26,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",26,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",26,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",26,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",26,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",26,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",26,[[]]],[10,"LN_10","","Return `ln(10.0)`.",26,[[]]],[10,"LN_2","","Return `ln(2.0)`.",26,[[]]],[10,"LOG10_E","","Return `log10(e)`.",26,[[]]],[10,"LOG2_E","","Return `log2(e)`.",26,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",26,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",26,[[]]],[11,"TAU","","Return the full circle constant `τ`.",26,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",26,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",26,[[]]],[0,"identities","num::traits","",null,null],[8,"Zero","num::traits::identities","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",18,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",18,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",18,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",14,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",14,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",14,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[0,"int","num::traits","",null,null],[8,"PrimInt","num::traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",15,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",15,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",15,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",15,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",15,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",15,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",15,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",15,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",15,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",15,[[]]],[0,"ops","num::traits","",null,null],[0,"checked","num::traits::ops","",null,null],[8,"CheckedAdd","num::traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",9,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",12,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",11,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",10,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",27,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",28,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",29,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",30,[[],["option",4]]],[0,"inv","num::traits::ops","",null,null],[8,"Inv","num::traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",31,null],[10,"inv","","Returns the multiplicative inverse of `self`.",31,[[]]],[0,"mul_add","num::traits::ops","",null,null],[8,"MulAdd","num::traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",32,null],[10,"mul_add","","Performs the fused multiply-add operation.",32,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",33,[[]]],[0,"overflowing","num::traits::ops","",null,null],[8,"OverflowingAdd","num::traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean indicating…",34,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean…",35,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean…",36,[[]]],[0,"saturating","num::traits::ops","",null,null],[8,"Saturating","num::traits::ops::saturating","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",16,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",16,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",37,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",38,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",39,[[]]],[0,"wrapping","num::traits::ops","",null,null],[8,"WrappingAdd","num::traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",40,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",41,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",42,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",43,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",44,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",45,[[]]],[0,"pow","num::traits","",null,null],[8,"Pow","num::traits::pow","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",7,null],[10,"pow","","Returns `self` to the power `rhs`.",7,[[]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[0,"real","num::traits","",null,null],[8,"Real","num::traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",46,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",46,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",46,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",46,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",46,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",46,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",46,[[]]],[10,"trunc","","Return the integer part of a number.",46,[[]]],[10,"fract","","Returns the fractional part of a number.",46,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",46,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",46,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",46,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",46,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",46,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",46,[[]]],[10,"powi","","Raise a number to an integer power.",46,[[]]],[10,"powf","","Raise a number to a real number power.",46,[[]]],[10,"sqrt","","Take the square root of a number.",46,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",46,[[]]],[10,"exp2","","Returns `2^(self)`.",46,[[]]],[10,"ln","","Returns the natural logarithm of the number.",46,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",46,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",46,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",46,[[]]],[10,"to_degrees","","Converts radians to degrees.",46,[[]]],[10,"to_radians","","Converts degrees to radians.",46,[[]]],[10,"max","","Returns the maximum of the two numbers.",46,[[]]],[10,"min","","Returns the minimum of the two numbers.",46,[[]]],[10,"abs_sub","","The positive difference of two numbers.",46,[[]]],[10,"cbrt","","Take the cubic root of a number.",46,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",46,[[]]],[10,"sin","","Computes the sine of a number (in radians).",46,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",46,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",46,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",46,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",46,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",46,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",46,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",46,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",46,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",46,[[]]],[10,"sinh","","Hyperbolic sine function.",46,[[]]],[10,"cosh","","Hyperbolic cosine function.",46,[[]]],[10,"tanh","","Hyperbolic tangent function.",46,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",46,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",46,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",46,[[]]],[0,"sign","num::traits","",null,null],[8,"Signed","num::traits::sign","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",17,[[]]],[10,"abs_sub","","The positive difference of two numbers.",17,[[]]],[10,"signum","","Returns the sign of the number.",17,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",17,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",17,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num::traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",13,null],[10,"from_str_radix","","Convert from a string and radix (typically `2..=36`).",13,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",47,null],[13,"Invalid","","",47,null],[3,"ParseFloatError","","",null,null],[12,"kind","","",48,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[]]],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",8,[[]]],[10,"max_value","","returns the largest finite number this type can represent",8,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",2,[[]]],[10,"infinity","","Returns the infinite value.",2,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",2,[[]]],[10,"neg_zero","","Returns `-0.0`.",2,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",2,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",2,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",2,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",2,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",2,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",2,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",2,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",2,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",2,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",2,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",2,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",2,[[]]],[10,"trunc","","Return the integer part of a number.",2,[[]]],[10,"fract","","Returns the fractional part of a number.",2,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",2,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",2,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",2,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",2,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",2,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",2,[[]]],[10,"powi","","Raise a number to an integer power.",2,[[]]],[10,"powf","","Raise a number to a floating point power.",2,[[]]],[10,"sqrt","","Take the square root of a number.",2,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",2,[[]]],[10,"exp2","","Returns `2^(self)`.",2,[[]]],[10,"ln","","Returns the natural logarithm of the number.",2,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",2,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",2,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",2,[[]]],[11,"to_degrees","","Converts radians to degrees.",2,[[]]],[11,"to_radians","","Converts degrees to radians.",2,[[]]],[10,"max","","Returns the maximum of the two numbers.",2,[[]]],[10,"min","","Returns the minimum of the two numbers.",2,[[]]],[10,"abs_sub","","The positive difference of two numbers.",2,[[]]],[10,"cbrt","","Take the cubic root of a number.",2,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",2,[[]]],[10,"sin","","Computes the sine of a number (in radians).",2,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",2,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",2,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",2,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",2,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",2,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",2,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",2,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",2,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",2,[[]]],[10,"sinh","","Hyperbolic sine function.",2,[[]]],[10,"cosh","","Hyperbolic cosine function.",2,[[]]],[10,"tanh","","Hyperbolic tangent function.",2,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",2,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",2,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",2,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",2,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",26,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",26,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",26,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",26,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",26,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",26,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",26,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",26,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",26,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",26,[[]]],[10,"LN_10","","Return `ln(10.0)`.",26,[[]]],[10,"LN_2","","Return `ln(2.0)`.",26,[[]]],[10,"LOG10_E","","Return `log10(e)`.",26,[[]]],[10,"LOG2_E","","Return `log2(e)`.",26,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",26,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",26,[[]]],[11,"TAU","","Return the full circle constant `τ`.",26,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",26,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",26,[[]]],[5,"cast","","Cast from one machine scalar to another.",null,[[],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[],["option",4]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",3,[[],["option",4]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[]]],[5,"zero","","Returns the additive identity, `0`.",null,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",14,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",14,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",14,[[]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",18,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",18,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",18,[[]]],[8,"PrimInt","","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",15,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",15,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",15,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",15,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",15,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",15,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",15,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",15,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",15,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",15,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",15,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",15,[[]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",9,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",10,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",11,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",28,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",27,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",29,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",30,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",12,[[],["option",4]]],[8,"Inv","","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",31,null],[10,"inv","","Returns the multiplicative inverse of `self`.",31,[[]]],[8,"MulAdd","","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",32,null],[10,"mul_add","","Performs the fused multiply-add operation.",32,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",33,[[]]],[8,"Saturating","","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",16,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",16,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",37,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",39,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",38,[[]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",40,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",42,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",43,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",44,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",45,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",41,[[]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[],["option",4]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",null,[[]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",7,null],[10,"pow","","Returns `self` to the power `rhs`.",7,[[]]],[5,"abs","","Computes the absolute value.",null,[[]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[]]],[5,"signum","","Returns the sign of the number.",null,[[]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",17,[[]]],[10,"abs_sub","","The positive difference of two numbers.",17,[[]]],[10,"signum","","Returns the sign of the number.",17,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",17,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",17,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"rational","num","",null,null],[3,"Ratio","num::rational","Represents the ratio between two numbers.",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[3,"ParseRatioError","","",null,null],[11,"from","num::bigint","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",49,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",49,[[]]],[11,"from","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",50,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",50,[[]]],[11,"from","num::complex","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","num::bigint","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"from","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"to_string","","",52,[[],["string",3]]],[11,"from","","",53,[[]]],[11,"into_iter","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"from","num::complex","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"to_string","","",55,[[],["string",3]]],[11,"from","num::integer","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"from","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","num::iter","",57,[[]]],[11,"into_iter","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into_iter","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into_iter","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into_iter","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into_iter","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into_iter","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"from","num::traits","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_string","","",48,[[],["string",3]]],[11,"from","num::rational","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"from","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"bitxor","num::bigint","",50,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",49,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",50,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",49,[[["bigint",3]],["bigint",3]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",20,[[]]],[11,"neg","","Negate Sign value.",20,[[],["sign",4]]],[11,"neg","","",49,[[],["bigint",3]]],[11,"bitand_assign","","",50,[[["biguint",3]]]],[11,"bitand_assign","","",49,[[["bigint",3]]]],[11,"bitand_assign","","",50,[[["biguint",3]]]],[11,"bitand_assign","","",49,[[["bigint",3]]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",50,[[["biguint",3]],["biguint",3]]],[11,"add","","",49,[[["bigint",3]],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[["biguint",3]],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[["bigint",3]],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",50,[[],["biguint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"add","","",49,[[],["bigint",3]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",52,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",20,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",51,[[["formatter",3]],[["result",4],["error",3]]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",50,[[],["biguint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"shl","","",49,[[],["bigint",3]]],[11,"default","","",49,[[],["bigint",3]]],[11,"default","","",50,[[],["biguint",3]]],[11,"bitand","","",49,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",49,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",50,[[["biguint",3]],["biguint",3]]],[11,"bitand","","",50,[[["biguint",3]],["biguint",3]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",49,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"shl_assign","","",50,[[]]],[11,"description","","",52,[[]]],[11,"description","","",51,[[]]],[11,"from_i64","","",50,[[],[["option",4],["biguint",3]]]],[11,"from_i128","","",50,[[],[["option",4],["biguint",3]]]],[11,"from_u64","","",50,[[],[["option",4],["biguint",3]]]],[11,"from_u128","","",50,[[],[["option",4],["biguint",3]]]],[11,"from_f64","","",50,[[],[["option",4],["biguint",3]]]],[11,"from_i64","","",49,[[],[["option",4],["bigint",3]]]],[11,"from_i128","","",49,[[],[["option",4],["bigint",3]]]],[11,"from_u64","","",49,[[],[["option",4],["bigint",3]]]],[11,"from_u128","","",49,[[],[["option",4],["bigint",3]]]],[11,"from_f64","","",49,[[],[["option",4],["bigint",3]]]],[11,"clone","","",52,[[],["tryfrombiginterror",3]]],[11,"clone","","",20,[[],["sign",4]]],[11,"clone","","",50,[[],["biguint",3]]],[11,"clone_from","","",50,[[["biguint",3]]]],[11,"clone","","",51,[[],["parsebiginterror",3]]],[11,"clone","","",49,[[],["bigint",3]]],[11,"clone_from","","",49,[[["bigint",3]]]],[11,"next_back","","",53,[[],["option",4]]],[11,"next_back","","",54,[[],["option",4]]],[11,"to_biguint","","",50,[[],[["option",4],["biguint",3]]]],[11,"to_biguint","","",49,[[],[["option",4],["biguint",3]]]],[11,"rem_assign","","",49,[[["bigint",3]]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",50,[[]]],[11,"rem_assign","","",50,[[["biguint",3]]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",50,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",50,[[["biguint",3]]]],[11,"rem_assign","","",49,[[]]],[11,"rem_assign","","",50,[[]]],[11,"rem_assign","","",50,[[]]],[11,"rem_assign","","",50,[[]]],[11,"rem_assign","","",49,[[["bigint",3]]]],[11,"rem_assign","","",50,[[]]],[11,"rem_assign","","",49,[[]]],[11,"from","","",50,[[],["biguint",3]]],[11,"from","","",50,[[],["biguint",3]]],[11,"from","","",50,[[],["biguint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",50,[[],["biguint",3]]],[11,"from","","",49,[[["biguint",3]],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",50,[[],["biguint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",49,[[],["bigint",3]]],[11,"from","","",50,[[],["biguint",3]]],[11,"eq","","",20,[[["sign",4]]]],[11,"eq","","",49,[[["bigint",3]]]],[11,"eq","","",52,[[["tryfrombiginterror",3]]]],[11,"ne","","",52,[[["tryfrombiginterror",3]]]],[11,"eq","","",50,[[["biguint",3]]]],[11,"eq","","",51,[[["parsebiginterror",3]]]],[11,"ne","","",51,[[["parsebiginterror",3]]]],[11,"nth_root","","",49,[[],["bigint",3]]],[11,"sqrt","","",49,[[],["bigint",3]]],[11,"cbrt","","",49,[[],["bigint",3]]],[11,"nth_root","","",50,[[],["biguint",3]]],[11,"sqrt","","",50,[[],["biguint",3]]],[11,"cbrt","","",50,[[],["biguint",3]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",50,[[]]],[11,"mul_assign","","",50,[[]]],[11,"mul_assign","","",50,[[]]],[11,"mul_assign","","",50,[[["biguint",3]]]],[11,"mul_assign","","",50,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[["bigint",3]]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",50,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[["bigint",3]]]],[11,"mul_assign","","",50,[[["biguint",3]]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",49,[[]]],[11,"mul_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",49,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr_assign","","",50,[[]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"shr","","",50,[[],["biguint",3]]],[11,"shr","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",20,[[["sign",4]],["sign",4]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[["biguint",3]],["biguint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",49,[[["bigint",3]],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",49,[[["bigint",3]],["bigint",3]]],[11,"mul","","",50,[[["biguint",3]],["biguint",3]]],[11,"mul","","",49,[[],["bigint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"mul","","",50,[[],["biguint",3]]],[11,"cmp","","",50,[[["biguint",3]],["ordering",4]]],[11,"cmp","","",49,[[["bigint",3]],["ordering",4]]],[11,"cmp","","",20,[[["sign",4]],["ordering",4]]],[11,"len","","",53,[[]]],[11,"len","","",54,[[]]],[11,"abs","","",49,[[],["bigint",3]]],[11,"abs_sub","","",49,[[["bigint",3]],["bigint",3]]],[11,"signum","","",49,[[],["bigint",3]]],[11,"is_positive","","",49,[[]]],[11,"is_negative","","",49,[[]]],[11,"sum","","",50,[[],["biguint",3]]],[11,"sum","","",49,[[],["bigint",3]]],[11,"next","","",53,[[],["option",4]]],[11,"size_hint","","",53,[[]]],[11,"last","","",53,[[],["option",4]]],[11,"count","","",53,[[]]],[11,"next","","",54,[[],["option",4]]],[11,"size_hint","","",54,[[]]],[11,"nth","","",54,[[],["option",4]]],[11,"last","","",54,[[],["option",4]]],[11,"count","","",54,[[]]],[11,"product","","",49,[[],["bigint",3]]],[11,"product","","",50,[[],["biguint",3]]],[11,"div_rem","","",49,[[["bigint",3]]]],[11,"div_floor","","",49,[[["bigint",3]],["bigint",3]]],[11,"mod_floor","","",49,[[["bigint",3]],["bigint",3]]],[11,"div_mod_floor","","",49,[[["bigint",3]]]],[11,"div_ceil","","",49,[[["bigint",3]],["bigint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",49,[[["bigint",3]],["bigint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",49,[[["bigint",3]],["bigint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",49,[[["bigint",3]]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",49,[[["bigint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",49,[[["bigint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",49,[[["bigint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",49,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",49,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",49,[[["bigint",3]],["bigint",3]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",49,[[["bigint",3]],["bigint",3]]],[11,"div_rem","","",50,[[["biguint",3]]]],[11,"div_floor","","",50,[[["biguint",3]],["biguint",3]]],[11,"mod_floor","","",50,[[["biguint",3]],["biguint",3]]],[11,"div_mod_floor","","",50,[[["biguint",3]]]],[11,"div_ceil","","",50,[[["biguint",3]],["biguint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",50,[[["biguint",3]],["biguint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",50,[[["biguint",3]],["biguint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",50,[[["biguint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",50,[[["biguint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",50,[[["biguint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",50,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",50,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",50,[[["biguint",3]],["biguint",3]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",50,[[["biguint",3]],["biguint",3]]],[11,"checked_div","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",50,[[["biguint",3]],[["option",4],["biguint",3]]]],[11,"not","","",49,[[],["bigint",3]]],[11,"checked_mul","","",50,[[["biguint",3]],[["option",4],["biguint",3]]]],[11,"checked_mul","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"bitxor_assign","","",50,[[["biguint",3]]]],[11,"bitxor_assign","","",50,[[["biguint",3]]]],[11,"bitxor_assign","","",49,[[["bigint",3]]]],[11,"bitxor_assign","","",49,[[["bigint",3]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",50,[[],[["result",4],["biguint",3],["parsebiginterror",3]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",49,[[],[["result",4],["bigint",3],["parsebiginterror",3]]]],[11,"div","","",50,[[["biguint",3]],["biguint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[["bigint",3]],["bigint",3]]],[11,"div","","",49,[[["bigint",3]],["bigint",3]]],[11,"div","","",50,[[["biguint",3]],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",50,[[],["biguint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"div","","",49,[[],["bigint",3]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"rem","","",50,[[["biguint",3]],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[["biguint",3]],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[["bigint",3]],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[["bigint",3]],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"rem","","",50,[[],["biguint",3]]],[11,"rem","","",49,[[],["bigint",3]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"try_from","","",50,[[],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"try_from","","",50,[[],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"try_from","","",50,[[["bigint",3]],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"try_from","","",50,[[],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"try_from","","",50,[[["bigint",3]],[["tryfrombiginterror",3],["result",4],["biguint",3]]]],[11,"try_from","","",50,[[],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"try_from","","",50,[[],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"try_from","","",50,[[],[["tryfrombiginterror",3],["biguint",3],["result",4]]]],[11,"from_str","","",49,[[],[["result",4],["bigint",3],["parsebiginterror",3]]]],[11,"from_str","","",50,[[],[["result",4],["biguint",3],["parsebiginterror",3]]]],[11,"to_i64","","",50,[[],["option",4]]],[11,"to_i128","","",50,[[],["option",4]]],[11,"to_u64","","",50,[[],["option",4]]],[11,"to_u128","","",50,[[],["option",4]]],[11,"to_f32","","",50,[[],["option",4]]],[11,"to_f64","","",50,[[],["option",4]]],[11,"to_i64","","",49,[[],["option",4]]],[11,"to_i128","","",49,[[],["option",4]]],[11,"to_u64","","",49,[[],["option",4]]],[11,"to_u128","","",49,[[],["option",4]]],[11,"to_f32","","",49,[[],["option",4]]],[11,"to_f64","","",49,[[],["option",4]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",50,[[]]],[11,"div_assign","","",50,[[]]],[11,"div_assign","","",50,[[["biguint",3]]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",50,[[["biguint",3]]]],[11,"div_assign","","",49,[[["bigint",3]]]],[11,"div_assign","","",49,[[["bigint",3]]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",50,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",50,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",50,[[]]],[11,"div_assign","","",49,[[]]],[11,"div_assign","","",50,[[]]],[11,"one","","",50,[[],["biguint",3]]],[11,"set_one","","",50,[[]]],[11,"is_one","","",50,[[]]],[11,"one","","",49,[[],["bigint",3]]],[11,"set_one","","",49,[[]]],[11,"is_one","","",49,[[]]],[11,"zero","","",49,[[],["bigint",3]]],[11,"set_zero","","",49,[[]]],[11,"is_zero","","",49,[[]]],[11,"zero","","",50,[[],["biguint",3]]],[11,"set_zero","","",50,[[]]],[11,"is_zero","","",50,[[]]],[11,"checked_add","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_add","","",50,[[["biguint",3]],[["option",4],["biguint",3]]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",50,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[["bigint",3]]]],[11,"add_assign","","",50,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",50,[[]]],[11,"add_assign","","",49,[[["bigint",3]]]],[11,"add_assign","","",50,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",50,[[["biguint",3]]]],[11,"add_assign","","",50,[[]]],[11,"add_assign","","",50,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",50,[[["biguint",3]]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[]]],[11,"add_assign","","",49,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",50,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",50,[[["biguint",3]]]],[11,"sub_assign","","",50,[[]]],[11,"sub_assign","","",50,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",50,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",50,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",50,[[["biguint",3]]]],[11,"sub_assign","","",49,[[["bigint",3]]]],[11,"sub_assign","","",50,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[["bigint",3]]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[]]],[11,"sub_assign","","",49,[[]]],[11,"bitor_assign","","",50,[[["biguint",3]]]],[11,"bitor_assign","","",50,[[["biguint",3]]]],[11,"bitor_assign","","",49,[[["bigint",3]]]],[11,"bitor_assign","","",49,[[["bigint",3]]]],[11,"bitor","","",49,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",49,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",50,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",50,[[["biguint",3]],["biguint",3]]],[11,"checked_sub","","",50,[[["biguint",3]],[["option",4],["biguint",3]]]],[11,"checked_sub","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"to_bigint","","",50,[[],[["option",4],["bigint",3]]]],[11,"to_bigint","","",49,[[],[["option",4],["bigint",3]]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",52,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",51,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",49,[[["bigint",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",50,[[["biguint",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",20,[[["sign",4]],[["option",4],["ordering",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","","",49,[[["bigint",3]],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",50,[[["biguint",3]],["biguint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[["bigint",3]],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[["biguint",3]],["biguint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",50,[[],["biguint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"sub","","",49,[[],["bigint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[["biguint",3]],["biguint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[["biguint",3]],["bigint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",50,[[["biguint",3]],["biguint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",50,[[],["biguint",3]]],[11,"pow","","",49,[[],["bigint",3]]],[11,"pow","","",49,[[["biguint",3]],["bigint",3]]],[11,"eq","num::integer","",22,[[["extendedgcd",3]]]],[11,"ne","","",22,[[["extendedgcd",3]]]],[11,"fmt","","",22,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",22,[[],["extendedgcd",3]]],[11,"next","","",56,[[],["option",4]]],[11,"fmt","num::traits","",48,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",47,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",48,[[["formatter",3]],[["result",4],["error",3]]]],[11,"product","num::complex","",0,[[],["complex",3]]],[11,"product","","",0,[[],["complex",3]]],[11,"sum","","",0,[[],["complex",3]]],[11,"sum","","",0,[[],["complex",3]]],[11,"inv","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"from_usize","","",0,[[],[["option",4],["complex",3]]]],[11,"from_isize","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u8","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u16","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u32","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u64","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i8","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i16","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i32","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i64","","",0,[[],[["option",4],["complex",3]]]],[11,"from_u128","","",0,[[],[["option",4],["complex",3]]]],[11,"from_i128","","",0,[[],[["option",4],["complex",3]]]],[11,"from_f32","","",0,[[],[["option",4],["complex",3]]]],[11,"from_f64","","",0,[[],[["option",4],["complex",3]]]],[11,"neg","","",0,[[]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],[["result",4],["complex",3]]]],[11,"div","","",0,[[["complex",3]]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[["complex",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[["complex",3]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[["complex",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"add","","",0,[[["complex",3]]]],[11,"add","","",0,[[["complex",3]]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],[["result",4],["complex",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",55,[[["formatter",3]],[["result",4],["error",3]]]],[11,"to_usize","","",0,[[],["option",4]]],[11,"to_isize","","",0,[[],["option",4]]],[11,"to_u8","","",0,[[],["option",4]]],[11,"to_u16","","",0,[[],["option",4]]],[11,"to_u32","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_i8","","",0,[[],["option",4]]],[11,"to_i16","","",0,[[],["option",4]]],[11,"to_i32","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_f32","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[["complex",3]]]],[11,"div_assign","","",0,[[["complex",3]]]],[11,"div_assign","","",0,[[]]],[11,"default","","",0,[[],["complex",3]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[["complex",3]]]],[11,"add_assign","","",0,[[["complex",3]]]],[11,"description","","",55,[[]]],[11,"mul_add","","",0,[[["complex",3]],["complex",3]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["complex",3]]]],[11,"sub_assign","","",0,[[["complex",3]]]],[11,"sub_assign","","",0,[[]]],[11,"from","","",0,[[],[["option",4],["complex",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",0,[[],["complex",3]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[["complex",3]]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[["complex",3]]]],[11,"rem_assign","","",0,[[["complex",3]]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["complex",3]]]],[11,"rem_assign","","",0,[[]]],[11,"from","","",0,[[],["complex",3]]],[11,"from","","",0,[[],["complex",3]]],[11,"eq","","",0,[[["complex",3]]]],[11,"ne","","",0,[[["complex",3]]]],[11,"eq","","",55,[[["parsecomplexerror",3]]]],[11,"ne","","",55,[[["parsecomplexerror",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["complex",3]]]],[11,"mul_assign","","",0,[[["complex",3]]]],[11,"mul_assign","","",0,[[]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"mul","","",0,[[["complex",3]]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[["complex",3]]]],[11,"mul","","",0,[[]]],[11,"zero","","",0,[[],["complex",3]]],[11,"is_zero","","",0,[[]]],[11,"set_zero","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"one","","",0,[[],["complex",3]]],[11,"is_one","","",0,[[]]],[11,"set_one","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",55,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","","",0,[[["complex",3]]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[["complex",3]]]],[11,"sub","","",0,[[]]],[11,"as_","","",0,[[]]],[11,"zero","num::rational","",63,[[],["ratio",3]]],[11,"is_zero","","",63,[[]]],[11,"set_zero","","",63,[[]]],[11,"product","","",63,[[],["ratio",3]]],[11,"product","","",63,[[],["ratio",3]]],[11,"partial_cmp","","",63,[[["ratio",3]],[["option",4],["ordering",4]]]],[11,"checked_div","","",63,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"hash","","",63,[[]]],[11,"neg","","",63,[[],["ratio",3]]],[11,"div","","",63,[[["ratio",3]],["ratio",3]]],[11,"div","","",63,[[],["ratio",3]]],[11,"div","","",63,[[["ratio",3]],["ratio",3]]],[11,"div","","",63,[[],["ratio",3]]],[11,"checked_sub","","",63,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"rem","","",63,[[],["ratio",3]]],[11,"rem","","",63,[[],["ratio",3]]],[11,"rem","","",63,[[["ratio",3]],["ratio",3]]],[11,"rem","","",63,[[["ratio",3]],["ratio",3]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"add","","",63,[[["ratio",3]],["ratio",3]]],[11,"add","","",63,[[],["ratio",3]]],[11,"add","","",63,[[["ratio",3]],["ratio",3]]],[11,"add","","",63,[[],["ratio",3]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",63,[[],[["parseratioerror",3],["result",4],["ratio",3]]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",64,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",63,[[],[["parseratioerror",3],["result",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_u128","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f32","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_f64","","",63,[[],[["ratio",3],["option",4]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_i128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u64","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_u128","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f32","","",63,[[],[["option",4],["ratio",3]]]],[11,"from_f64","","",63,[[],[["option",4],["ratio",3]]]],[11,"div_assign","","",63,[[]]],[11,"div_assign","","",63,[[]]],[11,"div_assign","","",63,[[["ratio",3]]]],[11,"div_assign","","",63,[[["ratio",3]]]],[11,"inv","","",63,[[],["ratio",3]]],[11,"add_assign","","",63,[[]]],[11,"add_assign","","",63,[[]]],[11,"add_assign","","",63,[[["ratio",3]]]],[11,"add_assign","","",63,[[["ratio",3]]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[["bigint",3]],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[["biguint",3]],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[["biguint",3]],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[["bigint",3]],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"pow","","",63,[[],["ratio",3]]],[11,"description","","",64,[[]]],[11,"abs","","",63,[[],["ratio",3]]],[11,"abs_sub","","",63,[[["ratio",3]],["ratio",3]]],[11,"signum","","",63,[[],["ratio",3]]],[11,"is_positive","","",63,[[]]],[11,"is_negative","","",63,[[]]],[11,"sub_assign","","",63,[[]]],[11,"sub_assign","","",63,[[["ratio",3]]]],[11,"sub_assign","","",63,[[]]],[11,"sub_assign","","",63,[[["ratio",3]]]],[11,"one","","",63,[[],["ratio",3]]],[11,"is_one","","",63,[[]]],[11,"set_one","","",63,[[]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"to_i64","","",63,[[],["option",4]]],[11,"to_i128","","",63,[[],["option",4]]],[11,"to_u64","","",63,[[],["option",4]]],[11,"to_u128","","",63,[[],["option",4]]],[11,"to_f64","","",63,[[],["option",4]]],[11,"clone","","",63,[[],["ratio",3]]],[11,"clone","","",64,[[],["parseratioerror",3]]],[11,"into","","",63,[[]]],[11,"rem_assign","","",63,[[]]],[11,"rem_assign","","",63,[[["ratio",3]]]],[11,"rem_assign","","",63,[[]]],[11,"rem_assign","","",63,[[["ratio",3]]]],[11,"from","","",63,[[],["ratio",3]]],[11,"from","","",63,[[],["ratio",3]]],[11,"eq","","",64,[[["parseratioerror",3]]]],[11,"ne","","",64,[[["parseratioerror",3]]]],[11,"eq","","",63,[[["ratio",3]]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"mul_assign","","",63,[[]]],[11,"mul_assign","","",63,[[["ratio",3]]]],[11,"mul_assign","","",63,[[]]],[11,"mul_assign","","",63,[[["ratio",3]]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"mul","","",63,[[["ratio",3]],["ratio",3]]],[11,"mul","","",63,[[["ratio",3]],["ratio",3]]],[11,"mul","","",63,[[],["ratio",3]]],[11,"mul","","",63,[[],["ratio",3]]],[11,"cmp","","",63,[[["ratio",3]],["ordering",4]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",64,[[["formatter",3]],[["result",4],["error",3]]]],[11,"checked_mul","","",63,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"sum","","",63,[[],["ratio",3]]],[11,"sum","","",63,[[],["ratio",3]]],[11,"sub","","",63,[[["ratio",3]],["ratio",3]]],[11,"sub","","",63,[[],["ratio",3]]],[11,"sub","","",63,[[["ratio",3]],["ratio",3]]],[11,"sub","","",63,[[],["ratio",3]]],[11,"checked_add","","",63,[[["ratio",3]],[["option",4],["ratio",3]]]],[11,"next_back","num::iter","",58,[[],["option",4]]],[11,"next_back","","",57,[[],["option",4]]],[11,"clone","","",57,[[],["range",3]]],[11,"clone","","",62,[[],["rangestepfrom",3]]],[11,"clone","","",58,[[],["rangeinclusive",3]]],[11,"clone","","",60,[[],["rangestepinclusive",3]]],[11,"clone","","",59,[[],["rangestep",3]]],[11,"clone","","",61,[[],["rangefrom",3]]],[11,"next","","",59,[[],["option",4]]],[11,"next","","",61,[[],["option",4]]],[11,"size_hint","","",61,[[]]],[11,"next","","",60,[[],["option",4]]],[11,"next","","",62,[[],["option",4]]],[11,"size_hint","","",62,[[]]],[11,"next","","",58,[[],["option",4]]],[11,"size_hint","","",58,[[]]],[11,"next","","",57,[[],["option",4]]],[11,"size_hint","","",57,[[]]],[11,"new","num::bigint","Creates and initializes a BigInt.",49,[[["sign",4],["vec",3]],["bigint",3]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",49,[[["sign",4],["biguint",3]],["bigint",3]]],[11,"from_slice","","Creates and initializes a `BigInt`.",49,[[["sign",4]],["bigint",3]]],[11,"assign_from_slice","","Reinitializes a `BigInt`.",49,[[["sign",4]]]],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",49,[[["sign",4]],["bigint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",49,[[["sign",4]],["bigint",3]]],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",49,[[],["bigint",3]]],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",49,[[],["bigint",3]]],[11,"parse_bytes","","Creates and initializes a `BigInt`.",49,[[],[["option",4],["bigint",3]]]],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",49,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",49,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",49,[[]]],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",49,[[]]],[11,"to_u32_digits","","Returns the sign and the `u32` digits representation of…",49,[[]]],[11,"to_u64_digits","","Returns the sign and the `u64` digits representation of…",49,[[]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",49,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",49,[[],["u64digits",3]]],[11,"to_signed_bytes_be","","Returns the two\'s-complement byte representation of the…",49,[[],["vec",3]]],[11,"to_signed_bytes_le","","Returns the two\'s-complement byte representation of the…",49,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",49,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",49,[[]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",49,[[]]],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",49,[[],["sign",4]]],[11,"magnitude","","Returns the magnitude of the `BigInt` as a `BigUint`.",49,[[],["biguint",3]]],[11,"into_parts","","Convert this `BigInt` into its `Sign` and `BigUint`…",49,[[]]],[11,"bits","","Determines the fewest bits necessary to express the…",49,[[]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it\'s not…",49,[[],[["option",4],["biguint",3]]]],[11,"checked_add","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_sub","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",49,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"pow","","Returns `self ^ exponent`.",49,[[],["bigint",3]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",49,[[["bigint",3]],["bigint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",49,[[],["bigint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",49,[[],["bigint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",49,[[],["bigint",3]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",49,[[],["option",4]]],[11,"bit","","Returns whether the bit in position `bit` is set, using…",49,[[]]],[11,"set_bit","","Sets or clears the bit in the given position, using the…",49,[[]]],[11,"new","","Creates and initializes a `BigUint`.",50,[[["vec",3]],["biguint",3]]],[11,"from_slice","","Creates and initializes a `BigUint`.",50,[[],["biguint",3]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",50,[[]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",50,[[],["biguint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",50,[[],["biguint",3]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",50,[[],[["option",4],["biguint",3]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",50,[[],[["option",4],["biguint",3]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",50,[[],[["option",4],["biguint",3]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",50,[[],["vec",3]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",50,[[],["vec",3]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",50,[[],["vec",3]]],[11,"to_u64_digits","","Returns the `u64` digits representation of the `BigUint`…",50,[[],["vec",3]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",50,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",50,[[],["u64digits",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",50,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",50,[[],["vec",3]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",50,[[],["vec",3]]],[11,"bits","","Determines the fewest bits necessary to express the…",50,[[]]],[11,"pow","","Returns `self ^ exponent`.",50,[[],["biguint",3]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",50,[[["biguint",3]],["biguint",3]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",50,[[],["biguint",3]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",50,[[],["biguint",3]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",50,[[],["biguint",3]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",50,[[],["option",4]]],[11,"trailing_ones","","Returns the number of least-significant bits that are ones.",50,[[]]],[11,"count_ones","","Returns the number of one bits.",50,[[]]],[11,"bit","","Returns whether the bit in the given position is set",50,[[]]],[11,"set_bit","","Sets or clears the bit in the given position",50,[[]]],[11,"new","num::complex","Create a new Complex",0,[[],["complex",3]]],[11,"i","","Returns imaginary unit",0,[[],["complex",3]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn\'t…",0,[[]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[],["complex",3]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[],["complex",3]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[],["complex",3]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[],["complex",3]]],[11,"inv","","Returns `1/self`",0,[[],["complex",3]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[],["complex",3]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the [Manhattan…",0,[[]]],[11,"norm","","Calculate |self|",0,[[]]],[11,"arg","","Calculate the principal Arg of self.",0,[[]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,[[]]],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[],["complex",3]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[],["complex",3]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[],["complex",3]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[],["complex",3]]],[11,"cbrt","","Computes the principal value of the cube root of `self`.",0,[[],["complex",3]]],[11,"powf","","Raises `self` to a floating point power.",0,[[],["complex",3]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[],["complex",3]]],[11,"powc","","Raises `self` to a complex power.",0,[[["complex",3]],["complex",3]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[],["complex",3]]],[11,"sin","","Computes the sine of `self`.",0,[[],["complex",3]]],[11,"cos","","Computes the cosine of `self`.",0,[[],["complex",3]]],[11,"tan","","Computes the tangent of `self`.",0,[[],["complex",3]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[],["complex",3]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[],["complex",3]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[],["complex",3]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[],["complex",3]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[],["complex",3]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[],["complex",3]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[],["complex",3]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[],["complex",3]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[],["complex",3]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[],["complex",3]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["complex",3]],["complex",3]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[]]],[11,"into_original","num::bigint","Extract the original value, if available. The value will…",52,[[]]],[11,"new","num::integer","For a given n, iterate over all binomial coefficients…",56,[[],["iterbinomial",3]]],[11,"new_raw","num::rational","Creates a `Ratio` without checking for `denom == 0` or…",63,[[],["ratio",3]]],[11,"numer","","Gets an immutable reference to the numerator.",63,[[]]],[11,"denom","","Gets an immutable reference to the denominator.",63,[[]]],[11,"new","","Creates a new `Ratio`.",63,[[],["ratio",3]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",63,[[],["ratio",3]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",63,[[]]],[11,"is_integer","","Returns true if the rational number is an integer…",63,[[]]],[11,"reduced","","Returns a reduced copy of self.",63,[[],["ratio",3]]],[11,"recip","","Returns the reciprocal.",63,[[],["ratio",3]]],[11,"floor","","Rounds towards minus infinity.",63,[[],["ratio",3]]],[11,"ceil","","Rounds towards plus infinity.",63,[[],["ratio",3]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",63,[[],["ratio",3]]],[11,"trunc","","Rounds towards zero.",63,[[],["ratio",3]]],[11,"fract","","Returns the fractional part of a number, with division…",63,[[],["ratio",3]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",63,[[],["ratio",3]]],[11,"from_float","","Converts a float into a rational number.",63,[[],[["option",4],["ratio",3]]]],[11,"approximate_float","","",63,[[],[["option",4],["ratio",3]]]]],"p":[[3,"Complex"],[8,"Integer"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"Pow"],[8,"Bounded"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedMul"],[8,"CheckedSub"],[8,"Num"],[8,"One"],[8,"PrimInt"],[8,"Saturating"],[8,"Signed"],[8,"Zero"],[8,"ToBigUint"],[4,"Sign"],[8,"ToBigInt"],[3,"ExtendedGcd"],[8,"Roots"],[8,"Average"],[8,"FloatCore"],[8,"FloatConst"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Real"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[3,"BigInt"],[3,"BigUint"],[3,"ParseBigIntError"],[3,"TryFromBigIntError"],[3,"U32Digits"],[3,"U64Digits"],[3,"ParseComplexError"],[3,"IterBinomial"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"],[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_bigint":{"doc":"A Big integer (signed version: `BigInt`, unsigned version:…","i":[[3,"ParseBigIntError","num_bigint","",null,null],[3,"TryFromBigIntError","","The error type returned when a checked conversion…",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[3,"U32Digits","","An iterator of `u32` digits representation of a `BigUint`…",null,null],[3,"U64Digits","","An iterator of `u64` digits representation of a `BigUint`…",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`\'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[11,"new","","Creates and initializes a BigInt.",1,[[["vec",3],["sign",4]],["bigint",3]]],[11,"from_biguint","","Creates and initializes a `BigInt`.",1,[[["biguint",3],["sign",4]],["bigint",3]]],[11,"from_slice","","Creates and initializes a `BigInt`.",1,[[["sign",4]],["bigint",3]]],[11,"assign_from_slice","","Reinitializes a `BigInt`.",1,[[["sign",4]]]],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",1,[[["sign",4]],["bigint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",1,[[["sign",4]],["bigint",3]]],[11,"from_signed_bytes_be","","Creates and initializes a `BigInt` from an array of bytes…",1,[[],["bigint",3]]],[11,"from_signed_bytes_le","","Creates and initializes a `BigInt` from an array of bytes…",1,[[],["bigint",3]]],[11,"parse_bytes","","Creates and initializes a `BigInt`.",1,[[],[["option",4],["bigint",3]]]],[11,"from_radix_be","","Creates and initializes a `BigInt`. Each u8 of the input…",1,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"from_radix_le","","Creates and initializes a `BigInt`. Each u8 of the input…",1,[[["sign",4]],[["option",4],["bigint",3]]]],[11,"to_bytes_be","","Returns the sign and the byte representation of the…",1,[[]]],[11,"to_bytes_le","","Returns the sign and the byte representation of the…",1,[[]]],[11,"to_u32_digits","","Returns the sign and the `u32` digits representation of…",1,[[]]],[11,"to_u64_digits","","Returns the sign and the `u64` digits representation of…",1,[[]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",1,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",1,[[],["u64digits",3]]],[11,"to_signed_bytes_be","","Returns the two\'s-complement byte representation of the…",1,[[],["vec",3]]],[11,"to_signed_bytes_le","","Returns the two\'s-complement byte representation of the…",1,[[],["vec",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",1,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",1,[[]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",1,[[]]],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",1,[[],["sign",4]]],[11,"magnitude","","Returns the magnitude of the `BigInt` as a `BigUint`.",1,[[],["biguint",3]]],[11,"into_parts","","Convert this `BigInt` into its `Sign` and `BigUint`…",1,[[]]],[11,"bits","","Determines the fewest bits necessary to express the…",1,[[]]],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it\'s not…",1,[[],[["biguint",3],["option",4]]]],[11,"checked_add","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_sub","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"pow","","Returns `self ^ exponent`.",1,[[]]],[11,"modpow","","Returns `(self ^ exponent) mod modulus`",1,[[]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",1,[[]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",1,[[]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",1,[[],["option",4]]],[11,"bit","","Returns whether the bit in position `bit` is set, using…",1,[[]]],[11,"set_bit","","Sets or clears the bit in the given position, using the…",1,[[]]],[11,"new","","Creates and initializes a `BigUint`.",2,[[["vec",3]],["biguint",3]]],[11,"from_slice","","Creates and initializes a `BigUint`.",2,[[],["biguint",3]]],[11,"assign_from_slice","","Assign a value to a `BigUint`.",2,[[]]],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",2,[[],["biguint",3]]],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",2,[[],["biguint",3]]],[11,"parse_bytes","","Creates and initializes a `BigUint`. The input slice must…",2,[[],[["biguint",3],["option",4]]]],[11,"from_radix_be","","Creates and initializes a `BigUint`. Each u8 of the input…",2,[[],[["biguint",3],["option",4]]]],[11,"from_radix_le","","Creates and initializes a `BigUint`. Each u8 of the input…",2,[[],[["biguint",3],["option",4]]]],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in…",2,[[],["vec",3]]],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in…",2,[[],["vec",3]]],[11,"to_u32_digits","","Returns the `u32` digits representation of the `BigUint`…",2,[[],["vec",3]]],[11,"to_u64_digits","","Returns the `u64` digits representation of the `BigUint`…",2,[[],["vec",3]]],[11,"iter_u32_digits","","Returns an iterator of `u32` digits representation of the…",2,[[],["u32digits",3]]],[11,"iter_u64_digits","","Returns an iterator of `u64` digits representation of the…",2,[[],["u64digits",3]]],[11,"to_str_radix","","Returns the integer formatted as a string in the given…",2,[[],["string",3]]],[11,"to_radix_be","","Returns the integer in the requested base in big-endian…",2,[[],["vec",3]]],[11,"to_radix_le","","Returns the integer in the requested base in little-endian…",2,[[],["vec",3]]],[11,"bits","","Determines the fewest bits necessary to express the…",2,[[]]],[11,"pow","","Returns `self ^ exponent`.",2,[[]]],[11,"modpow","","Returns `(self ^ exponent) % modulus`.",2,[[]]],[11,"sqrt","","Returns the truncated principal square root of `self` --…",2,[[]]],[11,"cbrt","","Returns the truncated principal cube root of `self` -- see…",2,[[]]],[11,"nth_root","","Returns the truncated principal `n`th root of `self` --…",2,[[]]],[11,"trailing_zeros","","Returns the number of least-significant bits that are…",2,[[],["option",4]]],[11,"trailing_ones","","Returns the number of least-significant bits that are ones.",2,[[]]],[11,"count_ones","","Returns the number of one bits.",2,[[]]],[11,"bit","","Returns whether the bit in the given position is set",2,[[]]],[11,"set_bit","","Sets or clears the bit in the given position",2,[[]]],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",3,[[],[["biguint",3],["option",4]]]],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`. This…",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",4,[[],[["option",4],["bigint",3]]]],[11,"into_original","","Extract the original value, if available. The value will…",5,[[]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",2,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",2,[[]]],[11,"from","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"average_floor","","Returns the floor value of the average of `self` and…",1,[[]]],[11,"average_ceil","","Returns the ceil value of the average of `self` and `other`.",1,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_bigint","","",1,[[],[["option",4],["bigint",3]]]],[11,"to_bigint","","",2,[[],[["option",4],["bigint",3]]]],[11,"to_biguint","","",1,[[],[["biguint",3],["option",4]]]],[11,"to_biguint","","",2,[[],[["biguint",3],["option",4]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[["biguint",3]]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"div","","",1,[[["bigint",3]],["bigint",3]]],[11,"div","","",1,[[["bigint",3]],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",1,[[],["bigint",3]]],[11,"div","","",2,[[["biguint",3]],["biguint",3]]],[11,"div","","",2,[[["biguint",3]],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"div","","",2,[[],["biguint",3]]],[11,"rem","","",1,[[["bigint",3]],["bigint",3]]],[11,"rem","","",1,[[["bigint",3]],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",1,[[],["bigint",3]]],[11,"rem","","",2,[[["biguint",3]],["biguint",3]]],[11,"rem","","",2,[[["biguint",3]],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"rem","","",2,[[],["biguint",3]]],[11,"sub","","",1,[[["bigint",3]],["bigint",3]]],[11,"sub","","",1,[[["bigint",3]],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",1,[[],["bigint",3]]],[11,"sub","","",2,[[["biguint",3]],["biguint",3]]],[11,"sub","","",2,[[["biguint",3]],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"sub","","",2,[[],["biguint",3]]],[11,"eq","","",0,[[["sign",4]]]],[11,"eq","","",1,[[["bigint",3]]]],[11,"eq","","",2,[[["biguint",3]]]],[11,"eq","","",6,[[["parsebiginterror",3]]]],[11,"ne","","",6,[[["parsebiginterror",3]]]],[11,"eq","","",5,[[["tryfrombiginterror",3]]]],[11,"ne","","",5,[[["tryfrombiginterror",3]]]],[11,"cmp","","",0,[[["sign",4]],["ordering",4]]],[11,"cmp","","",1,[[["bigint",3]],["ordering",4]]],[11,"cmp","","",2,[[["biguint",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["sign",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["bigint",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["biguint",3]],[["option",4],["ordering",4]]]],[11,"add","","",1,[[["bigint",3]],["bigint",3]]],[11,"add","","",1,[[["bigint",3]],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",1,[[],["bigint",3]]],[11,"add","","",2,[[["biguint",3]],["biguint",3]]],[11,"add","","",2,[[["biguint",3]],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"add","","",2,[[],["biguint",3]]],[11,"mul","","",0,[[["sign",4]],["sign",4]]],[11,"mul","","",1,[[["bigint",3]],["bigint",3]]],[11,"mul","","",1,[[["bigint",3]],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",1,[[],["bigint",3]]],[11,"mul","","",2,[[["biguint",3]],["biguint",3]]],[11,"mul","","",2,[[["biguint",3]],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"mul","","",2,[[],["biguint",3]]],[11,"neg","","Negate Sign value.",0,[[],["sign",4]]],[11,"neg","","",1,[[],["bigint",3]]],[11,"add_assign","","",1,[[["bigint",3]]]],[11,"add_assign","","",1,[[["bigint",3]]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",2,[[["biguint",3]]]],[11,"add_assign","","",2,[[["biguint",3]]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",2,[[]]],[11,"sub_assign","","",1,[[["bigint",3]]]],[11,"sub_assign","","",1,[[["bigint",3]]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",2,[[["biguint",3]]]],[11,"sub_assign","","",2,[[["biguint",3]]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",2,[[]]],[11,"mul_assign","","",1,[[["bigint",3]]]],[11,"mul_assign","","",1,[[["bigint",3]]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",2,[[["biguint",3]]]],[11,"mul_assign","","",2,[[["biguint",3]]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",2,[[]]],[11,"div_assign","","",1,[[["bigint",3]]]],[11,"div_assign","","",1,[[["bigint",3]]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",1,[[]]],[11,"div_assign","","",2,[[["biguint",3]]]],[11,"div_assign","","",2,[[["biguint",3]]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"div_assign","","",2,[[]]],[11,"rem_assign","","",1,[[["bigint",3]]]],[11,"rem_assign","","",1,[[["bigint",3]]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",1,[[]]],[11,"rem_assign","","",2,[[["biguint",3]]]],[11,"rem_assign","","",2,[[["biguint",3]]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"rem_assign","","",2,[[]]],[11,"not","","",1,[[],["bigint",3]]],[11,"bitand","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitand","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitand","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitor","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitor","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",1,[[["bigint",3]],["bigint",3]]],[11,"bitxor","","",2,[[["biguint",3]],["biguint",3]]],[11,"bitxor","","",2,[[["biguint",3]],["biguint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",1,[[],["bigint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shl","","",2,[[],["biguint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",1,[[],["bigint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"shr","","",2,[[],["biguint",3]]],[11,"bitand_assign","","",1,[[["bigint",3]]]],[11,"bitand_assign","","",1,[[["bigint",3]]]],[11,"bitand_assign","","",2,[[["biguint",3]]]],[11,"bitand_assign","","",2,[[["biguint",3]]]],[11,"bitor_assign","","",1,[[["bigint",3]]]],[11,"bitor_assign","","",1,[[["bigint",3]]]],[11,"bitor_assign","","",2,[[["biguint",3]]]],[11,"bitor_assign","","",2,[[["biguint",3]]]],[11,"bitxor_assign","","",1,[[["bigint",3]]]],[11,"bitxor_assign","","",1,[[["bigint",3]]]],[11,"bitxor_assign","","",2,[[["biguint",3]]]],[11,"bitxor_assign","","",2,[[["biguint",3]]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",2,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"last","","",7,[[],["option",4]]],[11,"count","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"nth","","",8,[[],["option",4]]],[11,"last","","",8,[[],["option",4]]],[11,"count","","",8,[[]]],[11,"next_back","","",7,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"len","","",7,[[]]],[11,"len","","",8,[[]]],[11,"product","","",1,[[]]],[11,"product","","",2,[[]]],[11,"sum","","",1,[[]]],[11,"sum","","",2,[[]]],[11,"try_from","","",2,[[["bigint",3]],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",2,[[["bigint",3]],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",2,[[],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",2,[[],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",2,[[],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",2,[[],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",2,[[],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"try_from","","",2,[[],[["biguint",3],["tryfrombiginterror",3],["result",4]]]],[11,"from_str","","",1,[[],[["result",4],["bigint",3],["parsebiginterror",3]]]],[11,"from_str","","",2,[[],[["result",4],["biguint",3],["parsebiginterror",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["sign",4]]],[11,"clone","","",1,[[]]],[11,"clone_from","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone_from","","",2,[[]]],[11,"clone","","",6,[[],["parsebiginterror",3]]],[11,"clone","","",5,[[],["tryfrombiginterror",3]]],[11,"default","","",1,[[],["bigint",3]]],[11,"default","","",2,[[],["biguint",3]]],[11,"description","","",6,[[]]],[11,"description","","",5,[[]]],[11,"nth_root","","",1,[[]]],[11,"sqrt","","",1,[[]]],[11,"cbrt","","",1,[[]]],[11,"nth_root","","",2,[[]]],[11,"sqrt","","",2,[[]]],[11,"cbrt","","",2,[[]]],[11,"div_rem","","",1,[[["bigint",3]]]],[11,"div_floor","","",1,[[["bigint",3]],["bigint",3]]],[11,"mod_floor","","",1,[[["bigint",3]],["bigint",3]]],[11,"div_mod_floor","","",1,[[["bigint",3]]]],[11,"div_ceil","","",1,[[]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",1,[[["bigint",3]],["bigint",3]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",1,[[["bigint",3]],["bigint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",1,[[["bigint",3]]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",1,[[["bigint",3]]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["bigint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",1,[[["bigint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",1,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",1,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",1,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",1,[[]]],[11,"div_rem","","",2,[[["biguint",3]]]],[11,"div_floor","","",2,[[["biguint",3]],["biguint",3]]],[11,"mod_floor","","",2,[[["biguint",3]],["biguint",3]]],[11,"div_mod_floor","","",2,[[["biguint",3]]]],[11,"div_ceil","","",2,[[["biguint",3]],["biguint",3]]],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",2,[[]]],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",2,[[["biguint",3]],["biguint",3]]],[11,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",2,[[]]],[11,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["biguint",3]]]],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",2,[[["biguint",3]]]],[11,"is_even","","Returns `true` if the number is divisible by `2`.",2,[[]]],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",2,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",2,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",2,[[]]],[11,"to_i64","","",1,[[],["option",4]]],[11,"to_i128","","",1,[[],["option",4]]],[11,"to_u64","","",1,[[],["option",4]]],[11,"to_u128","","",1,[[],["option",4]]],[11,"to_f32","","",1,[[],["option",4]]],[11,"to_f64","","",1,[[],["option",4]]],[11,"to_i64","","",2,[[],["option",4]]],[11,"to_i128","","",2,[[],["option",4]]],[11,"to_u64","","",2,[[],["option",4]]],[11,"to_u128","","",2,[[],["option",4]]],[11,"to_f32","","",2,[[],["option",4]]],[11,"to_f64","","",2,[[],["option",4]]],[11,"from_i64","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_i128","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_u64","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_u128","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_f64","","",1,[[],[["option",4],["bigint",3]]]],[11,"from_i64","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_i128","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_u64","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_u128","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_f64","","",2,[[],[["biguint",3],["option",4]]]],[11,"from_str_radix","","Creates and initializes a BigInt.",1,[[],[["result",4],["bigint",3],["parsebiginterror",3]]]],[11,"from_str_radix","","Creates and initializes a `BigUint`.",2,[[],[["result",4],["biguint",3],["parsebiginterror",3]]]],[11,"zero","","",1,[[],["bigint",3]]],[11,"set_zero","","",1,[[]]],[11,"is_zero","","",1,[[]]],[11,"zero","","",2,[[],["biguint",3]]],[11,"set_zero","","",2,[[]]],[11,"is_zero","","",2,[[]]],[11,"one","","",1,[[],["bigint",3]]],[11,"set_one","","",1,[[]]],[11,"is_one","","",1,[[]]],[11,"one","","",2,[[],["biguint",3]]],[11,"set_one","","",2,[[]]],[11,"is_one","","",2,[[]]],[11,"checked_add","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_add","","",2,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_sub","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_sub","","",2,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_mul","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_mul","","",2,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"checked_div","","",1,[[["bigint",3]],[["option",4],["bigint",3]]]],[11,"checked_div","","",2,[[["biguint",3]],[["biguint",3],["option",4]]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[],["bigint",3]]],[11,"pow","","",1,[[["biguint",3]],["bigint",3]]],[11,"pow","","",1,[[["biguint",3]],["bigint",3]]],[11,"pow","","",2,[[["biguint",3]],["biguint",3]]],[11,"pow","","",2,[[["biguint",3]],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"pow","","",2,[[],["biguint",3]]],[11,"abs","","",1,[[],["bigint",3]]],[11,"abs_sub","","",1,[[["bigint",3]],["bigint",3]]],[11,"signum","","",1,[[],["bigint",3]]],[11,"is_positive","","",1,[[]]],[11,"is_negative","","",1,[[]]]],"p":[[4,"Sign"],[3,"BigInt"],[3,"BigUint"],[8,"ToBigUint"],[8,"ToBigInt"],[3,"TryFromBigIntError"],[3,"ParseBigIntError"],[3,"U32Digits"],[3,"U64Digits"]]},\
"num_complex":{"doc":"Complex numbers.","i":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[3,"ParseComplexError","","",null,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"new","","Create a new Complex",0,[[]]],[11,"i","","Returns imaginary unit",0,[[]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn\'t…",0,[[]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[]]],[11,"inv","","Returns `1/self`",0,[[]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the [Manhattan…",0,[[]]],[11,"norm","","Calculate |self|",0,[[]]],[11,"arg","","Calculate the principal Arg of self.",0,[[]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,[[]]],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[]]],[11,"cbrt","","Computes the principal value of the cube root of `self`.",0,[[]]],[11,"powf","","Raises `self` to a floating point power.",0,[[]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[]]],[11,"powc","","Raises `self` to a complex power.",0,[[]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[]]],[11,"sin","","Computes the sine of `self`.",0,[[]]],[11,"cos","","Computes the cosine of `self`.",0,[[]]],[11,"tan","","Computes the tangent of `self`.",0,[[]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[],["complex",3]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["complex",3]],["complex",3]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["complex",3]]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[]]],[11,"rem","","",0,[[["complex",3]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[]]],[11,"sub","","",0,[[["complex",3]]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[]]],[11,"eq","","",0,[[["complex",3]]]],[11,"ne","","",0,[[["complex",3]]]],[11,"eq","","",1,[[["parsecomplexerror",3]]]],[11,"ne","","",1,[[["parsecomplexerror",3]]]],[11,"add","","",0,[[["complex",3]]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[]]],[11,"mul","","",0,[[["complex",3]]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[]]],[11,"neg","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"product","","",0,[[]]],[11,"product","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],["result",4]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["complex",3]]],[11,"default","","",0,[[],["complex",3]]],[11,"description","","",1,[[]]],[11,"to_usize","","",0,[[],["option",4]]],[11,"to_isize","","",0,[[],["option",4]]],[11,"to_u8","","",0,[[],["option",4]]],[11,"to_u16","","",0,[[],["option",4]]],[11,"to_u32","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_i8","","",0,[[],["option",4]]],[11,"to_i16","","",0,[[],["option",4]]],[11,"to_i32","","",0,[[],["option",4]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_f32","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"from_usize","","",0,[[],["option",4]]],[11,"from_isize","","",0,[[],["option",4]]],[11,"from_u8","","",0,[[],["option",4]]],[11,"from_u16","","",0,[[],["option",4]]],[11,"from_u32","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_i8","","",0,[[],["option",4]]],[11,"from_i16","","",0,[[],["option",4]]],[11,"from_i32","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from","","",0,[[["toprimitive",8]],["option",4]]],[11,"as_","","",0,[[]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[],["result",4]]],[11,"zero","","",0,[[]]],[11,"is_zero","","",0,[[]]],[11,"set_zero","","",0,[[]]],[11,"one","","",0,[[]]],[11,"is_one","","",0,[[]]],[11,"set_one","","",0,[[]]],[11,"inv","","",0,[[]]],[11,"mul_add","","",0,[[["complex",3]],["complex",3]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"mul_add_assign","","",0,[[["complex",3]]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[]]],[11,"pow","","",0,[[["complex",3]]]],[11,"pow","","",0,[[["complex",3]]]]],"p":[[3,"Complex"],[3,"ParseComplexError"]]},\
"num_integer":{"doc":"Integer trait and functions.","i":[[3,"ExtendedGcd","num_integer","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",0,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots",8]],["roots",8]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[["roots",8]],["roots",8]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[["roots",8]],["roots",8]]],[5,"average_ceil","","Returns the ceiling value of the average of `x` and `y` --…",null,[[["average",8]],["average",8]]],[5,"average_floor","","Returns the floor value of the average of `x` and `y` --…",null,[[["average",8]],["average",8]]],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer",8]]]],[5,"div_floor","","Floored integer division",null,[[["integer",8]],["integer",8]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer",8]],["integer",8]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer",8]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer",8]],["integer",8]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[["integer",8]],["integer",8]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[["integer",8]],["integer",8]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[["integer",8]]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["integer",8],["clone",8]],[["integer",8],["clone",8]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["integer",8],["clone",8]]]],[8,"Roots","","Provides methods to compute an integer\'s square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",1,[[]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[]]],[8,"Average","","Provides methods to compute the average of two integers,…",null,null],[10,"average_ceil","","Returns the ceiling value of the average of `self` and…",2,[[]]],[10,"average_floor","","Returns the floor value of the average of `self` and…",2,[[]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",3,[[]]],[10,"mod_floor","","Floored integer modulo, satisfying:",3,[[]]],[11,"div_ceil","","Ceiled integer division.",3,[[]]],[10,"gcd","","Greatest Common Divisor (GCD).",3,[[]]],[10,"lcm","","Lowest Common Multiple (LCM).",3,[[]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",3,[[]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",3,[[],["extendedgcd",3]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",3,[[]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",3,[[]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",3,[[]]],[10,"is_even","","Returns `true` if the number is even.",3,[[]]],[10,"is_odd","","Returns `true` if the number is odd.",3,[[]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",3,[[]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",3,[[]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",3,[[]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",3,[[]]],[11,"new","","For a given n, iterate over all binomial coefficients…",4,[[],["iterbinomial",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["extendedgcd",3]]]],[11,"ne","","",0,[[["extendedgcd",3]]]],[11,"next","","",4,[[],["option",4]]],[11,"clone","","",0,[[],["extendedgcd",3]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[]]]],"p":[[3,"ExtendedGcd"],[8,"Roots"],[8,"Average"],[8,"Integer"],[3,"IterBinomial"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","i":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",null,null],[3,"RangeFrom","","An iterator over the infinite range starting at `start`",null,null],[3,"RangeStepFrom","","An iterator over the infinite range starting at `start` by…",null,null],[5,"range","","Returns an iterator over the given range [start, stop)…",null,[[],["range",3]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,[[],["rangeinclusive",3]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",null,[[],["rangestep",3]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",null,[[],["rangestepinclusive",3]]],[5,"range_from","","Return an iterator over the infinite range starting at…",null,[[],["rangefrom",3]]],[5,"range_step_from","","Return an iterator over the infinite range starting at…",null,[[],["rangestepfrom",3]]],[11,"from","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"next","","",3,[[],["option",4]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"clone","","",0,[[],["range",3]]],[11,"clone","","",1,[[],["rangeinclusive",3]]],[11,"clone","","",2,[[],["rangestep",3]]],[11,"clone","","",3,[[],["rangestepinclusive",3]]],[11,"clone","","",4,[[],["rangefrom",3]]],[11,"clone","","",5,[[],["rangestepfrom",3]]]],"p":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"]]},\
"num_rational":{"doc":"Rational numbers","i":[[3,"Ratio","num_rational","Represents the ratio between two numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",null,null],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or…",0,[[],["ratio",3]]],[11,"numer","","Gets an immutable reference to the numerator.",0,[[]]],[11,"denom","","Gets an immutable reference to the denominator.",0,[[]]],[11,"new","","Creates a new `Ratio`.",0,[[],["ratio",3]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",0,[[],["ratio",3]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,[[]]],[11,"is_integer","","Returns true if the rational number is an integer…",0,[[]]],[11,"reduced","","Returns a reduced copy of self.",0,[[],["ratio",3]]],[11,"recip","","Returns the reciprocal.",0,[[],["ratio",3]]],[11,"floor","","Rounds towards minus infinity.",0,[[],["ratio",3]]],[11,"ceil","","Rounds towards plus infinity.",0,[[],["ratio",3]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away…",0,[[],["ratio",3]]],[11,"trunc","","Rounds towards zero.",0,[[],["ratio",3]]],[11,"fract","","Returns the fractional part of a number, with division…",0,[[],["ratio",3]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",0,[[],["ratio",3]]],[11,"from_float","","Converts a float into a rational number.",0,[[["floatcore",8]],[["bigrational",6],["option",4]]]],[11,"approximate_float","","",0,[[["floatcore",8],["numcast",8]],[["ratio",3],["option",4]]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","","",0,[[],["ratio",3]]],[11,"from","","",0,[[],["ratio",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"div","","",0,[[["ratio",3]],["ratio",3]]],[11,"div","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"rem","","",0,[[["ratio",3]],["ratio",3]]],[11,"rem","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"sub","","",0,[[],["ratio",3]]],[11,"eq","","",0,[[]]],[11,"eq","","",1,[[["parseratioerror",3]]]],[11,"ne","","",1,[[["parseratioerror",3]]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"partial_cmp","","",0,[[],[["option",4],["ordering",4]]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"add","","",0,[[["ratio",3]],["ratio",3]]],[11,"add","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"mul","","",0,[[["ratio",3]],["ratio",3]]],[11,"mul","","",0,[[],["ratio",3]]],[11,"neg","","",0,[[],["ratio",3]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",0,[[["ratio",3]]]],[11,"add_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",0,[[["ratio",3]]]],[11,"sub_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",0,[[["ratio",3]]]],[11,"mul_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"div_assign","","",0,[[["ratio",3]]]],[11,"div_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"rem_assign","","",0,[[["ratio",3]]]],[11,"rem_assign","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"product","","",0,[[]]],[11,"product","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"sum","","",0,[[]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,[[],[["result",4],["ratio",3],["parseratioerror",3]]]],[11,"into","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["ratio",3]]],[11,"clone","","",1,[[],["parseratioerror",3]]],[11,"description","","",1,[[]]],[11,"checked_add","","",0,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"zero","","",0,[[],["ratio",3]]],[11,"is_zero","","",0,[[]]],[11,"set_zero","","",0,[[]]],[11,"checked_div","","",0,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"to_i64","","",0,[[],["option",4]]],[11,"to_i128","","",0,[[],["option",4]]],[11,"to_u64","","",0,[[],["option",4]]],[11,"to_u128","","",0,[[],["option",4]]],[11,"to_f64","","",0,[[],["option",4]]],[11,"checked_mul","","",0,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"one","","",0,[[],["ratio",3]]],[11,"is_one","","",0,[[]]],[11,"set_one","","",0,[[]]],[11,"checked_sub","","",0,[[["ratio",3]],[["ratio",3],["option",4]]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_i64","","",0,[[],["option",4]]],[11,"from_i128","","",0,[[],["option",4]]],[11,"from_u64","","",0,[[],["option",4]]],[11,"from_u128","","",0,[[],["option",4]]],[11,"from_f32","","",0,[[],["option",4]]],[11,"from_f64","","",0,[[],["option",4]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,[[],[["result",4],["ratio",3],["parseratioerror",3]]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[],["ratio",3]]],[11,"pow","","",0,[[["biguint",3]],["ratio",3]]],[11,"pow","","",0,[[["biguint",3]],["ratio",3]]],[11,"pow","","",0,[[["bigint",3]],["ratio",3]]],[11,"pow","","",0,[[["bigint",3]],["ratio",3]]],[11,"abs","","",0,[[],["ratio",3]]],[11,"abs_sub","","",0,[[["ratio",3]],["ratio",3]]],[11,"signum","","",0,[[],["ratio",3]]],[11,"is_positive","","",0,[[]]],[11,"is_negative","","",0,[[]]],[11,"inv","","",0,[[],["ratio",3]]]],"p":[[3,"Ratio"],[3,"ParseRatioError"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord",8]],["partialord",8]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord",8]],["partialord",8]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast",8]],[["option",4],["numcast",8]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[],["option",4]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[],["option",4]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[],["option",4]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[],["option",4]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[],["option",4]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[],["option",4]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[],["option",4]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[],["option",4]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[],["option",4]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[],["option",4]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[],["option",4]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[],["option",4]]],[11,"to_f32","","Converts the value of `self` to an `f32`. Overflows may…",3,[[],["option",4]]],[11,"to_f64","","Converts the value of `self` to an `f64`. Overflows may…",3,[[],["option",4]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[],["option",4]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[],["option",4]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[],["option",4]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[],["option",4]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[],["option",4]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive",8]],["option",4]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[]]],[10,"neg_infinity","","Returns negative infinity.",7,[[]]],[10,"nan","","Returns NaN.",7,[[]]],[10,"neg_zero","","Returns `-0.0`.",7,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory",4]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[]]],[11,"trunc","","Return the integer part of a number.",7,[[]]],[11,"fract","","Returns the fractional part of a number.",7,[[]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[]]],[11,"min","","Returns the minimum of the two numbers.",7,[[]]],[11,"max","","Returns the maximum of the two numbers.",7,[[]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[]]],[11,"powi","","Raise a number to an integer power.",7,[[]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",8,[[]]],[10,"infinity","","Returns the infinite value.",8,[[]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[]]],[10,"neg_zero","","Returns `-0.0`.",8,[[]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory",4]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[]]],[10,"trunc","","Return the integer part of a number.",8,[[]]],[10,"fract","","Returns the fractional part of a number.",8,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[]]],[10,"powi","","Raise a number to an integer power.",8,[[]]],[10,"powf","","Raise a number to a floating point power.",8,[[]]],[10,"sqrt","","Take the square root of a number.",8,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[]]],[10,"exp2","","Returns `2^(self)`.",8,[[]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[]]],[11,"to_degrees","","Converts radians to degrees.",8,[[]]],[11,"to_radians","","Converts degrees to radians.",8,[[]]],[10,"max","","Returns the maximum of the two numbers.",8,[[]]],[10,"min","","Returns the minimum of the two numbers.",8,[[]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[]]],[10,"cbrt","","Take the cubic root of a number.",8,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[]]],[10,"sinh","","Hyperbolic sine function.",8,[[]]],[10,"cosh","","Hyperbolic cosine function.",8,[[]]],[10,"tanh","","Hyperbolic tangent function.",8,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",9,[[]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[]]],[10,"PI","","Return Archimedes’ constant `π`.",9,[[]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[]]],[11,"TAU","","Return the full circle constant `τ`.",9,[[]]],[11,"LOG10_2","","Return `log10(2.0)`.",9,[[]]],[11,"LOG2_10","","Return `log2(10.0)`.",9,[[]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero",8]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one",8]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",10,[[]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",10,[[]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount, `n`,…",12,[[]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount, `n`,…",12,[[]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[]]],[10,"from_be","","Convert an integer from big endian to the target\'s…",12,[[]]],[10,"from_le","","Convert an integer from little endian to the target\'s…",12,[[]]],[10,"to_be","","Convert `self` to big endian from the target\'s endianness.",12,[[]]],[10,"to_le","","Convert `self` to little endian from the target\'s…",12,[[]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[],["option",4]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[],["option",4]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[],["option",4]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[],["option",4]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[],["option",4]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can\'t…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can\'t…",18,[[],["option",4]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",19,[[],["option",4]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",20,[[],["option",4]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",21,null],[10,"inv","","Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",22,null],[10,"mul_add","","Performs the fused multiply-add operation.",22,[[]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[]]],[0,"overflowing","num_traits::ops","",null,null],[8,"OverflowingAdd","num_traits::ops::overflowing","Performs addition with a flag for overflow.",null,null],[10,"overflowing_add","","Returns a tuple of the sum along with a boolean indicating…",24,[[]]],[8,"OverflowingSub","","Performs substraction with a flag for overflow.",null,null],[10,"overflowing_sub","","Returns a tuple of the difference along with a boolean…",25,[[]]],[8,"OverflowingMul","","Performs multiplication with a flag for overflow.",null,null],[10,"overflowing_mul","","Returns a tuple of the product along with a boolean…",26,[[]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations. Deprecated, use…",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",27,[[]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",27,[[]]],[8,"SaturatingAdd","","Performs addition that saturates at the numeric bounds…",null,null],[10,"saturating_add","","Saturating addition. Computes `self + other`, saturating…",28,[[]]],[8,"SaturatingSub","","Performs subtraction that saturates at the numeric bounds…",null,null],[10,"saturating_sub","","Saturating subtraction. Computes `self - other`,…",29,[[]]],[8,"SaturatingMul","","Performs multiplication that saturates at the numeric…",null,null],[10,"saturating_mul","","Saturating multiplication. Computes `self * other`,…",30,[[]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",31,[[]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",32,[[]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",33,[[]]],[8,"WrappingNeg","","Performs a negation that does not panic.",null,null],[10,"wrapping_neg","","Wrapping (modular) negation. Computes `-self`, wrapping…",34,[[]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",35,[[]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",36,[[]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["mul",8],["clone",8],["one",8]],[["one",8],["clone",8],["mul",8]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["one",8],["clone",8],["checkedmul",8]],[["checkedmul",8],["one",8],["option",4],["clone",8]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",37,null],[10,"pow","","Returns `self` to the power `rhs`.",37,[[]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",38,[[]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",38,[[]]],[10,"epsilon","","Returns epsilon, a small positive value.",38,[[]]],[10,"max_value","","Returns the largest finite value that this type can…",38,[[]]],[10,"floor","","Returns the largest integer less than or equal to a number.",38,[[]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",38,[[]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",38,[[]]],[10,"trunc","","Return the integer part of a number.",38,[[]]],[10,"fract","","Returns the fractional part of a number.",38,[[]]],[10,"abs","","Computes the absolute value of `self`. Returns…",38,[[]]],[10,"signum","","Returns a number that represents the sign of `self`.",38,[[]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",38,[[]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",38,[[]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",38,[[]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",38,[[]]],[10,"powi","","Raise a number to an integer power.",38,[[]]],[10,"powf","","Raise a number to a real number power.",38,[[]]],[10,"sqrt","","Take the square root of a number.",38,[[]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",38,[[]]],[10,"exp2","","Returns `2^(self)`.",38,[[]]],[10,"ln","","Returns the natural logarithm of the number.",38,[[]]],[10,"log","","Returns the logarithm of the number with respect to an…",38,[[]]],[10,"log2","","Returns the base 2 logarithm of the number.",38,[[]]],[10,"log10","","Returns the base 10 logarithm of the number.",38,[[]]],[10,"to_degrees","","Converts radians to degrees.",38,[[]]],[10,"to_radians","","Converts degrees to radians.",38,[[]]],[10,"max","","Returns the maximum of the two numbers.",38,[[]]],[10,"min","","Returns the minimum of the two numbers.",38,[[]]],[10,"abs_sub","","The positive difference of two numbers.",38,[[]]],[10,"cbrt","","Take the cubic root of a number.",38,[[]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",38,[[]]],[10,"sin","","Computes the sine of a number (in radians).",38,[[]]],[10,"cos","","Computes the cosine of a number (in radians).",38,[[]]],[10,"tan","","Computes the tangent of a number (in radians).",38,[[]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",38,[[]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",38,[[]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",38,[[]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",38,[[]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",38,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",38,[[]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",38,[[]]],[10,"sinh","","Hyperbolic sine function.",38,[[]]],[10,"cosh","","Hyperbolic cosine function.",38,[[]]],[10,"tanh","","Hyperbolic tangent function.",38,[[]]],[10,"asinh","","Inverse hyperbolic sine function.",38,[[]]],[10,"acosh","","Inverse hyperbolic cosine function.",38,[[]]],[10,"atanh","","Inverse hyperbolic tangent function.",38,[[]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed",8]],["signed",8]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed",8]],["signed",8]]],[5,"signum","","Returns the sign of the number.",null,[[["signed",8]],["signed",8]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",39,[[]]],[10,"abs_sub","","The positive difference of two numbers.",39,[[]]],[10,"signum","","Returns the sign of the number.",39,[[]]],[10,"is_positive","","Returns true if the number is positive and false if the…",39,[[]]],[10,"is_negative","","Returns true if the number is negative and false if the…",39,[[]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",40,null],[10,"from_str_radix","","Convert from a string and radix (typically `2..=36`).",40,[[],["result",4]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]},\
"object":{"doc":"`object`","i":[[4,"Architecture","object","A CPU architecture.",null,null],[13,"Unknown","","",0,null],[13,"Aarch64","","",0,null],[13,"Arm","","",0,null],[13,"Avr","","",0,null],[13,"Bpf","","",0,null],[13,"I386","","",0,null],[13,"X86_64","","",0,null],[13,"X86_64_X32","","",0,null],[13,"Hexagon","","",0,null],[13,"Mips","","",0,null],[13,"Mips64","","",0,null],[13,"Msp430","","",0,null],[13,"PowerPc","","",0,null],[13,"PowerPc64","","",0,null],[13,"Riscv32","","",0,null],[13,"Riscv64","","",0,null],[13,"S390x","","",0,null],[13,"Sparc64","","",0,null],[13,"Wasm32","","",0,null],[4,"AddressSize","","The size of an address value for an architecture.",null,null],[13,"U8","","",1,null],[13,"U16","","",1,null],[13,"U32","","",1,null],[13,"U64","","",1,null],[4,"BinaryFormat","","A binary file format.",null,null],[13,"Coff","","",2,null],[13,"Elf","","",2,null],[13,"MachO","","",2,null],[13,"Pe","","",2,null],[13,"Wasm","","",2,null],[4,"SectionKind","","The kind of a section.",null,null],[13,"Unknown","","The section kind is unknown.",3,null],[13,"Text","","An executable code section.",3,null],[13,"Data","","A data section.",3,null],[13,"ReadOnlyData","","A read only data section.",3,null],[13,"ReadOnlyString","","A loadable string section.",3,null],[13,"UninitializedData","","An uninitialized data section.",3,null],[13,"Common","","An uninitialized common data section.",3,null],[13,"Tls","","A TLS data section.",3,null],[13,"UninitializedTls","","An uninitialized TLS data section.",3,null],[13,"TlsVariables","","A TLS variables section.",3,null],[13,"OtherString","","A non-loadable string section.",3,null],[13,"Other","","Some other non-loadable section.",3,null],[13,"Debug","","Debug information.",3,null],[13,"Linker","","Information for the linker.",3,null],[13,"Note","","ELF note section.",3,null],[13,"Metadata","","Metadata such as symbols or relocations.",3,null],[13,"Elf","","Some other ELF section type.",3,null],[4,"ComdatKind","","The selection kind for a COMDAT section group.",null,null],[13,"Unknown","","The selection kind is unknown.",4,null],[13,"Any","","Multiple definitions are allowed.",4,null],[13,"NoDuplicates","","Multiple definitions are not allowed.",4,null],[13,"SameSize","","Multiple definitions must have the same size.",4,null],[13,"ExactMatch","","Multiple definitions must match exactly.",4,null],[13,"Largest","","Multiple definitions are allowed, and the largest is…",4,null],[13,"Newest","","Multiple definitions are allowed, and the newest is…",4,null],[4,"SymbolKind","","The kind of a symbol.",null,null],[13,"Unknown","","The symbol kind is unknown.",5,null],[13,"Null","","The symbol is a null placeholder.",5,null],[13,"Text","","The symbol is for executable code.",5,null],[13,"Data","","The symbol is for a data object.",5,null],[13,"Section","","The symbol is for a section.",5,null],[13,"File","","The symbol is the name of a file. It precedes symbols…",5,null],[13,"Label","","The symbol is for a code label.",5,null],[13,"Tls","","The symbol is for a thread local storage entity.",5,null],[4,"SymbolScope","","A symbol scope.",null,null],[13,"Unknown","","Unknown scope.",6,null],[13,"Compilation","","Symbol is visible to the compilation unit.",6,null],[13,"Linkage","","Symbol is visible to the static linkage unit.",6,null],[13,"Dynamic","","Symbol is visible to dynamically linked objects.",6,null],[4,"RelocationKind","","The operation used to calculate the result of the…",null,null],[13,"Absolute","","S + A",7,null],[13,"Relative","","S + A - P",7,null],[13,"Got","","G + A - GotBase",7,null],[13,"GotRelative","","G + A - P",7,null],[13,"GotBaseRelative","","GotBase + A - P",7,null],[13,"GotBaseOffset","","S + A - GotBase",7,null],[13,"PltRelative","","L + A - P",7,null],[13,"ImageOffset","","S + A - Image",7,null],[13,"SectionOffset","","S + A - Section",7,null],[13,"SectionIndex","","The index of the section containing the symbol.",7,null],[13,"Elf","","Some other ELF relocation. The value is dependent on the…",7,null],[13,"MachO","","Some other Mach-O relocation. The value is dependent on…",7,null],[12,"value","object::RelocationKind","The relocation type.",8,null],[12,"relative","","Whether the relocation is relative to the place.",8,null],[13,"Coff","object","Some other COFF relocation. The value is dependent on the…",7,null],[4,"RelocationEncoding","","Information about how the result of the relocation…",null,null],[13,"Generic","","Generic encoding.",9,null],[13,"X86Signed","","x86 sign extension at runtime.",9,null],[13,"X86RipRelative","","x86 rip-relative addressing.",9,null],[13,"X86RipRelativeMovq","","x86 rip-relative addressing in movq instruction.",9,null],[13,"X86Branch","","x86 branch instruction.",9,null],[13,"S390xDbl","","s390x PC-relative offset shifted right by one bit.",9,null],[13,"AArch64Call","","AArch64 call target.",9,null],[4,"FileFlags","","File flags that are specific to each file format.",null,null],[13,"None","","No file flags.",10,null],[13,"Elf","","ELF file flags.",10,null],[12,"e_flags","object::FileFlags","`e_flags` field in the ELF file header.",11,null],[13,"MachO","object","Mach-O file flags.",10,null],[12,"flags","object::FileFlags","`flags` field in the Mach-O file header.",12,null],[13,"Coff","object","COFF file flags.",10,null],[12,"characteristics","object::FileFlags","`Characteristics` field in the COFF file header.",13,null],[4,"SectionFlags","object","Section flags that are specific to each file format.",null,null],[13,"None","","No section flags.",14,null],[13,"Elf","","ELF section flags.",14,null],[12,"sh_flags","object::SectionFlags","`sh_flags` field in the section header.",15,null],[13,"MachO","object","Mach-O section flags.",14,null],[12,"flags","object::SectionFlags","`flags` field in the section header.",16,null],[13,"Coff","object","COFF section flags.",14,null],[12,"characteristics","object::SectionFlags","`Characteristics` field in the section header.",17,null],[4,"SymbolFlags","object","Symbol flags that are specific to each file format.",null,null],[13,"None","","No symbol flags.",18,null],[13,"Elf","","ELF symbol flags.",18,null],[12,"st_info","object::SymbolFlags","`st_info` field in the ELF symbol.",19,null],[12,"st_other","","`st_other` field in the ELF symbol.",19,null],[13,"MachO","object","Mach-O symbol flags.",18,null],[12,"n_desc","object::SymbolFlags","`n_desc` field in the Mach-O symbol.",20,null],[13,"CoffSection","object","COFF flags for a section symbol.",18,null],[12,"selection","object::SymbolFlags","`Selection` field in the auxiliary symbol for the section.",21,null],[12,"associative_section","","`Number` field in the auxiliary symbol for the section.",21,null],[11,"address_size","object","The size of an address value for this architecture.",0,[[],[["option",4],["addresssize",4]]]],[11,"bytes","","The size in bytes of an address value.",1,[[]]],[11,"is_bss","","Return true if this section contains zerofill data.",3,[[]]],[0,"endian","","Types for compile-time and run-time endianness.",null,null],[3,"LittleEndian","object::endian","Compile-time little endian byte order.",null,null],[3,"BigEndian","","Compile-time big endian byte order.",null,null],[3,"U16Bytes","","An unaligned `u16` value with an externally specified…",null,null],[3,"U32Bytes","","An unaligned `u32` value with an externally specified…",null,null],[3,"U64Bytes","","An unaligned `u64` value with an externally specified…",null,null],[3,"I16Bytes","","An unaligned `i16` value with an externally specified…",null,null],[3,"I32Bytes","","An unaligned `i32` value with an externally specified…",null,null],[3,"I64Bytes","","An unaligned `i64` value with an externally specified…",null,null],[4,"Endianness","","An endianness that is selectable at run-time.",null,null],[13,"Little","","Little endian byte order.",22,null],[13,"Big","","Big endian byte order.",22,null],[6,"NativeEndian","","The native endianness for the target platform.",null,null],[6,"U16","","A `u16` value with an externally specified endianness of…",null,null],[6,"U32","","A `u32` value with an externally specified endianness of…",null,null],[6,"U64","","A `u64` value with an externally specified endianness of…",null,null],[6,"I16","","An `i16` value with an externally specified endianness of…",null,null],[6,"I32","","An `i32` value with an externally specified endianness of…",null,null],[6,"I64","","An `i64` value with an externally specified endianness of…",null,null],[8,"Endian","","A trait for using an endianness specification.",null,null],[10,"from_big_endian","","Construct a specification for the endianness of some values.",23,[[],["option",4]]],[11,"from_little_endian","","Construct a specification for the endianness of some values.",23,[[],["option",4]]],[10,"is_big_endian","","Return true for big endian byte order.",23,[[]]],[11,"is_little_endian","","Return true for little endian byte order.",23,[[]]],[11,"read_u16","","Converts an unsigned 16 bit integer to native endian.",23,[[]]],[11,"read_u32","","Converts an unsigned 32 bit integer to native endian.",23,[[]]],[11,"read_u64","","Converts an unsigned 64 bit integer to native endian.",23,[[]]],[11,"read_i16","","Converts a signed 16 bit integer to native endian.",23,[[]]],[11,"read_i32","","Converts a signed 32 bit integer to native endian.",23,[[]]],[11,"read_i64","","Converts a signed 64 bit integer to native endian.",23,[[]]],[11,"read_u16_bytes","","Converts an unaligned unsigned 16 bit integer to native…",23,[[]]],[11,"read_u32_bytes","","Converts an unaligned unsigned 32 bit integer to native…",23,[[]]],[11,"read_u64_bytes","","Converts an unaligned unsigned 64 bit integer to native…",23,[[]]],[11,"read_i16_bytes","","Converts an unaligned signed 16 bit integer to native…",23,[[]]],[11,"read_i32_bytes","","Converts an unaligned signed 32 bit integer to native…",23,[[]]],[11,"read_i64_bytes","","Converts an unaligned signed 64 bit integer to native…",23,[[]]],[11,"write_u16","","Converts an unsigned 16 bit integer from native endian.",23,[[]]],[11,"write_u32","","Converts an unsigned 32 bit integer from native endian.",23,[[]]],[11,"write_u64","","Converts an unsigned 64 bit integer from native endian.",23,[[]]],[11,"write_i16","","Converts a signed 16 bit integer from native endian.",23,[[]]],[11,"write_i32","","Converts a signed 32 bit integer from native endian.",23,[[]]],[11,"write_i64","","Converts a signed 64 bit integer from native endian.",23,[[]]],[11,"write_u16_bytes","","Converts an unaligned unsigned 16 bit integer from native…",23,[[]]],[11,"write_u32_bytes","","Converts an unaligned unsigned 32 bit integer from native…",23,[[]]],[11,"write_u64_bytes","","Converts an unaligned unsigned 64 bit integer from native…",23,[[]]],[11,"write_i16_bytes","","Converts an unaligned signed 16 bit integer from native…",23,[[]]],[11,"write_i32_bytes","","Converts an unaligned signed 32 bit integer from native…",23,[[]]],[11,"write_i64_bytes","","Converts an unaligned signed 64 bit integer from native…",23,[[]]],[11,"new","","Construct a new value given a native endian value.",24,[[]]],[11,"get","","Return the value as a native endian value.",24,[[]]],[11,"set","","Set the value given a native endian value.",24,[[]]],[11,"new","","Construct a new value given a native endian value.",25,[[]]],[11,"get","","Return the value as a native endian value.",25,[[]]],[11,"set","","Set the value given a native endian value.",25,[[]]],[11,"new","","Construct a new value given a native endian value.",26,[[]]],[11,"get","","Return the value as a native endian value.",26,[[]]],[11,"set","","Set the value given a native endian value.",26,[[]]],[11,"new","","Construct a new value given a native endian value.",27,[[]]],[11,"get","","Return the value as a native endian value.",27,[[]]],[11,"set","","Set the value given a native endian value.",27,[[]]],[11,"new","","Construct a new value given a native endian value.",28,[[]]],[11,"get","","Return the value as a native endian value.",28,[[]]],[11,"set","","Set the value given a native endian value.",28,[[]]],[11,"new","","Construct a new value given a native endian value.",29,[[]]],[11,"get","","Return the value as a native endian value.",29,[[]]],[11,"set","","Set the value given a native endian value.",29,[[]]],[0,"pod","object","Tools for converting file format structures to and from…",null,null],[5,"from_bytes","object::pod","Cast a byte slice to a `Pod` type.",null,[[],["result",4]]],[5,"from_bytes_mut","","Cast a mutable byte slice to a `Pod` type.",null,[[],["result",4]]],[5,"slice_from_bytes","","Cast a byte slice to a slice of a `Pod` type.",null,[[],["result",4]]],[5,"slice_from_bytes_mut","","Cast a mutable byte slice to a slice of a `Pod` type.",null,[[],["result",4]]],[5,"bytes_of","","Cast a `Pod` type to a byte slice.",null,[[]]],[5,"bytes_of_mut","","Cast a `Pod` type to a mutable byte slice.",null,[[]]],[5,"bytes_of_slice","","Cast a slice of a `Pod` type to a byte slice.",null,[[]]],[5,"bytes_of_slice_mut","","Cast a slice of a `Pod` type to a mutable byte slice.",null,[[]]],[8,"Pod","","A trait for types that can safely be converted from and to…",null,null],[0,"read","object","Interface for reading object files.",null,null],[3,"Bytes","object::read","A newtype for byte slices.",null,null],[12,"0","","",30,null],[3,"StringTable","","A table of zero-terminated strings.",null,null],[3,"File","","An object file.",null,null],[3,"SegmentIterator","","An iterator over the segments of a `File`.",null,null],[3,"Segment","","A segment of a `File`.",null,null],[3,"SectionIterator","","An iterator of the sections of a `File`.",null,null],[3,"Section","","A Section of a File",null,null],[3,"ComdatIterator","","An iterator of the COMDAT section groups of a `File`.",null,null],[3,"Comdat","","A COMDAT section group of a `File`.",null,null],[3,"ComdatSectionIterator","","An iterator over COMDAT section entries.",null,null],[3,"SymbolTable","","A symbol table.",null,null],[3,"SymbolIterator","","An iterator over symbol table entries.",null,null],[3,"Symbol","","A symbol table entry.",null,null],[3,"DynamicRelocationIterator","","An iterator over dynamic relocation entries.",null,null],[3,"SectionRelocationIterator","","An iterator over section relocation entries.",null,null],[3,"NoDynamicRelocationIterator","","An iterator for files that don\'t have dynamic relocations.",null,null],[3,"Error","","The error type used within the read module.",null,null],[3,"SectionIndex","","The index used to identify a section of a file.",null,null],[12,"0","","",31,null],[3,"SymbolIndex","","The index used to identify a symbol of a file.",null,null],[12,"0","","",32,null],[3,"SymbolMap","","A map from addresses to symbols.",null,null],[3,"SymbolMapName","","A `SymbolMap` entry for symbol names.",null,null],[3,"ObjectMap","","A map from addresses to symbol names and object files.",null,null],[3,"ObjectMapEntry","","A `ObjectMap` entry.",null,null],[3,"Import","","An imported symbol.",null,null],[3,"Export","","An exported symbol.",null,null],[3,"CodeView","","PDB Information",null,null],[3,"Relocation","","A relocation entry.",null,null],[3,"CompressedFileRange","","A range in a file that may be compressed.",null,null],[12,"format","","The data compression format.",33,null],[12,"offset","","The file offset of the compressed data.",33,null],[12,"compressed_size","","The compressed data size.",33,null],[12,"uncompressed_size","","The uncompressed data size.",33,null],[3,"CompressedData","","Data that may be compressed.",null,null],[12,"format","","The data compression format.",34,null],[12,"data","","The compressed data.",34,null],[12,"uncompressed_size","","The uncompressed data size.",34,null],[4,"FileKind","","A file format kind.",null,null],[13,"Archive","","A Unix archive.",35,null],[13,"Coff","","A COFF object file.",35,null],[13,"DyldCache","","A dyld cache file containing Mach-O images.",35,null],[13,"Elf32","","A 32-bit ELF file.",35,null],[13,"Elf64","","A 64-bit ELF file.",35,null],[13,"MachO32","","A 32-bit Mach-O file.",35,null],[13,"MachO64","","A 64-bit Mach-O file.",35,null],[13,"MachOFat32","","A 32-bit Mach-O fat binary.",35,null],[13,"MachOFat64","","A 64-bit Mach-O fat binary.",35,null],[13,"Pe32","","A 32-bit PE file.",35,null],[13,"Pe64","","A 64-bit PE file.",35,null],[4,"ObjectKind","","An object kind.",null,null],[13,"Unknown","","The object kind is unknown.",36,null],[13,"Relocatable","","Relocatable object.",36,null],[13,"Executable","","Executable.",36,null],[13,"Dynamic","","Dynamic shared object.",36,null],[13,"Core","","Core.",36,null],[4,"SymbolSection","","The section where a symbol is defined.",null,null],[13,"Unknown","","The section is unknown.",37,null],[13,"None","","The section is not applicable for this symbol (such as…",37,null],[13,"Undefined","","The symbol is undefined.",37,null],[13,"Absolute","","The symbol has an absolute value.",37,null],[13,"Common","","The symbol is a zero-initialized symbol that will be…",37,null],[13,"Section","","The symbol is defined in the given section.",37,null],[4,"RelocationTarget","","The target referenced by a relocation.",null,null],[13,"Symbol","","The target is a symbol.",38,null],[13,"Section","","The target is a section.",38,null],[13,"Absolute","","The offset is an absolute address.",38,null],[4,"CompressionFormat","","A data compression format.",null,null],[13,"None","","The data is uncompressed.",39,null],[13,"Unknown","","The data is compressed, but the compression format is…",39,null],[13,"Zlib","","ZLIB/DEFLATE.",39,null],[11,"len","","Return the length of the byte slice.",30,[[]]],[11,"is_empty","","Return true if the byte slice is empty.",30,[[]]],[11,"skip","","Skip over the given number of bytes at the start of the…",30,[[],["result",4]]],[11,"read_bytes","","Return a reference to the given number of bytes at the…",30,[[],[["result",4],["bytes",3]]]],[11,"read_bytes_at","","Return a reference to the given number of bytes at the…",30,[[],[["result",4],["bytes",3]]]],[11,"read","","Return a reference to a `Pod` struct at the start of the…",30,[[],["result",4]]],[11,"read_at","","Return a reference to a `Pod` struct at the given offset…",30,[[],["result",4]]],[11,"read_slice","","Return a reference to a slice of `Pod` structs at the…",30,[[],["result",4]]],[11,"read_slice_at","","Return a reference to a slice of `Pod` structs at the…",30,[[],["result",4]]],[11,"read_string","","Read a null terminated string.",30,[[],["result",4]]],[11,"read_string_at","","Read a null terminated string at an offset.",30,[[],["result",4]]],[11,"new","","Interpret the given data as a string table.",40,[[]]],[11,"get","","Return the string at the given offset.",40,[[],["result",4]]],[11,"parse","","Parse the raw file data.",41,[[],["result",6]]],[11,"parse_at","","Parse the raw file data at an arbitrary offset inside the…",41,[[],["result",6]]],[11,"format","","Return the file format.",41,[[],["binaryformat",4]]],[0,"archive","","Support for archive files.",null,null],[3,"ArchiveFile","object::read::archive","A partially parsed archive file.",null,null],[3,"ArchiveMemberIterator","","An iterator over the members of an archive.",null,null],[3,"ArchiveMember","","A partially parsed archive member.",null,null],[4,"ArchiveKind","","The kind of archive format.",null,null],[13,"Unknown","","There are no special files that indicate the archive format.",42,null],[13,"Gnu","","The GNU (or System V) archive format.",42,null],[13,"Gnu64","","The GNU (or System V) archive format with 64-bit symbol…",42,null],[13,"Bsd","","The BSD archive format.",42,null],[13,"Bsd64","","The BSD archive format with 64-bit symbol table.",42,null],[13,"Coff","","The Windows COFF archive format.",42,null],[11,"parse","","Parse the archive header and special members.",43,[[],["result",6]]],[11,"kind","","Return the archive format.",43,[[],["archivekind",4]]],[11,"members","","Iterate over the members of the archive.",43,[[],["archivememberiterator",3]]],[11,"header","","Return the raw header.",44,[[],["header",3]]],[11,"name","","Return the parsed file name.",44,[[]]],[11,"date","","Parse the file modification timestamp from the header.",44,[[],["option",4]]],[11,"uid","","Parse the user ID from the header.",44,[[],["option",4]]],[11,"gid","","Parse the group ID from the header.",44,[[],["option",4]]],[11,"mode","","Parse the file mode from the header.",44,[[],["option",4]]],[11,"file_range","","Return the offset and size of the file data.",44,[[]]],[11,"data","","Return the file data.",44,[[["readref",8]],["result",6]]],[0,"coff","object::read","Support for reading Windows COFF files.",null,null],[3,"CoffFile","object::read::coff","A COFF object file.",null,null],[3,"SectionTable","","The table of section headers in a COFF or PE file.",null,null],[3,"CoffSegmentIterator","","An iterator over the loadable sections of a `CoffFile`.",null,null],[3,"CoffSegment","","A loadable section of a `CoffFile`.",null,null],[3,"CoffSectionIterator","","An iterator over the sections of a `CoffFile`.",null,null],[3,"CoffSection","","A section of a `CoffFile`.",null,null],[3,"SymbolTable","","A table of symbol entries in a COFF or PE file.",null,null],[3,"SymbolIterator","","An iterator for symbol entries in a COFF or PE file.",null,null],[3,"CoffSymbolTable","","A symbol table of a `CoffFile`.",null,null],[3,"CoffSymbolIterator","","An iterator over the symbols of a `CoffFile`.",null,null],[3,"CoffSymbol","","A symbol of a `CoffFile`.",null,null],[3,"CoffRelocationIterator","","An iterator over the relocations in a `CoffSection`.",null,null],[3,"CoffComdatIterator","","An iterator over the COMDAT section groups of a `CoffFile`.",null,null],[3,"CoffComdat","","A COMDAT section group of a `CoffFile`.",null,null],[3,"CoffComdatSectionIterator","","An iterator over the sections in a COMDAT section group of…",null,null],[11,"parse","","Parse the raw COFF file data.",45,[[],["result",6]]],[11,"parse","","Parse the section table.",46,[[["readref",8],["imagefileheader",3]],["result",6]]],[11,"iter","","Iterate over the section headers.",46,[[],[["iter",3],["imagesectionheader",3]]]],[11,"is_empty","","Return true if the section table is empty.",46,[[]]],[11,"len","","The number of section headers.",46,[[]]],[11,"section","","Return the section header at the given index.",46,[[],[["result",6],["imagesectionheader",3]]]],[11,"section_by_name","","Return the section header with the given name.",46,[[["readref",8],["stringtable",3]],["option",4]]],[11,"max_section_file_offset","","Compute the maximum file offset used by sections.",46,[[]]],[11,"parse","","Read the symbol table.",47,[[["imagefileheader",3]],["result",6]]],[11,"strings","","Return the string table used for the symbol names.",47,[[],["stringtable",3]]],[11,"is_empty","","Return true if the symbol table is empty.",47,[[]]],[11,"len","","The number of symbol table entries.",47,[[]]],[11,"iter","","Iterate over the symbols.",47,[[],["symboliterator",3]]],[11,"symbol","","Return the symbol table entry at the given index.",47,[[],[["result",6],["imagesymbol",3]]]],[11,"aux_function","","Return the auxiliary function symbol for the symbol table…",47,[[],[["imageauxsymbolfunction",3],["result",6]]]],[11,"aux_section","","Return the auxiliary section symbol for the symbol table…",47,[[],[["result",6],["imageauxsymbolsection",3]]]],[11,"aux_file_name","","Return the auxiliary file name for the symbol table entry…",47,[[],["result",6]]],[11,"get","","Return the symbol table entry or auxiliary record at the…",47,[[],["result",6]]],[11,"map","","Construct a map from addresses to a user-defined map entry.",47,[[["fn",8]],[["symbolmapentry",8],["symbolmap",3]]]],[0,"elf","object::read","Support for reading ELF files.",null,null],[3,"ElfFile","object::read::elf","A partially parsed ELF file.",null,null],[3,"ElfSegmentIterator","","An iterator over the segments of an `ElfFile`.",null,null],[3,"ElfSegment","","A segment of an `ElfFile`.",null,null],[3,"SectionTable","","The table of section headers in an ELF file.",null,null],[3,"ElfSectionIterator","","An iterator over the sections of an `ElfFile`.",null,null],[3,"ElfSection","","A section of an `ElfFile`.",null,null],[3,"SymbolTable","","A table of symbol entries in an ELF file.",null,null],[3,"ElfSymbolTable","","A symbol table of an `ElfFile`.",null,null],[3,"ElfSymbolIterator","","An iterator over the symbols of an `ElfFile`.",null,null],[3,"ElfSymbol","","A symbol of an `ElfFile`.",null,null],[3,"RelocationSections","","A mapping from section index to associated relocation…",null,null],[3,"ElfDynamicRelocationIterator","","An iterator over the dynamic relocations for an `ElfFile`.",null,null],[3,"ElfSectionRelocationIterator","","An iterator over the relocations for an `ElfSection`.",null,null],[3,"ElfComdatIterator","","An iterator over the COMDAT section groups of an `ElfFile`.",null,null],[3,"ElfComdat","","A COMDAT section group of an `ElfFile`.",null,null],[3,"ElfComdatSectionIterator","","An iterator over the sections in a COMDAT section group of…",null,null],[3,"NoteIterator","","An iterator over the notes in an ELF section or segment.",null,null],[3,"Note","","A parsed `NoteHeader`.",null,null],[3,"HashTable","","A SysV symbol hash table in an ELF file.",null,null],[3,"GnuHashTable","","A GNU symbol hash table in an ELF file.",null,null],[3,"VersionIndex","","A version index.",null,null],[12,"0","","",48,null],[3,"Version","","A version definition or requirement.",null,null],[3,"VersionTable","","A table of version definitions and requirements.",null,null],[3,"VerdefIterator","","An iterator over the entries in an ELF `SHT_GNU_verdef`…",null,null],[3,"VerdauxIterator","","An iterator over the auxiliary records for an entry in an…",null,null],[3,"VerneedIterator","","An iterator over the entries in an ELF `SHT_GNU_verneed`…",null,null],[3,"VernauxIterator","","An iterator over the auxiliary records for an entry in an…",null,null],[11,"parse","","Parse the raw ELF file data.",49,[[],["result",6]]],[11,"endian","","Returns the endianness.",49,[[]]],[11,"data","","Returns the raw data.",49,[[]]],[11,"raw_header","","Returns the raw ELF file header.",49,[[]]],[11,"raw_segments","","Returns the raw ELF segments.",49,[[]]],[11,"new","","Create a new section table.",50,[[["stringtable",3]]]],[11,"iter","","Iterate over the section headers.",50,[[],["iter",3]]],[11,"is_empty","","Return true if the section table is empty.",50,[[]]],[11,"len","","The number of section headers.",50,[[]]],[11,"section","","Return the section header at the given index.",50,[[["sectionindex",3]],["result",6]]],[11,"section_by_name","","Return the section header with the given name.",50,[[],["option",4]]],[11,"section_name","","Return the section name for the given section header.",50,[[],["result",6]]],[11,"strings","","Return the string table at the given section index.",50,[[["sectionindex",3]],[["result",6],["stringtable",3]]]],[11,"symbols","","Return the symbol table of the given section type.",50,[[],[["symboltable",3],["result",6]]]],[11,"symbol_table_by_index","","Return the symbol table at the given section index.",50,[[["sectionindex",3]],[["symboltable",3],["result",6]]]],[11,"relocation_sections","","Create a mapping from section index to associated…",50,[[["sectionindex",3]],[["result",6],["relocationsections",3]]]],[11,"dynamic","","Return the contents of a dynamic section.",50,[[],[["result",6],["option",4]]]],[11,"hash_header","","Return the header of a SysV hash section.",50,[[],[["result",6],["option",4]]]],[11,"hash","","Return the contents of a SysV hash section.",50,[[],[["result",6],["option",4]]]],[11,"gnu_hash_header","","Return the header of a GNU hash section.",50,[[],[["option",4],["result",6]]]],[11,"gnu_hash","","Return the contents of a GNU hash section.",50,[[],[["option",4],["result",6]]]],[11,"gnu_versym","","Return the contents of a `SHT_GNU_VERSYM` section.",50,[[],[["option",4],["result",6]]]],[11,"gnu_verdef","","Return the contents of a `SHT_GNU_VERDEF` section.",50,[[],[["option",4],["result",6]]]],[11,"gnu_verneed","","Return the contents of a `SHT_GNU_VERNEED` section.",50,[[],[["result",6],["option",4]]]],[11,"versions","","Returns the symbol version table.",50,[[],[["result",6],["option",4]]]],[11,"parse","","Parse the given symbol table section.",51,[[["sectiontable",3],["sectionindex",3]],[["symboltable",3],["result",6]]]],[11,"section","","Return the section index of this symbol table.",51,[[],["sectionindex",3]]],[11,"shndx_section","","Return the section index of the shndx table.",51,[[],["sectionindex",3]]],[11,"string_section","","Return the section index of the linked string table.",51,[[],["sectionindex",3]]],[11,"strings","","Return the string table used for the symbol names.",51,[[],["stringtable",3]]],[11,"symbols","","Return the symbol table.",51,[[]]],[11,"iter","","Iterate over the symbols.",51,[[],["iter",3]]],[11,"is_empty","","Return true if the symbol table is empty.",51,[[]]],[11,"len","","The number of symbols.",51,[[]]],[11,"symbol","","Return the symbol at the given index.",51,[[],["result",6]]],[11,"shndx","","Return the extended section index for the given symbol if…",51,[[],["option",4]]],[11,"symbol_section","","Return the section index for the given symbol.",51,[[],[["result",6],["option",4]]]],[11,"symbol_name","","Return the symbol name for the given symbol.",51,[[],["result",6]]],[11,"map","","Construct a map from addresses to a user-defined map entry.",51,[[["fn",8]],[["symbolmapentry",8],["symbolmap",3]]]],[11,"parse","","Create a new mapping using the section table.",52,[[["sectiontable",3],["sectionindex",3]],["result",6]]],[11,"get","","Given a section index, return the section index of the…",52,[[],["option",4]]],[11,"next","","Returns the next note.",53,[[],[["result",6],["option",4]]]],[11,"n_type","","Return the `n_type` field of the `NoteHeader`.",54,[[]]],[11,"n_namesz","","Return the `n_namesz` field of the `NoteHeader`.",54,[[]]],[11,"n_descsz","","Return the `n_descsz` field of the `NoteHeader`.",54,[[]]],[11,"name","","Return the bytes for the name field following the…",54,[[]]],[11,"desc","","Return the bytes for the desc field following the…",54,[[]]],[11,"parse","","Parse a SysV hash table.",55,[[],["result",6]]],[11,"symbol_table_length","","Return the symbol table length.",55,[[]]],[11,"find","","Use the hash table to find the symbol table entry with the…",55,[[["option",4],["symboltable",3],["version",3],["versiontable",3]],["option",4]]],[11,"parse","","Parse a GNU hash table.",56,[[],["result",6]]],[11,"symbol_base","","Return the symbol table index of the first symbol in the…",56,[[]]],[11,"symbol_table_length","","Determine the symbol table length by finding the last…",56,[[],["option",4]]],[11,"find","","Use the hash table to find the symbol table entry with the…",56,[[["option",4],["symboltable",3],["version",3],["versiontable",3]],["option",4]]],[11,"index","","Return the version index.",48,[[]]],[11,"is_local","","Return true if it is the local index.",48,[[]]],[11,"is_global","","Return true if it is the global index.",48,[[]]],[11,"is_hidden","","Return the hidden flag.",48,[[]]],[11,"name","","Return the version name.",57,[[]]],[11,"hash","","Return hash of the version name.",57,[[]]],[11,"parse","","Parse the version sections.",58,[[["option",4],["option",4],["stringtable",3],["verneediterator",3],["readref",8],["verdefiterator",3]],["result",6]]],[11,"is_empty","","Return true if the version table is empty.",58,[[]]],[11,"version_index","","Return version index for a given symbol index.",58,[[],["versionindex",3]]],[11,"version","","Return version information for a given symbol version index.",58,[[["versionindex",3]],[["option",4],["result",6]]]],[11,"matches","","Return true if the given symbol index satisifies the…",58,[[["option",4],["version",3]]]],[11,"next","","Return the next `Verdef` entry.",59,[[],[["result",6],["option",4]]]],[11,"next","","Return the next `Verdaux` entry.",60,[[],[["option",4],["result",6]]]],[11,"next","","Return the next `Verneed` entry.",61,[[],[["result",6],["option",4]]]],[11,"next","","Return the next `Vernaux` entry.",62,[[],[["result",6],["option",4]]]],[6,"ElfFile32","","A 32-bit ELF object file.",null,null],[6,"ElfFile64","","A 64-bit ELF object file.",null,null],[6,"ElfSegmentIterator32","","An iterator over the segments of an `ElfFile32`.",null,null],[6,"ElfSegmentIterator64","","An iterator over the segments of an `ElfFile64`.",null,null],[6,"ElfSegment32","","A segment of an `ElfFile32`.",null,null],[6,"ElfSegment64","","A segment of an `ElfFile64`.",null,null],[6,"ElfSectionIterator32","","An iterator over the sections of an `ElfFile32`.",null,null],[6,"ElfSectionIterator64","","An iterator over the sections of an `ElfFile64`.",null,null],[6,"ElfSection32","","A section of an `ElfFile32`.",null,null],[6,"ElfSection64","","A section of an `ElfFile64`.",null,null],[6,"ElfSymbolTable32","","A symbol table of an `ElfFile32`.",null,null],[6,"ElfSymbolTable64","","A symbol table of an `ElfFile32`.",null,null],[6,"ElfSymbolIterator32","","An iterator over the symbols of an `ElfFile32`.",null,null],[6,"ElfSymbolIterator64","","An iterator over the symbols of an `ElfFile64`.",null,null],[6,"ElfSymbol32","","A symbol of an `ElfFile32`.",null,null],[6,"ElfSymbol64","","A symbol of an `ElfFile64`.",null,null],[6,"ElfDynamicRelocationIterator32","","An iterator over the dynamic relocations for an `ElfFile32`.",null,null],[6,"ElfDynamicRelocationIterator64","","An iterator over the dynamic relocations for an `ElfFile64`.",null,null],[6,"ElfSectionRelocationIterator32","","An iterator over the relocations for an `ElfSection32`.",null,null],[6,"ElfSectionRelocationIterator64","","An iterator over the relocations for an `ElfSection64`.",null,null],[6,"ElfComdatIterator32","","An iterator over the COMDAT section groups of an…",null,null],[6,"ElfComdatIterator64","","An iterator over the COMDAT section groups of an…",null,null],[6,"ElfComdat32","","A COMDAT section group of an `ElfFile32`.",null,null],[6,"ElfComdat64","","A COMDAT section group of an `ElfFile64`.",null,null],[6,"ElfComdatSectionIterator32","","An iterator over the sections in a COMDAT section group of…",null,null],[6,"ElfComdatSectionIterator64","","An iterator over the sections in a COMDAT section group of…",null,null],[8,"FileHeader","","A trait for generic access to `FileHeader32` and…",null,null],[16,"Word","","",63,null],[16,"Sword","","",63,null],[16,"Endian","","",63,null],[16,"ProgramHeader","","",63,null],[16,"SectionHeader","","",63,null],[16,"CompressionHeader","","",63,null],[16,"NoteHeader","","",63,null],[16,"Dyn","","",63,null],[16,"Sym","","",63,null],[16,"Rel","","",63,null],[16,"Rela","","",63,null],[10,"is_type_64","","Return true if this type is a 64-bit header.",63,[[]]],[10,"e_ident","","",63,[[],["ident",3]]],[10,"e_type","","",63,[[]]],[10,"e_machine","","",63,[[]]],[10,"e_version","","",63,[[]]],[10,"e_entry","","",63,[[]]],[10,"e_phoff","","",63,[[]]],[10,"e_shoff","","",63,[[]]],[10,"e_flags","","",63,[[]]],[10,"e_ehsize","","",63,[[]]],[10,"e_phentsize","","",63,[[]]],[10,"e_phnum","","",63,[[]]],[10,"e_shentsize","","",63,[[]]],[10,"e_shnum","","",63,[[]]],[10,"e_shstrndx","","",63,[[]]],[11,"parse","","Read the file header.",63,[[["readref",8]],["result",6]]],[11,"is_supported","","Check that the ident field in the file header is a…",63,[[]]],[11,"is_class_32","","",63,[[]]],[11,"is_class_64","","",63,[[]]],[11,"is_little_endian","","",63,[[]]],[11,"is_big_endian","","",63,[[]]],[11,"endian","","",63,[[],["result",6]]],[11,"section_0","","Return the first section header, if present.",63,[[["readref",8]],[["option",4],["result",6]]]],[11,"phnum","","Return the `e_phnum` field of the header. Handles extended…",63,[[["readref",8]],["result",6]]],[11,"shnum","","Return the `e_shnum` field of the header. Handles extended…",63,[[["readref",8]],["result",6]]],[11,"shstrndx","","Return the `e_shstrndx` field of the header. Handles…",63,[[["readref",8]],["result",6]]],[11,"program_headers","","Return the slice of program headers.",63,[[["readref",8]],["result",6]]],[11,"section_headers","","Return the slice of section headers.",63,[[["readref",8]],["result",6]]],[11,"section_strings","","Return the string table for the section headers.",63,[[["readref",8]],[["result",6],["stringtable",3]]]],[11,"sections","","Return the section table.",63,[[["readref",8]],[["sectiontable",3],["result",6]]]],[11,"is_mips64el","","Returns whether this is a mips64el elf file.",63,[[]]],[8,"ProgramHeader","","A trait for generic access to `ProgramHeader32` and…",null,null],[16,"Elf","","",64,null],[16,"Word","","",64,null],[16,"Endian","","",64,null],[10,"p_type","","",64,[[]]],[10,"p_flags","","",64,[[]]],[10,"p_offset","","",64,[[]]],[10,"p_vaddr","","",64,[[]]],[10,"p_paddr","","",64,[[]]],[10,"p_filesz","","",64,[[]]],[10,"p_memsz","","",64,[[]]],[10,"p_align","","",64,[[]]],[11,"file_range","","Return the offset and size of the segment in the file.",64,[[]]],[11,"data","","Return the segment data.",64,[[["readref",8]],["result",4]]],[11,"data_as_array","","Return the segment data as a slice of the given type.",64,[[["readref",8]],["result",4]]],[11,"data_range","","Return the segment data in the given virtual address range",64,[[["readref",8]],[["option",4],["result",4]]]],[11,"dynamic","","Return entries in a dynamic segment.",64,[[["readref",8]],[["option",4],["result",6]]]],[11,"notes","","Return a note iterator for the segment data.",64,[[["readref",8]],[["result",6],["option",4]]]],[8,"SectionHeader","","A trait for generic access to `SectionHeader32` and…",null,null],[16,"Elf","","",65,null],[16,"Word","","",65,null],[16,"Endian","","",65,null],[10,"sh_name","","",65,[[]]],[10,"sh_type","","",65,[[]]],[10,"sh_flags","","",65,[[]]],[10,"sh_addr","","",65,[[]]],[10,"sh_offset","","",65,[[]]],[10,"sh_size","","",65,[[]]],[10,"sh_link","","",65,[[]]],[10,"sh_info","","",65,[[]]],[10,"sh_addralign","","",65,[[]]],[10,"sh_entsize","","",65,[[]]],[11,"name","","Parse the section name from the string table.",65,[[["readref",8],["stringtable",3]],["result",6]]],[11,"file_range","","Return the offset and size of the section in the file.",65,[[],["option",4]]],[11,"data","","Return the section data.",65,[[["readref",8]],["result",6]]],[11,"data_as_array","","Return the section data as a slice of the given type.",65,[[["readref",8]],["result",6]]],[11,"strings","","Return the strings in the section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"symbols","","Return the symbols in the section.",65,[[["sectiontable",3],["readref",8],["sectionindex",3]],[["option",4],["result",6]]]],[11,"rel","","Return the `Elf::Rel` entries in the section.",65,[[["readref",8]],[["option",4],["result",6]]]],[11,"rela","","Return the `Elf::Rela` entries in the section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"dynamic","","Return entries in a dynamic section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"notes","","Return a note iterator for the section data.",65,[[["readref",8]],[["option",4],["result",6]]]],[11,"group","","Return the contents of a group section.",65,[[["readref",8]],[["option",4],["result",6]]]],[11,"hash_header","","Return the header of a SysV hash section.",65,[[["readref",8]],[["option",4],["result",6]]]],[11,"hash","","Return the contents of a SysV hash section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"gnu_hash_header","","Return the header of a GNU hash section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"gnu_hash","","Return the contents of a GNU hash section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"gnu_versym","","Return the contents of a `SHT_GNU_VERSYM` section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"gnu_verdef","","Return an iterator for the entries of a `SHT_GNU_VERDEF`…",65,[[["readref",8]],[["option",4],["result",6]]]],[11,"gnu_verneed","","Return an iterator for the entries of a `SHT_GNU_VERNEED`…",65,[[["readref",8]],[["result",6],["option",4]]]],[8,"Sym","","A trait for generic access to `Sym32` and `Sym64`.",null,null],[16,"Word","","",66,null],[16,"Endian","","",66,null],[10,"st_name","","",66,[[]]],[10,"st_info","","",66,[[]]],[10,"st_bind","","",66,[[]]],[10,"st_type","","",66,[[]]],[10,"st_other","","",66,[[]]],[10,"st_visibility","","",66,[[]]],[10,"st_shndx","","",66,[[]]],[10,"st_value","","",66,[[]]],[10,"st_size","","",66,[[]]],[11,"name","","Parse the symbol name from the string table.",66,[[["readref",8],["stringtable",3]],["result",6]]],[11,"is_undefined","","Return true if the symbol is undefined.",66,[[]]],[11,"is_definition","","Return true if the symbol is a definition of a function or…",66,[[]]],[8,"Rel","","A trait for generic access to `Rel32` and `Rel64`.",null,null],[16,"Word","","",67,null],[16,"Sword","","",67,null],[16,"Endian","","",67,null],[10,"r_offset","","",67,[[]]],[10,"r_info","","",67,[[]]],[10,"r_sym","","",67,[[]]],[10,"r_type","","",67,[[]]],[8,"Rela","","A trait for generic access to `Rela32` and `Rela64`.",null,null],[16,"Word","","",68,null],[16,"Sword","","",68,null],[16,"Endian","","",68,null],[10,"r_offset","","",68,[[]]],[10,"r_info","","",68,[[]]],[10,"r_addend","","",68,[[]]],[10,"r_sym","","",68,[[]]],[10,"r_type","","",68,[[]]],[8,"Dyn","","A trait for generic access to `Dyn32` and `Dyn64`.",null,null],[16,"Word","","",69,null],[16,"Endian","","",69,null],[10,"d_tag","","",69,[[]]],[10,"d_val","","",69,[[]]],[11,"tag32","","Try to convert the tag to a `u32`.",69,[[],["option",4]]],[11,"val32","","Try to convert the value to a `u32`.",69,[[],["option",4]]],[11,"is_string","","Return true if the value is an offset in the dynamic…",69,[[]]],[11,"string","","Use the value to get a string in a string table.",69,[[["stringtable",3]],["result",6]]],[11,"is_address","","Return true if the value is an address.",69,[[]]],[8,"CompressionHeader","","A trait for generic access to `CompressionHeader32` and…",null,null],[16,"Word","","",70,null],[16,"Endian","","",70,null],[10,"ch_type","","",70,[[]]],[10,"ch_size","","",70,[[]]],[10,"ch_addralign","","",70,[[]]],[8,"NoteHeader","","A trait for generic access to `NoteHeader32` and…",null,null],[16,"Endian","","",71,null],[10,"n_namesz","","",71,[[]]],[10,"n_descsz","","",71,[[]]],[10,"n_type","","",71,[[]]],[0,"macho","object::read","Support for reading Mach-O files.",null,null],[3,"DyldCache","object::read::macho","A parsed representation of the dyld shared cache.",null,null],[3,"DyldCacheImageIterator","","An iterator over all the images (dylibs) in the dyld…",null,null],[3,"DyldCacheImage","","One image (dylib) from inside the dyld shared cache.",null,null],[3,"MachOFile","","A partially parsed Mach-O file.",null,null],[3,"MachOComdatIterator","","An iterator over the COMDAT section groups of a `MachOFile`.",null,null],[3,"MachOComdat","","A COMDAT section group of a `MachOFile`.",null,null],[3,"MachOComdatSectionIterator","","An iterator over the sections in a COMDAT section group of…",null,null],[3,"LoadCommandIterator","","An iterator over the load commands of a `MachHeader`.",null,null],[3,"LoadCommandData","","The data for a `LoadCommand`.",null,null],[3,"MachOSegmentIterator","","An iterator over the segments of a `MachOFile`.",null,null],[3,"MachOSegment","","A segment of a `MachOFile`.",null,null],[3,"MachOSectionIterator","","An iterator over the sections of a `MachOFile`.",null,null],[3,"MachOSection","","A section of a `MachOFile`.",null,null],[3,"SymbolTable","","A table of symbol entries in a Mach-O file.",null,null],[3,"MachOSymbolTable","","A symbol table of a `MachOFile`.",null,null],[3,"MachOSymbolIterator","","An iterator over the symbols of a `MachOFile`.",null,null],[3,"MachOSymbol","","A symbol of a `MachOFile`.",null,null],[3,"MachORelocationIterator","","An iterator over the relocations in a `MachOSection`.",null,null],[4,"LoadCommandVariant","","A `LoadCommand` that has been interpreted according to its…",null,null],[13,"Segment32","","`LC_SEGMENT`",72,null],[13,"Symtab","","`LC_SYMTAB`",72,null],[13,"Thread","","`LC_THREAD` or `LC_UNIXTHREAD`",72,null],[13,"Dysymtab","","`LC_DYSYMTAB`",72,null],[13,"Dylib","","`LC_LOAD_DYLIB`, `LC_LOAD_WEAK_DYLIB`,…",72,null],[13,"IdDylib","","`LC_ID_DYLIB`",72,null],[13,"LoadDylinker","","`LC_LOAD_DYLINKER`",72,null],[13,"IdDylinker","","`LC_ID_DYLINKER`",72,null],[13,"PreboundDylib","","`LC_PREBOUND_DYLIB`",72,null],[13,"Routines32","","`LC_ROUTINES`",72,null],[13,"SubFramework","","`LC_SUB_FRAMEWORK`",72,null],[13,"SubUmbrella","","`LC_SUB_UMBRELLA`",72,null],[13,"SubClient","","`LC_SUB_CLIENT`",72,null],[13,"SubLibrary","","`LC_SUB_LIBRARY`",72,null],[13,"TwolevelHints","","`LC_TWOLEVEL_HINTS`",72,null],[13,"PrebindCksum","","`LC_PREBIND_CKSUM`",72,null],[13,"Segment64","","`LC_SEGMENT_64`",72,null],[13,"Routines64","","`LC_ROUTINES_64`",72,null],[13,"Uuid","","`LC_UUID`",72,null],[13,"Rpath","","`LC_RPATH`",72,null],[13,"LinkeditData","","`LC_CODE_SIGNATURE`, `LC_SEGMENT_SPLIT_INFO`,…",72,null],[13,"EncryptionInfo32","","`LC_ENCRYPTION_INFO`",72,null],[13,"DyldInfo","","`LC_DYLD_INFO` or `LC_DYLD_INFO_ONLY`",72,null],[13,"VersionMin","","`LC_VERSION_MIN_MACOSX`, `LC_VERSION_MIN_IPHONEOS`,…",72,null],[13,"DyldEnvironment","","`LC_DYLD_ENVIRONMENT`",72,null],[13,"EntryPoint","","`LC_MAIN`",72,null],[13,"SourceVersion","","`LC_SOURCE_VERSION`",72,null],[13,"EncryptionInfo64","","`LC_ENCRYPTION_INFO_64`",72,null],[13,"LinkerOption","","`LC_LINKER_OPTION`",72,null],[13,"Note","","`LC_NOTE`",72,null],[13,"BuildVersion","","`LC_BUILD_VERSION`",72,null],[13,"FilesetEntry","","`LC_FILESET_ENTRY`",72,null],[13,"Other","","An unrecognized or obsolete load command.",72,null],[11,"parse","","Parse the raw dyld shared cache data.",73,[[],["result",6]]],[11,"architecture","","Get the architecture type of the file.",73,[[],["architecture",4]]],[11,"endianness","","Get the endianness of the file.",73,[[],["endianness",4]]],[11,"is_little_endian","","Return true if the file is little endian, false if it is…",73,[[]]],[11,"images","","Iterate over the images in this cache.",73,[[],["dyldcacheimageiterator",3]]],[11,"path","","The file system path of this image.",74,[[],["result",6]]],[11,"file_offset","","The offset in the dyld cache file where this image starts.",74,[[],["result",6]]],[11,"parse_object","","Parse this image into an Object.",74,[[],[["file",3],["result",6]]]],[11,"parse","","Parse the raw Mach-O file data.",75,[[],["result",6]]],[11,"parse_at","","Parse the raw Mach-O file data at an arbitrary offset…",75,[[],["result",6]]],[11,"next","","Return the next load command.",76,[[],[["result",6],["option",4]]]],[11,"cmd","","Return the `cmd` field of the `LoadCommand`.",77,[[]]],[11,"cmdsize","","Return the `cmdsize` field of the `LoadCommand`.",77,[[]]],[11,"data","","Parse the data as the given type.",77,[[],["result",6]]],[11,"string","","Parse a load command string value.",77,[[["lcstr",3]],["result",6]]],[11,"variant","","Parse the command data according to the `cmd` field.",77,[[],[["result",6],["loadcommandvariant",4]]]],[11,"segment_32","","Try to parse this command as a `SegmentCommand32`.",77,[[],[["option",4],["result",6]]]],[11,"symtab","","Try to parse this command as a `SymtabCommand`.",77,[[],[["result",6],["option",4]]]],[11,"dysymtab","","Try to parse this command as a `DysymtabCommand`.",77,[[],[["result",6],["option",4]]]],[11,"dylib","","Try to parse this command as a `DylibCommand`.",77,[[],[["result",6],["option",4]]]],[11,"uuid","","Try to parse this command as a `UuidCommand`.",77,[[],[["option",4],["result",6]]]],[11,"segment_64","","Try to parse this command as a `SegmentCommand64`.",77,[[],[["result",6],["option",4]]]],[11,"dyld_info","","Try to parse this command as a `DyldInfoCommand`.",77,[[],[["option",4],["result",6]]]],[11,"entry_point","","Try to parse this command as an `EntryPointCommand`.",77,[[],[["result",6],["option",4]]]],[11,"strings","","Return the string table used for the symbol names.",78,[[],["stringtable",3]]],[11,"iter","","Iterate over the symbols.",78,[[],["iter",3]]],[11,"is_empty","","Return true if the symbol table is empty.",78,[[]]],[11,"len","","The number of symbols.",78,[[]]],[11,"symbol","","Return the symbol at the given index.",78,[[],["result",6]]],[11,"map","","Construct a map from addresses to a user-defined map entry.",78,[[["fn",8]],[["symbolmapentry",8],["symbolmap",3]]]],[11,"object_map","","Construct a map from addresses to symbol names and object…",78,[[],["objectmap",3]]],[6,"MachOFile32","","A 32-bit Mach-O object file.",null,null],[6,"MachOFile64","","A 64-bit Mach-O object file.",null,null],[6,"MachOComdatIterator32","","An iterator over the COMDAT section groups of a…",null,null],[6,"MachOComdatIterator64","","An iterator over the COMDAT section groups of a…",null,null],[6,"MachOComdat32","","A COMDAT section group of a `MachOFile32`.",null,null],[6,"MachOComdat64","","A COMDAT section group of a `MachOFile64`.",null,null],[6,"MachOComdatSectionIterator32","","An iterator over the sections in a COMDAT section group of…",null,null],[6,"MachOComdatSectionIterator64","","An iterator over the sections in a COMDAT section group of…",null,null],[6,"MachOSegmentIterator32","","An iterator over the segments of a `MachOFile32`.",null,null],[6,"MachOSegmentIterator64","","An iterator over the segments of a `MachOFile64`.",null,null],[6,"MachOSegment32","","A segment of a `MachOFile32`.",null,null],[6,"MachOSegment64","","A segment of a `MachOFile64`.",null,null],[6,"MachOSectionIterator32","","An iterator over the sections of a `MachOFile32`.",null,null],[6,"MachOSectionIterator64","","An iterator over the sections of a `MachOFile64`.",null,null],[6,"MachOSection32","","A section of a `MachOFile32`.",null,null],[6,"MachOSection64","","A section of a `MachOFile64`.",null,null],[6,"MachOSymbolTable32","","An iterator over the symbols of a `MachOFile32`.",null,null],[6,"MachOSymbolTable64","","An iterator over the symbols of a `MachOFile64`.",null,null],[6,"MachOSymbolIterator32","","An iterator over the symbols of a `MachOFile32`.",null,null],[6,"MachOSymbolIterator64","","An iterator over the symbols of a `MachOFile64`.",null,null],[6,"MachOSymbol32","","A symbol of a `MachOFile32`.",null,null],[6,"MachOSymbol64","","A symbol of a `MachOFile64`.",null,null],[6,"MachORelocationIterator32","","An iterator over the relocations in a `MachOSection32`.",null,null],[6,"MachORelocationIterator64","","An iterator over the relocations in a `MachOSection64`.",null,null],[8,"FatArch","","A trait for generic access to `FatArch32` and `FatArch64`.",null,null],[16,"Word","","",79,null],[10,"cputype","","",79,[[]]],[10,"cpusubtype","","",79,[[]]],[10,"offset","","",79,[[]]],[10,"size","","",79,[[]]],[10,"align","","",79,[[]]],[11,"architecture","","",79,[[],["architecture",4]]],[11,"file_range","","",79,[[]]],[11,"data","","",79,[[["readref",8]],["result",6]]],[8,"MachHeader","","A trait for generic access to `MachHeader32` and…",null,null],[16,"Word","","",80,null],[16,"Endian","","",80,null],[16,"Segment","","",80,null],[16,"Section","","",80,null],[16,"Nlist","","",80,null],[10,"is_type_64","","Return true if this type is a 64-bit header.",80,[[]]],[10,"is_big_endian","","Return true if the `magic` field signifies big-endian.",80,[[]]],[10,"is_little_endian","","Return true if the `magic` field signifies little-endian.",80,[[]]],[10,"magic","","",80,[[]]],[10,"cputype","","",80,[[]]],[10,"cpusubtype","","",80,[[]]],[10,"filetype","","",80,[[]]],[10,"ncmds","","",80,[[]]],[10,"sizeofcmds","","",80,[[]]],[10,"flags","","",80,[[]]],[11,"parse","","Read the file header.",80,[[["readref",8]],["result",6]]],[11,"is_supported","","",80,[[]]],[11,"endian","","",80,[[],["result",6]]],[11,"load_commands","","",80,[[["readref",8]],[["result",6],["loadcommanditerator",3]]]],[11,"uuid","","Return the UUID from the `LC_UUID` load command, if one is…",80,[[["readref",8]],[["result",6],["option",4]]]],[8,"Segment","","A trait for generic access to `SegmentCommand32` and…",null,null],[16,"Word","","",81,null],[16,"Endian","","",81,null],[16,"Section","","",81,null],[10,"from_command","","",81,[[["loadcommanddata",3]],[["option",4],["result",6]]]],[10,"cmd","","",81,[[]]],[10,"cmdsize","","",81,[[]]],[10,"segname","","",81,[[]]],[10,"vmaddr","","",81,[[]]],[10,"vmsize","","",81,[[]]],[10,"fileoff","","",81,[[]]],[10,"filesize","","",81,[[]]],[10,"maxprot","","",81,[[]]],[10,"initprot","","",81,[[]]],[10,"nsects","","",81,[[]]],[10,"flags","","",81,[[]]],[11,"name","","Return the `segname` bytes up until the null terminator.",81,[[]]],[11,"file_range","","Return the offset and size of the segment in the file.",81,[[]]],[11,"data","","Get the segment data from the file data.",81,[[["readref",8]],["result",4]]],[11,"sections","","Get the array of sections from the data following the…",81,[[["readref",8]],["result",6]]],[8,"Section","","A trait for generic access to `Section32` and `Section64`.",null,null],[16,"Word","","",82,null],[16,"Endian","","",82,null],[10,"sectname","","",82,[[]]],[10,"segname","","",82,[[]]],[10,"addr","","",82,[[]]],[10,"size","","",82,[[]]],[10,"offset","","",82,[[]]],[10,"align","","",82,[[]]],[10,"reloff","","",82,[[]]],[10,"nreloc","","",82,[[]]],[10,"flags","","",82,[[]]],[11,"name","","Return the `sectname` bytes up until the null terminator.",82,[[]]],[11,"segment_name","","Return the `segname` bytes up until the null terminator.",82,[[]]],[11,"file_range","","Return the offset and size of the section in the file.",82,[[],["option",4]]],[11,"data","","Return the section data.",82,[[["readref",8]],["result",4]]],[11,"relocations","","Return the relocation array.",82,[[["readref",8]],["result",6]]],[8,"Nlist","","A trait for generic access to `Nlist32` and `Nlist64`.",null,null],[16,"Word","","",83,null],[16,"Endian","","",83,null],[10,"n_strx","","",83,[[]]],[10,"n_type","","",83,[[]]],[10,"n_sect","","",83,[[]]],[10,"n_desc","","",83,[[]]],[10,"n_value","","",83,[[]]],[11,"name","","",83,[[["readref",8],["stringtable",3]],["result",6]]],[11,"is_stab","","Return true if this is a STAB symbol.",83,[[]]],[11,"is_undefined","","Return true if this is an undefined symbol.",83,[[]]],[11,"is_definition","","Return true if the symbol is a definition of a function or…",83,[[]]],[11,"library_ordinal","","Return the library ordinal.",83,[[]]],[0,"pe","object::read","Support for reading PE files.",null,null],[3,"PeFile","object::read::pe","A PE object file.",null,null],[3,"PeComdatIterator","","An iterator over the COMDAT section groups of a `PeFile`.",null,null],[3,"PeComdat","","A COMDAT section group of a `PeFile`.",null,null],[3,"PeComdatSectionIterator","","An iterator over the sections in a COMDAT section group of…",null,null],[3,"PeSegmentIterator","","An iterator over the loadable sections of a `PeFile`.",null,null],[3,"PeSegment","","A loadable section of a `PeFile`.",null,null],[3,"PeSectionIterator","","An iterator over the sections of a `PeFile`.",null,null],[3,"PeSection","","A section of a `PeFile`.",null,null],[3,"PeRelocationIterator","","An iterator over the relocations in an `PeSection`.",null,null],[3,"DataDirectories","","The table of data directories in a PE file.",null,null],[3,"Export","","An export from a PE file.",null,null],[12,"ordinal","","The ordinal of the export.",84,null],[12,"name","","The name of the export, if known.",84,null],[12,"target","","The target of this export.",84,null],[3,"ExportTable","","A partially parsed PE export table.",null,null],[3,"ImportTable","","Information for parsing a PE import table.",null,null],[3,"ImportDescriptorIterator","","A fallible iterator for the descriptors in the import data…",null,null],[3,"ImportThunkList","","A list of import thunks.",null,null],[3,"RelocationBlockIterator","","An iterator over the relocation blocks in the `.reloc`…",null,null],[3,"RelocationIterator","","An iterator of the relocations in a block in the `.reloc`…",null,null],[3,"Relocation","","A relocation in the `.reloc` section of a PE file.",null,null],[12,"virtual_address","","The virtual address of the relocation.",85,null],[12,"typ","","One of the `pe::IMAGE_REL_BASED_*` constants.",85,null],[3,"RichHeaderInfo","","Parsed information about a Rich Header.",null,null],[12,"offset","","The offset at which the rich header starts.",86,null],[12,"length","","The length (in bytes) of the rich header.",86,null],[12,"xor_key","","The XOR key used to mask the rich header.",86,null],[3,"RichHeaderEntry","","A PE rich header entry after it has been unmasked.",null,null],[12,"comp_id","","ID of the component.",87,null],[12,"count","","Number of times this component has been used when building…",87,null],[3,"SectionTable","","The table of section headers in a COFF or PE file.",null,null],[3,"SymbolTable","","A table of symbol entries in a COFF or PE file.",null,null],[4,"ExportTarget","","Where an export is pointing to.",null,null],[13,"Address","","The address of the export, relative to the image base.",88,null],[13,"ForwardByOrdinal","","Forwarded to an export ordinal in another DLL.",88,null],[13,"ForwardByName","","Forwarded to an export name in another DLL.",88,null],[4,"Import","","A parsed import thunk.",null,null],[13,"Ordinal","","Import by ordinal.",89,null],[13,"Name","","Import by name.",89,null],[5,"optional_header_magic","","Find the optional header and read the…",null,[[["readref",8]],["result",6]]],[11,"parse","","Parse the raw PE file data.",90,[[],["result",6]]],[11,"data","","Returns this binary data.",90,[[]]],[11,"dos_header","","Return the DOS header of this file.",90,[[],["imagedosheader",3]]],[11,"nt_headers","","Return the NT Headers of this file.",90,[[]]],[11,"rich_header_info","","Returns information about the rich header of this file (if…",90,[[],[["option",4],["richheaderinfo",3]]]],[11,"section_table","","Returns the section table of this binary.",90,[[],["sectiontable",3]]],[11,"data_directories","","Returns the data directories of this file.",90,[[],["datadirectories",3]]],[11,"data_directory","","Returns the data directory at the given index.",90,[[],[["option",4],["imagedatadirectory",3]]]],[11,"export_table","","Returns the export table of this file.",90,[[],[["result",6],["option",4]]]],[11,"import_table","","Returns the import table of this file.",90,[[],[["result",6],["option",4]]]],[11,"pe_data_at","object::read::coff","Return the data at the given virtual address in a PE file.",46,[[["readref",8]],["option",4]]],[11,"pe_data_containing","","Return the data of the section that contains the given…",46,[[["readref",8]],["option",4]]],[11,"parse","object::read::pe","Parse the data directory table.",91,[[],["result",6]]],[11,"len","","The number of data directories.",91,[[]]],[11,"iter","","Iterator over the data directories.",91,[[],[["iter",3],["imagedatadirectory",3]]]],[11,"enumerate","","Iterator which gives the directories as well as their…",91,[[],[["iter",3],["enumerate",3]]]],[11,"get","","Returns the data directory at the given index.",91,[[],[["option",4],["imagedatadirectory",3]]]],[11,"export_directory","","Returns the unparsed export directory.",91,[[["readref",8],["sectiontable",3]],[["option",4],["result",6]]]],[11,"export_table","","Returns the partially parsed export directory.",91,[[["readref",8],["sectiontable",3]],[["result",6],["option",4]]]],[11,"import_table","","Returns the partially parsed import directory.",91,[[["readref",8],["sectiontable",3]],[["result",6],["option",4]]]],[11,"relocation_blocks","","Returns the blocks in the base relocation directory.",91,[[["readref",8],["sectiontable",3]],[["result",6],["option",4]]]],[11,"is_address","","Returns true if the target is an address.",88,[[]]],[11,"is_forward","","Returns true if the export is forwarded to another DLL.",88,[[]]],[11,"parse","","Parse the export table given its section data and address.",92,[[],["result",6]]],[11,"parse_directory","","Parse the export directory given its section data.",92,[[],[["imageexportdirectory",3],["result",6]]]],[11,"directory","","Returns the header of the export table.",92,[[],["imageexportdirectory",3]]],[11,"ordinal_base","","Returns the base value of ordinals.",92,[[]]],[11,"addresses","","Returns the unparsed address table.",92,[[]]],[11,"name_pointers","","Returns the unparsed name pointer table.",92,[[]]],[11,"name_ordinals","","Returns the unparsed ordinal table.",92,[[]]],[11,"name_iter","","Returns an iterator for the entries in the name pointer…",92,[[]]],[11,"address_by_index","","Returns the export address table entry at the given…",92,[[],["result",6]]],[11,"address_by_ordinal","","Returns the export address table entry at the given ordinal.",92,[[],["result",6]]],[11,"target_by_index","","Returns the target of the export at the given address index.",92,[[],[["exporttarget",4],["result",6]]]],[11,"target_by_ordinal","","Returns the target of the export at the given ordinal.",92,[[],[["exporttarget",4],["result",6]]]],[11,"target_from_address","","Convert an export address table entry into a target.",92,[[],[["exporttarget",4],["result",6]]]],[11,"is_forward","","Return true if the export address table entry is a forward.",92,[[]]],[11,"forward_string","","Return the forward string if the export address table…",92,[[],[["option",4],["result",6]]]],[11,"name_from_pointer","","Convert an export name pointer table entry into a name.",92,[[],["result",6]]],[11,"exports","","Returns the parsed exports in this table.",92,[[],[["result",6],["vec",3]]]],[11,"new","","Create a new import table parser.",93,[[]]],[11,"descriptors","","Return an iterator for the import descriptors.",93,[[],[["result",6],["importdescriptoriterator",3]]]],[11,"name","","Return a library name given its address.",93,[[],["result",6]]],[11,"thunks","","Return a list of thunks given its address.",93,[[],[["result",6],["importthunklist",3]]]],[11,"import","","Parse a thunk.",93,[[],[["result",6],["import",4]]]],[11,"hint_name","","Return the hint and name at the given address.",93,[[],["result",6]]],[11,"next","","Return the next descriptor.",94,[[],[["option",4],["result",6]]]],[11,"get","","Get the thunk at the given index.",95,[[],["result",6]]],[11,"next","","Return the first thunk in the list, and update `self` to…",95,[[],[["result",6],["option",4]]]],[11,"new","","Construct a new iterator from the data of the `.reloc`…",96,[[]]],[11,"next","","Read the next relocation page.",96,[[],[["result",6],["option",4]]]],[11,"virtual_address","","Return the virtual address of the page that this block of…",97,[[]]],[11,"size","","Return the size in bytes of this block of relocations.",97,[[]]],[11,"parse","","Try to locate a rich header and its entries in the current…",86,[[["readref",8]],["option",4]]],[11,"unmasked_entries","","Returns an iterator over the unmasked entries.",86,[[]]],[6,"PeFile32","","A PE32 (32-bit) image file.",null,null],[6,"PeFile64","","A PE32+ (64-bit) image file.",null,null],[6,"PeComdatIterator32","","An iterator over the COMDAT section groups of a `PeFile32`.",null,null],[6,"PeComdatIterator64","","An iterator over the COMDAT section groups of a `PeFile64`.",null,null],[6,"PeComdat32","","A COMDAT section group of a `PeFile32`.",null,null],[6,"PeComdat64","","A COMDAT section group of a `PeFile64`.",null,null],[6,"PeComdatSectionIterator32","","An iterator over the sections in a COMDAT section group of…",null,null],[6,"PeComdatSectionIterator64","","An iterator over the sections in a COMDAT section group of…",null,null],[6,"PeSegmentIterator32","","An iterator over the loadable sections of a `PeFile32`.",null,null],[6,"PeSegmentIterator64","","An iterator over the loadable sections of a `PeFile64`.",null,null],[6,"PeSegment32","","A loadable section of a `PeFile32`.",null,null],[6,"PeSegment64","","A loadable section of a `PeFile64`.",null,null],[6,"PeSectionIterator32","","An iterator over the sections of a `PeFile32`.",null,null],[6,"PeSectionIterator64","","An iterator over the sections of a `PeFile64`.",null,null],[6,"PeSection32","","A section of a `PeFile32`.",null,null],[6,"PeSection64","","A section of a `PeFile64`.",null,null],[8,"ImageNtHeaders","","A trait for generic access to `ImageNtHeaders32` and…",null,null],[16,"ImageOptionalHeader","","",98,null],[16,"ImageThunkData","","",98,null],[10,"is_type_64","","Return true if this type is a 64-bit header.",98,[[]]],[10,"is_valid_optional_magic","","Return true if the magic field in the optional header is…",98,[[]]],[10,"signature","","Return the signature",98,[[]]],[10,"file_header","","Return the file header.",98,[[],["imagefileheader",3]]],[10,"optional_header","","Return the optional header.",98,[[]]],[11,"parse","","Read the NT headers, including the data directories.",98,[[["readref",8]],["result",6]]],[11,"sections","","Read the section table.",98,[[["readref",8]],[["sectiontable",3],["result",6]]]],[11,"symbols","","Read the symbol table and string table.",98,[[["readref",8]],[["result",6],["symboltable",3]]]],[8,"ImageOptionalHeader","","A trait for generic access to `ImageOptionalHeader32` and…",null,null],[10,"magic","","",99,[[]]],[10,"major_linker_version","","",99,[[]]],[10,"minor_linker_version","","",99,[[]]],[10,"size_of_code","","",99,[[]]],[10,"size_of_initialized_data","","",99,[[]]],[10,"size_of_uninitialized_data","","",99,[[]]],[10,"address_of_entry_point","","",99,[[]]],[10,"base_of_code","","",99,[[]]],[10,"base_of_data","","",99,[[],["option",4]]],[10,"image_base","","",99,[[]]],[10,"section_alignment","","",99,[[]]],[10,"file_alignment","","",99,[[]]],[10,"major_operating_system_version","","",99,[[]]],[10,"minor_operating_system_version","","",99,[[]]],[10,"major_image_version","","",99,[[]]],[10,"minor_image_version","","",99,[[]]],[10,"major_subsystem_version","","",99,[[]]],[10,"minor_subsystem_version","","",99,[[]]],[10,"win32_version_value","","",99,[[]]],[10,"size_of_image","","",99,[[]]],[10,"size_of_headers","","",99,[[]]],[10,"check_sum","","",99,[[]]],[10,"subsystem","","",99,[[]]],[10,"dll_characteristics","","",99,[[]]],[10,"size_of_stack_reserve","","",99,[[]]],[10,"size_of_stack_commit","","",99,[[]]],[10,"size_of_heap_reserve","","",99,[[]]],[10,"size_of_heap_commit","","",99,[[]]],[10,"loader_flags","","",99,[[]]],[10,"number_of_rva_and_sizes","","",99,[[]]],[8,"ImageThunkData","","A trait for generic access to [`pe::ImageThunkData32`] and…",null,null],[10,"raw","","Return the raw thunk value.",100,[[]]],[10,"is_ordinal","","Returns true if the ordinal flag is set.",100,[[]]],[10,"ordinal","","Return the ordinal portion of the thunk.",100,[[]]],[10,"address","","Return the RVA portion of the thunk.",100,[[]]],[6,"Result","object::read","The result type used within the read module.",null,null],[6,"NativeFile","","The native executable file for the target platform.",null,null],[8,"ReadRef","","A trait for reading references to `Pod` types from a block…",null,null],[10,"len","","The total size of the block of data.",101,[[],["result",4]]],[10,"read_bytes_at","","Get a reference to a `u8` slice at the given offset.",101,[[],["result",4]]],[10,"read_bytes_at_until","","Get a reference to a delimited `u8` slice which starts at…",101,[[["range",3]],["result",4]]],[11,"read_bytes","","Get a reference to a `u8` slice at the given offset, and…",101,[[],["result",4]]],[11,"read","","Get a reference to a `Pod` type at the given offset, and…",101,[[],["result",4]]],[11,"read_at","","Get a reference to a `Pod` type at the given offset.",101,[[],["result",4]]],[11,"read_slice","","Get a reference to a slice of a `Pod` type at the given…",101,[[],["result",4]]],[11,"read_slice_at","","Get a reference to a slice of a `Pod` type at the given…",101,[[],["result",4]]],[8,"Object","","An object file.",null,null],[16,"Segment","","A segment in the object file.",102,null],[16,"SegmentIterator","","An iterator over the segments in the object file.",102,null],[16,"Section","","A section in the object file.",102,null],[16,"SectionIterator","","An iterator over the sections in the object file.",102,null],[16,"Comdat","","A COMDAT section group in the object file.",102,null],[16,"ComdatIterator","","An iterator over the COMDAT section groups in the object…",102,null],[16,"Symbol","","A symbol in the object file.",102,null],[16,"SymbolIterator","","An iterator over symbols in the object file.",102,null],[16,"SymbolTable","","A symbol table in the object file.",102,null],[16,"DynamicRelocationIterator","","An iterator over dynamic relocations in the file.",102,null],[10,"architecture","","Get the architecture type of the file.",102,[[],["architecture",4]]],[11,"endianness","","Get the endianness of the file.",102,[[],["endianness",4]]],[10,"is_little_endian","","Return true if the file is little endian, false if it is…",102,[[]]],[10,"is_64","","Return true if the file can contain 64-bit addresses.",102,[[]]],[10,"kind","","Return the kind of this object.",102,[[],["objectkind",4]]],[10,"segments","","Get an iterator over the segments in the file.",102,[[]]],[11,"section_by_name","","Get the section named `section_name`, if such a section…",102,[[],["option",4]]],[10,"section_by_name_bytes","","Like [`Self::section_by_name`], but allows names that are…",102,[[],["option",4]]],[10,"section_by_index","","Get the section at the given index.",102,[[["sectionindex",3]],["result",6]]],[10,"sections","","Get an iterator over the sections in the file.",102,[[]]],[10,"comdats","","Get an iterator over the COMDAT section groups in the file.",102,[[]]],[10,"symbol_table","","Get the symbol table, if any.",102,[[],["option",4]]],[10,"symbol_by_index","","Get the debugging symbol at the given index.",102,[[["symbolindex",3]],["result",6]]],[10,"symbols","","Get an iterator over the debugging symbols in the file.",102,[[]]],[10,"dynamic_symbol_table","","Get the dynamic linking symbol table, if any.",102,[[],["option",4]]],[10,"dynamic_symbols","","Get an iterator over the dynamic linking symbols in the…",102,[[]]],[10,"dynamic_relocations","","Get the dynamic relocations for this file.",102,[[],["option",4]]],[11,"symbol_map","","Construct a map from addresses to symbol names.",102,[[],[["symbolmapname",3],["symbolmap",3]]]],[11,"object_map","","Construct a map from addresses to symbol names and object…",102,[[],["objectmap",3]]],[10,"imports","","Get the imported symbols.",102,[[],[["vec",3],["result",6]]]],[10,"exports","","Get the exported symbols that expose both a name and an…",102,[[],[["result",6],["vec",3]]]],[10,"has_debug_symbols","","Return true if the file contains debug information…",102,[[]]],[11,"mach_uuid","","The UUID from a Mach-O `LC_UUID` load command.",102,[[],[["result",6],["option",4]]]],[11,"build_id","","The build ID from an ELF `NT_GNU_BUILD_ID` note.",102,[[],[["option",4],["result",6]]]],[11,"gnu_debuglink","","The filename and CRC from a `.gnu_debuglink` section.",102,[[],[["option",4],["result",6]]]],[11,"gnu_debugaltlink","","The filename and build ID from a `.gnu_debugaltlink`…",102,[[],[["result",6],["option",4]]]],[11,"pdb_info","","The filename and GUID from the PE CodeView section",102,[[],[["option",4],["result",6]]]],[10,"relative_address_base","","Get the base address used for relative virtual addresses.",102,[[]]],[10,"entry","","Get the virtual address of the entry point of the binary",102,[[]]],[10,"flags","","File flags that are specific to each file format.",102,[[],["fileflags",4]]],[8,"ObjectSegment","","A loadable segment defined in an object file.",null,null],[10,"address","","Returns the virtual address of the segment.",103,[[]]],[10,"size","","Returns the size of the segment in memory.",103,[[]]],[10,"align","","Returns the alignment of the segment in memory.",103,[[]]],[10,"file_range","","Returns the offset and size of the segment in the file.",103,[[]]],[10,"data","","Returns a reference to the file contents of the segment.",103,[[],["result",6]]],[10,"data_range","","Return the segment data in the given range.",103,[[],[["option",4],["result",6]]]],[10,"name_bytes","","Returns the name of the segment.",103,[[],[["result",6],["option",4]]]],[10,"name","","Returns the name of the segment.",103,[[],[["result",6],["option",4]]]],[8,"ObjectSection","","A section defined in an object file.",null,null],[16,"RelocationIterator","","An iterator over the relocations for a section.",104,null],[10,"index","","Returns the section index.",104,[[],["sectionindex",3]]],[10,"address","","Returns the address of the section.",104,[[]]],[10,"size","","Returns the size of the section in memory.",104,[[]]],[10,"align","","Returns the alignment of the section in memory.",104,[[]]],[10,"file_range","","Returns offset and size of on-disk segment (if any).",104,[[],["option",4]]],[10,"data","","Returns the raw contents of the section.",104,[[],["result",6]]],[10,"data_range","","Return the raw contents of the section data in the given…",104,[[],[["option",4],["result",6]]]],[10,"compressed_file_range","","Returns the potentially compressed file range of the…",104,[[],[["result",6],["compressedfilerange",3]]]],[10,"compressed_data","","Returns the potentially compressed contents of the…",104,[[],[["result",6],["compresseddata",3]]]],[11,"uncompressed_data","","Returns the uncompressed contents of the section.",104,[[],[["cow",4],["result",6]]]],[10,"name_bytes","","Returns the name of the section.",104,[[],["result",6]]],[10,"name","","Returns the name of the section.",104,[[],["result",6]]],[10,"segment_name_bytes","","Returns the name of the segment for this section.",104,[[],[["result",6],["option",4]]]],[10,"segment_name","","Returns the name of the segment for this section.",104,[[],[["result",6],["option",4]]]],[10,"kind","","Return the kind of this section.",104,[[],["sectionkind",4]]],[10,"relocations","","Get the relocations for this section.",104,[[]]],[10,"flags","","Section flags that are specific to each file format.",104,[[],["sectionflags",4]]],[8,"ObjectComdat","","A COMDAT section group defined in an object file.",null,null],[16,"SectionIterator","","An iterator over the sections in the object file.",105,null],[10,"kind","","Returns the COMDAT selection kind.",105,[[],["comdatkind",4]]],[10,"symbol","","Returns the index of the symbol used for the name of…",105,[[],["symbolindex",3]]],[10,"name_bytes","","Returns the name of the COMDAT section group.",105,[[],["result",6]]],[10,"name","","Returns the name of the COMDAT section group.",105,[[],["result",6]]],[10,"sections","","Get the sections in this section group.",105,[[]]],[8,"ObjectSymbolTable","","A symbol table.",null,null],[16,"Symbol","","A symbol table entry.",106,null],[16,"SymbolIterator","","An iterator over the symbols in a symbol table.",106,null],[10,"symbols","","Get an iterator over the symbols in the table.",106,[[]]],[10,"symbol_by_index","","Get the symbol at the given index.",106,[[["symbolindex",3]],["result",6]]],[8,"ObjectSymbol","","A symbol table entry.",null,null],[10,"index","","The index of the symbol.",107,[[],["symbolindex",3]]],[10,"name_bytes","","The name of the symbol.",107,[[],["result",6]]],[10,"name","","The name of the symbol.",107,[[],["result",6]]],[10,"address","","The address of the symbol. May be zero if the address is…",107,[[]]],[10,"size","","The size of the symbol. May be zero if the size is unknown.",107,[[]]],[10,"kind","","Return the kind of this symbol.",107,[[],["symbolkind",4]]],[10,"section","","Returns the section where the symbol is defined.",107,[[],["symbolsection",4]]],[11,"section_index","","Returns the section index for the section containing this…",107,[[],[["option",4],["sectionindex",3]]]],[10,"is_undefined","","Return true if the symbol is undefined.",107,[[]]],[10,"is_definition","","Return true if the symbol is a definition of a function or…",107,[[]]],[10,"is_common","","Return true if the symbol is common data.",107,[[]]],[10,"is_weak","","Return true if the symbol is weak.",107,[[]]],[10,"scope","","Returns the symbol scope.",107,[[],["symbolscope",4]]],[10,"is_global","","Return true if the symbol visible outside of the…",107,[[]]],[10,"is_local","","Return true if the symbol is only visible within the…",107,[[]]],[10,"flags","","Symbol flags that are specific to each file format.",107,[[],[["symbolflags",4],["sectionindex",3]]]],[8,"SymbolMapEntry","","An entry in a `SymbolMap`.",null,null],[10,"address","","The symbol address.",108,[[]]],[11,"parse","","Determine a file kind by parsing the start of the file.",35,[[["readref",8]],[["filekind",4],["result",6]]]],[11,"parse_at","","Determine a file kind by parsing at the given offset.",35,[[["readref",8]],[["filekind",4],["result",6]]]],[11,"index","","Returns the section index for the section where the symbol…",37,[[],[["option",4],["sectionindex",3]]]],[11,"new","","Construct a new symbol map.",109,[[["vec",3]]]],[11,"get","","Get the symbol before the given address.",109,[[],["option",4]]],[11,"symbols","","Get all symbols in the map.",109,[[]]],[11,"new","","Construct a `SymbolMapName`.",110,[[]]],[11,"address","","The symbol address.",110,[[]]],[11,"name","","The symbol name.",110,[[]]],[11,"get","","Get the entry containing the given address.",111,[[],[["objectmapentry",3],["option",4]]]],[11,"symbols","","Get all symbols in the map.",111,[[]]],[11,"objects","","Get all objects in the map.",111,[[]]],[11,"address","","Get the symbol address.",112,[[]]],[11,"size","","Get the symbol size.",112,[[]]],[11,"name","","Get the symbol name.",112,[[]]],[11,"object_index","","Get the index of the object file name.",112,[[]]],[11,"object","","Get the object file name.",112,[[["objectmap",3]]]],[11,"name","","The symbol name.",113,[[]]],[11,"library","","The name of the library to import the symbol from.",113,[[]]],[11,"name","","The symbol name.",114,[[]]],[11,"address","","The virtual address of the symbol.",114,[[]]],[11,"path","","The path to the PDB as stored in CodeView",115,[[]]],[11,"age","","The age of the PDB",115,[[]]],[11,"guid","","The GUID of the PDB.",115,[[]]],[11,"kind","","The operation used to calculate the result of the…",116,[[],["relocationkind",4]]],[11,"encoding","","Information about how the result of the relocation…",116,[[],["relocationencoding",4]]],[11,"size","","The size in bits of the place of the relocation.",116,[[]]],[11,"target","","The target of the relocation.",116,[[],["relocationtarget",4]]],[11,"addend","","The addend to use in the relocation calculation.",116,[[]]],[11,"set_addend","","Set the addend to use in the relocation calculation.",116,[[]]],[11,"has_implicit_addend","","Returns true if there is an implicit addend stored in the…",116,[[]]],[11,"none","","Data that is uncompressed.",33,[[["option",4]]]],[11,"data","","Convert to `CompressedData` by reading from the file.",33,[[["readref",8]],[["result",6],["compresseddata",3]]]],[11,"none","","Data that is uncompressed.",34,[[]]],[11,"decompress","","Return the uncompressed data.",34,[[],[["cow",4],["result",6]]]],[0,"archive","object","Archive definitions.",null,null],[3,"Header","object::archive","The header at the start of an archive member.",null,null],[12,"name","","The file name.",117,null],[12,"date","","File modification timestamp in decimal.",117,null],[12,"uid","","User ID in decimal.",117,null],[12,"gid","","Group ID in decimal.",117,null],[12,"mode","","File mode in octal.",117,null],[12,"size","","File size in decimal.",117,null],[12,"terminator","","Must be equal to `TERMINATOR`.",117,null],[17,"MAGIC","","File identification bytes stored at the beginning of the…",null,null],[17,"THIN_MAGIC","","File identification bytes stored at the beginning of a…",null,null],[17,"TERMINATOR","","The terminator for each archive member header.",null,null],[0,"elf","object","ELF definitions.",null,null],[3,"FileHeader32","object::elf","The header at the start of every 32-bit ELF file.",null,null],[12,"e_ident","","Magic number and other information.",118,null],[12,"e_type","","Object file type. One of the `ET_*` constants.",118,null],[12,"e_machine","","Architecture. One of the `EM_*` constants.",118,null],[12,"e_version","","Object file version. Must be `EV_CURRENT`.",118,null],[12,"e_entry","","Entry point virtual address.",118,null],[12,"e_phoff","","Program header table file offset.",118,null],[12,"e_shoff","","Section header table file offset.",118,null],[12,"e_flags","","Processor-specific flags.",118,null],[12,"e_ehsize","","Size in bytes of this header.",118,null],[12,"e_phentsize","","Program header table entry size.",118,null],[12,"e_phnum","","Program header table entry count.",118,null],[12,"e_shentsize","","Section header table entry size.",118,null],[12,"e_shnum","","Section header table entry count.",118,null],[12,"e_shstrndx","","Section header string table index.",118,null],[3,"FileHeader64","","The header at the start of every 64-bit ELF file.",null,null],[12,"e_ident","","Magic number and other information.",119,null],[12,"e_type","","Object file type. One of the `ET_*` constants.",119,null],[12,"e_machine","","Architecture. One of the `EM_*` constants.",119,null],[12,"e_version","","Object file version. Must be `EV_CURRENT`.",119,null],[12,"e_entry","","Entry point virtual address.",119,null],[12,"e_phoff","","Program header table file offset.",119,null],[12,"e_shoff","","Section header table file offset.",119,null],[12,"e_flags","","Processor-specific flags.",119,null],[12,"e_ehsize","","Size in bytes of this header.",119,null],[12,"e_phentsize","","Program header table entry size.",119,null],[12,"e_phnum","","Program header table entry count.",119,null],[12,"e_shentsize","","Section header table entry size.",119,null],[12,"e_shnum","","Section header table entry count.",119,null],[12,"e_shstrndx","","Section header string table index.",119,null],[3,"Ident","","Magic number and other information.",null,null],[12,"magic","","Magic number. Must be `ELFMAG`.",120,null],[12,"class","","File class. One of the `ELFCLASS*` constants.",120,null],[12,"data","","Data encoding. One of the `ELFDATA*` constants.",120,null],[12,"version","","ELF version. Must be `EV_CURRENT`.",120,null],[12,"os_abi","","OS ABI identification. One of the `ELFOSABI*` constants.",120,null],[12,"abi_version","","ABI version.",120,null],[12,"padding","","Padding bytes.",120,null],[3,"SectionHeader32","","Section header.",null,null],[12,"sh_name","","Section name.",121,null],[12,"sh_type","","Section type. One of the `SHT_*` constants.",121,null],[12,"sh_flags","","Section flags. A combination of the `SHF_*` constants.",121,null],[12,"sh_addr","","Section virtual address at execution.",121,null],[12,"sh_offset","","Section file offset.",121,null],[12,"sh_size","","Section size in bytes.",121,null],[12,"sh_link","","Link to another section.",121,null],[12,"sh_info","","Additional section information.",121,null],[12,"sh_addralign","","Section alignment.",121,null],[12,"sh_entsize","","Entry size if the section holds a table.",121,null],[3,"SectionHeader64","","Section header.",null,null],[12,"sh_name","","Section name.",122,null],[12,"sh_type","","Section type. One of the `SHT_*` constants.",122,null],[12,"sh_flags","","Section flags. A combination of the `SHF_*` constants.",122,null],[12,"sh_addr","","Section virtual address at execution.",122,null],[12,"sh_offset","","Section file offset.",122,null],[12,"sh_size","","Section size in bytes.",122,null],[12,"sh_link","","Link to another section.",122,null],[12,"sh_info","","Additional section information.",122,null],[12,"sh_addralign","","Section alignment.",122,null],[12,"sh_entsize","","Entry size if the section holds a table.",122,null],[3,"CompressionHeader32","","Section compression header.",null,null],[12,"ch_type","","Compression format. One of the `ELFCOMPRESS_*` values.",123,null],[12,"ch_size","","Uncompressed data size.",123,null],[12,"ch_addralign","","Uncompressed data alignment.",123,null],[3,"CompressionHeader64","","Section compression header.",null,null],[12,"ch_type","","Compression format. One of the `ELFCOMPRESS_*` values.",124,null],[12,"ch_reserved","","Reserved.",124,null],[12,"ch_size","","Uncompressed data size.",124,null],[12,"ch_addralign","","Uncompressed data alignment.",124,null],[3,"Sym32","","Symbol table entry.",null,null],[12,"st_name","","Symbol name.",125,null],[12,"st_value","","Symbol value.",125,null],[12,"st_size","","Symbol size.",125,null],[12,"st_info","","Symbol type and binding.",125,null],[12,"st_other","","Symbol visibility.",125,null],[12,"st_shndx","","Section index or one of the `SHN_*` values.",125,null],[3,"Sym64","","Symbol table entry.",null,null],[12,"st_name","","Symbol name.",126,null],[12,"st_info","","Symbol type and binding.",126,null],[12,"st_other","","Symbol visibility.",126,null],[12,"st_shndx","","Section index or one of the `SHN_*` values.",126,null],[12,"st_value","","Symbol value.",126,null],[12,"st_size","","Symbol size.",126,null],[3,"Syminfo32","","Additional information about a `Sym32`.",null,null],[12,"si_boundto","","Direct bindings, symbol bound to.",127,null],[12,"si_flags","","Per symbol flags.",127,null],[3,"Syminfo64","","Additional information about a `Sym64`.",null,null],[12,"si_boundto","","Direct bindings, symbol bound to.",128,null],[12,"si_flags","","Per symbol flags.",128,null],[3,"Rel32","","Relocation table entry without explicit addend.",null,null],[12,"r_offset","","Relocation address.",129,null],[12,"r_info","","Relocation type and symbol index.",129,null],[3,"Rela32","","Relocation table entry with explicit addend.",null,null],[12,"r_offset","","Relocation address.",130,null],[12,"r_info","","Relocation type and symbol index.",130,null],[12,"r_addend","","Explicit addend.",130,null],[3,"Rel64","","Relocation table entry without explicit addend.",null,null],[12,"r_offset","","Relocation address.",131,null],[12,"r_info","","Relocation type and symbol index.",131,null],[3,"Rela64","","Relocation table entry with explicit addend.",null,null],[12,"r_offset","","Relocation address.",132,null],[12,"r_info","","Relocation type and symbol index.",132,null],[12,"r_addend","","Explicit addend.",132,null],[3,"ProgramHeader32","","Program segment header.",null,null],[12,"p_type","","Segment type. One of the `PT_*` constants.",133,null],[12,"p_offset","","Segment file offset.",133,null],[12,"p_vaddr","","Segment virtual address.",133,null],[12,"p_paddr","","Segment physical address.",133,null],[12,"p_filesz","","Segment size in the file.",133,null],[12,"p_memsz","","Segment size in memory.",133,null],[12,"p_flags","","Segment flags. A combination of the `PF_*` constants.",133,null],[12,"p_align","","Segment alignment.",133,null],[3,"ProgramHeader64","","Program segment header.",null,null],[12,"p_type","","Segment type. One of the `PT_*` constants.",134,null],[12,"p_flags","","Segment flags. A combination of the `PF_*` constants.",134,null],[12,"p_offset","","Segment file offset.",134,null],[12,"p_vaddr","","Segment virtual address.",134,null],[12,"p_paddr","","Segment physical address.",134,null],[12,"p_filesz","","Segment size in the file.",134,null],[12,"p_memsz","","Segment size in memory.",134,null],[12,"p_align","","Segment alignment.",134,null],[3,"Dyn32","","Dynamic section entry.",null,null],[12,"d_tag","","Dynamic entry type.",135,null],[12,"d_val","","Value (integer or address).",135,null],[3,"Dyn64","","Dynamic section entry.",null,null],[12,"d_tag","","Dynamic entry type.",136,null],[12,"d_val","","Value (integer or address).",136,null],[3,"Versym","","Version symbol information",null,null],[12,"0","","",137,null],[3,"Verdef","","Version definition sections",null,null],[12,"vd_version","","Version revision",138,null],[12,"vd_flags","","Version information",138,null],[12,"vd_ndx","","Version Index",138,null],[12,"vd_cnt","","Number of associated aux entries",138,null],[12,"vd_hash","","Version name hash value",138,null],[12,"vd_aux","","Offset in bytes to verdaux array",138,null],[12,"vd_next","","Offset in bytes to next verdef entry",138,null],[3,"Verdaux","","Auxiliary version information.",null,null],[12,"vda_name","","Version or dependency names",139,null],[12,"vda_next","","Offset in bytes to next verdaux",139,null],[3,"Verneed","","Version dependency.",null,null],[12,"vn_version","","Version of structure",140,null],[12,"vn_cnt","","Number of associated aux entries",140,null],[12,"vn_file","","Offset of filename for this dependency",140,null],[12,"vn_aux","","Offset in bytes to vernaux array",140,null],[12,"vn_next","","Offset in bytes to next verneed entry",140,null],[3,"Vernaux","","Auxiliary needed version information.",null,null],[12,"vna_hash","","Hash value of dependency name",141,null],[12,"vna_flags","","Dependency specific information",141,null],[12,"vna_other","","Version Index",141,null],[12,"vna_name","","Dependency name string offset",141,null],[12,"vna_next","","Offset in bytes to next vernaux entry",141,null],[3,"NoteHeader32","","Note section entry header.",null,null],[12,"n_namesz","","Length of the note\'s name.",142,null],[12,"n_descsz","","Length of the note\'s descriptor.",142,null],[12,"n_type","","Type of the note.",142,null],[3,"NoteHeader64","","Note section entry header.",null,null],[12,"n_namesz","","Length of the note\'s name.",143,null],[12,"n_descsz","","Length of the note\'s descriptor.",143,null],[12,"n_type","","Type of the note.",143,null],[3,"HashHeader","","Header of `SHT_HASH` section.",null,null],[12,"bucket_count","","The number of hash buckets.",144,null],[12,"chain_count","","The number of chain values.",144,null],[3,"GnuHashHeader","","Header of `SHT_GNU_HASH` section.",null,null],[12,"bucket_count","","The number of hash buckets.",145,null],[12,"symbol_base","","The symbol table index of the first symbol in the hash.",145,null],[12,"bloom_count","","The number of words in the bloom filter.",145,null],[12,"bloom_shift","","The bit shift count for the bloom filter.",145,null],[5,"hash","","Calculate the SysV hash for a symbol name.",null,[[]]],[5,"gnu_hash","","Calculate the GNU hash for a symbol name.",null,[[]]],[7,"ELF_NOTE_CORE","","Note name for core files.",null,null],[7,"ELF_NOTE_LINUX","","Note name for linux core files.",null,null],[7,"ELF_NOTE_SOLARIS","","Solaris entries in the note section have this name.",null,null],[7,"ELF_NOTE_GNU","","GNU entries in the note section have this name.",null,null],[17,"ELFMAG","","File identification bytes stored in `Ident::magic`.",null,null],[17,"ELFCLASSNONE","","Invalid class.",null,null],[17,"ELFCLASS32","","32-bit object.",null,null],[17,"ELFCLASS64","","64-bit object.",null,null],[17,"ELFDATANONE","","Invalid data encoding.",null,null],[17,"ELFDATA2LSB","","2\'s complement, little endian.",null,null],[17,"ELFDATA2MSB","","2\'s complement, big endian.",null,null],[17,"ELFOSABI_NONE","","UNIX System V ABI.",null,null],[17,"ELFOSABI_SYSV","","UNIX System V ABI.",null,null],[17,"ELFOSABI_HPUX","","HP-UX.",null,null],[17,"ELFOSABI_NETBSD","","NetBSD.",null,null],[17,"ELFOSABI_GNU","","Object uses GNU ELF extensions.",null,null],[17,"ELFOSABI_LINUX","","Object uses GNU ELF extensions.",null,null],[17,"ELFOSABI_SOLARIS","","Sun Solaris.",null,null],[17,"ELFOSABI_AIX","","IBM AIX.",null,null],[17,"ELFOSABI_IRIX","","SGI Irix.",null,null],[17,"ELFOSABI_FREEBSD","","FreeBSD.",null,null],[17,"ELFOSABI_TRU64","","Compaq TRU64 UNIX.",null,null],[17,"ELFOSABI_MODESTO","","Novell Modesto.",null,null],[17,"ELFOSABI_OPENBSD","","OpenBSD.",null,null],[17,"ELFOSABI_ARM_AEABI","","ARM EABI.",null,null],[17,"ELFOSABI_ARM","","ARM.",null,null],[17,"ELFOSABI_STANDALONE","","Standalone (embedded) application.",null,null],[17,"ET_NONE","","No file type.",null,null],[17,"ET_REL","","Relocatable file.",null,null],[17,"ET_EXEC","","Executable file.",null,null],[17,"ET_DYN","","Shared object file.",null,null],[17,"ET_CORE","","Core file.",null,null],[17,"ET_LOOS","","OS-specific range start.",null,null],[17,"ET_HIOS","","OS-specific range end.",null,null],[17,"ET_LOPROC","","Processor-specific range start.",null,null],[17,"ET_HIPROC","","Processor-specific range end.",null,null],[17,"EM_NONE","","No machine",null,null],[17,"EM_M32","","AT&T WE 32100",null,null],[17,"EM_SPARC","","SUN SPARC",null,null],[17,"EM_386","","Intel 80386",null,null],[17,"EM_68K","","Motorola m68k family",null,null],[17,"EM_88K","","Motorola m88k family",null,null],[17,"EM_IAMCU","","Intel MCU",null,null],[17,"EM_860","","Intel 80860",null,null],[17,"EM_MIPS","","MIPS R3000 big-endian",null,null],[17,"EM_S370","","IBM System/370",null,null],[17,"EM_MIPS_RS3_LE","","MIPS R3000 little-endian",null,null],[17,"EM_PARISC","","HPPA",null,null],[17,"EM_VPP500","","Fujitsu VPP500",null,null],[17,"EM_SPARC32PLUS","","Sun\'s \\\"v8plus\\\"",null,null],[17,"EM_960","","Intel 80960",null,null],[17,"EM_PPC","","PowerPC",null,null],[17,"EM_PPC64","","PowerPC 64-bit",null,null],[17,"EM_S390","","IBM S390",null,null],[17,"EM_SPU","","IBM SPU/SPC",null,null],[17,"EM_V800","","NEC V800 series",null,null],[17,"EM_FR20","","Fujitsu FR20",null,null],[17,"EM_RH32","","TRW RH-32",null,null],[17,"EM_RCE","","Motorola RCE",null,null],[17,"EM_ARM","","ARM",null,null],[17,"EM_FAKE_ALPHA","","Digital Alpha",null,null],[17,"EM_SH","","Hitachi SH",null,null],[17,"EM_SPARCV9","","SPARC v9 64-bit",null,null],[17,"EM_TRICORE","","Siemens Tricore",null,null],[17,"EM_ARC","","Argonaut RISC Core",null,null],[17,"EM_H8_300","","Hitachi H8/300",null,null],[17,"EM_H8_300H","","Hitachi H8/300H",null,null],[17,"EM_H8S","","Hitachi H8S",null,null],[17,"EM_H8_500","","Hitachi H8/500",null,null],[17,"EM_IA_64","","Intel Merced",null,null],[17,"EM_MIPS_X","","Stanford MIPS-X",null,null],[17,"EM_COLDFIRE","","Motorola Coldfire",null,null],[17,"EM_68HC12","","Motorola M68HC12",null,null],[17,"EM_MMA","","Fujitsu MMA Multimedia Accelerator",null,null],[17,"EM_PCP","","Siemens PCP",null,null],[17,"EM_NCPU","","Sony nCPU embeeded RISC",null,null],[17,"EM_NDR1","","Denso NDR1 microprocessor",null,null],[17,"EM_STARCORE","","Motorola Start*Core processor",null,null],[17,"EM_ME16","","Toyota ME16 processor",null,null],[17,"EM_ST100","","STMicroelectronic ST100 processor",null,null],[17,"EM_TINYJ","","Advanced Logic Corp. Tinyj emb.fam",null,null],[17,"EM_X86_64","","AMD x86-64 architecture",null,null],[17,"EM_PDSP","","Sony DSP Processor",null,null],[17,"EM_PDP10","","Digital PDP-10",null,null],[17,"EM_PDP11","","Digital PDP-11",null,null],[17,"EM_FX66","","Siemens FX66 microcontroller",null,null],[17,"EM_ST9PLUS","","STMicroelectronics ST9+ 8/16 mc",null,null],[17,"EM_ST7","","STmicroelectronics ST7 8 bit mc",null,null],[17,"EM_68HC16","","Motorola MC68HC16 microcontroller",null,null],[17,"EM_68HC11","","Motorola MC68HC11 microcontroller",null,null],[17,"EM_68HC08","","Motorola MC68HC08 microcontroller",null,null],[17,"EM_68HC05","","Motorola MC68HC05 microcontroller",null,null],[17,"EM_SVX","","Silicon Graphics SVx",null,null],[17,"EM_ST19","","STMicroelectronics ST19 8 bit mc",null,null],[17,"EM_VAX","","Digital VAX",null,null],[17,"EM_CRIS","","Axis Communications 32-bit emb.proc",null,null],[17,"EM_JAVELIN","","Infineon Technologies 32-bit emb.proc",null,null],[17,"EM_FIREPATH","","Element 14 64-bit DSP Processor",null,null],[17,"EM_ZSP","","LSI Logic 16-bit DSP Processor",null,null],[17,"EM_MMIX","","Donald Knuth\'s educational 64-bit proc",null,null],[17,"EM_HUANY","","Harvard University machine-independent object files",null,null],[17,"EM_PRISM","","SiTera Prism",null,null],[17,"EM_AVR","","Atmel AVR 8-bit microcontroller",null,null],[17,"EM_FR30","","Fujitsu FR30",null,null],[17,"EM_D10V","","Mitsubishi D10V",null,null],[17,"EM_D30V","","Mitsubishi D30V",null,null],[17,"EM_V850","","NEC v850",null,null],[17,"EM_M32R","","Mitsubishi M32R",null,null],[17,"EM_MN10300","","Matsushita MN10300",null,null],[17,"EM_MN10200","","Matsushita MN10200",null,null],[17,"EM_PJ","","picoJava",null,null],[17,"EM_OPENRISC","","OpenRISC 32-bit embedded processor",null,null],[17,"EM_ARC_COMPACT","","ARC International ARCompact",null,null],[17,"EM_XTENSA","","Tensilica Xtensa Architecture",null,null],[17,"EM_VIDEOCORE","","Alphamosaic VideoCore",null,null],[17,"EM_TMM_GPP","","Thompson Multimedia General Purpose Proc",null,null],[17,"EM_NS32K","","National Semi. 32000",null,null],[17,"EM_TPC","","Tenor Network TPC",null,null],[17,"EM_SNP1K","","Trebia SNP 1000",null,null],[17,"EM_ST200","","STMicroelectronics ST200",null,null],[17,"EM_IP2K","","Ubicom IP2xxx",null,null],[17,"EM_MAX","","MAX processor",null,null],[17,"EM_CR","","National Semi. CompactRISC",null,null],[17,"EM_F2MC16","","Fujitsu F2MC16",null,null],[17,"EM_MSP430","","Texas Instruments msp430",null,null],[17,"EM_BLACKFIN","","Analog Devices Blackfin DSP",null,null],[17,"EM_SE_C33","","Seiko Epson S1C33 family",null,null],[17,"EM_SEP","","Sharp embedded microprocessor",null,null],[17,"EM_ARCA","","Arca RISC",null,null],[17,"EM_UNICORE","","PKU-Unity & MPRC Peking Uni. mc series",null,null],[17,"EM_EXCESS","","eXcess configurable cpu",null,null],[17,"EM_DXP","","Icera Semi. Deep Execution Processor",null,null],[17,"EM_ALTERA_NIOS2","","Altera Nios II",null,null],[17,"EM_CRX","","National Semi. CompactRISC CRX",null,null],[17,"EM_XGATE","","Motorola XGATE",null,null],[17,"EM_C166","","Infineon C16x/XC16x",null,null],[17,"EM_M16C","","Renesas M16C",null,null],[17,"EM_DSPIC30F","","Microchip Technology dsPIC30F",null,null],[17,"EM_CE","","Freescale Communication Engine RISC",null,null],[17,"EM_M32C","","Renesas M32C",null,null],[17,"EM_TSK3000","","Altium TSK3000",null,null],[17,"EM_RS08","","Freescale RS08",null,null],[17,"EM_SHARC","","Analog Devices SHARC family",null,null],[17,"EM_ECOG2","","Cyan Technology eCOG2",null,null],[17,"EM_SCORE7","","Sunplus S+core7 RISC",null,null],[17,"EM_DSP24","","New Japan Radio (NJR) 24-bit DSP",null,null],[17,"EM_VIDEOCORE3","","Broadcom VideoCore III",null,null],[17,"EM_LATTICEMICO32","","RISC for Lattice FPGA",null,null],[17,"EM_SE_C17","","Seiko Epson C17",null,null],[17,"EM_TI_C6000","","Texas Instruments TMS320C6000 DSP",null,null],[17,"EM_TI_C2000","","Texas Instruments TMS320C2000 DSP",null,null],[17,"EM_TI_C5500","","Texas Instruments TMS320C55x DSP",null,null],[17,"EM_TI_ARP32","","Texas Instruments App. Specific RISC",null,null],[17,"EM_TI_PRU","","Texas Instruments Prog. Realtime Unit",null,null],[17,"EM_MMDSP_PLUS","","STMicroelectronics 64bit VLIW DSP",null,null],[17,"EM_CYPRESS_M8C","","Cypress M8C",null,null],[17,"EM_R32C","","Renesas R32C",null,null],[17,"EM_TRIMEDIA","","NXP Semi. TriMedia",null,null],[17,"EM_HEXAGON","","QUALCOMM Hexagon",null,null],[17,"EM_8051","","Intel 8051 and variants",null,null],[17,"EM_STXP7X","","STMicroelectronics STxP7x",null,null],[17,"EM_NDS32","","Andes Tech. compact code emb. RISC",null,null],[17,"EM_ECOG1X","","Cyan Technology eCOG1X",null,null],[17,"EM_MAXQ30","","Dallas Semi. MAXQ30 mc",null,null],[17,"EM_XIMO16","","New Japan Radio (NJR) 16-bit DSP",null,null],[17,"EM_MANIK","","M2000 Reconfigurable RISC",null,null],[17,"EM_CRAYNV2","","Cray NV2 vector architecture",null,null],[17,"EM_RX","","Renesas RX",null,null],[17,"EM_METAG","","Imagination Tech. META",null,null],[17,"EM_MCST_ELBRUS","","MCST Elbrus",null,null],[17,"EM_ECOG16","","Cyan Technology eCOG16",null,null],[17,"EM_CR16","","National Semi. CompactRISC CR16",null,null],[17,"EM_ETPU","","Freescale Extended Time Processing Unit",null,null],[17,"EM_SLE9X","","Infineon Tech. SLE9X",null,null],[17,"EM_L10M","","Intel L10M",null,null],[17,"EM_K10M","","Intel K10M",null,null],[17,"EM_AARCH64","","ARM AARCH64",null,null],[17,"EM_AVR32","","Amtel 32-bit microprocessor",null,null],[17,"EM_STM8","","STMicroelectronics STM8",null,null],[17,"EM_TILE64","","Tileta TILE64",null,null],[17,"EM_TILEPRO","","Tilera TILEPro",null,null],[17,"EM_MICROBLAZE","","Xilinx MicroBlaze",null,null],[17,"EM_CUDA","","NVIDIA CUDA",null,null],[17,"EM_TILEGX","","Tilera TILE-Gx",null,null],[17,"EM_CLOUDSHIELD","","CloudShield",null,null],[17,"EM_COREA_1ST","","KIPO-KAIST Core-A 1st gen.",null,null],[17,"EM_COREA_2ND","","KIPO-KAIST Core-A 2nd gen.",null,null],[17,"EM_ARC_COMPACT2","","Synopsys ARCompact V2",null,null],[17,"EM_OPEN8","","Open8 RISC",null,null],[17,"EM_RL78","","Renesas RL78",null,null],[17,"EM_VIDEOCORE5","","Broadcom VideoCore V",null,null],[17,"EM_78KOR","","Renesas 78KOR",null,null],[17,"EM_56800EX","","Freescale 56800EX DSC",null,null],[17,"EM_BA1","","Beyond BA1",null,null],[17,"EM_BA2","","Beyond BA2",null,null],[17,"EM_XCORE","","XMOS xCORE",null,null],[17,"EM_MCHP_PIC","","Microchip 8-bit PIC(r)",null,null],[17,"EM_KM32","","KM211 KM32",null,null],[17,"EM_KMX32","","KM211 KMX32",null,null],[17,"EM_EMX16","","KM211 KMX16",null,null],[17,"EM_EMX8","","KM211 KMX8",null,null],[17,"EM_KVARC","","KM211 KVARC",null,null],[17,"EM_CDP","","Paneve CDP",null,null],[17,"EM_COGE","","Cognitive Smart Memory Processor",null,null],[17,"EM_COOL","","Bluechip CoolEngine",null,null],[17,"EM_NORC","","Nanoradio Optimized RISC",null,null],[17,"EM_CSR_KALIMBA","","CSR Kalimba",null,null],[17,"EM_Z80","","Zilog Z80",null,null],[17,"EM_VISIUM","","Controls and Data Services VISIUMcore",null,null],[17,"EM_FT32","","FTDI Chip FT32",null,null],[17,"EM_MOXIE","","Moxie processor",null,null],[17,"EM_AMDGPU","","AMD GPU",null,null],[17,"EM_RISCV","","RISC-V",null,null],[17,"EM_BPF","","Linux BPF -- in-kernel virtual machine",null,null],[17,"EM_CSKY","","C-SKY",null,null],[17,"EM_ALPHA","","Digital Alpha",null,null],[17,"EV_NONE","","Invalid ELF version.",null,null],[17,"EV_CURRENT","","Current ELF version.",null,null],[17,"SHN_UNDEF","","Undefined section.",null,null],[17,"SHN_LORESERVE","","OS-specific range start. Start of reserved section indices.",null,null],[17,"SHN_LOPROC","","Start of processor-specific section indices.",null,null],[17,"SHN_HIPROC","","End of processor-specific section indices.",null,null],[17,"SHN_LOOS","","Start of OS-specific section indices.",null,null],[17,"SHN_HIOS","","End of OS-specific section indices.",null,null],[17,"SHN_ABS","","Associated symbol is absolute.",null,null],[17,"SHN_COMMON","","Associated symbol is common.",null,null],[17,"SHN_XINDEX","","Section index is in the `SHT_SYMTAB_SHNDX` section.",null,null],[17,"SHN_HIRESERVE","","End of reserved section indices.",null,null],[17,"SHT_NULL","","Section header table entry is unused.",null,null],[17,"SHT_PROGBITS","","Program data.",null,null],[17,"SHT_SYMTAB","","Symbol table.",null,null],[17,"SHT_STRTAB","","String table.",null,null],[17,"SHT_RELA","","Relocation entries with explicit addends.",null,null],[17,"SHT_HASH","","Symbol hash table.",null,null],[17,"SHT_DYNAMIC","","Dynamic linking information.",null,null],[17,"SHT_NOTE","","Notes.",null,null],[17,"SHT_NOBITS","","Program space with no data (bss).",null,null],[17,"SHT_REL","","Relocation entries without explicit addends.",null,null],[17,"SHT_SHLIB","","Reserved section type.",null,null],[17,"SHT_DYNSYM","","Dynamic linker symbol table.",null,null],[17,"SHT_INIT_ARRAY","","Array of constructors.",null,null],[17,"SHT_FINI_ARRAY","","Array of destructors.",null,null],[17,"SHT_PREINIT_ARRAY","","Array of pre-constructors.",null,null],[17,"SHT_GROUP","","Section group.",null,null],[17,"SHT_SYMTAB_SHNDX","","Extended section indices for a symbol table.",null,null],[17,"SHT_LOOS","","Start of OS-specific section types.",null,null],[17,"SHT_GNU_ATTRIBUTES","","Object attributes.",null,null],[17,"SHT_GNU_HASH","","GNU-style hash table.",null,null],[17,"SHT_GNU_LIBLIST","","Prelink library list",null,null],[17,"SHT_CHECKSUM","","Checksum for DSO content.",null,null],[17,"SHT_LOSUNW","","Sun-specific low bound.",null,null],[17,"SHT_SUNW_move","","",null,null],[17,"SHT_SUNW_COMDAT","","",null,null],[17,"SHT_SUNW_syminfo","","",null,null],[17,"SHT_GNU_VERDEF","","Version definition section.",null,null],[17,"SHT_GNU_VERNEED","","Version needs section.",null,null],[17,"SHT_GNU_VERSYM","","Version symbol table.",null,null],[17,"SHT_HISUNW","","Sun-specific high bound.",null,null],[17,"SHT_HIOS","","End of OS-specific section types.",null,null],[17,"SHT_LOPROC","","Start of processor-specific section types.",null,null],[17,"SHT_HIPROC","","End of processor-specific section types.",null,null],[17,"SHT_LOUSER","","Start of application-specific section types.",null,null],[17,"SHT_HIUSER","","End of application-specific section types.",null,null],[17,"SHF_WRITE","","Section is writable.",null,null],[17,"SHF_ALLOC","","Section occupies memory during execution.",null,null],[17,"SHF_EXECINSTR","","Section is executable.",null,null],[17,"SHF_MERGE","","Section may be be merged to eliminate duplication.",null,null],[17,"SHF_STRINGS","","Section contains nul-terminated strings.",null,null],[17,"SHF_INFO_LINK","","The `sh_info` field contains a section header table index.",null,null],[17,"SHF_LINK_ORDER","","Section has special ordering requirements when combining…",null,null],[17,"SHF_OS_NONCONFORMING","","Section requires special OS-specific handling.",null,null],[17,"SHF_GROUP","","Section is a member of a group.",null,null],[17,"SHF_TLS","","Section holds thread-local storage.",null,null],[17,"SHF_COMPRESSED","","Section is compressed.",null,null],[17,"SHF_MASKOS","","OS-specific section flags.",null,null],[17,"SHF_MASKPROC","","Processor-specific section flags.",null,null],[17,"SHF_EXCLUDE","","This section is excluded from the final executable or…",null,null],[17,"ELFCOMPRESS_ZLIB","","ZLIB/DEFLATE algorithm.",null,null],[17,"ELFCOMPRESS_LOOS","","Start of OS-specific compression types.",null,null],[17,"ELFCOMPRESS_HIOS","","End of OS-specific compression types.",null,null],[17,"ELFCOMPRESS_LOPROC","","Start of processor-specific compression types.",null,null],[17,"ELFCOMPRESS_HIPROC","","End of processor-specific compression types.",null,null],[17,"GRP_COMDAT","","Mark group as COMDAT.",null,null],[17,"SYMINFO_BT_SELF","","Symbol bound to self",null,null],[17,"SYMINFO_BT_PARENT","","Symbol bound to parent",null,null],[17,"SYMINFO_BT_LOWRESERVE","","Beginning of reserved entries",null,null],[17,"SYMINFO_FLG_DIRECT","","Direct bound symbol",null,null],[17,"SYMINFO_FLG_PASSTHRU","","Pass-thru symbol for translator",null,null],[17,"SYMINFO_FLG_COPY","","Symbol is a copy-reloc",null,null],[17,"SYMINFO_FLG_LAZYLOAD","","Symbol bound to object to be lazy loaded",null,null],[17,"SYMINFO_NONE","","",null,null],[17,"SYMINFO_CURRENT","","",null,null],[17,"SYMINFO_NUM","","",null,null],[17,"STB_LOCAL","","Local symbol.",null,null],[17,"STB_GLOBAL","","Global symbol.",null,null],[17,"STB_WEAK","","Weak symbol.",null,null],[17,"STB_LOOS","","Start of OS-specific symbol binding.",null,null],[17,"STB_GNU_UNIQUE","","Unique symbol.",null,null],[17,"STB_HIOS","","End of OS-specific symbol binding.",null,null],[17,"STB_LOPROC","","Start of processor-specific symbol binding.",null,null],[17,"STB_HIPROC","","End of processor-specific symbol binding.",null,null],[17,"STT_NOTYPE","","Symbol type is unspecified.",null,null],[17,"STT_OBJECT","","Symbol is a data object.",null,null],[17,"STT_FUNC","","Symbol is a code object.",null,null],[17,"STT_SECTION","","Symbol is associated with a section.",null,null],[17,"STT_FILE","","Symbol\'s name is a file name.",null,null],[17,"STT_COMMON","","Symbol is a common data object.",null,null],[17,"STT_TLS","","Symbol is a thread-local storage object.",null,null],[17,"STT_LOOS","","Start of OS-specific symbol types.",null,null],[17,"STT_GNU_IFUNC","","Symbol is an indirect code object.",null,null],[17,"STT_HIOS","","End of OS-specific symbol types.",null,null],[17,"STT_LOPROC","","Start of processor-specific symbol types.",null,null],[17,"STT_HIPROC","","End of processor-specific symbol types.",null,null],[17,"STV_DEFAULT","","Default symbol visibility rules.",null,null],[17,"STV_INTERNAL","","Processor specific hidden class.",null,null],[17,"STV_HIDDEN","","Symbol is not visible to other components.",null,null],[17,"STV_PROTECTED","","Symbol is visible to other components, but is not…",null,null],[17,"PN_XNUM","","Special value for `FileHeader*::e_phnum`.",null,null],[17,"PT_NULL","","Program header table entry is unused.",null,null],[17,"PT_LOAD","","Loadable program segment.",null,null],[17,"PT_DYNAMIC","","Dynamic linking information.",null,null],[17,"PT_INTERP","","Program interpreter.",null,null],[17,"PT_NOTE","","Auxiliary information.",null,null],[17,"PT_SHLIB","","Reserved.",null,null],[17,"PT_PHDR","","Segment contains the program header table.",null,null],[17,"PT_TLS","","Thread-local storage segment.",null,null],[17,"PT_LOOS","","Start of OS-specific segment types.",null,null],[17,"PT_GNU_EH_FRAME","","GCC `.eh_frame_hdr` segment.",null,null],[17,"PT_GNU_STACK","","Indicates stack executability.",null,null],[17,"PT_GNU_RELRO","","Read-only after relocation.",null,null],[17,"PT_HIOS","","End of OS-specific segment types.",null,null],[17,"PT_LOPROC","","Start of processor-specific segment types.",null,null],[17,"PT_HIPROC","","End of processor-specific segment types.",null,null],[17,"PF_X","","Segment is executable.",null,null],[17,"PF_W","","Segment is writable.",null,null],[17,"PF_R","","Segment is readable.",null,null],[17,"PF_MASKOS","","OS-specific segment flags.",null,null],[17,"PF_MASKPROC","","Processor-specific segment flags.",null,null],[17,"NT_PRSTATUS","","Contains copy of prstatus struct.",null,null],[17,"NT_PRFPREG","","Contains copy of fpregset struct.",null,null],[17,"NT_FPREGSET","","Contains copy of fpregset struct.",null,null],[17,"NT_PRPSINFO","","Contains copy of prpsinfo struct.",null,null],[17,"NT_PRXREG","","Contains copy of prxregset struct.",null,null],[17,"NT_TASKSTRUCT","","Contains copy of task structure.",null,null],[17,"NT_PLATFORM","","String from sysinfo(SI_PLATFORM).",null,null],[17,"NT_AUXV","","Contains copy of auxv array.",null,null],[17,"NT_GWINDOWS","","Contains copy of gwindows struct.",null,null],[17,"NT_ASRS","","Contains copy of asrset struct.",null,null],[17,"NT_PSTATUS","","Contains copy of pstatus struct.",null,null],[17,"NT_PSINFO","","Contains copy of psinfo struct.",null,null],[17,"NT_PRCRED","","Contains copy of prcred struct.",null,null],[17,"NT_UTSNAME","","Contains copy of utsname struct.",null,null],[17,"NT_LWPSTATUS","","Contains copy of lwpstatus struct.",null,null],[17,"NT_LWPSINFO","","Contains copy of lwpinfo struct.",null,null],[17,"NT_PRFPXREG","","Contains copy of fprxregset struct.",null,null],[17,"NT_SIGINFO","","Contains copy of siginfo_t, size might increase.",null,null],[17,"NT_FILE","","Contains information about mapped files.",null,null],[17,"NT_PRXFPREG","","Contains copy of user_fxsr_struct.",null,null],[17,"NT_PPC_VMX","","PowerPC Altivec/VMX registers.",null,null],[17,"NT_PPC_SPE","","PowerPC SPE/EVR registers.",null,null],[17,"NT_PPC_VSX","","PowerPC VSX registers.",null,null],[17,"NT_PPC_TAR","","Target Address Register.",null,null],[17,"NT_PPC_PPR","","Program Priority Register.",null,null],[17,"NT_PPC_DSCR","","Data Stream Control Register.",null,null],[17,"NT_PPC_EBB","","Event Based Branch Registers.",null,null],[17,"NT_PPC_PMU","","Performance Monitor Registers.",null,null],[17,"NT_PPC_TM_CGPR","","TM checkpointed GPR Registers.",null,null],[17,"NT_PPC_TM_CFPR","","TM checkpointed FPR Registers.",null,null],[17,"NT_PPC_TM_CVMX","","TM checkpointed VMX Registers.",null,null],[17,"NT_PPC_TM_CVSX","","TM checkpointed VSX Registers.",null,null],[17,"NT_PPC_TM_SPR","","TM Special Purpose Registers.",null,null],[17,"NT_PPC_TM_CTAR","","TM checkpointed Target Address Register.",null,null],[17,"NT_PPC_TM_CPPR","","TM checkpointed Program Priority Register.",null,null],[17,"NT_PPC_TM_CDSCR","","TM checkpointed Data Stream Control Register.",null,null],[17,"NT_PPC_PKEY","","Memory Protection Keys registers.",null,null],[17,"NT_386_TLS","","i386 TLS slots (struct user_desc).",null,null],[17,"NT_386_IOPERM","","x86 io permission bitmap (1=deny).",null,null],[17,"NT_X86_XSTATE","","x86 extended state using xsave.",null,null],[17,"NT_S390_HIGH_GPRS","","s390 upper register halves.",null,null],[17,"NT_S390_TIMER","","s390 timer register.",null,null],[17,"NT_S390_TODCMP","","s390 TOD clock comparator register.",null,null],[17,"NT_S390_TODPREG","","s390 TOD programmable register.",null,null],[17,"NT_S390_CTRS","","s390 control registers.",null,null],[17,"NT_S390_PREFIX","","s390 prefix register.",null,null],[17,"NT_S390_LAST_BREAK","","s390 breaking event address.",null,null],[17,"NT_S390_SYSTEM_CALL","","s390 system call restart data.",null,null],[17,"NT_S390_TDB","","s390 transaction diagnostic block.",null,null],[17,"NT_S390_VXRS_LOW","","s390 vector registers 0-15 upper half.",null,null],[17,"NT_S390_VXRS_HIGH","","s390 vector registers 16-31.",null,null],[17,"NT_S390_GS_CB","","s390 guarded storage registers.",null,null],[17,"NT_S390_GS_BC","","s390 guarded storage broadcast control block.",null,null],[17,"NT_S390_RI_CB","","s390 runtime instrumentation.",null,null],[17,"NT_ARM_VFP","","ARM VFP/NEON registers.",null,null],[17,"NT_ARM_TLS","","ARM TLS register.",null,null],[17,"NT_ARM_HW_BREAK","","ARM hardware breakpoint registers.",null,null],[17,"NT_ARM_HW_WATCH","","ARM hardware watchpoint registers.",null,null],[17,"NT_ARM_SYSTEM_CALL","","ARM system call number.",null,null],[17,"NT_ARM_SVE","","ARM Scalable Vector Extension registers.",null,null],[17,"NT_VMCOREDD","","Vmcore Device Dump Note.",null,null],[17,"NT_MIPS_DSP","","MIPS DSP ASE registers.",null,null],[17,"NT_MIPS_FP_MODE","","MIPS floating-point mode.",null,null],[17,"NT_VERSION","","Note type for version string.",null,null],[17,"DT_NULL","","Marks end of dynamic section",null,null],[17,"DT_NEEDED","","Name of needed library",null,null],[17,"DT_PLTRELSZ","","Size in bytes of PLT relocs",null,null],[17,"DT_PLTGOT","","Processor defined value",null,null],[17,"DT_HASH","","Address of symbol hash table",null,null],[17,"DT_STRTAB","","Address of string table",null,null],[17,"DT_SYMTAB","","Address of symbol table",null,null],[17,"DT_RELA","","Address of Rela relocs",null,null],[17,"DT_RELASZ","","Total size of Rela relocs",null,null],[17,"DT_RELAENT","","Size of one Rela reloc",null,null],[17,"DT_STRSZ","","Size of string table",null,null],[17,"DT_SYMENT","","Size of one symbol table entry",null,null],[17,"DT_INIT","","Address of init function",null,null],[17,"DT_FINI","","Address of termination function",null,null],[17,"DT_SONAME","","Name of shared object",null,null],[17,"DT_RPATH","","Library search path (deprecated)",null,null],[17,"DT_SYMBOLIC","","Start symbol search here",null,null],[17,"DT_REL","","Address of Rel relocs",null,null],[17,"DT_RELSZ","","Total size of Rel relocs",null,null],[17,"DT_RELENT","","Size of one Rel reloc",null,null],[17,"DT_PLTREL","","Type of reloc in PLT",null,null],[17,"DT_DEBUG","","For debugging; unspecified",null,null],[17,"DT_TEXTREL","","Reloc might modify .text",null,null],[17,"DT_JMPREL","","Address of PLT relocs",null,null],[17,"DT_BIND_NOW","","Process relocations of object",null,null],[17,"DT_INIT_ARRAY","","Array with addresses of init fct",null,null],[17,"DT_FINI_ARRAY","","Array with addresses of fini fct",null,null],[17,"DT_INIT_ARRAYSZ","","Size in bytes of DT_INIT_ARRAY",null,null],[17,"DT_FINI_ARRAYSZ","","Size in bytes of DT_FINI_ARRAY",null,null],[17,"DT_RUNPATH","","Library search path",null,null],[17,"DT_FLAGS","","Flags for the object being loaded",null,null],[17,"DT_ENCODING","","Start of encoded range",null,null],[17,"DT_PREINIT_ARRAY","","Array with addresses of preinit fct",null,null],[17,"DT_PREINIT_ARRAYSZ","","size in bytes of DT_PREINIT_ARRAY",null,null],[17,"DT_SYMTAB_SHNDX","","Address of SYMTAB_SHNDX section",null,null],[17,"DT_LOOS","","Start of OS-specific",null,null],[17,"DT_HIOS","","End of OS-specific",null,null],[17,"DT_LOPROC","","Start of processor-specific",null,null],[17,"DT_HIPROC","","End of processor-specific",null,null],[17,"DT_VALRNGLO","","",null,null],[17,"DT_GNU_PRELINKED","","Prelinking timestamp",null,null],[17,"DT_GNU_CONFLICTSZ","","Size of conflict section",null,null],[17,"DT_GNU_LIBLISTSZ","","Size of library list",null,null],[17,"DT_CHECKSUM","","",null,null],[17,"DT_PLTPADSZ","","",null,null],[17,"DT_MOVEENT","","",null,null],[17,"DT_MOVESZ","","",null,null],[17,"DT_FEATURE_1","","Feature selection (DTF_*).",null,null],[17,"DT_POSFLAG_1","","Flags for DT_* entries, affecting the following DT_* entry.",null,null],[17,"DT_SYMINSZ","","Size of syminfo table (in bytes)",null,null],[17,"DT_SYMINENT","","Entry size of syminfo",null,null],[17,"DT_VALRNGHI","","",null,null],[17,"DT_ADDRRNGLO","","",null,null],[17,"DT_GNU_HASH","","GNU-style hash table.",null,null],[17,"DT_TLSDESC_PLT","","",null,null],[17,"DT_TLSDESC_GOT","","",null,null],[17,"DT_GNU_CONFLICT","","Start of conflict section",null,null],[17,"DT_GNU_LIBLIST","","Library list",null,null],[17,"DT_CONFIG","","Configuration information.",null,null],[17,"DT_DEPAUDIT","","Dependency auditing.",null,null],[17,"DT_AUDIT","","Object auditing.",null,null],[17,"DT_PLTPAD","","PLT padding.",null,null],[17,"DT_MOVETAB","","Move table.",null,null],[17,"DT_SYMINFO","","Syminfo table.",null,null],[17,"DT_ADDRRNGHI","","",null,null],[17,"DT_VERSYM","","",null,null],[17,"DT_RELACOUNT","","",null,null],[17,"DT_RELCOUNT","","",null,null],[17,"DT_FLAGS_1","","State flags, see DF_1_* below.",null,null],[17,"DT_VERDEF","","Address of version definition table",null,null],[17,"DT_VERDEFNUM","","Number of version definitions",null,null],[17,"DT_VERNEED","","Address of table with needed versions",null,null],[17,"DT_VERNEEDNUM","","Number of needed versions",null,null],[17,"DT_AUXILIARY","","Shared object to load before self",null,null],[17,"DT_FILTER","","Shared object to get values from",null,null],[17,"DF_ORIGIN","","Object may use DF_ORIGIN",null,null],[17,"DF_SYMBOLIC","","Symbol resolutions starts here",null,null],[17,"DF_TEXTREL","","Object contains text relocations",null,null],[17,"DF_BIND_NOW","","No lazy binding for this object",null,null],[17,"DF_STATIC_TLS","","Module uses the static TLS model",null,null],[17,"DF_1_NOW","","Set RTLD_NOW for this object.",null,null],[17,"DF_1_GLOBAL","","Set RTLD_GLOBAL for this object.",null,null],[17,"DF_1_GROUP","","Set RTLD_GROUP for this object.",null,null],[17,"DF_1_NODELETE","","Set RTLD_NODELETE for this object.",null,null],[17,"DF_1_LOADFLTR","","Trigger filtee loading at runtime.",null,null],[17,"DF_1_INITFIRST","","Set RTLD_INITFIRST for this object.",null,null],[17,"DF_1_NOOPEN","","Set RTLD_NOOPEN for this object.",null,null],[17,"DF_1_ORIGIN","","$ORIGIN must be handled.",null,null],[17,"DF_1_DIRECT","","Direct binding enabled.",null,null],[17,"DF_1_TRANS","","",null,null],[17,"DF_1_INTERPOSE","","Object is used to interpose.",null,null],[17,"DF_1_NODEFLIB","","Ignore default lib search path.",null,null],[17,"DF_1_NODUMP","","Object can\'t be dldump\'ed.",null,null],[17,"DF_1_CONFALT","","Configuration alternative created.",null,null],[17,"DF_1_ENDFILTEE","","Filtee terminates filters search.",null,null],[17,"DF_1_DISPRELDNE","","Disp reloc applied at build time.",null,null],[17,"DF_1_DISPRELPND","","Disp reloc applied at run-time.",null,null],[17,"DF_1_NODIRECT","","Object has no-direct binding.",null,null],[17,"DF_1_IGNMULDEF","","",null,null],[17,"DF_1_NOKSYMS","","",null,null],[17,"DF_1_NOHDR","","",null,null],[17,"DF_1_EDITED","","Object is modified after built.",null,null],[17,"DF_1_NORELOC","","",null,null],[17,"DF_1_SYMINTPOSE","","Object has individual interposers.",null,null],[17,"DF_1_GLOBAUDIT","","Global auditing required.",null,null],[17,"DF_1_SINGLETON","","Singleton symbols are used.",null,null],[17,"DF_1_STUB","","",null,null],[17,"DF_1_PIE","","",null,null],[17,"VERSYM_HIDDEN","","Symbol is hidden.",null,null],[17,"VERSYM_VERSION","","Symbol version index.",null,null],[17,"VER_DEF_NONE","","No version",null,null],[17,"VER_DEF_CURRENT","","Current version",null,null],[17,"VER_FLG_BASE","","Version definition of file itself",null,null],[17,"VER_FLG_WEAK","","Weak version identifier",null,null],[17,"VER_NDX_LOCAL","","Symbol is local.",null,null],[17,"VER_NDX_GLOBAL","","Symbol is global.",null,null],[17,"VER_NEED_NONE","","No version",null,null],[17,"VER_NEED_CURRENT","","Current version",null,null],[17,"NT_SOLARIS_PAGESIZE_HINT","","Desired pagesize for the binary.",null,null],[17,"NT_GNU_ABI_TAG","","ABI information.",null,null],[17,"ELF_NOTE_OS_LINUX","","OS descriptor for `NT_GNU_ABI_TAG`.",null,null],[17,"ELF_NOTE_OS_GNU","","OS descriptor for `NT_GNU_ABI_TAG`.",null,null],[17,"ELF_NOTE_OS_SOLARIS2","","OS descriptor for `NT_GNU_ABI_TAG`.",null,null],[17,"ELF_NOTE_OS_FREEBSD","","OS descriptor for `NT_GNU_ABI_TAG`.",null,null],[17,"NT_GNU_HWCAP","","Synthetic hwcap information.",null,null],[17,"NT_GNU_BUILD_ID","","Build ID bits as generated by `ld --build-id`.",null,null],[17,"NT_GNU_GOLD_VERSION","","Version note generated by GNU gold containing a version…",null,null],[17,"NT_GNU_PROPERTY_TYPE_0","","Program property.",null,null],[17,"R_68K_NONE","","No reloc",null,null],[17,"R_68K_32","","Direct 32 bit",null,null],[17,"R_68K_16","","Direct 16 bit",null,null],[17,"R_68K_8","","Direct 8 bit",null,null],[17,"R_68K_PC32","","PC relative 32 bit",null,null],[17,"R_68K_PC16","","PC relative 16 bit",null,null],[17,"R_68K_PC8","","PC relative 8 bit",null,null],[17,"R_68K_GOT32","","32 bit PC relative GOT entry",null,null],[17,"R_68K_GOT16","","16 bit PC relative GOT entry",null,null],[17,"R_68K_GOT8","","8 bit PC relative GOT entry",null,null],[17,"R_68K_GOT32O","","32 bit GOT offset",null,null],[17,"R_68K_GOT16O","","16 bit GOT offset",null,null],[17,"R_68K_GOT8O","","8 bit GOT offset",null,null],[17,"R_68K_PLT32","","32 bit PC relative PLT address",null,null],[17,"R_68K_PLT16","","16 bit PC relative PLT address",null,null],[17,"R_68K_PLT8","","8 bit PC relative PLT address",null,null],[17,"R_68K_PLT32O","","32 bit PLT offset",null,null],[17,"R_68K_PLT16O","","16 bit PLT offset",null,null],[17,"R_68K_PLT8O","","8 bit PLT offset",null,null],[17,"R_68K_COPY","","Copy symbol at runtime",null,null],[17,"R_68K_GLOB_DAT","","Create GOT entry",null,null],[17,"R_68K_JMP_SLOT","","Create PLT entry",null,null],[17,"R_68K_RELATIVE","","Adjust by program base",null,null],[17,"R_68K_TLS_GD32","","32 bit GOT offset for GD",null,null],[17,"R_68K_TLS_GD16","","16 bit GOT offset for GD",null,null],[17,"R_68K_TLS_GD8","","8 bit GOT offset for GD",null,null],[17,"R_68K_TLS_LDM32","","32 bit GOT offset for LDM",null,null],[17,"R_68K_TLS_LDM16","","16 bit GOT offset for LDM",null,null],[17,"R_68K_TLS_LDM8","","8 bit GOT offset for LDM",null,null],[17,"R_68K_TLS_LDO32","","32 bit module-relative offset",null,null],[17,"R_68K_TLS_LDO16","","16 bit module-relative offset",null,null],[17,"R_68K_TLS_LDO8","","8 bit module-relative offset",null,null],[17,"R_68K_TLS_IE32","","32 bit GOT offset for IE",null,null],[17,"R_68K_TLS_IE16","","16 bit GOT offset for IE",null,null],[17,"R_68K_TLS_IE8","","8 bit GOT offset for IE",null,null],[17,"R_68K_TLS_LE32","","32 bit offset relative to static TLS block",null,null],[17,"R_68K_TLS_LE16","","16 bit offset relative to static TLS block",null,null],[17,"R_68K_TLS_LE8","","8 bit offset relative to static TLS block",null,null],[17,"R_68K_TLS_DTPMOD32","","32 bit module number",null,null],[17,"R_68K_TLS_DTPREL32","","32 bit module-relative offset",null,null],[17,"R_68K_TLS_TPREL32","","32 bit TP-relative offset",null,null],[17,"R_386_NONE","","No reloc",null,null],[17,"R_386_32","","Direct 32 bit",null,null],[17,"R_386_PC32","","PC relative 32 bit",null,null],[17,"R_386_GOT32","","32 bit GOT entry",null,null],[17,"R_386_PLT32","","32 bit PLT address",null,null],[17,"R_386_COPY","","Copy symbol at runtime",null,null],[17,"R_386_GLOB_DAT","","Create GOT entry",null,null],[17,"R_386_JMP_SLOT","","Create PLT entry",null,null],[17,"R_386_RELATIVE","","Adjust by program base",null,null],[17,"R_386_GOTOFF","","32 bit offset to GOT",null,null],[17,"R_386_GOTPC","","32 bit PC relative offset to GOT",null,null],[17,"R_386_32PLT","","Direct 32 bit PLT address",null,null],[17,"R_386_TLS_TPOFF","","Offset in static TLS block",null,null],[17,"R_386_TLS_IE","","Address of GOT entry for static TLS block offset",null,null],[17,"R_386_TLS_GOTIE","","GOT entry for static TLS block offset",null,null],[17,"R_386_TLS_LE","","Offset relative to static TLS block",null,null],[17,"R_386_TLS_GD","","Direct 32 bit for GNU version of general dynamic thread…",null,null],[17,"R_386_TLS_LDM","","Direct 32 bit for GNU version of local dynamic thread…",null,null],[17,"R_386_16","","Direct 16 bit",null,null],[17,"R_386_PC16","","PC relative 16 bit",null,null],[17,"R_386_8","","Direct 8 bit",null,null],[17,"R_386_PC8","","PC relative 8 bit",null,null],[17,"R_386_TLS_GD_32","","Direct 32 bit for general dynamic thread local data",null,null],[17,"R_386_TLS_GD_PUSH","","Tag for pushl in GD TLS code",null,null],[17,"R_386_TLS_GD_CALL","","Relocation for call to __tls_get_addr()",null,null],[17,"R_386_TLS_GD_POP","","Tag for popl in GD TLS code",null,null],[17,"R_386_TLS_LDM_32","","Direct 32 bit for local dynamic thread local data in LE code",null,null],[17,"R_386_TLS_LDM_PUSH","","Tag for pushl in LDM TLS code",null,null],[17,"R_386_TLS_LDM_CALL","","Relocation for call to __tls_get_addr() in LDM code",null,null],[17,"R_386_TLS_LDM_POP","","Tag for popl in LDM TLS code",null,null],[17,"R_386_TLS_LDO_32","","Offset relative to TLS block",null,null],[17,"R_386_TLS_IE_32","","GOT entry for negated static TLS block offset",null,null],[17,"R_386_TLS_LE_32","","Negated offset relative to static TLS block",null,null],[17,"R_386_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_386_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_386_TLS_TPOFF32","","Negated offset in static TLS block",null,null],[17,"R_386_SIZE32","","32-bit symbol size",null,null],[17,"R_386_TLS_GOTDESC","","GOT offset for TLS descriptor.",null,null],[17,"R_386_TLS_DESC_CALL","","Marker of call through TLS descriptor for relaxation.",null,null],[17,"R_386_TLS_DESC","","TLS descriptor containing pointer to code and to argument,…",null,null],[17,"R_386_IRELATIVE","","Adjust indirectly by program base",null,null],[17,"R_386_GOT32X","","Load from 32 bit GOT entry, relaxable.",null,null],[17,"STT_SPARC_REGISTER","","Global register reserved to app.",null,null],[17,"EF_SPARCV9_MM","","",null,null],[17,"EF_SPARCV9_TSO","","",null,null],[17,"EF_SPARCV9_PSO","","",null,null],[17,"EF_SPARCV9_RMO","","",null,null],[17,"EF_SPARC_LEDATA","","little endian data",null,null],[17,"EF_SPARC_EXT_MASK","","",null,null],[17,"EF_SPARC_32PLUS","","generic V8+ features",null,null],[17,"EF_SPARC_SUN_US1","","Sun UltraSPARC1 extensions",null,null],[17,"EF_SPARC_HAL_R1","","HAL R1 extensions",null,null],[17,"EF_SPARC_SUN_US3","","Sun UltraSPARCIII extensions",null,null],[17,"R_SPARC_NONE","","No reloc",null,null],[17,"R_SPARC_8","","Direct 8 bit",null,null],[17,"R_SPARC_16","","Direct 16 bit",null,null],[17,"R_SPARC_32","","Direct 32 bit",null,null],[17,"R_SPARC_DISP8","","PC relative 8 bit",null,null],[17,"R_SPARC_DISP16","","PC relative 16 bit",null,null],[17,"R_SPARC_DISP32","","PC relative 32 bit",null,null],[17,"R_SPARC_WDISP30","","PC relative 30 bit shifted",null,null],[17,"R_SPARC_WDISP22","","PC relative 22 bit shifted",null,null],[17,"R_SPARC_HI22","","High 22 bit",null,null],[17,"R_SPARC_22","","Direct 22 bit",null,null],[17,"R_SPARC_13","","Direct 13 bit",null,null],[17,"R_SPARC_LO10","","Truncated 10 bit",null,null],[17,"R_SPARC_GOT10","","Truncated 10 bit GOT entry",null,null],[17,"R_SPARC_GOT13","","13 bit GOT entry",null,null],[17,"R_SPARC_GOT22","","22 bit GOT entry shifted",null,null],[17,"R_SPARC_PC10","","PC relative 10 bit truncated",null,null],[17,"R_SPARC_PC22","","PC relative 22 bit shifted",null,null],[17,"R_SPARC_WPLT30","","30 bit PC relative PLT address",null,null],[17,"R_SPARC_COPY","","Copy symbol at runtime",null,null],[17,"R_SPARC_GLOB_DAT","","Create GOT entry",null,null],[17,"R_SPARC_JMP_SLOT","","Create PLT entry",null,null],[17,"R_SPARC_RELATIVE","","Adjust by program base",null,null],[17,"R_SPARC_UA32","","Direct 32 bit unaligned",null,null],[17,"R_SPARC_PLT32","","Direct 32 bit ref to PLT entry",null,null],[17,"R_SPARC_HIPLT22","","High 22 bit PLT entry",null,null],[17,"R_SPARC_LOPLT10","","Truncated 10 bit PLT entry",null,null],[17,"R_SPARC_PCPLT32","","PC rel 32 bit ref to PLT entry",null,null],[17,"R_SPARC_PCPLT22","","PC rel high 22 bit PLT entry",null,null],[17,"R_SPARC_PCPLT10","","PC rel trunc 10 bit PLT entry",null,null],[17,"R_SPARC_10","","Direct 10 bit",null,null],[17,"R_SPARC_11","","Direct 11 bit",null,null],[17,"R_SPARC_64","","Direct 64 bit",null,null],[17,"R_SPARC_OLO10","","10bit with secondary 13bit addend",null,null],[17,"R_SPARC_HH22","","Top 22 bits of direct 64 bit",null,null],[17,"R_SPARC_HM10","","High middle 10 bits of ...",null,null],[17,"R_SPARC_LM22","","Low middle 22 bits of ...",null,null],[17,"R_SPARC_PC_HH22","","Top 22 bits of pc rel 64 bit",null,null],[17,"R_SPARC_PC_HM10","","High middle 10 bit of ...",null,null],[17,"R_SPARC_PC_LM22","","Low miggle 22 bits of ...",null,null],[17,"R_SPARC_WDISP16","","PC relative 16 bit shifted",null,null],[17,"R_SPARC_WDISP19","","PC relative 19 bit shifted",null,null],[17,"R_SPARC_GLOB_JMP","","was part of v9 ABI but was removed",null,null],[17,"R_SPARC_7","","Direct 7 bit",null,null],[17,"R_SPARC_5","","Direct 5 bit",null,null],[17,"R_SPARC_6","","Direct 6 bit",null,null],[17,"R_SPARC_DISP64","","PC relative 64 bit",null,null],[17,"R_SPARC_PLT64","","Direct 64 bit ref to PLT entry",null,null],[17,"R_SPARC_HIX22","","High 22 bit complemented",null,null],[17,"R_SPARC_LOX10","","Truncated 11 bit complemented",null,null],[17,"R_SPARC_H44","","Direct high 12 of 44 bit",null,null],[17,"R_SPARC_M44","","Direct mid 22 of 44 bit",null,null],[17,"R_SPARC_L44","","Direct low 10 of 44 bit",null,null],[17,"R_SPARC_REGISTER","","Global register usage",null,null],[17,"R_SPARC_UA64","","Direct 64 bit unaligned",null,null],[17,"R_SPARC_UA16","","Direct 16 bit unaligned",null,null],[17,"R_SPARC_TLS_GD_HI22","","",null,null],[17,"R_SPARC_TLS_GD_LO10","","",null,null],[17,"R_SPARC_TLS_GD_ADD","","",null,null],[17,"R_SPARC_TLS_GD_CALL","","",null,null],[17,"R_SPARC_TLS_LDM_HI22","","",null,null],[17,"R_SPARC_TLS_LDM_LO10","","",null,null],[17,"R_SPARC_TLS_LDM_ADD","","",null,null],[17,"R_SPARC_TLS_LDM_CALL","","",null,null],[17,"R_SPARC_TLS_LDO_HIX22","","",null,null],[17,"R_SPARC_TLS_LDO_LOX10","","",null,null],[17,"R_SPARC_TLS_LDO_ADD","","",null,null],[17,"R_SPARC_TLS_IE_HI22","","",null,null],[17,"R_SPARC_TLS_IE_LO10","","",null,null],[17,"R_SPARC_TLS_IE_LD","","",null,null],[17,"R_SPARC_TLS_IE_LDX","","",null,null],[17,"R_SPARC_TLS_IE_ADD","","",null,null],[17,"R_SPARC_TLS_LE_HIX22","","",null,null],[17,"R_SPARC_TLS_LE_LOX10","","",null,null],[17,"R_SPARC_TLS_DTPMOD32","","",null,null],[17,"R_SPARC_TLS_DTPMOD64","","",null,null],[17,"R_SPARC_TLS_DTPOFF32","","",null,null],[17,"R_SPARC_TLS_DTPOFF64","","",null,null],[17,"R_SPARC_TLS_TPOFF32","","",null,null],[17,"R_SPARC_TLS_TPOFF64","","",null,null],[17,"R_SPARC_GOTDATA_HIX22","","",null,null],[17,"R_SPARC_GOTDATA_LOX10","","",null,null],[17,"R_SPARC_GOTDATA_OP_HIX22","","",null,null],[17,"R_SPARC_GOTDATA_OP_LOX10","","",null,null],[17,"R_SPARC_GOTDATA_OP","","",null,null],[17,"R_SPARC_H34","","",null,null],[17,"R_SPARC_SIZE32","","",null,null],[17,"R_SPARC_SIZE64","","",null,null],[17,"R_SPARC_WDISP10","","",null,null],[17,"R_SPARC_JMP_IREL","","",null,null],[17,"R_SPARC_IRELATIVE","","",null,null],[17,"R_SPARC_GNU_VTINHERIT","","",null,null],[17,"R_SPARC_GNU_VTENTRY","","",null,null],[17,"R_SPARC_REV32","","",null,null],[17,"DT_SPARC_REGISTER","","",null,null],[17,"EF_MIPS_NOREORDER","","A .noreorder directive was used.",null,null],[17,"EF_MIPS_PIC","","Contains PIC code.",null,null],[17,"EF_MIPS_CPIC","","Uses PIC calling sequence.",null,null],[17,"EF_MIPS_XGOT","","",null,null],[17,"EF_MIPS_64BIT_WHIRL","","",null,null],[17,"EF_MIPS_ABI2","","",null,null],[17,"EF_MIPS_ABI_ON32","","",null,null],[17,"EF_MIPS_FP64","","Uses FP64 (12 callee-saved).",null,null],[17,"EF_MIPS_NAN2008","","Uses IEEE 754-2008 NaN encoding.",null,null],[17,"EF_MIPS_ARCH","","MIPS architecture level.",null,null],[17,"EF_MIPS_ARCH_1","","-mips1 code.",null,null],[17,"EF_MIPS_ARCH_2","","-mips2 code.",null,null],[17,"EF_MIPS_ARCH_3","","-mips3 code.",null,null],[17,"EF_MIPS_ARCH_4","","-mips4 code.",null,null],[17,"EF_MIPS_ARCH_5","","-mips5 code.",null,null],[17,"EF_MIPS_ARCH_32","","MIPS32 code.",null,null],[17,"EF_MIPS_ARCH_64","","MIPS64 code.",null,null],[17,"EF_MIPS_ARCH_32R2","","MIPS32r2 code.",null,null],[17,"EF_MIPS_ARCH_64R2","","MIPS64r2 code.",null,null],[17,"EF_MIPS_ARCH_32R6","","MIPS32r6 code",null,null],[17,"EF_MIPS_ARCH_64R6","","MIPS64r6 code",null,null],[17,"SHN_MIPS_ACOMMON","","Allocated common symbols.",null,null],[17,"SHN_MIPS_TEXT","","Allocated test symbols.",null,null],[17,"SHN_MIPS_DATA","","Allocated data symbols.",null,null],[17,"SHN_MIPS_SCOMMON","","Small common symbols.",null,null],[17,"SHN_MIPS_SUNDEFINED","","Small undefined symbols.",null,null],[17,"SHT_MIPS_LIBLIST","","Shared objects used in link.",null,null],[17,"SHT_MIPS_MSYM","","",null,null],[17,"SHT_MIPS_CONFLICT","","Conflicting symbols.",null,null],[17,"SHT_MIPS_GPTAB","","Global data area sizes.",null,null],[17,"SHT_MIPS_UCODE","","Reserved for SGI/MIPS compilers",null,null],[17,"SHT_MIPS_DEBUG","","MIPS ECOFF debugging info.",null,null],[17,"SHT_MIPS_REGINFO","","Register usage information.",null,null],[17,"SHT_MIPS_PACKAGE","","",null,null],[17,"SHT_MIPS_PACKSYM","","",null,null],[17,"SHT_MIPS_RELD","","",null,null],[17,"SHT_MIPS_IFACE","","",null,null],[17,"SHT_MIPS_CONTENT","","",null,null],[17,"SHT_MIPS_OPTIONS","","Miscellaneous options.",null,null],[17,"SHT_MIPS_SHDR","","",null,null],[17,"SHT_MIPS_FDESC","","",null,null],[17,"SHT_MIPS_EXTSYM","","",null,null],[17,"SHT_MIPS_DENSE","","",null,null],[17,"SHT_MIPS_PDESC","","",null,null],[17,"SHT_MIPS_LOCSYM","","",null,null],[17,"SHT_MIPS_AUXSYM","","",null,null],[17,"SHT_MIPS_OPTSYM","","",null,null],[17,"SHT_MIPS_LOCSTR","","",null,null],[17,"SHT_MIPS_LINE","","",null,null],[17,"SHT_MIPS_RFDESC","","",null,null],[17,"SHT_MIPS_DELTASYM","","",null,null],[17,"SHT_MIPS_DELTAINST","","",null,null],[17,"SHT_MIPS_DELTACLASS","","",null,null],[17,"SHT_MIPS_DWARF","","DWARF debugging information.",null,null],[17,"SHT_MIPS_DELTADECL","","",null,null],[17,"SHT_MIPS_SYMBOL_LIB","","",null,null],[17,"SHT_MIPS_EVENTS","","Event section.",null,null],[17,"SHT_MIPS_TRANSLATE","","",null,null],[17,"SHT_MIPS_PIXIE","","",null,null],[17,"SHT_MIPS_XLATE","","",null,null],[17,"SHT_MIPS_XLATE_DEBUG","","",null,null],[17,"SHT_MIPS_WHIRL","","",null,null],[17,"SHT_MIPS_EH_REGION","","",null,null],[17,"SHT_MIPS_XLATE_OLD","","",null,null],[17,"SHT_MIPS_PDR_EXCEPTION","","",null,null],[17,"SHF_MIPS_GPREL","","Must be in global data area.",null,null],[17,"SHF_MIPS_MERGE","","",null,null],[17,"SHF_MIPS_ADDR","","",null,null],[17,"SHF_MIPS_STRINGS","","",null,null],[17,"SHF_MIPS_NOSTRIP","","",null,null],[17,"SHF_MIPS_LOCAL","","",null,null],[17,"SHF_MIPS_NAMES","","",null,null],[17,"SHF_MIPS_NODUPE","","",null,null],[17,"STO_MIPS_PLT","","",null,null],[17,"STO_MIPS_SC_ALIGN_UNUSED","","Only valid for `STB_MIPS_SPLIT_COMMON`.",null,null],[17,"STB_MIPS_SPLIT_COMMON","","",null,null],[17,"ODK_NULL","","Undefined.",null,null],[17,"ODK_REGINFO","","Register usage information.",null,null],[17,"ODK_EXCEPTIONS","","Exception processing options.",null,null],[17,"ODK_PAD","","Section padding options.",null,null],[17,"ODK_HWPATCH","","Hardware workarounds performed",null,null],[17,"ODK_FILL","","record the fill value used by the linker.",null,null],[17,"ODK_TAGS","","reserve space for desktop tools to write.",null,null],[17,"ODK_HWAND","","HW workarounds.  \'AND\' bits when merging.",null,null],[17,"ODK_HWOR","","HW workarounds.  \'OR\' bits when merging.",null,null],[17,"OEX_FPU_MIN","","FPE\'s which MUST be enabled.",null,null],[17,"OEX_FPU_MAX","","FPE\'s which MAY be enabled.",null,null],[17,"OEX_PAGE0","","page zero must be mapped.",null,null],[17,"OEX_SMM","","Force sequential memory mode?",null,null],[17,"OEX_FPDBUG","","Force floating point debug mode?",null,null],[17,"OEX_PRECISEFP","","",null,null],[17,"OEX_DISMISS","","Dismiss invalid address faults?",null,null],[17,"OEX_FPU_INVAL","","",null,null],[17,"OEX_FPU_DIV0","","",null,null],[17,"OEX_FPU_OFLO","","",null,null],[17,"OEX_FPU_UFLO","","",null,null],[17,"OEX_FPU_INEX","","",null,null],[17,"OHW_R4KEOP","","R4000 end-of-page patch.",null,null],[17,"OHW_R8KPFETCH","","may need R8000 prefetch patch.",null,null],[17,"OHW_R5KEOP","","R5000 end-of-page patch.",null,null],[17,"OHW_R5KCVTL","","R5000 cvt.[ds].l bug.  clean=1.",null,null],[17,"OPAD_PREFIX","","",null,null],[17,"OPAD_POSTFIX","","",null,null],[17,"OPAD_SYMBOL","","",null,null],[17,"OHWA0_R4KEOP_CHECKED","","",null,null],[17,"OHWA1_R4KEOP_CLEAN","","",null,null],[17,"R_MIPS_NONE","","No reloc",null,null],[17,"R_MIPS_16","","Direct 16 bit",null,null],[17,"R_MIPS_32","","Direct 32 bit",null,null],[17,"R_MIPS_REL32","","PC relative 32 bit",null,null],[17,"R_MIPS_26","","Direct 26 bit shifted",null,null],[17,"R_MIPS_HI16","","High 16 bit",null,null],[17,"R_MIPS_LO16","","Low 16 bit",null,null],[17,"R_MIPS_GPREL16","","GP relative 16 bit",null,null],[17,"R_MIPS_LITERAL","","16 bit literal entry",null,null],[17,"R_MIPS_GOT16","","16 bit GOT entry",null,null],[17,"R_MIPS_PC16","","PC relative 16 bit",null,null],[17,"R_MIPS_CALL16","","16 bit GOT entry for function",null,null],[17,"R_MIPS_GPREL32","","GP relative 32 bit",null,null],[17,"R_MIPS_SHIFT5","","",null,null],[17,"R_MIPS_SHIFT6","","",null,null],[17,"R_MIPS_64","","",null,null],[17,"R_MIPS_GOT_DISP","","",null,null],[17,"R_MIPS_GOT_PAGE","","",null,null],[17,"R_MIPS_GOT_OFST","","",null,null],[17,"R_MIPS_GOT_HI16","","",null,null],[17,"R_MIPS_GOT_LO16","","",null,null],[17,"R_MIPS_SUB","","",null,null],[17,"R_MIPS_INSERT_A","","",null,null],[17,"R_MIPS_INSERT_B","","",null,null],[17,"R_MIPS_DELETE","","",null,null],[17,"R_MIPS_HIGHER","","",null,null],[17,"R_MIPS_HIGHEST","","",null,null],[17,"R_MIPS_CALL_HI16","","",null,null],[17,"R_MIPS_CALL_LO16","","",null,null],[17,"R_MIPS_SCN_DISP","","",null,null],[17,"R_MIPS_REL16","","",null,null],[17,"R_MIPS_ADD_IMMEDIATE","","",null,null],[17,"R_MIPS_PJUMP","","",null,null],[17,"R_MIPS_RELGOT","","",null,null],[17,"R_MIPS_JALR","","",null,null],[17,"R_MIPS_TLS_DTPMOD32","","Module number 32 bit",null,null],[17,"R_MIPS_TLS_DTPREL32","","Module-relative offset 32 bit",null,null],[17,"R_MIPS_TLS_DTPMOD64","","Module number 64 bit",null,null],[17,"R_MIPS_TLS_DTPREL64","","Module-relative offset 64 bit",null,null],[17,"R_MIPS_TLS_GD","","16 bit GOT offset for GD",null,null],[17,"R_MIPS_TLS_LDM","","16 bit GOT offset for LDM",null,null],[17,"R_MIPS_TLS_DTPREL_HI16","","Module-relative offset, high 16 bits",null,null],[17,"R_MIPS_TLS_DTPREL_LO16","","Module-relative offset, low 16 bits",null,null],[17,"R_MIPS_TLS_GOTTPREL","","16 bit GOT offset for IE",null,null],[17,"R_MIPS_TLS_TPREL32","","TP-relative offset, 32 bit",null,null],[17,"R_MIPS_TLS_TPREL64","","TP-relative offset, 64 bit",null,null],[17,"R_MIPS_TLS_TPREL_HI16","","TP-relative offset, high 16 bits",null,null],[17,"R_MIPS_TLS_TPREL_LO16","","TP-relative offset, low 16 bits",null,null],[17,"R_MIPS_GLOB_DAT","","",null,null],[17,"R_MIPS_COPY","","",null,null],[17,"R_MIPS_JUMP_SLOT","","",null,null],[17,"PT_MIPS_REGINFO","","Register usage information.",null,null],[17,"PT_MIPS_RTPROC","","Runtime procedure table.",null,null],[17,"PT_MIPS_OPTIONS","","",null,null],[17,"PT_MIPS_ABIFLAGS","","FP mode requirement.",null,null],[17,"PF_MIPS_LOCAL","","",null,null],[17,"DT_MIPS_RLD_VERSION","","Runtime linker interface version",null,null],[17,"DT_MIPS_TIME_STAMP","","Timestamp",null,null],[17,"DT_MIPS_ICHECKSUM","","Checksum",null,null],[17,"DT_MIPS_IVERSION","","Version string (string tbl index)",null,null],[17,"DT_MIPS_FLAGS","","Flags",null,null],[17,"DT_MIPS_BASE_ADDRESS","","Base address",null,null],[17,"DT_MIPS_MSYM","","",null,null],[17,"DT_MIPS_CONFLICT","","Address of CONFLICT section",null,null],[17,"DT_MIPS_LIBLIST","","Address of LIBLIST section",null,null],[17,"DT_MIPS_LOCAL_GOTNO","","Number of local GOT entries",null,null],[17,"DT_MIPS_CONFLICTNO","","Number of CONFLICT entries",null,null],[17,"DT_MIPS_LIBLISTNO","","Number of LIBLIST entries",null,null],[17,"DT_MIPS_SYMTABNO","","Number of DYNSYM entries",null,null],[17,"DT_MIPS_UNREFEXTNO","","First external DYNSYM",null,null],[17,"DT_MIPS_GOTSYM","","First GOT entry in DYNSYM",null,null],[17,"DT_MIPS_HIPAGENO","","Number of GOT page table entries",null,null],[17,"DT_MIPS_RLD_MAP","","Address of run time loader map.",null,null],[17,"DT_MIPS_DELTA_CLASS","","Delta C++ class definition.",null,null],[17,"DT_MIPS_DELTA_CLASS_NO","","Number of entries in DT_MIPS_DELTA_CLASS.",null,null],[17,"DT_MIPS_DELTA_INSTANCE","","Delta C++ class instances.",null,null],[17,"DT_MIPS_DELTA_INSTANCE_NO","","Number of entries in DT_MIPS_DELTA_INSTANCE.",null,null],[17,"DT_MIPS_DELTA_RELOC","","Delta relocations.",null,null],[17,"DT_MIPS_DELTA_RELOC_NO","","Number of entries in DT_MIPS_DELTA_RELOC.",null,null],[17,"DT_MIPS_DELTA_SYM","","Delta symbols that Delta relocations refer to.",null,null],[17,"DT_MIPS_DELTA_SYM_NO","","Number of entries in DT_MIPS_DELTA_SYM.",null,null],[17,"DT_MIPS_DELTA_CLASSSYM","","Delta symbols that hold the class declaration.",null,null],[17,"DT_MIPS_DELTA_CLASSSYM_NO","","Number of entries in DT_MIPS_DELTA_CLASSSYM.",null,null],[17,"DT_MIPS_CXX_FLAGS","","Flags indicating for C++ flavor.",null,null],[17,"DT_MIPS_PIXIE_INIT","","",null,null],[17,"DT_MIPS_SYMBOL_LIB","","",null,null],[17,"DT_MIPS_LOCALPAGE_GOTIDX","","",null,null],[17,"DT_MIPS_LOCAL_GOTIDX","","",null,null],[17,"DT_MIPS_HIDDEN_GOTIDX","","",null,null],[17,"DT_MIPS_PROTECTED_GOTIDX","","",null,null],[17,"DT_MIPS_OPTIONS","","Address of .options.",null,null],[17,"DT_MIPS_INTERFACE","","Address of .interface.",null,null],[17,"DT_MIPS_DYNSTR_ALIGN","","",null,null],[17,"DT_MIPS_INTERFACE_SIZE","","Size of the .interface section.",null,null],[17,"DT_MIPS_RLD_TEXT_RESOLVE_ADDR","","Address of rld_text_rsolve function stored in GOT.",null,null],[17,"DT_MIPS_PERF_SUFFIX","","Default suffix of dso to be added by rld on dlopen() calls.",null,null],[17,"DT_MIPS_COMPACT_SIZE","","(O32)Size of compact rel section.",null,null],[17,"DT_MIPS_GP_VALUE","","GP value for aux GOTs.",null,null],[17,"DT_MIPS_AUX_DYNAMIC","","Address of aux .dynamic.",null,null],[17,"DT_MIPS_PLTGOT","","The address of .got.plt in an executable using the new…",null,null],[17,"DT_MIPS_RWPLT","","The base of the PLT in an executable using the new non-PIC…",null,null],[17,"DT_MIPS_RLD_MAP_REL","","An alternative description of the classic MIPS RLD_MAP…",null,null],[17,"RHF_NONE","","No flags",null,null],[17,"RHF_QUICKSTART","","Use quickstart",null,null],[17,"RHF_NOTPOT","","Hash size not power of 2",null,null],[17,"RHF_NO_LIBRARY_REPLACEMENT","","Ignore LD_LIBRARY_PATH",null,null],[17,"RHF_NO_MOVE","","",null,null],[17,"RHF_SGI_ONLY","","",null,null],[17,"RHF_GUARANTEE_INIT","","",null,null],[17,"RHF_DELTA_C_PLUS_PLUS","","",null,null],[17,"RHF_GUARANTEE_START_INIT","","",null,null],[17,"RHF_PIXIE","","",null,null],[17,"RHF_DEFAULT_DELAY_LOAD","","",null,null],[17,"RHF_REQUICKSTART","","",null,null],[17,"RHF_REQUICKSTARTED","","",null,null],[17,"RHF_CORD","","",null,null],[17,"RHF_NO_UNRES_UNDEF","","",null,null],[17,"RHF_RLD_ORDER_SAFE","","",null,null],[17,"LL_NONE","","",null,null],[17,"LL_EXACT_MATCH","","Require exact match",null,null],[17,"LL_IGNORE_INT_VER","","Ignore interface version",null,null],[17,"LL_REQUIRE_MINOR","","",null,null],[17,"LL_EXPORTS","","",null,null],[17,"LL_DELAY_LOAD","","",null,null],[17,"LL_DELTA","","",null,null],[17,"EF_PARISC_TRAPNIL","","Trap nil pointer dereference.",null,null],[17,"EF_PARISC_EXT","","Program uses arch. extensions.",null,null],[17,"EF_PARISC_LSB","","Program expects little endian.",null,null],[17,"EF_PARISC_WIDE","","Program expects wide mode.",null,null],[17,"EF_PARISC_NO_KABP","","No kernel assisted branch prediction.",null,null],[17,"EF_PARISC_LAZYSWAP","","Allow lazy swapping.",null,null],[17,"EF_PARISC_ARCH","","Architecture version.",null,null],[17,"EFA_PARISC_1_0","","PA-RISC 1.0 big-endian.",null,null],[17,"EFA_PARISC_1_1","","PA-RISC 1.1 big-endian.",null,null],[17,"EFA_PARISC_2_0","","PA-RISC 2.0 big-endian.",null,null],[17,"SHN_PARISC_ANSI_COMMON","","Section for tenatively declared symbols in ANSI C.",null,null],[17,"SHN_PARISC_HUGE_COMMON","","Common blocks in huge model.",null,null],[17,"SHT_PARISC_EXT","","Contains product specific ext.",null,null],[17,"SHT_PARISC_UNWIND","","Unwind information.",null,null],[17,"SHT_PARISC_DOC","","Debug info for optimized code.",null,null],[17,"SHF_PARISC_SHORT","","Section with short addressing.",null,null],[17,"SHF_PARISC_HUGE","","Section far from gp.",null,null],[17,"SHF_PARISC_SBP","","Static branch prediction code.",null,null],[17,"STT_PARISC_MILLICODE","","Millicode function entry point.",null,null],[17,"STT_HP_OPAQUE","","",null,null],[17,"STT_HP_STUB","","",null,null],[17,"R_PARISC_NONE","","No reloc.",null,null],[17,"R_PARISC_DIR32","","Direct 32-bit reference.",null,null],[17,"R_PARISC_DIR21L","","Left 21 bits of eff. address.",null,null],[17,"R_PARISC_DIR17R","","Right 17 bits of eff. address.",null,null],[17,"R_PARISC_DIR17F","","17 bits of eff. address.",null,null],[17,"R_PARISC_DIR14R","","Right 14 bits of eff. address.",null,null],[17,"R_PARISC_PCREL32","","32-bit rel. address.",null,null],[17,"R_PARISC_PCREL21L","","Left 21 bits of rel. address.",null,null],[17,"R_PARISC_PCREL17R","","Right 17 bits of rel. address.",null,null],[17,"R_PARISC_PCREL17F","","17 bits of rel. address.",null,null],[17,"R_PARISC_PCREL14R","","Right 14 bits of rel. address.",null,null],[17,"R_PARISC_DPREL21L","","Left 21 bits of rel. address.",null,null],[17,"R_PARISC_DPREL14R","","Right 14 bits of rel. address.",null,null],[17,"R_PARISC_GPREL21L","","GP-relative, left 21 bits.",null,null],[17,"R_PARISC_GPREL14R","","GP-relative, right 14 bits.",null,null],[17,"R_PARISC_LTOFF21L","","LT-relative, left 21 bits.",null,null],[17,"R_PARISC_LTOFF14R","","LT-relative, right 14 bits.",null,null],[17,"R_PARISC_SECREL32","","32 bits section rel. address.",null,null],[17,"R_PARISC_SEGBASE","","No relocation, set segment base.",null,null],[17,"R_PARISC_SEGREL32","","32 bits segment rel. address.",null,null],[17,"R_PARISC_PLTOFF21L","","PLT rel. address, left 21 bits.",null,null],[17,"R_PARISC_PLTOFF14R","","PLT rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR32","","32 bits LT-rel. function pointer.",null,null],[17,"R_PARISC_LTOFF_FPTR21L","","LT-rel. fct ptr, left 21 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR14R","","LT-rel. fct ptr, right 14 bits.",null,null],[17,"R_PARISC_FPTR64","","64 bits function address.",null,null],[17,"R_PARISC_PLABEL32","","32 bits function address.",null,null],[17,"R_PARISC_PLABEL21L","","Left 21 bits of fdesc address.",null,null],[17,"R_PARISC_PLABEL14R","","Right 14 bits of fdesc address.",null,null],[17,"R_PARISC_PCREL64","","64 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL22F","","22 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL14WR","","PC-rel. address, right 14 bits.",null,null],[17,"R_PARISC_PCREL14DR","","PC rel. address, right 14 bits.",null,null],[17,"R_PARISC_PCREL16F","","16 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL16WF","","16 bits PC-rel. address.",null,null],[17,"R_PARISC_PCREL16DF","","16 bits PC-rel. address.",null,null],[17,"R_PARISC_DIR64","","64 bits of eff. address.",null,null],[17,"R_PARISC_DIR14WR","","14 bits of eff. address.",null,null],[17,"R_PARISC_DIR14DR","","14 bits of eff. address.",null,null],[17,"R_PARISC_DIR16F","","16 bits of eff. address.",null,null],[17,"R_PARISC_DIR16WF","","16 bits of eff. address.",null,null],[17,"R_PARISC_DIR16DF","","16 bits of eff. address.",null,null],[17,"R_PARISC_GPREL64","","64 bits of GP-rel. address.",null,null],[17,"R_PARISC_GPREL14WR","","GP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_GPREL14DR","","GP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_GPREL16F","","16 bits GP-rel. address.",null,null],[17,"R_PARISC_GPREL16WF","","16 bits GP-rel. address.",null,null],[17,"R_PARISC_GPREL16DF","","16 bits GP-rel. address.",null,null],[17,"R_PARISC_LTOFF64","","64 bits LT-rel. address.",null,null],[17,"R_PARISC_LTOFF14WR","","LT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF14DR","","LT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF16F","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_LTOFF16WF","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_LTOFF16DF","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_SECREL64","","64 bits section rel. address.",null,null],[17,"R_PARISC_SEGREL64","","64 bits segment rel. address.",null,null],[17,"R_PARISC_PLTOFF14WR","","PLT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_PLTOFF14DR","","PLT-rel. address, right 14 bits.",null,null],[17,"R_PARISC_PLTOFF16F","","16 bits LT-rel. address.",null,null],[17,"R_PARISC_PLTOFF16WF","","16 bits PLT-rel. address.",null,null],[17,"R_PARISC_PLTOFF16DF","","16 bits PLT-rel. address.",null,null],[17,"R_PARISC_LTOFF_FPTR64","","64 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LTOFF_FPTR14WR","","LT-rel. fct. ptr., right 14 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR14DR","","LT-rel. fct. ptr., right 14 bits.",null,null],[17,"R_PARISC_LTOFF_FPTR16F","","16 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LTOFF_FPTR16WF","","16 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LTOFF_FPTR16DF","","16 bits LT-rel. function ptr.",null,null],[17,"R_PARISC_LORESERVE","","",null,null],[17,"R_PARISC_COPY","","Copy relocation.",null,null],[17,"R_PARISC_IPLT","","Dynamic reloc, imported PLT",null,null],[17,"R_PARISC_EPLT","","Dynamic reloc, exported PLT",null,null],[17,"R_PARISC_TPREL32","","32 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL21L","","TP-rel. address, left 21 bits.",null,null],[17,"R_PARISC_TPREL14R","","TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP21L","","LT-TP-rel. address, left 21 bits.",null,null],[17,"R_PARISC_LTOFF_TP14R","","LT-TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP14F","","14 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_TPREL64","","64 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL14WR","","TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_TPREL14DR","","TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_TPREL16F","","16 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL16WF","","16 bits TP-rel. address.",null,null],[17,"R_PARISC_TPREL16DF","","16 bits TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP64","","64 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP14WR","","LT-TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP14DR","","LT-TP-rel. address, right 14 bits.",null,null],[17,"R_PARISC_LTOFF_TP16F","","16 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP16WF","","16 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_LTOFF_TP16DF","","16 bits LT-TP-rel. address.",null,null],[17,"R_PARISC_GNU_VTENTRY","","",null,null],[17,"R_PARISC_GNU_VTINHERIT","","",null,null],[17,"R_PARISC_TLS_GD21L","","GD 21-bit left.",null,null],[17,"R_PARISC_TLS_GD14R","","GD 14-bit right.",null,null],[17,"R_PARISC_TLS_GDCALL","","GD call to __t_g_a.",null,null],[17,"R_PARISC_TLS_LDM21L","","LD module 21-bit left.",null,null],[17,"R_PARISC_TLS_LDM14R","","LD module 14-bit right.",null,null],[17,"R_PARISC_TLS_LDMCALL","","LD module call to __t_g_a.",null,null],[17,"R_PARISC_TLS_LDO21L","","LD offset 21-bit left.",null,null],[17,"R_PARISC_TLS_LDO14R","","LD offset 14-bit right.",null,null],[17,"R_PARISC_TLS_DTPMOD32","","DTP module 32-bit.",null,null],[17,"R_PARISC_TLS_DTPMOD64","","DTP module 64-bit.",null,null],[17,"R_PARISC_TLS_DTPOFF32","","DTP offset 32-bit.",null,null],[17,"R_PARISC_TLS_DTPOFF64","","DTP offset 32-bit.",null,null],[17,"R_PARISC_TLS_LE21L","","",null,null],[17,"R_PARISC_TLS_LE14R","","",null,null],[17,"R_PARISC_TLS_IE21L","","",null,null],[17,"R_PARISC_TLS_IE14R","","",null,null],[17,"R_PARISC_TLS_TPREL32","","",null,null],[17,"R_PARISC_TLS_TPREL64","","",null,null],[17,"R_PARISC_HIRESERVE","","",null,null],[17,"PT_HP_TLS","","",null,null],[17,"PT_HP_CORE_NONE","","",null,null],[17,"PT_HP_CORE_VERSION","","",null,null],[17,"PT_HP_CORE_KERNEL","","",null,null],[17,"PT_HP_CORE_COMM","","",null,null],[17,"PT_HP_CORE_PROC","","",null,null],[17,"PT_HP_CORE_LOADABLE","","",null,null],[17,"PT_HP_CORE_STACK","","",null,null],[17,"PT_HP_CORE_SHM","","",null,null],[17,"PT_HP_CORE_MMF","","",null,null],[17,"PT_HP_PARALLEL","","",null,null],[17,"PT_HP_FASTBIND","","",null,null],[17,"PT_HP_OPT_ANNOT","","",null,null],[17,"PT_HP_HSL_ANNOT","","",null,null],[17,"PT_HP_STACK","","",null,null],[17,"PT_PARISC_ARCHEXT","","",null,null],[17,"PT_PARISC_UNWIND","","",null,null],[17,"PF_PARISC_SBP","","",null,null],[17,"PF_HP_PAGE_SIZE","","",null,null],[17,"PF_HP_FAR_SHARED","","",null,null],[17,"PF_HP_NEAR_SHARED","","",null,null],[17,"PF_HP_CODE","","",null,null],[17,"PF_HP_MODIFY","","",null,null],[17,"PF_HP_LAZYSWAP","","",null,null],[17,"PF_HP_SBP","","",null,null],[17,"EF_ALPHA_32BIT","","All addresses must be < 2GB.",null,null],[17,"EF_ALPHA_CANRELAX","","Relocations for relaxing exist.",null,null],[17,"SHT_ALPHA_DEBUG","","",null,null],[17,"SHT_ALPHA_REGINFO","","",null,null],[17,"SHF_ALPHA_GPREL","","",null,null],[17,"STO_ALPHA_NOPV","","No PV required.",null,null],[17,"STO_ALPHA_STD_GPLOAD","","PV only used for initial ldgp.",null,null],[17,"R_ALPHA_NONE","","No reloc",null,null],[17,"R_ALPHA_REFLONG","","Direct 32 bit",null,null],[17,"R_ALPHA_REFQUAD","","Direct 64 bit",null,null],[17,"R_ALPHA_GPREL32","","GP relative 32 bit",null,null],[17,"R_ALPHA_LITERAL","","GP relative 16 bit w/optimization",null,null],[17,"R_ALPHA_LITUSE","","Optimization hint for LITERAL",null,null],[17,"R_ALPHA_GPDISP","","Add displacement to GP",null,null],[17,"R_ALPHA_BRADDR","","PC+4 relative 23 bit shifted",null,null],[17,"R_ALPHA_HINT","","PC+4 relative 16 bit shifted",null,null],[17,"R_ALPHA_SREL16","","PC relative 16 bit",null,null],[17,"R_ALPHA_SREL32","","PC relative 32 bit",null,null],[17,"R_ALPHA_SREL64","","PC relative 64 bit",null,null],[17,"R_ALPHA_GPRELHIGH","","GP relative 32 bit, high 16 bits",null,null],[17,"R_ALPHA_GPRELLOW","","GP relative 32 bit, low 16 bits",null,null],[17,"R_ALPHA_GPREL16","","GP relative 16 bit",null,null],[17,"R_ALPHA_COPY","","Copy symbol at runtime",null,null],[17,"R_ALPHA_GLOB_DAT","","Create GOT entry",null,null],[17,"R_ALPHA_JMP_SLOT","","Create PLT entry",null,null],[17,"R_ALPHA_RELATIVE","","Adjust by program base",null,null],[17,"R_ALPHA_TLS_GD_HI","","",null,null],[17,"R_ALPHA_TLSGD","","",null,null],[17,"R_ALPHA_TLS_LDM","","",null,null],[17,"R_ALPHA_DTPMOD64","","",null,null],[17,"R_ALPHA_GOTDTPREL","","",null,null],[17,"R_ALPHA_DTPREL64","","",null,null],[17,"R_ALPHA_DTPRELHI","","",null,null],[17,"R_ALPHA_DTPRELLO","","",null,null],[17,"R_ALPHA_DTPREL16","","",null,null],[17,"R_ALPHA_GOTTPREL","","",null,null],[17,"R_ALPHA_TPREL64","","",null,null],[17,"R_ALPHA_TPRELHI","","",null,null],[17,"R_ALPHA_TPRELLO","","",null,null],[17,"R_ALPHA_TPREL16","","",null,null],[17,"LITUSE_ALPHA_ADDR","","",null,null],[17,"LITUSE_ALPHA_BASE","","",null,null],[17,"LITUSE_ALPHA_BYTOFF","","",null,null],[17,"LITUSE_ALPHA_JSR","","",null,null],[17,"LITUSE_ALPHA_TLS_GD","","",null,null],[17,"LITUSE_ALPHA_TLS_LDM","","",null,null],[17,"DT_ALPHA_PLTRO","","",null,null],[17,"EF_PPC_EMB","","PowerPC embedded flag",null,null],[17,"EF_PPC_RELOCATABLE","","PowerPC -mrelocatable flag",null,null],[17,"EF_PPC_RELOCATABLE_LIB","","PowerPC -mrelocatable-lib flag",null,null],[17,"R_PPC_NONE","","",null,null],[17,"R_PPC_ADDR32","","32bit absolute address",null,null],[17,"R_PPC_ADDR24","","26bit address, 2 bits ignored.",null,null],[17,"R_PPC_ADDR16","","16bit absolute address",null,null],[17,"R_PPC_ADDR16_LO","","lower 16bit of absolute address",null,null],[17,"R_PPC_ADDR16_HI","","high 16bit of absolute address",null,null],[17,"R_PPC_ADDR16_HA","","adjusted high 16bit",null,null],[17,"R_PPC_ADDR14","","16bit address, 2 bits ignored",null,null],[17,"R_PPC_ADDR14_BRTAKEN","","",null,null],[17,"R_PPC_ADDR14_BRNTAKEN","","",null,null],[17,"R_PPC_REL24","","PC relative 26 bit",null,null],[17,"R_PPC_REL14","","PC relative 16 bit",null,null],[17,"R_PPC_REL14_BRTAKEN","","",null,null],[17,"R_PPC_REL14_BRNTAKEN","","",null,null],[17,"R_PPC_GOT16","","",null,null],[17,"R_PPC_GOT16_LO","","",null,null],[17,"R_PPC_GOT16_HI","","",null,null],[17,"R_PPC_GOT16_HA","","",null,null],[17,"R_PPC_PLTREL24","","",null,null],[17,"R_PPC_COPY","","",null,null],[17,"R_PPC_GLOB_DAT","","",null,null],[17,"R_PPC_JMP_SLOT","","",null,null],[17,"R_PPC_RELATIVE","","",null,null],[17,"R_PPC_LOCAL24PC","","",null,null],[17,"R_PPC_UADDR32","","",null,null],[17,"R_PPC_UADDR16","","",null,null],[17,"R_PPC_REL32","","",null,null],[17,"R_PPC_PLT32","","",null,null],[17,"R_PPC_PLTREL32","","",null,null],[17,"R_PPC_PLT16_LO","","",null,null],[17,"R_PPC_PLT16_HI","","",null,null],[17,"R_PPC_PLT16_HA","","",null,null],[17,"R_PPC_SDAREL16","","",null,null],[17,"R_PPC_SECTOFF","","",null,null],[17,"R_PPC_SECTOFF_LO","","",null,null],[17,"R_PPC_SECTOFF_HI","","",null,null],[17,"R_PPC_SECTOFF_HA","","",null,null],[17,"R_PPC_TLS","","none    (sym+add)@tls",null,null],[17,"R_PPC_DTPMOD32","","word32  (sym+add)@dtpmod",null,null],[17,"R_PPC_TPREL16","","half16* (sym+add)@tprel",null,null],[17,"R_PPC_TPREL16_LO","","half16  (sym+add)@tprel@l",null,null],[17,"R_PPC_TPREL16_HI","","half16  (sym+add)@tprel@h",null,null],[17,"R_PPC_TPREL16_HA","","half16  (sym+add)@tprel@ha",null,null],[17,"R_PPC_TPREL32","","word32  (sym+add)@tprel",null,null],[17,"R_PPC_DTPREL16","","half16*(sym+add)@dtprel",null,null],[17,"R_PPC_DTPREL16_LO","","half16  (sym+add)@dtprel@l",null,null],[17,"R_PPC_DTPREL16_HI","","half16  (sym+add)@dtprel@h",null,null],[17,"R_PPC_DTPREL16_HA","","half16  (sym+add)@dtprel@ha",null,null],[17,"R_PPC_DTPREL32","","word32  (sym+add)@dtprel",null,null],[17,"R_PPC_GOT_TLSGD16","","half16* (sym+add)@got@tlsgd",null,null],[17,"R_PPC_GOT_TLSGD16_LO","","half16  (sym+add)@got@tlsgd@l",null,null],[17,"R_PPC_GOT_TLSGD16_HI","","half16  (sym+add)@got@tlsgd@h",null,null],[17,"R_PPC_GOT_TLSGD16_HA","","half16  (sym+add)@got@tlsgd@ha",null,null],[17,"R_PPC_GOT_TLSLD16","","half16* (sym+add)@got@tlsld",null,null],[17,"R_PPC_GOT_TLSLD16_LO","","half16  (sym+add)@got@tlsld@l",null,null],[17,"R_PPC_GOT_TLSLD16_HI","","half16  (sym+add)@got@tlsld@h",null,null],[17,"R_PPC_GOT_TLSLD16_HA","","half16  (sym+add)@got@tlsld@ha",null,null],[17,"R_PPC_GOT_TPREL16","","half16* (sym+add)@got@tprel",null,null],[17,"R_PPC_GOT_TPREL16_LO","","half16  (sym+add)@got@tprel@l",null,null],[17,"R_PPC_GOT_TPREL16_HI","","half16  (sym+add)@got@tprel@h",null,null],[17,"R_PPC_GOT_TPREL16_HA","","half16  (sym+add)@got@tprel@ha",null,null],[17,"R_PPC_GOT_DTPREL16","","half16* (sym+add)@got@dtprel",null,null],[17,"R_PPC_GOT_DTPREL16_LO","","half16* (sym+add)@got@dtprel@l",null,null],[17,"R_PPC_GOT_DTPREL16_HI","","half16* (sym+add)@got@dtprel@h",null,null],[17,"R_PPC_GOT_DTPREL16_HA","","half16* (sym+add)@got@dtprel@ha",null,null],[17,"R_PPC_TLSGD","","none    (sym+add)@tlsgd",null,null],[17,"R_PPC_TLSLD","","none    (sym+add)@tlsld",null,null],[17,"R_PPC_EMB_NADDR32","","",null,null],[17,"R_PPC_EMB_NADDR16","","",null,null],[17,"R_PPC_EMB_NADDR16_LO","","",null,null],[17,"R_PPC_EMB_NADDR16_HI","","",null,null],[17,"R_PPC_EMB_NADDR16_HA","","",null,null],[17,"R_PPC_EMB_SDAI16","","",null,null],[17,"R_PPC_EMB_SDA2I16","","",null,null],[17,"R_PPC_EMB_SDA2REL","","",null,null],[17,"R_PPC_EMB_SDA21","","16 bit offset in SDA",null,null],[17,"R_PPC_EMB_MRKREF","","",null,null],[17,"R_PPC_EMB_RELSEC16","","",null,null],[17,"R_PPC_EMB_RELST_LO","","",null,null],[17,"R_PPC_EMB_RELST_HI","","",null,null],[17,"R_PPC_EMB_RELST_HA","","",null,null],[17,"R_PPC_EMB_BIT_FLD","","",null,null],[17,"R_PPC_EMB_RELSDA","","16 bit relative offset in SDA",null,null],[17,"R_PPC_DIAB_SDA21_LO","","like EMB_SDA21, but lower 16 bit",null,null],[17,"R_PPC_DIAB_SDA21_HI","","like EMB_SDA21, but high 16 bit",null,null],[17,"R_PPC_DIAB_SDA21_HA","","like EMB_SDA21, adjusted high 16",null,null],[17,"R_PPC_DIAB_RELSDA_LO","","like EMB_RELSDA, but lower 16 bit",null,null],[17,"R_PPC_DIAB_RELSDA_HI","","like EMB_RELSDA, but high 16 bit",null,null],[17,"R_PPC_DIAB_RELSDA_HA","","like EMB_RELSDA, adjusted high 16",null,null],[17,"R_PPC_IRELATIVE","","GNU extension to support local ifunc.",null,null],[17,"R_PPC_REL16","","half16   (sym+add-.)",null,null],[17,"R_PPC_REL16_LO","","half16   (sym+add-.)@l",null,null],[17,"R_PPC_REL16_HI","","half16   (sym+add-.)@h",null,null],[17,"R_PPC_REL16_HA","","half16   (sym+add-.)@ha",null,null],[17,"R_PPC_TOC16","","This is a phony reloc to handle any old fashioned TOC16…",null,null],[17,"DT_PPC_GOT","","",null,null],[17,"DT_PPC_OPT","","",null,null],[17,"PPC_OPT_TLS","","",null,null],[17,"R_PPC64_NONE","","",null,null],[17,"R_PPC64_ADDR32","","32bit absolute address",null,null],[17,"R_PPC64_ADDR24","","26bit address, word aligned",null,null],[17,"R_PPC64_ADDR16","","16bit absolute address",null,null],[17,"R_PPC64_ADDR16_LO","","lower 16bits of address",null,null],[17,"R_PPC64_ADDR16_HI","","high 16bits of address.",null,null],[17,"R_PPC64_ADDR16_HA","","adjusted high 16bits.",null,null],[17,"R_PPC64_ADDR14","","16bit address, word aligned",null,null],[17,"R_PPC64_ADDR14_BRTAKEN","","",null,null],[17,"R_PPC64_ADDR14_BRNTAKEN","","",null,null],[17,"R_PPC64_REL24","","PC-rel. 26 bit, word aligned",null,null],[17,"R_PPC64_REL14","","PC relative 16 bit",null,null],[17,"R_PPC64_REL14_BRTAKEN","","",null,null],[17,"R_PPC64_REL14_BRNTAKEN","","",null,null],[17,"R_PPC64_GOT16","","",null,null],[17,"R_PPC64_GOT16_LO","","",null,null],[17,"R_PPC64_GOT16_HI","","",null,null],[17,"R_PPC64_GOT16_HA","","",null,null],[17,"R_PPC64_COPY","","",null,null],[17,"R_PPC64_GLOB_DAT","","",null,null],[17,"R_PPC64_JMP_SLOT","","",null,null],[17,"R_PPC64_RELATIVE","","",null,null],[17,"R_PPC64_UADDR32","","",null,null],[17,"R_PPC64_UADDR16","","",null,null],[17,"R_PPC64_REL32","","",null,null],[17,"R_PPC64_PLT32","","",null,null],[17,"R_PPC64_PLTREL32","","",null,null],[17,"R_PPC64_PLT16_LO","","",null,null],[17,"R_PPC64_PLT16_HI","","",null,null],[17,"R_PPC64_PLT16_HA","","",null,null],[17,"R_PPC64_SECTOFF","","",null,null],[17,"R_PPC64_SECTOFF_LO","","",null,null],[17,"R_PPC64_SECTOFF_HI","","",null,null],[17,"R_PPC64_SECTOFF_HA","","",null,null],[17,"R_PPC64_ADDR30","","word30 (S + A - P) >> 2",null,null],[17,"R_PPC64_ADDR64","","doubleword64 S + A",null,null],[17,"R_PPC64_ADDR16_HIGHER","","half16 #higher(S + A)",null,null],[17,"R_PPC64_ADDR16_HIGHERA","","half16 #highera(S + A)",null,null],[17,"R_PPC64_ADDR16_HIGHEST","","half16 #highest(S + A)",null,null],[17,"R_PPC64_ADDR16_HIGHESTA","","half16 #highesta(S + A)",null,null],[17,"R_PPC64_UADDR64","","doubleword64 S + A",null,null],[17,"R_PPC64_REL64","","doubleword64 S + A - P",null,null],[17,"R_PPC64_PLT64","","doubleword64 L + A",null,null],[17,"R_PPC64_PLTREL64","","doubleword64 L + A - P",null,null],[17,"R_PPC64_TOC16","","half16* S + A - .TOC",null,null],[17,"R_PPC64_TOC16_LO","","half16 #lo(S + A - .TOC.)",null,null],[17,"R_PPC64_TOC16_HI","","half16 #hi(S + A - .TOC.)",null,null],[17,"R_PPC64_TOC16_HA","","half16 #ha(S + A - .TOC.)",null,null],[17,"R_PPC64_TOC","","doubleword64 .TOC",null,null],[17,"R_PPC64_PLTGOT16","","half16* M + A",null,null],[17,"R_PPC64_PLTGOT16_LO","","half16 #lo(M + A)",null,null],[17,"R_PPC64_PLTGOT16_HI","","half16 #hi(M + A)",null,null],[17,"R_PPC64_PLTGOT16_HA","","half16 #ha(M + A)",null,null],[17,"R_PPC64_ADDR16_DS","","half16ds* (S + A) >> 2",null,null],[17,"R_PPC64_ADDR16_LO_DS","","half16ds  #lo(S + A) >> 2",null,null],[17,"R_PPC64_GOT16_DS","","half16ds* (G + A) >> 2",null,null],[17,"R_PPC64_GOT16_LO_DS","","half16ds  #lo(G + A) >> 2",null,null],[17,"R_PPC64_PLT16_LO_DS","","half16ds  #lo(L + A) >> 2",null,null],[17,"R_PPC64_SECTOFF_DS","","half16ds* (R + A) >> 2",null,null],[17,"R_PPC64_SECTOFF_LO_DS","","half16ds  #lo(R + A) >> 2",null,null],[17,"R_PPC64_TOC16_DS","","half16ds* (S + A - .TOC.) >> 2",null,null],[17,"R_PPC64_TOC16_LO_DS","","half16ds  #lo(S + A - .TOC.) >> 2",null,null],[17,"R_PPC64_PLTGOT16_DS","","half16ds* (M + A) >> 2",null,null],[17,"R_PPC64_PLTGOT16_LO_DS","","half16ds  #lo(M + A) >> 2",null,null],[17,"R_PPC64_TLS","","none    (sym+add)@tls",null,null],[17,"R_PPC64_DTPMOD64","","doubleword64 (sym+add)@dtpmod",null,null],[17,"R_PPC64_TPREL16","","half16* (sym+add)@tprel",null,null],[17,"R_PPC64_TPREL16_LO","","half16  (sym+add)@tprel@l",null,null],[17,"R_PPC64_TPREL16_HI","","half16  (sym+add)@tprel@h",null,null],[17,"R_PPC64_TPREL16_HA","","half16  (sym+add)@tprel@ha",null,null],[17,"R_PPC64_TPREL64","","doubleword64 (sym+add)@tprel",null,null],[17,"R_PPC64_DTPREL16","","half16* (sym+add)@dtprel",null,null],[17,"R_PPC64_DTPREL16_LO","","half16  (sym+add)@dtprel@l",null,null],[17,"R_PPC64_DTPREL16_HI","","half16  (sym+add)@dtprel@h",null,null],[17,"R_PPC64_DTPREL16_HA","","half16  (sym+add)@dtprel@ha",null,null],[17,"R_PPC64_DTPREL64","","doubleword64 (sym+add)@dtprel",null,null],[17,"R_PPC64_GOT_TLSGD16","","half16* (sym+add)@got@tlsgd",null,null],[17,"R_PPC64_GOT_TLSGD16_LO","","half16  (sym+add)@got@tlsgd@l",null,null],[17,"R_PPC64_GOT_TLSGD16_HI","","half16  (sym+add)@got@tlsgd@h",null,null],[17,"R_PPC64_GOT_TLSGD16_HA","","half16  (sym+add)@got@tlsgd@ha",null,null],[17,"R_PPC64_GOT_TLSLD16","","half16* (sym+add)@got@tlsld",null,null],[17,"R_PPC64_GOT_TLSLD16_LO","","half16  (sym+add)@got@tlsld@l",null,null],[17,"R_PPC64_GOT_TLSLD16_HI","","half16  (sym+add)@got@tlsld@h",null,null],[17,"R_PPC64_GOT_TLSLD16_HA","","half16  (sym+add)@got@tlsld@ha",null,null],[17,"R_PPC64_GOT_TPREL16_DS","","half16ds* (sym+add)@got@tprel",null,null],[17,"R_PPC64_GOT_TPREL16_LO_DS","","half16ds (sym+add)@got@tprel@l",null,null],[17,"R_PPC64_GOT_TPREL16_HI","","half16  (sym+add)@got@tprel@h",null,null],[17,"R_PPC64_GOT_TPREL16_HA","","half16  (sym+add)@got@tprel@ha",null,null],[17,"R_PPC64_GOT_DTPREL16_DS","","half16ds* (sym+add)@got@dtprel",null,null],[17,"R_PPC64_GOT_DTPREL16_LO_DS","","half16ds (sym+add)@got@dtprel@l",null,null],[17,"R_PPC64_GOT_DTPREL16_HI","","half16  (sym+add)@got@dtprel@h",null,null],[17,"R_PPC64_GOT_DTPREL16_HA","","half16  (sym+add)@got@dtprel@ha",null,null],[17,"R_PPC64_TPREL16_DS","","half16ds* (sym+add)@tprel",null,null],[17,"R_PPC64_TPREL16_LO_DS","","half16ds (sym+add)@tprel@l",null,null],[17,"R_PPC64_TPREL16_HIGHER","","half16  (sym+add)@tprel@higher",null,null],[17,"R_PPC64_TPREL16_HIGHERA","","half16  (sym+add)@tprel@highera",null,null],[17,"R_PPC64_TPREL16_HIGHEST","","half16  (sym+add)@tprel@highest",null,null],[17,"R_PPC64_TPREL16_HIGHESTA","","half16  (sym+add)@tprel@highesta",null,null],[17,"R_PPC64_DTPREL16_DS","","half16ds* (sym+add)@dtprel",null,null],[17,"R_PPC64_DTPREL16_LO_DS","","half16ds (sym+add)@dtprel@l",null,null],[17,"R_PPC64_DTPREL16_HIGHER","","half16  (sym+add)@dtprel@higher",null,null],[17,"R_PPC64_DTPREL16_HIGHERA","","half16  (sym+add)@dtprel@highera",null,null],[17,"R_PPC64_DTPREL16_HIGHEST","","half16  (sym+add)@dtprel@highest",null,null],[17,"R_PPC64_DTPREL16_HIGHESTA","","half16  (sym+add)@dtprel@highesta",null,null],[17,"R_PPC64_TLSGD","","none    (sym+add)@tlsgd",null,null],[17,"R_PPC64_TLSLD","","none    (sym+add)@tlsld",null,null],[17,"R_PPC64_TOCSAVE","","none",null,null],[17,"R_PPC64_ADDR16_HIGH","","",null,null],[17,"R_PPC64_ADDR16_HIGHA","","",null,null],[17,"R_PPC64_TPREL16_HIGH","","",null,null],[17,"R_PPC64_TPREL16_HIGHA","","",null,null],[17,"R_PPC64_DTPREL16_HIGH","","",null,null],[17,"R_PPC64_DTPREL16_HIGHA","","",null,null],[17,"R_PPC64_JMP_IREL","","GNU extension to support local ifunc.",null,null],[17,"R_PPC64_IRELATIVE","","GNU extension to support local ifunc.",null,null],[17,"R_PPC64_REL16","","half16   (sym+add-.)",null,null],[17,"R_PPC64_REL16_LO","","half16   (sym+add-.)@l",null,null],[17,"R_PPC64_REL16_HI","","half16   (sym+add-.)@h",null,null],[17,"R_PPC64_REL16_HA","","half16   (sym+add-.)@ha",null,null],[17,"EF_PPC64_ABI","","PowerPC64 bits specifying ABI.",null,null],[17,"DT_PPC64_GLINK","","",null,null],[17,"DT_PPC64_OPD","","",null,null],[17,"DT_PPC64_OPDSZ","","",null,null],[17,"DT_PPC64_OPT","","",null,null],[17,"PPC64_OPT_TLS","","",null,null],[17,"PPC64_OPT_MULTI_TOC","","",null,null],[17,"PPC64_OPT_LOCALENTRY","","",null,null],[17,"STO_PPC64_LOCAL_BIT","","",null,null],[17,"STO_PPC64_LOCAL_MASK","","",null,null],[17,"EF_ARM_RELEXEC","","",null,null],[17,"EF_ARM_HASENTRY","","",null,null],[17,"EF_ARM_INTERWORK","","",null,null],[17,"EF_ARM_APCS_26","","",null,null],[17,"EF_ARM_APCS_FLOAT","","",null,null],[17,"EF_ARM_PIC","","",null,null],[17,"EF_ARM_ALIGN8","","8-bit structure alignment is in use",null,null],[17,"EF_ARM_NEW_ABI","","",null,null],[17,"EF_ARM_OLD_ABI","","",null,null],[17,"EF_ARM_SOFT_FLOAT","","",null,null],[17,"EF_ARM_VFP_FLOAT","","",null,null],[17,"EF_ARM_MAVERICK_FLOAT","","",null,null],[17,"EF_ARM_ABI_FLOAT_SOFT","","NB conflicts with EF_ARM_SOFT_FLOAT",null,null],[17,"EF_ARM_ABI_FLOAT_HARD","","NB conflicts with EF_ARM_VFP_FLOAT",null,null],[17,"EF_ARM_SYMSARESORTED","","",null,null],[17,"EF_ARM_DYNSYMSUSESEGIDX","","",null,null],[17,"EF_ARM_MAPSYMSFIRST","","",null,null],[17,"EF_ARM_BE8","","",null,null],[17,"EF_ARM_LE8","","",null,null],[17,"EF_ARM_EABIMASK","","",null,null],[17,"EF_ARM_EABI_UNKNOWN","","",null,null],[17,"EF_ARM_EABI_VER1","","",null,null],[17,"EF_ARM_EABI_VER2","","",null,null],[17,"EF_ARM_EABI_VER3","","",null,null],[17,"EF_ARM_EABI_VER4","","",null,null],[17,"EF_ARM_EABI_VER5","","",null,null],[17,"STT_ARM_TFUNC","","A Thumb function.",null,null],[17,"STT_ARM_16BIT","","A Thumb label.",null,null],[17,"SHF_ARM_ENTRYSECT","","Section contains an entry point",null,null],[17,"SHF_ARM_COMDEF","","Section may be multiply defined in the input to a link step.",null,null],[17,"PF_ARM_SB","","Segment contains the location addressed by the static base.",null,null],[17,"PF_ARM_PI","","Position-independent segment.",null,null],[17,"PF_ARM_ABS","","Absolute segment.",null,null],[17,"PT_ARM_EXIDX","","ARM unwind segment.",null,null],[17,"SHT_ARM_EXIDX","","ARM unwind section.",null,null],[17,"SHT_ARM_PREEMPTMAP","","Preemption details.",null,null],[17,"SHT_ARM_ATTRIBUTES","","ARM attributes section.",null,null],[17,"R_AARCH64_NONE","","No relocation.",null,null],[17,"R_AARCH64_P32_ABS32","","Direct 32 bit.",null,null],[17,"R_AARCH64_P32_COPY","","Copy symbol at runtime.",null,null],[17,"R_AARCH64_P32_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_AARCH64_P32_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_AARCH64_P32_RELATIVE","","Adjust by program base.",null,null],[17,"R_AARCH64_P32_TLS_DTPMOD","","Module number, 32 bit.",null,null],[17,"R_AARCH64_P32_TLS_DTPREL","","Module-relative offset, 32 bit.",null,null],[17,"R_AARCH64_P32_TLS_TPREL","","TP-relative offset, 32 bit.",null,null],[17,"R_AARCH64_P32_TLSDESC","","TLS Descriptor.",null,null],[17,"R_AARCH64_P32_IRELATIVE","","STT_GNU_IFUNC relocation.",null,null],[17,"R_AARCH64_ABS64","","Direct 64 bit.",null,null],[17,"R_AARCH64_ABS32","","Direct 32 bit.",null,null],[17,"R_AARCH64_ABS16","","Direct 16-bit.",null,null],[17,"R_AARCH64_PREL64","","PC-relative 64-bit.",null,null],[17,"R_AARCH64_PREL32","","PC-relative 32-bit.",null,null],[17,"R_AARCH64_PREL16","","PC-relative 16-bit.",null,null],[17,"R_AARCH64_MOVW_UABS_G0","","Dir. MOVZ imm. from bits 15:0.",null,null],[17,"R_AARCH64_MOVW_UABS_G0_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_UABS_G1","","Dir. MOVZ imm. from bits 31:16.",null,null],[17,"R_AARCH64_MOVW_UABS_G1_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_UABS_G2","","Dir. MOVZ imm. from bits 47:32.",null,null],[17,"R_AARCH64_MOVW_UABS_G2_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_UABS_G3","","Dir. MOV{K,Z} imm. from 63:48.",null,null],[17,"R_AARCH64_MOVW_SABS_G0","","Dir. MOV{N,Z} imm. from 15:0.",null,null],[17,"R_AARCH64_MOVW_SABS_G1","","Dir. MOV{N,Z} imm. from 31:16.",null,null],[17,"R_AARCH64_MOVW_SABS_G2","","Dir. MOV{N,Z} imm. from 47:32.",null,null],[17,"R_AARCH64_LD_PREL_LO19","","PC-rel. LD imm. from bits 20:2.",null,null],[17,"R_AARCH64_ADR_PREL_LO21","","PC-rel. ADR imm. from bits 20:0.",null,null],[17,"R_AARCH64_ADR_PREL_PG_HI21","","Page-rel. ADRP imm. from 32:12.",null,null],[17,"R_AARCH64_ADR_PREL_PG_HI21_NC","","Likewise; no overflow check.",null,null],[17,"R_AARCH64_ADD_ABS_LO12_NC","","Dir. ADD imm. from bits 11:0.",null,null],[17,"R_AARCH64_LDST8_ABS_LO12_NC","","Likewise for LD/ST; no check.",null,null],[17,"R_AARCH64_TSTBR14","","PC-rel. TBZ/TBNZ imm. from 15:2.",null,null],[17,"R_AARCH64_CONDBR19","","PC-rel. cond. br. imm. from 20:2.",null,null],[17,"R_AARCH64_JUMP26","","PC-rel. B imm. from bits 27:2.",null,null],[17,"R_AARCH64_CALL26","","Likewise for CALL.",null,null],[17,"R_AARCH64_LDST16_ABS_LO12_NC","","Dir. ADD imm. from bits 11:1.",null,null],[17,"R_AARCH64_LDST32_ABS_LO12_NC","","Likewise for bits 11:2.",null,null],[17,"R_AARCH64_LDST64_ABS_LO12_NC","","Likewise for bits 11:3.",null,null],[17,"R_AARCH64_MOVW_PREL_G0","","PC-rel. MOV{N,Z} imm. from 15:0.",null,null],[17,"R_AARCH64_MOVW_PREL_G0_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_PREL_G1","","PC-rel. MOV{N,Z} imm. from 31:16.",null,null],[17,"R_AARCH64_MOVW_PREL_G1_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_PREL_G2","","PC-rel. MOV{N,Z} imm. from 47:32.",null,null],[17,"R_AARCH64_MOVW_PREL_G2_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_PREL_G3","","PC-rel. MOV{N,Z} imm. from 63:48.",null,null],[17,"R_AARCH64_LDST128_ABS_LO12_NC","","Dir. ADD imm. from bits 11:4.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G0","","GOT-rel. off. MOV{N,Z} imm. 15:0.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G0_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G1","","GOT-rel. o. MOV{N,Z} imm. 31:16.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G1_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G2","","GOT-rel. o. MOV{N,Z} imm. 47:32.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G2_NC","","Likewise for MOVK; no check.",null,null],[17,"R_AARCH64_MOVW_GOTOFF_G3","","GOT-rel. o. MOV{N,Z} imm. 63:48.",null,null],[17,"R_AARCH64_GOTREL64","","GOT-relative 64-bit.",null,null],[17,"R_AARCH64_GOTREL32","","GOT-relative 32-bit.",null,null],[17,"R_AARCH64_GOT_LD_PREL19","","PC-rel. GOT off. load imm. 20:2.",null,null],[17,"R_AARCH64_LD64_GOTOFF_LO15","","GOT-rel. off. LD/ST imm. 14:3.",null,null],[17,"R_AARCH64_ADR_GOT_PAGE","","P-page-rel. GOT off. ADRP 32:12.",null,null],[17,"R_AARCH64_LD64_GOT_LO12_NC","","Dir. GOT off. LD/ST imm. 11:3.",null,null],[17,"R_AARCH64_LD64_GOTPAGE_LO15","","GOT-page-rel. GOT off. LD/ST 14:3",null,null],[17,"R_AARCH64_TLSGD_ADR_PREL21","","PC-relative ADR imm. 20:0.",null,null],[17,"R_AARCH64_TLSGD_ADR_PAGE21","","page-rel. ADRP imm. 32:12.",null,null],[17,"R_AARCH64_TLSGD_ADD_LO12_NC","","direct ADD imm. from 11:0.",null,null],[17,"R_AARCH64_TLSGD_MOVW_G1","","GOT-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSGD_MOVW_G0_NC","","GOT-rel. MOVK imm. 15:0.",null,null],[17,"R_AARCH64_TLSLD_ADR_PREL21","","Like 512; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_ADR_PAGE21","","Like 513; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_ADD_LO12_NC","","Like 514; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_MOVW_G1","","Like 515; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_MOVW_G0_NC","","Like 516; local dynamic model.",null,null],[17,"R_AARCH64_TLSLD_LD_PREL19","","TLS PC-rel. load imm. 20:2.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G2","","TLS DTP-rel. MOV{N,Z} 47:32.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1","","TLS DTP-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0","","TLS DTP-rel. MOV{N,Z} 15:0.",null,null],[17,"R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_HI12","","DTP-rel. ADD imm. from 23:12.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12","","DTP-rel. ADD imm. from 11:0.",null,null],[17,"R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:0.",null,null],[17,"R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:1.",null,null],[17,"R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:2.",null,null],[17,"R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:3.",null,null],[17,"R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G1","","GOT-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC","","GOT-rel. MOVK 15:0.",null,null],[17,"R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21","","Page-rel. ADRP 32:12.",null,null],[17,"R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC","","Direct LD off. 11:3.",null,null],[17,"R_AARCH64_TLSIE_LD_GOTTPREL_PREL19","","PC-rel. load imm. 20:2.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G2","","TLS TP-rel. MOV{N,Z} 47:32.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1","","TLS TP-rel. MOV{N,Z} 31:16.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G1_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0","","TLS TP-rel. MOV{N,Z} 15:0.",null,null],[17,"R_AARCH64_TLSLE_MOVW_TPREL_G0_NC","","Likewise; MOVK; no check.",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_HI12","","TP-rel. ADD imm. 23:12.",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12","","TP-rel. ADD imm. 11:0.",null,null],[17,"R_AARCH64_TLSLE_ADD_TPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12","","TP-rel. LD/ST off. 11:0.",null,null],[17,"R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC","","Likewise; no ovfl. check.",null,null],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12","","TP-rel. LD/ST off. 11:1.",null,null],[17,"R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12","","TP-rel. LD/ST off. 11:2.",null,null],[17,"R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12","","TP-rel. LD/ST off. 11:3.",null,null],[17,"R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSDESC_LD_PREL19","","PC-rel. load immediate 20:2.",null,null],[17,"R_AARCH64_TLSDESC_ADR_PREL21","","PC-rel. ADR immediate 20:0.",null,null],[17,"R_AARCH64_TLSDESC_ADR_PAGE21","","Page-rel. ADRP imm. 32:12.",null,null],[17,"R_AARCH64_TLSDESC_LD64_LO12","","Direct LD off. from 11:3.",null,null],[17,"R_AARCH64_TLSDESC_ADD_LO12","","Direct ADD imm. from 11:0.",null,null],[17,"R_AARCH64_TLSDESC_OFF_G1","","GOT-rel. MOV{N,Z} imm. 31:16.",null,null],[17,"R_AARCH64_TLSDESC_OFF_G0_NC","","GOT-rel. MOVK imm. 15:0; no ck.",null,null],[17,"R_AARCH64_TLSDESC_LDR","","Relax LDR.",null,null],[17,"R_AARCH64_TLSDESC_ADD","","Relax ADD.",null,null],[17,"R_AARCH64_TLSDESC_CALL","","Relax BLR.",null,null],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12","","TP-rel. LD/ST off. 11:4.",null,null],[17,"R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12","","DTP-rel. LD/ST imm. 11:4.",null,null],[17,"R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC","","Likewise; no check.",null,null],[17,"R_AARCH64_COPY","","Copy symbol at runtime.",null,null],[17,"R_AARCH64_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_AARCH64_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_AARCH64_RELATIVE","","Adjust by program base.",null,null],[17,"R_AARCH64_TLS_DTPMOD","","Module number, 64 bit.",null,null],[17,"R_AARCH64_TLS_DTPREL","","Module-relative offset, 64 bit.",null,null],[17,"R_AARCH64_TLS_TPREL","","TP-relative offset, 64 bit.",null,null],[17,"R_AARCH64_TLSDESC","","TLS Descriptor.",null,null],[17,"R_AARCH64_IRELATIVE","","STT_GNU_IFUNC relocation.",null,null],[17,"R_AVR_32","","Direct 32 bit",null,null],[17,"R_AVR_16","","Direct 16 bit",null,null],[17,"R_MSP430_32","","Direct 32 bit",null,null],[17,"R_MSP430_16_BYTE","","Direct 16 bit",null,null],[17,"R_HEX_32","","Direct 32 bit",null,null],[17,"R_ARM_NONE","","No reloc",null,null],[17,"R_ARM_PC24","","Deprecated PC relative 26 bit branch.",null,null],[17,"R_ARM_ABS32","","Direct 32 bit",null,null],[17,"R_ARM_REL32","","PC relative 32 bit",null,null],[17,"R_ARM_PC13","","",null,null],[17,"R_ARM_ABS16","","Direct 16 bit",null,null],[17,"R_ARM_ABS12","","Direct 12 bit",null,null],[17,"R_ARM_THM_ABS5","","Direct & 0x7C (LDR, STR).",null,null],[17,"R_ARM_ABS8","","Direct 8 bit",null,null],[17,"R_ARM_SBREL32","","",null,null],[17,"R_ARM_THM_PC22","","PC relative 24 bit (Thumb32 BL).",null,null],[17,"R_ARM_THM_PC8","","PC relative & 0x3FC (Thumb16 LDR, ADD, ADR).",null,null],[17,"R_ARM_AMP_VCALL9","","",null,null],[17,"R_ARM_SWI24","","Obsolete static relocation.",null,null],[17,"R_ARM_TLS_DESC","","Dynamic relocation.",null,null],[17,"R_ARM_THM_SWI8","","Reserved.",null,null],[17,"R_ARM_XPC25","","Reserved.",null,null],[17,"R_ARM_THM_XPC22","","Reserved.",null,null],[17,"R_ARM_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_ARM_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_ARM_TLS_TPOFF32","","Offset in static TLS block",null,null],[17,"R_ARM_COPY","","Copy symbol at runtime",null,null],[17,"R_ARM_GLOB_DAT","","Create GOT entry",null,null],[17,"R_ARM_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_ARM_RELATIVE","","Adjust by program base",null,null],[17,"R_ARM_GOTOFF","","32 bit offset to GOT",null,null],[17,"R_ARM_GOTPC","","32 bit PC relative offset to GOT",null,null],[17,"R_ARM_GOT32","","32 bit GOT entry",null,null],[17,"R_ARM_PLT32","","Deprecated, 32 bit PLT address.",null,null],[17,"R_ARM_CALL","","PC relative 24 bit (BL, BLX).",null,null],[17,"R_ARM_JUMP24","","PC relative 24 bit (B, BL).",null,null],[17,"R_ARM_THM_JUMP24","","PC relative 24 bit (Thumb32 B.W).",null,null],[17,"R_ARM_BASE_ABS","","Adjust by program base.",null,null],[17,"R_ARM_ALU_PCREL_7_0","","Obsolete.",null,null],[17,"R_ARM_ALU_PCREL_15_8","","Obsolete.",null,null],[17,"R_ARM_ALU_PCREL_23_15","","Obsolete.",null,null],[17,"R_ARM_LDR_SBREL_11_0","","Deprecated, prog. base relative.",null,null],[17,"R_ARM_ALU_SBREL_19_12","","Deprecated, prog. base relative.",null,null],[17,"R_ARM_ALU_SBREL_27_20","","Deprecated, prog. base relative.",null,null],[17,"R_ARM_TARGET1","","",null,null],[17,"R_ARM_SBREL31","","Program base relative.",null,null],[17,"R_ARM_V4BX","","",null,null],[17,"R_ARM_TARGET2","","",null,null],[17,"R_ARM_PREL31","","32 bit PC relative.",null,null],[17,"R_ARM_MOVW_ABS_NC","","Direct 16-bit (MOVW).",null,null],[17,"R_ARM_MOVT_ABS","","Direct high 16-bit (MOVT).",null,null],[17,"R_ARM_MOVW_PREL_NC","","PC relative 16-bit (MOVW).",null,null],[17,"R_ARM_MOVT_PREL","","PC relative (MOVT).",null,null],[17,"R_ARM_THM_MOVW_ABS_NC","","Direct 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_THM_MOVT_ABS","","Direct high 16 bit (Thumb32 MOVT).",null,null],[17,"R_ARM_THM_MOVW_PREL_NC","","PC relative 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_THM_MOVT_PREL","","PC relative high 16 bit (Thumb32 MOVT).",null,null],[17,"R_ARM_THM_JUMP19","","PC relative 20 bit (Thumb32 B.W).",null,null],[17,"R_ARM_THM_JUMP6","","PC relative X & 0x7E (Thumb16 CBZ, CBNZ).",null,null],[17,"R_ARM_THM_ALU_PREL_11_0","","PC relative 12 bit (Thumb32 ADR.W).",null,null],[17,"R_ARM_THM_PC12","","PC relative 12 bit (Thumb32 LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_ABS32_NOI","","Direct 32-bit.",null,null],[17,"R_ARM_REL32_NOI","","PC relative 32-bit.",null,null],[17,"R_ARM_ALU_PC_G0_NC","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G0","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G1_NC","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G1","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_ALU_PC_G2","","PC relative (ADD, SUB).",null,null],[17,"R_ARM_LDR_PC_G1","","PC relative (LDR,STR,LDRB,STRB).",null,null],[17,"R_ARM_LDR_PC_G2","","PC relative (LDR,STR,LDRB,STRB).",null,null],[17,"R_ARM_LDRS_PC_G0","","PC relative (STR{D,H}, LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_LDRS_PC_G1","","PC relative (STR{D,H}, LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_LDRS_PC_G2","","PC relative (STR{D,H}, LDR{D,SB,H,SH}).",null,null],[17,"R_ARM_LDC_PC_G0","","PC relative (LDC, STC).",null,null],[17,"R_ARM_LDC_PC_G1","","PC relative (LDC, STC).",null,null],[17,"R_ARM_LDC_PC_G2","","PC relative (LDC, STC).",null,null],[17,"R_ARM_ALU_SB_G0_NC","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G0","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G1_NC","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G1","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_ALU_SB_G2","","Program base relative (ADD,SUB).",null,null],[17,"R_ARM_LDR_SB_G0","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDR_SB_G1","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDR_SB_G2","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDRS_SB_G0","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDRS_SB_G1","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDRS_SB_G2","","Program base relative (LDR, STR, LDRB, STRB).",null,null],[17,"R_ARM_LDC_SB_G0","","Program base relative (LDC,STC).",null,null],[17,"R_ARM_LDC_SB_G1","","Program base relative (LDC,STC).",null,null],[17,"R_ARM_LDC_SB_G2","","Program base relative (LDC,STC).",null,null],[17,"R_ARM_MOVW_BREL_NC","","Program base relative 16 bit (MOVW).",null,null],[17,"R_ARM_MOVT_BREL","","Program base relative high 16 bit (MOVT).",null,null],[17,"R_ARM_MOVW_BREL","","Program base relative 16 bit (MOVW).",null,null],[17,"R_ARM_THM_MOVW_BREL_NC","","Program base relative 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_THM_MOVT_BREL","","Program base relative high 16 bit (Thumb32 MOVT).",null,null],[17,"R_ARM_THM_MOVW_BREL","","Program base relative 16 bit (Thumb32 MOVW).",null,null],[17,"R_ARM_TLS_GOTDESC","","",null,null],[17,"R_ARM_TLS_CALL","","",null,null],[17,"R_ARM_TLS_DESCSEQ","","TLS relaxation.",null,null],[17,"R_ARM_THM_TLS_CALL","","",null,null],[17,"R_ARM_PLT32_ABS","","",null,null],[17,"R_ARM_GOT_ABS","","GOT entry.",null,null],[17,"R_ARM_GOT_PREL","","PC relative GOT entry.",null,null],[17,"R_ARM_GOT_BREL12","","GOT entry relative to GOT origin (LDR).",null,null],[17,"R_ARM_GOTOFF12","","12 bit, GOT entry relative to GOT origin (LDR, STR).",null,null],[17,"R_ARM_GOTRELAX","","",null,null],[17,"R_ARM_GNU_VTENTRY","","",null,null],[17,"R_ARM_GNU_VTINHERIT","","",null,null],[17,"R_ARM_THM_PC11","","PC relative & 0xFFE (Thumb16 B).",null,null],[17,"R_ARM_THM_PC9","","PC relative & 0x1FE (Thumb16 B/B).",null,null],[17,"R_ARM_TLS_GD32","","PC-rel 32 bit for global dynamic thread local data",null,null],[17,"R_ARM_TLS_LDM32","","PC-rel 32 bit for local dynamic thread local data",null,null],[17,"R_ARM_TLS_LDO32","","32 bit offset relative to TLS block",null,null],[17,"R_ARM_TLS_IE32","","PC-rel 32 bit for GOT entry of static TLS block offset",null,null],[17,"R_ARM_TLS_LE32","","32 bit offset relative to static TLS block",null,null],[17,"R_ARM_TLS_LDO12","","12 bit relative to TLS block (LDR, STR).",null,null],[17,"R_ARM_TLS_LE12","","12 bit relative to static TLS block (LDR, STR).",null,null],[17,"R_ARM_TLS_IE12GP","","12 bit GOT entry relative to GOT origin (LDR).",null,null],[17,"R_ARM_ME_TOO","","Obsolete.",null,null],[17,"R_ARM_THM_TLS_DESCSEQ","","",null,null],[17,"R_ARM_THM_TLS_DESCSEQ16","","",null,null],[17,"R_ARM_THM_TLS_DESCSEQ32","","",null,null],[17,"R_ARM_THM_GOT_BREL12","","GOT entry relative to GOT origin, 12 bit (Thumb32 LDR).",null,null],[17,"R_ARM_IRELATIVE","","",null,null],[17,"R_ARM_RXPC25","","",null,null],[17,"R_ARM_RSBREL32","","",null,null],[17,"R_ARM_THM_RPC22","","",null,null],[17,"R_ARM_RREL32","","",null,null],[17,"R_ARM_RABS22","","",null,null],[17,"R_ARM_RPC24","","",null,null],[17,"R_ARM_RBASE","","",null,null],[17,"R_CKCORE_NONE","","no reloc",null,null],[17,"R_CKCORE_ADDR32","","direct 32 bit (S + A)",null,null],[17,"R_CKCORE_PCRELIMM8BY4","","disp ((S + A - P) >> 2) & 0xff",null,null],[17,"R_CKCORE_PCRELIMM11BY2","","disp ((S + A - P) >> 1) & 0x7ff",null,null],[17,"R_CKCORE_PCREL32","","32-bit rel (S + A - P)",null,null],[17,"R_CKCORE_PCRELJSR_IMM11BY2","","disp ((S + A - P) >>1) & 0x7ff",null,null],[17,"R_CKCORE_RELATIVE","","32 bit adjust program base(B + A)",null,null],[17,"R_CKCORE_COPY","","32 bit adjust by program base",null,null],[17,"R_CKCORE_GLOB_DAT","","off between got and sym (S)",null,null],[17,"R_CKCORE_JUMP_SLOT","","PLT entry (S)",null,null],[17,"R_CKCORE_GOTOFF","","offset to GOT (S + A - GOT)",null,null],[17,"R_CKCORE_GOTPC","","PC offset to GOT (GOT + A - P)",null,null],[17,"R_CKCORE_GOT32","","32 bit GOT entry (G)",null,null],[17,"R_CKCORE_PLT32","","32 bit PLT entry (G)",null,null],[17,"R_CKCORE_ADDRGOT","","GOT entry in GLOB_DAT (GOT + G)",null,null],[17,"R_CKCORE_ADDRPLT","","PLT entry in GLOB_DAT (GOT + G)",null,null],[17,"R_CKCORE_PCREL_IMM26BY2","","((S + A - P) >> 1) & 0x3ff_ffff",null,null],[17,"R_CKCORE_PCREL_IMM16BY2","","disp ((S + A - P) >> 1) & 0xffff",null,null],[17,"R_CKCORE_PCREL_IMM16BY4","","disp ((S + A - P) >> 2) & 0xffff",null,null],[17,"R_CKCORE_PCREL_IMM10BY2","","disp ((S + A - P) >> 1) & 0x3ff",null,null],[17,"R_CKCORE_PCREL_IMM10BY4","","disp ((S + A - P) >> 2) & 0x3ff",null,null],[17,"R_CKCORE_ADDR_HI16","","high & low 16 bit ADDR, ((S + A) >> 16) & 0xffff",null,null],[17,"R_CKCORE_ADDR_LO16","","(S + A) & 0xffff",null,null],[17,"R_CKCORE_GOTPC_HI16","","high & low 16 bit GOTPC, ((GOT + A - P) >> 16) & 0xffff",null,null],[17,"R_CKCORE_GOTPC_LO16","","(GOT + A - P) & 0xffff",null,null],[17,"R_CKCORE_GOTOFF_HI16","","high & low 16 bit GOTOFF, ((S + A - GOT) >> 16) & 0xffff",null,null],[17,"R_CKCORE_GOTOFF_LO16","","(S + A - GOT) & 0xffff",null,null],[17,"R_CKCORE_GOT12","","12 bit disp GOT entry (G)",null,null],[17,"R_CKCORE_GOT_HI16","","high & low 16 bit GOT, (G >> 16) & 0xffff",null,null],[17,"R_CKCORE_GOT_LO16","","(G & 0xffff)",null,null],[17,"R_CKCORE_PLT12","","12 bit disp PLT entry (G)",null,null],[17,"R_CKCORE_PLT_HI16","","high & low 16 bit PLT, (G >> 16) & 0xffff",null,null],[17,"R_CKCORE_PLT_LO16","","G & 0xffff",null,null],[17,"R_CKCORE_ADDRGOT_HI16","","high & low 16 bit ADDRGOT, (GOT + G * 4) & 0xffff",null,null],[17,"R_CKCORE_ADDRGOT_LO16","","(GOT + G * 4) & 0xffff",null,null],[17,"R_CKCORE_ADDRPLT_HI16","","high & low 16 bit ADDRPLT, ((GOT + G * 4) >> 16) & 0xFFFF",null,null],[17,"R_CKCORE_ADDRPLT_LO16","","(GOT+G*4) & 0xffff",null,null],[17,"R_CKCORE_PCREL_JSR_IMM26BY2","","disp ((S+A-P) >>1) & x3ff_ffff",null,null],[17,"R_CKCORE_TOFFSET_LO16","","(S+A-BTEXT) & 0xffff",null,null],[17,"R_CKCORE_DOFFSET_LO16","","(S+A-BTEXT) & 0xffff",null,null],[17,"R_CKCORE_PCREL_IMM18BY2","","disp ((S+A-P) >>1) & 0x3ffff",null,null],[17,"R_CKCORE_DOFFSET_IMM18","","disp (S+A-BDATA) & 0x3ffff",null,null],[17,"R_CKCORE_DOFFSET_IMM18BY2","","disp ((S+A-BDATA)>>1) & 0x3ffff",null,null],[17,"R_CKCORE_DOFFSET_IMM18BY4","","disp ((S+A-BDATA)>>2) & 0x3ffff",null,null],[17,"R_CKCORE_GOT_IMM18BY4","","disp (G >> 2)",null,null],[17,"R_CKCORE_PLT_IMM18BY4","","disp (G >> 2)",null,null],[17,"R_CKCORE_PCREL_IMM7BY4","","disp ((S+A-P) >>2) & 0x7f",null,null],[17,"R_CKCORE_TLS_LE32","","32 bit offset to TLS block",null,null],[17,"R_CKCORE_TLS_IE32","","",null,null],[17,"R_CKCORE_TLS_GD32","","",null,null],[17,"R_CKCORE_TLS_LDM32","","",null,null],[17,"R_CKCORE_TLS_LDO32","","",null,null],[17,"R_CKCORE_TLS_DTPMOD32","","",null,null],[17,"R_CKCORE_TLS_DTPOFF32","","",null,null],[17,"R_CKCORE_TLS_TPOFF32","","",null,null],[17,"EF_CSKY_ABIMASK","","",null,null],[17,"EF_CSKY_OTHER","","",null,null],[17,"EF_CSKY_PROCESSOR","","",null,null],[17,"EF_CSKY_ABIV1","","",null,null],[17,"EF_CSKY_ABIV2","","",null,null],[17,"SHT_CSKY_ATTRIBUTES","","C-SKY attributes section.",null,null],[17,"EF_IA_64_MASKOS","","os-specific flags",null,null],[17,"EF_IA_64_ABI64","","64-bit ABI",null,null],[17,"EF_IA_64_ARCH","","arch. version mask",null,null],[17,"PT_IA_64_ARCHEXT","","arch extension bits",null,null],[17,"PT_IA_64_UNWIND","","ia64 unwind bits",null,null],[17,"PT_IA_64_HP_OPT_ANOT","","",null,null],[17,"PT_IA_64_HP_HSL_ANOT","","",null,null],[17,"PT_IA_64_HP_STACK","","",null,null],[17,"PF_IA_64_NORECOV","","spec insns w/o recovery",null,null],[17,"SHT_IA_64_EXT","","extension bits",null,null],[17,"SHT_IA_64_UNWIND","","unwind bits",null,null],[17,"SHF_IA_64_SHORT","","section near gp",null,null],[17,"SHF_IA_64_NORECOV","","spec insns w/o recovery",null,null],[17,"DT_IA_64_PLT_RESERVE","","",null,null],[17,"R_IA64_NONE","","none",null,null],[17,"R_IA64_IMM14","","symbol + addend, add imm14",null,null],[17,"R_IA64_IMM22","","symbol + addend, add imm22",null,null],[17,"R_IA64_IMM64","","symbol + addend, mov imm64",null,null],[17,"R_IA64_DIR32MSB","","symbol + addend, data4 MSB",null,null],[17,"R_IA64_DIR32LSB","","symbol + addend, data4 LSB",null,null],[17,"R_IA64_DIR64MSB","","symbol + addend, data8 MSB",null,null],[17,"R_IA64_DIR64LSB","","symbol + addend, data8 LSB",null,null],[17,"R_IA64_GPREL22","","@gprel(sym + add), add imm22",null,null],[17,"R_IA64_GPREL64I","","@gprel(sym + add), mov imm64",null,null],[17,"R_IA64_GPREL32MSB","","@gprel(sym + add), data4 MSB",null,null],[17,"R_IA64_GPREL32LSB","","@gprel(sym + add), data4 LSB",null,null],[17,"R_IA64_GPREL64MSB","","@gprel(sym + add), data8 MSB",null,null],[17,"R_IA64_GPREL64LSB","","@gprel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF22","","@ltoff(sym + add), add imm22",null,null],[17,"R_IA64_LTOFF64I","","@ltoff(sym + add), mov imm64",null,null],[17,"R_IA64_PLTOFF22","","@pltoff(sym + add), add imm22",null,null],[17,"R_IA64_PLTOFF64I","","@pltoff(sym + add), mov imm64",null,null],[17,"R_IA64_PLTOFF64MSB","","@pltoff(sym + add), data8 MSB",null,null],[17,"R_IA64_PLTOFF64LSB","","@pltoff(sym + add), data8 LSB",null,null],[17,"R_IA64_FPTR64I","","@fptr(sym + add), mov imm64",null,null],[17,"R_IA64_FPTR32MSB","","@fptr(sym + add), data4 MSB",null,null],[17,"R_IA64_FPTR32LSB","","@fptr(sym + add), data4 LSB",null,null],[17,"R_IA64_FPTR64MSB","","@fptr(sym + add), data8 MSB",null,null],[17,"R_IA64_FPTR64LSB","","@fptr(sym + add), data8 LSB",null,null],[17,"R_IA64_PCREL60B","","@pcrel(sym + add), brl",null,null],[17,"R_IA64_PCREL21B","","@pcrel(sym + add), ptb, call",null,null],[17,"R_IA64_PCREL21M","","@pcrel(sym + add), chk.s",null,null],[17,"R_IA64_PCREL21F","","@pcrel(sym + add), fchkf",null,null],[17,"R_IA64_PCREL32MSB","","@pcrel(sym + add), data4 MSB",null,null],[17,"R_IA64_PCREL32LSB","","@pcrel(sym + add), data4 LSB",null,null],[17,"R_IA64_PCREL64MSB","","@pcrel(sym + add), data8 MSB",null,null],[17,"R_IA64_PCREL64LSB","","@pcrel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_FPTR22","","@ltoff(@fptr(s+a)), imm22",null,null],[17,"R_IA64_LTOFF_FPTR64I","","@ltoff(@fptr(s+a)), imm64",null,null],[17,"R_IA64_LTOFF_FPTR32MSB","","@ltoff(@fptr(s+a)), data4 MSB",null,null],[17,"R_IA64_LTOFF_FPTR32LSB","","@ltoff(@fptr(s+a)), data4 LSB",null,null],[17,"R_IA64_LTOFF_FPTR64MSB","","@ltoff(@fptr(s+a)), data8 MSB",null,null],[17,"R_IA64_LTOFF_FPTR64LSB","","@ltoff(@fptr(s+a)), data8 LSB",null,null],[17,"R_IA64_SEGREL32MSB","","@segrel(sym + add), data4 MSB",null,null],[17,"R_IA64_SEGREL32LSB","","@segrel(sym + add), data4 LSB",null,null],[17,"R_IA64_SEGREL64MSB","","@segrel(sym + add), data8 MSB",null,null],[17,"R_IA64_SEGREL64LSB","","@segrel(sym + add), data8 LSB",null,null],[17,"R_IA64_SECREL32MSB","","@secrel(sym + add), data4 MSB",null,null],[17,"R_IA64_SECREL32LSB","","@secrel(sym + add), data4 LSB",null,null],[17,"R_IA64_SECREL64MSB","","@secrel(sym + add), data8 MSB",null,null],[17,"R_IA64_SECREL64LSB","","@secrel(sym + add), data8 LSB",null,null],[17,"R_IA64_REL32MSB","","data 4 + REL",null,null],[17,"R_IA64_REL32LSB","","data 4 + REL",null,null],[17,"R_IA64_REL64MSB","","data 8 + REL",null,null],[17,"R_IA64_REL64LSB","","data 8 + REL",null,null],[17,"R_IA64_LTV32MSB","","symbol + addend, data4 MSB",null,null],[17,"R_IA64_LTV32LSB","","symbol + addend, data4 LSB",null,null],[17,"R_IA64_LTV64MSB","","symbol + addend, data8 MSB",null,null],[17,"R_IA64_LTV64LSB","","symbol + addend, data8 LSB",null,null],[17,"R_IA64_PCREL21BI","","@pcrel(sym + add), 21bit inst",null,null],[17,"R_IA64_PCREL22","","@pcrel(sym + add), 22bit inst",null,null],[17,"R_IA64_PCREL64I","","@pcrel(sym + add), 64bit inst",null,null],[17,"R_IA64_IPLTMSB","","dynamic reloc, imported PLT, MSB",null,null],[17,"R_IA64_IPLTLSB","","dynamic reloc, imported PLT, LSB",null,null],[17,"R_IA64_COPY","","copy relocation",null,null],[17,"R_IA64_SUB","","Addend and symbol difference",null,null],[17,"R_IA64_LTOFF22X","","LTOFF22, relaxable.",null,null],[17,"R_IA64_LDXMOV","","Use of LTOFF22X.",null,null],[17,"R_IA64_TPREL14","","@tprel(sym + add), imm14",null,null],[17,"R_IA64_TPREL22","","@tprel(sym + add), imm22",null,null],[17,"R_IA64_TPREL64I","","@tprel(sym + add), imm64",null,null],[17,"R_IA64_TPREL64MSB","","@tprel(sym + add), data8 MSB",null,null],[17,"R_IA64_TPREL64LSB","","@tprel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_TPREL22","","@ltoff(@tprel(s+a)), imm2",null,null],[17,"R_IA64_DTPMOD64MSB","","@dtpmod(sym + add), data8 MSB",null,null],[17,"R_IA64_DTPMOD64LSB","","@dtpmod(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_DTPMOD22","","@ltoff(@dtpmod(sym + add)), imm22",null,null],[17,"R_IA64_DTPREL14","","@dtprel(sym + add), imm14",null,null],[17,"R_IA64_DTPREL22","","@dtprel(sym + add), imm22",null,null],[17,"R_IA64_DTPREL64I","","@dtprel(sym + add), imm64",null,null],[17,"R_IA64_DTPREL32MSB","","@dtprel(sym + add), data4 MSB",null,null],[17,"R_IA64_DTPREL32LSB","","@dtprel(sym + add), data4 LSB",null,null],[17,"R_IA64_DTPREL64MSB","","@dtprel(sym + add), data8 MSB",null,null],[17,"R_IA64_DTPREL64LSB","","@dtprel(sym + add), data8 LSB",null,null],[17,"R_IA64_LTOFF_DTPREL22","","@ltoff(@dtprel(s+a)), imm22",null,null],[17,"EF_SH_MACH_MASK","","",null,null],[17,"EF_SH_UNKNOWN","","",null,null],[17,"EF_SH1","","",null,null],[17,"EF_SH2","","",null,null],[17,"EF_SH3","","",null,null],[17,"EF_SH_DSP","","",null,null],[17,"EF_SH3_DSP","","",null,null],[17,"EF_SH4AL_DSP","","",null,null],[17,"EF_SH3E","","",null,null],[17,"EF_SH4","","",null,null],[17,"EF_SH2E","","",null,null],[17,"EF_SH4A","","",null,null],[17,"EF_SH2A","","",null,null],[17,"EF_SH4_NOFPU","","",null,null],[17,"EF_SH4A_NOFPU","","",null,null],[17,"EF_SH4_NOMMU_NOFPU","","",null,null],[17,"EF_SH2A_NOFPU","","",null,null],[17,"EF_SH3_NOMMU","","",null,null],[17,"EF_SH2A_SH4_NOFPU","","",null,null],[17,"EF_SH2A_SH3_NOFPU","","",null,null],[17,"EF_SH2A_SH4","","",null,null],[17,"EF_SH2A_SH3E","","",null,null],[17,"R_SH_NONE","","",null,null],[17,"R_SH_DIR32","","",null,null],[17,"R_SH_REL32","","",null,null],[17,"R_SH_DIR8WPN","","",null,null],[17,"R_SH_IND12W","","",null,null],[17,"R_SH_DIR8WPL","","",null,null],[17,"R_SH_DIR8WPZ","","",null,null],[17,"R_SH_DIR8BP","","",null,null],[17,"R_SH_DIR8W","","",null,null],[17,"R_SH_DIR8L","","",null,null],[17,"R_SH_SWITCH16","","",null,null],[17,"R_SH_SWITCH32","","",null,null],[17,"R_SH_USES","","",null,null],[17,"R_SH_COUNT","","",null,null],[17,"R_SH_ALIGN","","",null,null],[17,"R_SH_CODE","","",null,null],[17,"R_SH_DATA","","",null,null],[17,"R_SH_LABEL","","",null,null],[17,"R_SH_SWITCH8","","",null,null],[17,"R_SH_GNU_VTINHERIT","","",null,null],[17,"R_SH_GNU_VTENTRY","","",null,null],[17,"R_SH_TLS_GD_32","","",null,null],[17,"R_SH_TLS_LD_32","","",null,null],[17,"R_SH_TLS_LDO_32","","",null,null],[17,"R_SH_TLS_IE_32","","",null,null],[17,"R_SH_TLS_LE_32","","",null,null],[17,"R_SH_TLS_DTPMOD32","","",null,null],[17,"R_SH_TLS_DTPOFF32","","",null,null],[17,"R_SH_TLS_TPOFF32","","",null,null],[17,"R_SH_GOT32","","",null,null],[17,"R_SH_PLT32","","",null,null],[17,"R_SH_COPY","","",null,null],[17,"R_SH_GLOB_DAT","","",null,null],[17,"R_SH_JMP_SLOT","","",null,null],[17,"R_SH_RELATIVE","","",null,null],[17,"R_SH_GOTOFF","","",null,null],[17,"R_SH_GOTPC","","",null,null],[17,"EF_S390_HIGH_GPRS","","High GPRs kernel facility needed.",null,null],[17,"R_390_NONE","","No reloc.",null,null],[17,"R_390_8","","Direct 8 bit.",null,null],[17,"R_390_12","","Direct 12 bit.",null,null],[17,"R_390_16","","Direct 16 bit.",null,null],[17,"R_390_32","","Direct 32 bit.",null,null],[17,"R_390_PC32","","PC relative 32 bit.",null,null],[17,"R_390_GOT12","","12 bit GOT offset.",null,null],[17,"R_390_GOT32","","32 bit GOT offset.",null,null],[17,"R_390_PLT32","","32 bit PC relative PLT address.",null,null],[17,"R_390_COPY","","Copy symbol at runtime.",null,null],[17,"R_390_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_390_JMP_SLOT","","Create PLT entry.",null,null],[17,"R_390_RELATIVE","","Adjust by program base.",null,null],[17,"R_390_GOTOFF32","","32 bit offset to GOT.",null,null],[17,"R_390_GOTPC","","32 bit PC relative offset to GOT.",null,null],[17,"R_390_GOT16","","16 bit GOT offset.",null,null],[17,"R_390_PC16","","PC relative 16 bit.",null,null],[17,"R_390_PC16DBL","","PC relative 16 bit shifted by 1.",null,null],[17,"R_390_PLT16DBL","","16 bit PC rel. PLT shifted by 1.",null,null],[17,"R_390_PC32DBL","","PC relative 32 bit shifted by 1.",null,null],[17,"R_390_PLT32DBL","","32 bit PC rel. PLT shifted by 1.",null,null],[17,"R_390_GOTPCDBL","","32 bit PC rel. GOT shifted by 1.",null,null],[17,"R_390_64","","Direct 64 bit.",null,null],[17,"R_390_PC64","","PC relative 64 bit.",null,null],[17,"R_390_GOT64","","64 bit GOT offset.",null,null],[17,"R_390_PLT64","","64 bit PC relative PLT address.",null,null],[17,"R_390_GOTENT","","32 bit PC rel. to GOT entry >> 1.",null,null],[17,"R_390_GOTOFF16","","16 bit offset to GOT.",null,null],[17,"R_390_GOTOFF64","","64 bit offset to GOT.",null,null],[17,"R_390_GOTPLT12","","12 bit offset to jump slot.",null,null],[17,"R_390_GOTPLT16","","16 bit offset to jump slot.",null,null],[17,"R_390_GOTPLT32","","32 bit offset to jump slot.",null,null],[17,"R_390_GOTPLT64","","64 bit offset to jump slot.",null,null],[17,"R_390_GOTPLTENT","","32 bit rel. offset to jump slot.",null,null],[17,"R_390_PLTOFF16","","16 bit offset from GOT to PLT.",null,null],[17,"R_390_PLTOFF32","","32 bit offset from GOT to PLT.",null,null],[17,"R_390_PLTOFF64","","16 bit offset from GOT to PLT.",null,null],[17,"R_390_TLS_LOAD","","Tag for load insn in TLS code.",null,null],[17,"R_390_TLS_GDCALL","","Tag for function call in general dynamic TLS code.",null,null],[17,"R_390_TLS_LDCALL","","Tag for function call in local dynamic TLS code.",null,null],[17,"R_390_TLS_GD32","","Direct 32 bit for general dynamic thread local data.",null,null],[17,"R_390_TLS_GD64","","Direct 64 bit for general dynamic thread local data.",null,null],[17,"R_390_TLS_GOTIE12","","12 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_TLS_GOTIE32","","32 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_TLS_GOTIE64","","64 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_TLS_LDM32","","Direct 32 bit for local dynamic thread local data in LE…",null,null],[17,"R_390_TLS_LDM64","","Direct 64 bit for local dynamic thread local data in LE…",null,null],[17,"R_390_TLS_IE32","","32 bit address of GOT entry for negated static TLS block…",null,null],[17,"R_390_TLS_IE64","","64 bit address of GOT entry for negated static TLS block…",null,null],[17,"R_390_TLS_IEENT","","32 bit rel. offset to GOT entry for negated static TLS…",null,null],[17,"R_390_TLS_LE32","","32 bit negated offset relative to static TLS block.",null,null],[17,"R_390_TLS_LE64","","64 bit negated offset relative to static TLS block.",null,null],[17,"R_390_TLS_LDO32","","32 bit offset relative to TLS block.",null,null],[17,"R_390_TLS_LDO64","","64 bit offset relative to TLS block.",null,null],[17,"R_390_TLS_DTPMOD","","ID of module containing symbol.",null,null],[17,"R_390_TLS_DTPOFF","","Offset in TLS block.",null,null],[17,"R_390_TLS_TPOFF","","Negated offset in static TLS block.",null,null],[17,"R_390_20","","Direct 20 bit.",null,null],[17,"R_390_GOT20","","20 bit GOT offset.",null,null],[17,"R_390_GOTPLT20","","20 bit offset to jump slot.",null,null],[17,"R_390_TLS_GOTIE20","","20 bit GOT offset for static TLS block offset.",null,null],[17,"R_390_IRELATIVE","","STT_GNU_IFUNC relocation.",null,null],[17,"R_CRIS_NONE","","",null,null],[17,"R_CRIS_8","","",null,null],[17,"R_CRIS_16","","",null,null],[17,"R_CRIS_32","","",null,null],[17,"R_CRIS_8_PCREL","","",null,null],[17,"R_CRIS_16_PCREL","","",null,null],[17,"R_CRIS_32_PCREL","","",null,null],[17,"R_CRIS_GNU_VTINHERIT","","",null,null],[17,"R_CRIS_GNU_VTENTRY","","",null,null],[17,"R_CRIS_COPY","","",null,null],[17,"R_CRIS_GLOB_DAT","","",null,null],[17,"R_CRIS_JUMP_SLOT","","",null,null],[17,"R_CRIS_RELATIVE","","",null,null],[17,"R_CRIS_16_GOT","","",null,null],[17,"R_CRIS_32_GOT","","",null,null],[17,"R_CRIS_16_GOTPLT","","",null,null],[17,"R_CRIS_32_GOTPLT","","",null,null],[17,"R_CRIS_32_GOTREL","","",null,null],[17,"R_CRIS_32_PLT_GOTREL","","",null,null],[17,"R_CRIS_32_PLT_PCREL","","",null,null],[17,"R_X86_64_NONE","","No reloc",null,null],[17,"R_X86_64_64","","Direct 64 bit",null,null],[17,"R_X86_64_PC32","","PC relative 32 bit signed",null,null],[17,"R_X86_64_GOT32","","32 bit GOT entry",null,null],[17,"R_X86_64_PLT32","","32 bit PLT address",null,null],[17,"R_X86_64_COPY","","Copy symbol at runtime",null,null],[17,"R_X86_64_GLOB_DAT","","Create GOT entry",null,null],[17,"R_X86_64_JUMP_SLOT","","Create PLT entry",null,null],[17,"R_X86_64_RELATIVE","","Adjust by program base",null,null],[17,"R_X86_64_GOTPCREL","","32 bit signed PC relative offset to GOT",null,null],[17,"R_X86_64_32","","Direct 32 bit zero extended",null,null],[17,"R_X86_64_32S","","Direct 32 bit sign extended",null,null],[17,"R_X86_64_16","","Direct 16 bit zero extended",null,null],[17,"R_X86_64_PC16","","16 bit sign extended pc relative",null,null],[17,"R_X86_64_8","","Direct 8 bit sign extended",null,null],[17,"R_X86_64_PC8","","8 bit sign extended pc relative",null,null],[17,"R_X86_64_DTPMOD64","","ID of module containing symbol",null,null],[17,"R_X86_64_DTPOFF64","","Offset in module\'s TLS block",null,null],[17,"R_X86_64_TPOFF64","","Offset in initial TLS block",null,null],[17,"R_X86_64_TLSGD","","32 bit signed PC relative offset to two GOT entries for GD…",null,null],[17,"R_X86_64_TLSLD","","32 bit signed PC relative offset to two GOT entries for LD…",null,null],[17,"R_X86_64_DTPOFF32","","Offset in TLS block",null,null],[17,"R_X86_64_GOTTPOFF","","32 bit signed PC relative offset to GOT entry for IE symbol",null,null],[17,"R_X86_64_TPOFF32","","Offset in initial TLS block",null,null],[17,"R_X86_64_PC64","","PC relative 64 bit",null,null],[17,"R_X86_64_GOTOFF64","","64 bit offset to GOT",null,null],[17,"R_X86_64_GOTPC32","","32 bit signed pc relative offset to GOT",null,null],[17,"R_X86_64_GOT64","","64-bit GOT entry offset",null,null],[17,"R_X86_64_GOTPCREL64","","64-bit PC relative offset to GOT entry",null,null],[17,"R_X86_64_GOTPC64","","64-bit PC relative offset to GOT",null,null],[17,"R_X86_64_GOTPLT64","","like GOT64, says PLT entry needed",null,null],[17,"R_X86_64_PLTOFF64","","64-bit GOT relative offset to PLT entry",null,null],[17,"R_X86_64_SIZE32","","Size of symbol plus 32-bit addend",null,null],[17,"R_X86_64_SIZE64","","Size of symbol plus 64-bit addend",null,null],[17,"R_X86_64_GOTPC32_TLSDESC","","GOT offset for TLS descriptor.",null,null],[17,"R_X86_64_TLSDESC_CALL","","Marker for call through TLS descriptor.",null,null],[17,"R_X86_64_TLSDESC","","TLS descriptor.",null,null],[17,"R_X86_64_IRELATIVE","","Adjust indirectly by program base",null,null],[17,"R_X86_64_RELATIVE64","","64-bit adjust by program base",null,null],[17,"R_X86_64_GOTPCRELX","","Load from 32 bit signed pc relative offset to GOT entry…",null,null],[17,"R_X86_64_REX_GOTPCRELX","","Load from 32 bit signed pc relative offset to GOT entry…",null,null],[17,"SHT_X86_64_UNWIND","","Unwind information.",null,null],[17,"R_MN10300_NONE","","No reloc.",null,null],[17,"R_MN10300_32","","Direct 32 bit.",null,null],[17,"R_MN10300_16","","Direct 16 bit.",null,null],[17,"R_MN10300_8","","Direct 8 bit.",null,null],[17,"R_MN10300_PCREL32","","PC-relative 32-bit.",null,null],[17,"R_MN10300_PCREL16","","PC-relative 16-bit signed.",null,null],[17,"R_MN10300_PCREL8","","PC-relative 8-bit signed.",null,null],[17,"R_MN10300_GNU_VTINHERIT","","Ancient C++ vtable garbage...",null,null],[17,"R_MN10300_GNU_VTENTRY","","... collection annotation.",null,null],[17,"R_MN10300_24","","Direct 24 bit.",null,null],[17,"R_MN10300_GOTPC32","","32-bit PCrel offset to GOT.",null,null],[17,"R_MN10300_GOTPC16","","16-bit PCrel offset to GOT.",null,null],[17,"R_MN10300_GOTOFF32","","32-bit offset from GOT.",null,null],[17,"R_MN10300_GOTOFF24","","24-bit offset from GOT.",null,null],[17,"R_MN10300_GOTOFF16","","16-bit offset from GOT.",null,null],[17,"R_MN10300_PLT32","","32-bit PCrel to PLT entry.",null,null],[17,"R_MN10300_PLT16","","16-bit PCrel to PLT entry.",null,null],[17,"R_MN10300_GOT32","","32-bit offset to GOT entry.",null,null],[17,"R_MN10300_GOT24","","24-bit offset to GOT entry.",null,null],[17,"R_MN10300_GOT16","","16-bit offset to GOT entry.",null,null],[17,"R_MN10300_COPY","","Copy symbol at runtime.",null,null],[17,"R_MN10300_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_MN10300_JMP_SLOT","","Create PLT entry.",null,null],[17,"R_MN10300_RELATIVE","","Adjust by program base.",null,null],[17,"R_MN10300_TLS_GD","","32-bit offset for global dynamic.",null,null],[17,"R_MN10300_TLS_LD","","32-bit offset for local dynamic.",null,null],[17,"R_MN10300_TLS_LDO","","Module-relative offset.",null,null],[17,"R_MN10300_TLS_GOTIE","","GOT offset for static TLS block offset.",null,null],[17,"R_MN10300_TLS_IE","","GOT address for static TLS block offset.",null,null],[17,"R_MN10300_TLS_LE","","Offset relative to static TLS block.",null,null],[17,"R_MN10300_TLS_DTPMOD","","ID of module containing symbol.",null,null],[17,"R_MN10300_TLS_DTPOFF","","Offset in module TLS block.",null,null],[17,"R_MN10300_TLS_TPOFF","","Offset in static TLS block.",null,null],[17,"R_MN10300_SYM_DIFF","","Adjustment for next reloc as needed by linker relaxation.",null,null],[17,"R_MN10300_ALIGN","","Alignment requirement for linker relaxation.",null,null],[17,"R_M32R_NONE","","No reloc.",null,null],[17,"R_M32R_16","","Direct 16 bit.",null,null],[17,"R_M32R_32","","Direct 32 bit.",null,null],[17,"R_M32R_24","","Direct 24 bit.",null,null],[17,"R_M32R_10_PCREL","","PC relative 10 bit shifted.",null,null],[17,"R_M32R_18_PCREL","","PC relative 18 bit shifted.",null,null],[17,"R_M32R_26_PCREL","","PC relative 26 bit shifted.",null,null],[17,"R_M32R_HI16_ULO","","High 16 bit with unsigned low.",null,null],[17,"R_M32R_HI16_SLO","","High 16 bit with signed low.",null,null],[17,"R_M32R_LO16","","Low 16 bit.",null,null],[17,"R_M32R_SDA16","","16 bit offset in SDA.",null,null],[17,"R_M32R_GNU_VTINHERIT","","",null,null],[17,"R_M32R_GNU_VTENTRY","","",null,null],[17,"R_M32R_16_RELA","","Direct 16 bit.",null,null],[17,"R_M32R_32_RELA","","Direct 32 bit.",null,null],[17,"R_M32R_24_RELA","","Direct 24 bit.",null,null],[17,"R_M32R_10_PCREL_RELA","","PC relative 10 bit shifted.",null,null],[17,"R_M32R_18_PCREL_RELA","","PC relative 18 bit shifted.",null,null],[17,"R_M32R_26_PCREL_RELA","","PC relative 26 bit shifted.",null,null],[17,"R_M32R_HI16_ULO_RELA","","High 16 bit with unsigned low",null,null],[17,"R_M32R_HI16_SLO_RELA","","High 16 bit with signed low",null,null],[17,"R_M32R_LO16_RELA","","Low 16 bit",null,null],[17,"R_M32R_SDA16_RELA","","16 bit offset in SDA",null,null],[17,"R_M32R_RELA_GNU_VTINHERIT","","",null,null],[17,"R_M32R_RELA_GNU_VTENTRY","","",null,null],[17,"R_M32R_REL32","","PC relative 32 bit.",null,null],[17,"R_M32R_GOT24","","24 bit GOT entry",null,null],[17,"R_M32R_26_PLTREL","","26 bit PC relative to PLT shifted",null,null],[17,"R_M32R_COPY","","Copy symbol at runtime",null,null],[17,"R_M32R_GLOB_DAT","","Create GOT entry",null,null],[17,"R_M32R_JMP_SLOT","","Create PLT entry",null,null],[17,"R_M32R_RELATIVE","","Adjust by program base",null,null],[17,"R_M32R_GOTOFF","","24 bit offset to GOT",null,null],[17,"R_M32R_GOTPC24","","24 bit PC relative offset to GOT",null,null],[17,"R_M32R_GOT16_HI_ULO","","High 16 bit GOT entry with unsigned low",null,null],[17,"R_M32R_GOT16_HI_SLO","","High 16 bit GOT entry with signed low",null,null],[17,"R_M32R_GOT16_LO","","Low 16 bit GOT entry",null,null],[17,"R_M32R_GOTPC_HI_ULO","","High 16 bit PC relative offset to GOT with unsigned low",null,null],[17,"R_M32R_GOTPC_HI_SLO","","High 16 bit PC relative offset to GOT with signed low",null,null],[17,"R_M32R_GOTPC_LO","","Low 16 bit PC relative offset to GOT",null,null],[17,"R_M32R_GOTOFF_HI_ULO","","High 16 bit offset to GOT with unsigned low",null,null],[17,"R_M32R_GOTOFF_HI_SLO","","High 16 bit offset to GOT with signed low",null,null],[17,"R_M32R_GOTOFF_LO","","Low 16 bit offset to GOT",null,null],[17,"R_M32R_NUM","","Keep this the last entry.",null,null],[17,"R_MICROBLAZE_NONE","","No reloc.",null,null],[17,"R_MICROBLAZE_32","","Direct 32 bit.",null,null],[17,"R_MICROBLAZE_32_PCREL","","PC relative 32 bit.",null,null],[17,"R_MICROBLAZE_64_PCREL","","PC relative 64 bit.",null,null],[17,"R_MICROBLAZE_32_PCREL_LO","","Low 16 bits of PCREL32.",null,null],[17,"R_MICROBLAZE_64","","Direct 64 bit.",null,null],[17,"R_MICROBLAZE_32_LO","","Low 16 bit.",null,null],[17,"R_MICROBLAZE_SRO32","","Read-only small data area.",null,null],[17,"R_MICROBLAZE_SRW32","","Read-write small data area.",null,null],[17,"R_MICROBLAZE_64_NONE","","No reloc.",null,null],[17,"R_MICROBLAZE_32_SYM_OP_SYM","","Symbol Op Symbol relocation.",null,null],[17,"R_MICROBLAZE_GNU_VTINHERIT","","GNU C++ vtable hierarchy.",null,null],[17,"R_MICROBLAZE_GNU_VTENTRY","","GNU C++ vtable member usage.",null,null],[17,"R_MICROBLAZE_GOTPC_64","","PC-relative GOT offset.",null,null],[17,"R_MICROBLAZE_GOT_64","","GOT entry offset.",null,null],[17,"R_MICROBLAZE_PLT_64","","PLT offset (PC-relative).",null,null],[17,"R_MICROBLAZE_REL","","Adjust by program base.",null,null],[17,"R_MICROBLAZE_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_MICROBLAZE_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_MICROBLAZE_GOTOFF_64","","64 bit offset to GOT.",null,null],[17,"R_MICROBLAZE_GOTOFF_32","","32 bit offset to GOT.",null,null],[17,"R_MICROBLAZE_COPY","","Runtime copy.",null,null],[17,"R_MICROBLAZE_TLS","","TLS Reloc.",null,null],[17,"R_MICROBLAZE_TLSGD","","TLS General Dynamic.",null,null],[17,"R_MICROBLAZE_TLSLD","","TLS Local Dynamic.",null,null],[17,"R_MICROBLAZE_TLSDTPMOD32","","TLS Module ID.",null,null],[17,"R_MICROBLAZE_TLSDTPREL32","","TLS Offset Within TLS Block.",null,null],[17,"R_MICROBLAZE_TLSDTPREL64","","TLS Offset Within TLS Block.",null,null],[17,"R_MICROBLAZE_TLSGOTTPREL32","","TLS Offset From Thread Pointer.",null,null],[17,"R_MICROBLAZE_TLSTPREL32","","TLS Offset From Thread Pointer.",null,null],[17,"DT_NIOS2_GP","","Address of _gp.",null,null],[17,"R_NIOS2_NONE","","No reloc.",null,null],[17,"R_NIOS2_S16","","Direct signed 16 bit.",null,null],[17,"R_NIOS2_U16","","Direct unsigned 16 bit.",null,null],[17,"R_NIOS2_PCREL16","","PC relative 16 bit.",null,null],[17,"R_NIOS2_CALL26","","Direct call.",null,null],[17,"R_NIOS2_IMM5","","5 bit constant expression.",null,null],[17,"R_NIOS2_CACHE_OPX","","5 bit expression, shift 22.",null,null],[17,"R_NIOS2_IMM6","","6 bit constant expression.",null,null],[17,"R_NIOS2_IMM8","","8 bit constant expression.",null,null],[17,"R_NIOS2_HI16","","High 16 bit.",null,null],[17,"R_NIOS2_LO16","","Low 16 bit.",null,null],[17,"R_NIOS2_HIADJ16","","High 16 bit, adjusted.",null,null],[17,"R_NIOS2_BFD_RELOC_32","","32 bit symbol value + addend.",null,null],[17,"R_NIOS2_BFD_RELOC_16","","16 bit symbol value + addend.",null,null],[17,"R_NIOS2_BFD_RELOC_8","","8 bit symbol value + addend.",null,null],[17,"R_NIOS2_GPREL","","16 bit GP pointer offset.",null,null],[17,"R_NIOS2_GNU_VTINHERIT","","GNU C++ vtable hierarchy.",null,null],[17,"R_NIOS2_GNU_VTENTRY","","GNU C++ vtable member usage.",null,null],[17,"R_NIOS2_UJMP","","Unconditional branch.",null,null],[17,"R_NIOS2_CJMP","","Conditional branch.",null,null],[17,"R_NIOS2_CALLR","","Indirect call through register.",null,null],[17,"R_NIOS2_ALIGN","","Alignment requirement for linker relaxation.",null,null],[17,"R_NIOS2_GOT16","","16 bit GOT entry.",null,null],[17,"R_NIOS2_CALL16","","16 bit GOT entry for function.",null,null],[17,"R_NIOS2_GOTOFF_LO","","%lo of offset to GOT pointer.",null,null],[17,"R_NIOS2_GOTOFF_HA","","%hiadj of offset to GOT pointer.",null,null],[17,"R_NIOS2_PCREL_LO","","%lo of PC relative offset.",null,null],[17,"R_NIOS2_PCREL_HA","","%hiadj of PC relative offset.",null,null],[17,"R_NIOS2_TLS_GD16","","16 bit GOT offset for TLS GD.",null,null],[17,"R_NIOS2_TLS_LDM16","","16 bit GOT offset for TLS LDM.",null,null],[17,"R_NIOS2_TLS_LDO16","","16 bit module relative offset.",null,null],[17,"R_NIOS2_TLS_IE16","","16 bit GOT offset for TLS IE.",null,null],[17,"R_NIOS2_TLS_LE16","","16 bit LE TP-relative offset.",null,null],[17,"R_NIOS2_TLS_DTPMOD","","Module number.",null,null],[17,"R_NIOS2_TLS_DTPREL","","Module-relative offset.",null,null],[17,"R_NIOS2_TLS_TPREL","","TP-relative offset.",null,null],[17,"R_NIOS2_COPY","","Copy symbol at runtime.",null,null],[17,"R_NIOS2_GLOB_DAT","","Create GOT entry.",null,null],[17,"R_NIOS2_JUMP_SLOT","","Create PLT entry.",null,null],[17,"R_NIOS2_RELATIVE","","Adjust by program base.",null,null],[17,"R_NIOS2_GOTOFF","","16 bit offset to GOT pointer.",null,null],[17,"R_NIOS2_CALL26_NOAT","","Direct call in .noat section.",null,null],[17,"R_NIOS2_GOT_LO","","%lo() of GOT entry.",null,null],[17,"R_NIOS2_GOT_HA","","%hiadj() of GOT entry.",null,null],[17,"R_NIOS2_CALL_LO","","%lo() of function GOT entry.",null,null],[17,"R_NIOS2_CALL_HA","","%hiadj() of function GOT entry.",null,null],[17,"R_TILEPRO_NONE","","No reloc",null,null],[17,"R_TILEPRO_32","","Direct 32 bit",null,null],[17,"R_TILEPRO_16","","Direct 16 bit",null,null],[17,"R_TILEPRO_8","","Direct 8 bit",null,null],[17,"R_TILEPRO_32_PCREL","","PC relative 32 bit",null,null],[17,"R_TILEPRO_16_PCREL","","PC relative 16 bit",null,null],[17,"R_TILEPRO_8_PCREL","","PC relative 8 bit",null,null],[17,"R_TILEPRO_LO16","","Low 16 bit",null,null],[17,"R_TILEPRO_HI16","","High 16 bit",null,null],[17,"R_TILEPRO_HA16","","High 16 bit, adjusted",null,null],[17,"R_TILEPRO_COPY","","Copy relocation",null,null],[17,"R_TILEPRO_GLOB_DAT","","Create GOT entry",null,null],[17,"R_TILEPRO_JMP_SLOT","","Create PLT entry",null,null],[17,"R_TILEPRO_RELATIVE","","Adjust by program base",null,null],[17,"R_TILEPRO_BROFF_X1","","X1 pipe branch offset",null,null],[17,"R_TILEPRO_JOFFLONG_X1","","X1 pipe jump offset",null,null],[17,"R_TILEPRO_JOFFLONG_X1_PLT","","X1 pipe jump offset to PLT",null,null],[17,"R_TILEPRO_IMM8_X0","","X0 pipe 8-bit",null,null],[17,"R_TILEPRO_IMM8_Y0","","Y0 pipe 8-bit",null,null],[17,"R_TILEPRO_IMM8_X1","","X1 pipe 8-bit",null,null],[17,"R_TILEPRO_IMM8_Y1","","Y1 pipe 8-bit",null,null],[17,"R_TILEPRO_MT_IMM15_X1","","X1 pipe mtspr",null,null],[17,"R_TILEPRO_MF_IMM15_X1","","X1 pipe mfspr",null,null],[17,"R_TILEPRO_IMM16_X0","","X0 pipe 16-bit",null,null],[17,"R_TILEPRO_IMM16_X1","","X1 pipe 16-bit",null,null],[17,"R_TILEPRO_IMM16_X0_LO","","X0 pipe low 16-bit",null,null],[17,"R_TILEPRO_IMM16_X1_LO","","X1 pipe low 16-bit",null,null],[17,"R_TILEPRO_IMM16_X0_HI","","X0 pipe high 16-bit",null,null],[17,"R_TILEPRO_IMM16_X1_HI","","X1 pipe high 16-bit",null,null],[17,"R_TILEPRO_IMM16_X0_HA","","X0 pipe high 16-bit, adjusted",null,null],[17,"R_TILEPRO_IMM16_X1_HA","","X1 pipe high 16-bit, adjusted",null,null],[17,"R_TILEPRO_IMM16_X0_PCREL","","X0 pipe PC relative 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_PCREL","","X1 pipe PC relative 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_LO_PCREL","","X0 pipe PC relative low 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_LO_PCREL","","X1 pipe PC relative low 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_HI_PCREL","","X0 pipe PC relative high 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_HI_PCREL","","X1 pipe PC relative high 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_HA_PCREL","","X0 pipe PC relative ha() 16 bit",null,null],[17,"R_TILEPRO_IMM16_X1_HA_PCREL","","X1 pipe PC relative ha() 16 bit",null,null],[17,"R_TILEPRO_IMM16_X0_GOT","","X0 pipe 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT","","X1 pipe 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X0_GOT_LO","","X0 pipe low 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT_LO","","X1 pipe low 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X0_GOT_HI","","X0 pipe high 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT_HI","","X1 pipe high 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X0_GOT_HA","","X0 pipe ha() 16-bit GOT offset",null,null],[17,"R_TILEPRO_IMM16_X1_GOT_HA","","X1 pipe ha() 16-bit GOT offset",null,null],[17,"R_TILEPRO_MMSTART_X0","","X0 pipe mm \\\"start\\\"",null,null],[17,"R_TILEPRO_MMEND_X0","","X0 pipe mm \\\"end\\\"",null,null],[17,"R_TILEPRO_MMSTART_X1","","X1 pipe mm \\\"start\\\"",null,null],[17,"R_TILEPRO_MMEND_X1","","X1 pipe mm \\\"end\\\"",null,null],[17,"R_TILEPRO_SHAMT_X0","","X0 pipe shift amount",null,null],[17,"R_TILEPRO_SHAMT_X1","","X1 pipe shift amount",null,null],[17,"R_TILEPRO_SHAMT_Y0","","Y0 pipe shift amount",null,null],[17,"R_TILEPRO_SHAMT_Y1","","Y1 pipe shift amount",null,null],[17,"R_TILEPRO_DEST_IMM8_X1","","X1 pipe destination 8-bit",null,null],[17,"R_TILEPRO_TLS_GD_CALL","","\\\"jal\\\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_X0_TLS_GD_ADD","","X0 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_X1_TLS_GD_ADD","","X1 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_Y0_TLS_GD_ADD","","Y0 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEPRO_IMM8_Y1_TLS_GD_ADD","","Y1 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEPRO_TLS_IE_LOAD","","\\\"lw_tls\\\" for TLS IE",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD","","X0 pipe 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD","","X1 pipe 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD_LO","","X0 pipe low 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD_LO","","X1 pipe low 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD_HI","","X0 pipe high 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD_HI","","X1 pipe high 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_GD_HA","","X0 pipe ha() 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_GD_HA","","X1 pipe ha() 16-bit TLS GD offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE","","X0 pipe 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE","","X1 pipe 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE_LO","","X0 pipe low 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE_LO","","X1 pipe low 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE_HI","","X0 pipe high 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE_HI","","X1 pipe high 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_IE_HA","","X0 pipe ha() 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_IE_HA","","X1 pipe ha() 16-bit TLS IE offset",null,null],[17,"R_TILEPRO_TLS_DTPMOD32","","ID of module containing symbol",null,null],[17,"R_TILEPRO_TLS_DTPOFF32","","Offset in TLS block",null,null],[17,"R_TILEPRO_TLS_TPOFF32","","Offset in static TLS block",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE","","X0 pipe 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE","","X1 pipe 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE_LO","","X0 pipe low 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE_LO","","X1 pipe low 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE_HI","","X0 pipe high 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE_HI","","X1 pipe high 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X0_TLS_LE_HA","","X0 pipe ha() 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_IMM16_X1_TLS_LE_HA","","X1 pipe ha() 16-bit TLS LE offset",null,null],[17,"R_TILEPRO_GNU_VTINHERIT","","GNU C++ vtable hierarchy",null,null],[17,"R_TILEPRO_GNU_VTENTRY","","GNU C++ vtable member usage",null,null],[17,"R_TILEGX_NONE","","No reloc",null,null],[17,"R_TILEGX_64","","Direct 64 bit",null,null],[17,"R_TILEGX_32","","Direct 32 bit",null,null],[17,"R_TILEGX_16","","Direct 16 bit",null,null],[17,"R_TILEGX_8","","Direct 8 bit",null,null],[17,"R_TILEGX_64_PCREL","","PC relative 64 bit",null,null],[17,"R_TILEGX_32_PCREL","","PC relative 32 bit",null,null],[17,"R_TILEGX_16_PCREL","","PC relative 16 bit",null,null],[17,"R_TILEGX_8_PCREL","","PC relative 8 bit",null,null],[17,"R_TILEGX_HW0","","hword 0 16-bit",null,null],[17,"R_TILEGX_HW1","","hword 1 16-bit",null,null],[17,"R_TILEGX_HW2","","hword 2 16-bit",null,null],[17,"R_TILEGX_HW3","","hword 3 16-bit",null,null],[17,"R_TILEGX_HW0_LAST","","last hword 0 16-bit",null,null],[17,"R_TILEGX_HW1_LAST","","last hword 1 16-bit",null,null],[17,"R_TILEGX_HW2_LAST","","last hword 2 16-bit",null,null],[17,"R_TILEGX_COPY","","Copy relocation",null,null],[17,"R_TILEGX_GLOB_DAT","","Create GOT entry",null,null],[17,"R_TILEGX_JMP_SLOT","","Create PLT entry",null,null],[17,"R_TILEGX_RELATIVE","","Adjust by program base",null,null],[17,"R_TILEGX_BROFF_X1","","X1 pipe branch offset",null,null],[17,"R_TILEGX_JUMPOFF_X1","","X1 pipe jump offset",null,null],[17,"R_TILEGX_JUMPOFF_X1_PLT","","X1 pipe jump offset to PLT",null,null],[17,"R_TILEGX_IMM8_X0","","X0 pipe 8-bit",null,null],[17,"R_TILEGX_IMM8_Y0","","Y0 pipe 8-bit",null,null],[17,"R_TILEGX_IMM8_X1","","X1 pipe 8-bit",null,null],[17,"R_TILEGX_IMM8_Y1","","Y1 pipe 8-bit",null,null],[17,"R_TILEGX_DEST_IMM8_X1","","X1 pipe destination 8-bit",null,null],[17,"R_TILEGX_MT_IMM14_X1","","X1 pipe mtspr",null,null],[17,"R_TILEGX_MF_IMM14_X1","","X1 pipe mfspr",null,null],[17,"R_TILEGX_MMSTART_X0","","X0 pipe mm \\\"start\\\"",null,null],[17,"R_TILEGX_MMEND_X0","","X0 pipe mm \\\"end\\\"",null,null],[17,"R_TILEGX_SHAMT_X0","","X0 pipe shift amount",null,null],[17,"R_TILEGX_SHAMT_X1","","X1 pipe shift amount",null,null],[17,"R_TILEGX_SHAMT_Y0","","Y0 pipe shift amount",null,null],[17,"R_TILEGX_SHAMT_Y1","","Y1 pipe shift amount",null,null],[17,"R_TILEGX_IMM16_X0_HW0","","X0 pipe hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0","","X1 pipe hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1","","X0 pipe hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1","","X1 pipe hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2","","X0 pipe hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2","","X1 pipe hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW3","","X0 pipe hword 3",null,null],[17,"R_TILEGX_IMM16_X1_HW3","","X1 pipe hword 3",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST","","X0 pipe last hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST","","X1 pipe last hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST","","X0 pipe last hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST","","X1 pipe last hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_LAST","","X0 pipe last hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_LAST","","X1 pipe last hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_PCREL","","X0 pipe PC relative hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_PCREL","","X1 pipe PC relative hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_PCREL","","X0 pipe PC relative hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_PCREL","","X1 pipe PC relative hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_PCREL","","X0 pipe PC relative hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_PCREL","","X1 pipe PC relative hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW3_PCREL","","X0 pipe PC relative hword 3",null,null],[17,"R_TILEGX_IMM16_X1_HW3_PCREL","","X1 pipe PC relative hword 3",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_PCREL","","X0 pipe PC-rel last hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_PCREL","","X1 pipe PC-rel last hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_PCREL","","X0 pipe PC-rel last hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_PCREL","","X1 pipe PC-rel last hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_LAST_PCREL","","X0 pipe PC-rel last hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_LAST_PCREL","","X1 pipe PC-rel last hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_GOT","","X0 pipe hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_GOT","","X1 pipe hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_PLT_PCREL","","X0 pipe PC-rel PLT hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_PLT_PCREL","","X1 pipe PC-rel PLT hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_PLT_PCREL","","X0 pipe PC-rel PLT hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_PLT_PCREL","","X1 pipe PC-rel PLT hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_PLT_PCREL","","X0 pipe PC-rel PLT hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_PLT_PCREL","","X1 pipe PC-rel PLT hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_GOT","","X0 pipe last hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_GOT","","X1 pipe last hword 0 GOT offset",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_GOT","","X0 pipe last hword 1 GOT offset",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_GOT","","X1 pipe last hword 1 GOT offset",null,null],[17,"R_TILEGX_IMM16_X0_HW3_PLT_PCREL","","X0 pipe PC-rel PLT hword 3",null,null],[17,"R_TILEGX_IMM16_X1_HW3_PLT_PCREL","","X1 pipe PC-rel PLT hword 3",null,null],[17,"R_TILEGX_IMM16_X0_HW0_TLS_GD","","X0 pipe hword 0 TLS GD offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_TLS_GD","","X1 pipe hword 0 TLS GD offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_TLS_LE","","X0 pipe hword 0 TLS LE offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_TLS_LE","","X1 pipe hword 0 TLS LE offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE","","X0 pipe last hword 0 LE off",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE","","X1 pipe last hword 0 LE off",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE","","X0 pipe last hword 1 LE off",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE","","X1 pipe last hword 1 LE off",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD","","X0 pipe last hword 0 GD off",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD","","X1 pipe last hword 0 GD off",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD","","X0 pipe last hword 1 GD off",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD","","X1 pipe last hword 1 GD off",null,null],[17,"R_TILEGX_IMM16_X0_HW0_TLS_IE","","X0 pipe hword 0 TLS IE offset",null,null],[17,"R_TILEGX_IMM16_X1_HW0_TLS_IE","","X1 pipe hword 0 TLS IE offset",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL","","X0 pipe PC-rel PLT last hword 0",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL","","X1 pipe PC-rel PLT last hword 0",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL","","X0 pipe PC-rel PLT last hword 1",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL","","X1 pipe PC-rel PLT last hword 1",null,null],[17,"R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL","","X0 pipe PC-rel PLT last hword 2",null,null],[17,"R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL","","X1 pipe PC-rel PLT last hword 2",null,null],[17,"R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE","","X0 pipe last hword 0 IE off",null,null],[17,"R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE","","X1 pipe last hword 0 IE off",null,null],[17,"R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE","","X0 pipe last hword 1 IE off",null,null],[17,"R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE","","X1 pipe last hword 1 IE off",null,null],[17,"R_TILEGX_TLS_DTPMOD64","","64-bit ID of symbol\'s module",null,null],[17,"R_TILEGX_TLS_DTPOFF64","","64-bit offset in TLS block",null,null],[17,"R_TILEGX_TLS_TPOFF64","","64-bit offset in static TLS block",null,null],[17,"R_TILEGX_TLS_DTPMOD32","","32-bit ID of symbol\'s module",null,null],[17,"R_TILEGX_TLS_DTPOFF32","","32-bit offset in TLS block",null,null],[17,"R_TILEGX_TLS_TPOFF32","","32-bit offset in static TLS block",null,null],[17,"R_TILEGX_TLS_GD_CALL","","\\\"jal\\\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_X0_TLS_GD_ADD","","X0 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_X1_TLS_GD_ADD","","X1 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_Y0_TLS_GD_ADD","","Y0 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEGX_IMM8_Y1_TLS_GD_ADD","","Y1 pipe \\\"addi\\\" for TLS GD",null,null],[17,"R_TILEGX_TLS_IE_LOAD","","\\\"ld_tls\\\" for TLS IE",null,null],[17,"R_TILEGX_IMM8_X0_TLS_ADD","","X0 pipe \\\"addi\\\" for TLS GD/IE",null,null],[17,"R_TILEGX_IMM8_X1_TLS_ADD","","X1 pipe \\\"addi\\\" for TLS GD/IE",null,null],[17,"R_TILEGX_IMM8_Y0_TLS_ADD","","Y0 pipe \\\"addi\\\" for TLS GD/IE",null,null],[17,"R_TILEGX_IMM8_Y1_TLS_ADD","","Y1 pipe \\\"addi\\\" for TLS GD/IE",null,null],[17,"R_TILEGX_GNU_VTINHERIT","","GNU C++ vtable hierarchy",null,null],[17,"R_TILEGX_GNU_VTENTRY","","GNU C++ vtable member usage",null,null],[17,"EF_RISCV_RVC","","",null,null],[17,"EF_RISCV_FLOAT_ABI","","",null,null],[17,"EF_RISCV_FLOAT_ABI_SOFT","","",null,null],[17,"EF_RISCV_FLOAT_ABI_SINGLE","","",null,null],[17,"EF_RISCV_FLOAT_ABI_DOUBLE","","",null,null],[17,"EF_RISCV_FLOAT_ABI_QUAD","","",null,null],[17,"R_RISCV_NONE","","",null,null],[17,"R_RISCV_32","","",null,null],[17,"R_RISCV_64","","",null,null],[17,"R_RISCV_RELATIVE","","",null,null],[17,"R_RISCV_COPY","","",null,null],[17,"R_RISCV_JUMP_SLOT","","",null,null],[17,"R_RISCV_TLS_DTPMOD32","","",null,null],[17,"R_RISCV_TLS_DTPMOD64","","",null,null],[17,"R_RISCV_TLS_DTPREL32","","",null,null],[17,"R_RISCV_TLS_DTPREL64","","",null,null],[17,"R_RISCV_TLS_TPREL32","","",null,null],[17,"R_RISCV_TLS_TPREL64","","",null,null],[17,"R_RISCV_BRANCH","","",null,null],[17,"R_RISCV_JAL","","",null,null],[17,"R_RISCV_CALL","","",null,null],[17,"R_RISCV_CALL_PLT","","",null,null],[17,"R_RISCV_GOT_HI20","","",null,null],[17,"R_RISCV_TLS_GOT_HI20","","",null,null],[17,"R_RISCV_TLS_GD_HI20","","",null,null],[17,"R_RISCV_PCREL_HI20","","",null,null],[17,"R_RISCV_PCREL_LO12_I","","",null,null],[17,"R_RISCV_PCREL_LO12_S","","",null,null],[17,"R_RISCV_HI20","","",null,null],[17,"R_RISCV_LO12_I","","",null,null],[17,"R_RISCV_LO12_S","","",null,null],[17,"R_RISCV_TPREL_HI20","","",null,null],[17,"R_RISCV_TPREL_LO12_I","","",null,null],[17,"R_RISCV_TPREL_LO12_S","","",null,null],[17,"R_RISCV_TPREL_ADD","","",null,null],[17,"R_RISCV_ADD8","","",null,null],[17,"R_RISCV_ADD16","","",null,null],[17,"R_RISCV_ADD32","","",null,null],[17,"R_RISCV_ADD64","","",null,null],[17,"R_RISCV_SUB8","","",null,null],[17,"R_RISCV_SUB16","","",null,null],[17,"R_RISCV_SUB32","","",null,null],[17,"R_RISCV_SUB64","","",null,null],[17,"R_RISCV_GNU_VTINHERIT","","",null,null],[17,"R_RISCV_GNU_VTENTRY","","",null,null],[17,"R_RISCV_ALIGN","","",null,null],[17,"R_RISCV_RVC_BRANCH","","",null,null],[17,"R_RISCV_RVC_JUMP","","",null,null],[17,"R_RISCV_RVC_LUI","","",null,null],[17,"R_RISCV_GPREL_I","","",null,null],[17,"R_RISCV_GPREL_S","","",null,null],[17,"R_RISCV_TPREL_I","","",null,null],[17,"R_RISCV_TPREL_S","","",null,null],[17,"R_RISCV_RELAX","","",null,null],[17,"R_RISCV_SUB6","","",null,null],[17,"R_RISCV_SET6","","",null,null],[17,"R_RISCV_SET8","","",null,null],[17,"R_RISCV_SET16","","",null,null],[17,"R_RISCV_SET32","","",null,null],[17,"R_RISCV_32_PCREL","","",null,null],[17,"R_BPF_NONE","","No reloc",null,null],[17,"R_BPF_64_64","","",null,null],[17,"R_BPF_64_32","","",null,null],[17,"R_METAG_HIADDR16","","",null,null],[17,"R_METAG_LOADDR16","","",null,null],[17,"R_METAG_ADDR32","","32bit absolute address",null,null],[17,"R_METAG_NONE","","No reloc",null,null],[17,"R_METAG_RELBRANCH","","",null,null],[17,"R_METAG_GETSETOFF","","",null,null],[17,"R_METAG_REG32OP1","","",null,null],[17,"R_METAG_REG32OP2","","",null,null],[17,"R_METAG_REG32OP3","","",null,null],[17,"R_METAG_REG16OP1","","",null,null],[17,"R_METAG_REG16OP2","","",null,null],[17,"R_METAG_REG16OP3","","",null,null],[17,"R_METAG_REG32OP4","","",null,null],[17,"R_METAG_HIOG","","",null,null],[17,"R_METAG_LOOG","","",null,null],[17,"R_METAG_REL8","","",null,null],[17,"R_METAG_REL16","","",null,null],[17,"R_METAG_GNU_VTINHERIT","","",null,null],[17,"R_METAG_GNU_VTENTRY","","",null,null],[17,"R_METAG_HI16_GOTOFF","","",null,null],[17,"R_METAG_LO16_GOTOFF","","",null,null],[17,"R_METAG_GETSET_GOTOFF","","",null,null],[17,"R_METAG_GETSET_GOT","","",null,null],[17,"R_METAG_HI16_GOTPC","","",null,null],[17,"R_METAG_LO16_GOTPC","","",null,null],[17,"R_METAG_HI16_PLT","","",null,null],[17,"R_METAG_LO16_PLT","","",null,null],[17,"R_METAG_RELBRANCH_PLT","","",null,null],[17,"R_METAG_GOTOFF","","",null,null],[17,"R_METAG_PLT","","",null,null],[17,"R_METAG_COPY","","",null,null],[17,"R_METAG_JMP_SLOT","","",null,null],[17,"R_METAG_RELATIVE","","",null,null],[17,"R_METAG_GLOB_DAT","","",null,null],[17,"R_METAG_TLS_GD","","",null,null],[17,"R_METAG_TLS_LDM","","",null,null],[17,"R_METAG_TLS_LDO_HI16","","",null,null],[17,"R_METAG_TLS_LDO_LO16","","",null,null],[17,"R_METAG_TLS_LDO","","",null,null],[17,"R_METAG_TLS_IE","","",null,null],[17,"R_METAG_TLS_IENONPIC","","",null,null],[17,"R_METAG_TLS_IENONPIC_HI16","","",null,null],[17,"R_METAG_TLS_IENONPIC_LO16","","",null,null],[17,"R_METAG_TLS_TPOFF","","",null,null],[17,"R_METAG_TLS_DTPMOD","","",null,null],[17,"R_METAG_TLS_DTPOFF","","",null,null],[17,"R_METAG_TLS_LE","","",null,null],[17,"R_METAG_TLS_LE_HI16","","",null,null],[17,"R_METAG_TLS_LE_LO16","","",null,null],[17,"R_NDS32_NONE","","",null,null],[17,"R_NDS32_32_RELA","","",null,null],[17,"R_NDS32_COPY","","",null,null],[17,"R_NDS32_GLOB_DAT","","",null,null],[17,"R_NDS32_JMP_SLOT","","",null,null],[17,"R_NDS32_RELATIVE","","",null,null],[17,"R_NDS32_TLS_TPOFF","","",null,null],[17,"R_NDS32_TLS_DESC","","",null,null],[11,"st_bind","","Get the `st_bind` component of the `st_info` field.",125,[[]]],[11,"st_type","","Get the `st_type` component of the `st_info` field.",125,[[]]],[11,"set_st_info","","Set the `st_info` field given the `st_bind` and `st_type`…",125,[[]]],[11,"st_visibility","","Get the `st_visibility` component of the `st_info` field.",125,[[]]],[11,"st_bind","","Get the `st_bind` component of the `st_info` field.",126,[[]]],[11,"st_type","","Get the `st_type` component of the `st_info` field.",126,[[]]],[11,"set_st_info","","Set the `st_info` field given the `st_bind` and `st_type`…",126,[[]]],[11,"st_visibility","","Get the `st_visibility` component of the `st_info` field.",126,[[]]],[11,"r_sym","","Get the `r_sym` component of the `r_info` field.",129,[[]]],[11,"r_type","","Get the `r_type` component of the `r_info` field.",129,[[]]],[11,"r_info","","Calculate the `r_info` field given the `r_sym` and…",129,[[],["u32",6]]],[11,"set_r_info","","Set the `r_info` field given the `r_sym` and `r_type`…",129,[[]]],[11,"r_sym","","Get the `r_sym` component of the `r_info` field.",130,[[]]],[11,"r_type","","Get the `r_type` component of the `r_info` field.",130,[[]]],[11,"r_info","","Calculate the `r_info` field given the `r_sym` and…",130,[[],["u32",6]]],[11,"set_r_info","","Set the `r_info` field given the `r_sym` and `r_type`…",130,[[]]],[11,"r_sym","","Get the `r_sym` component of the `r_info` field.",131,[[]]],[11,"r_type","","Get the `r_type` component of the `r_info` field.",131,[[]]],[11,"r_info","","Calculate the `r_info` field given the `r_sym` and…",131,[[],["u64",6]]],[11,"set_r_info","","Set the `r_info` field given the `r_sym` and `r_type`…",131,[[]]],[11,"r_sym","","Get the `r_sym` component of the `r_info` field.",132,[[]]],[11,"r_type","","Get the `r_type` component of the `r_info` field.",132,[[]]],[11,"r_info","","Calculate the `r_info` field given the `r_sym` and…",132,[[],["u64",6]]],[11,"set_r_info","","Set the `r_info` field given the `r_sym` and `r_type`…",132,[[]]],[0,"macho","object","Mach-O definitions.",null,null],[3,"DyldCacheHeader","object::macho","The dyld cache header, containing only the fields which…",null,null],[12,"magic","","e.g. \\\"dyld_v0    i386\\\"",146,null],[12,"mapping_offset","","file offset to first dyld_cache_mapping_info",146,null],[12,"mapping_count","","number of dyld_cache_mapping_info entries",146,null],[12,"images_offset","","file offset to first dyld_cache_image_info",146,null],[12,"images_count","","number of dyld_cache_image_info entries",146,null],[12,"dyld_base_address","","base address of dyld when cache was built",146,null],[3,"DyldCacheMappingInfo","","Corresponds to struct dyld_cache_mapping_info from…",null,null],[12,"address","","",147,null],[12,"size","","",147,null],[12,"file_offset","","",147,null],[12,"max_prot","","",147,null],[12,"init_prot","","",147,null],[3,"DyldCacheImageInfo","","Corresponds to struct dyld_cache_image_info from…",null,null],[12,"address","","",148,null],[12,"mod_time","","",148,null],[12,"inode","","",148,null],[12,"path_file_offset","","",148,null],[12,"pad","","",148,null],[3,"FatHeader","","",null,null],[12,"magic","","FAT_MAGIC or FAT_MAGIC_64",149,null],[12,"nfat_arch","","number of structs that follow",149,null],[3,"FatArch32","","",null,null],[12,"cputype","","cpu specifier (int)",150,null],[12,"cpusubtype","","machine specifier (int)",150,null],[12,"offset","","file offset to this object file",150,null],[12,"size","","size of this object file",150,null],[12,"align","","alignment as a power of 2",150,null],[3,"FatArch64","","",null,null],[12,"cputype","","cpu specifier (int)",151,null],[12,"cpusubtype","","machine specifier (int)",151,null],[12,"offset","","file offset to this object file",151,null],[12,"size","","size of this object file",151,null],[12,"align","","alignment as a power of 2",151,null],[12,"reserved","","reserved",151,null],[3,"MachHeader32","","The 32-bit mach header.",null,null],[12,"magic","","mach magic number identifier",152,null],[12,"cputype","","cpu specifier",152,null],[12,"cpusubtype","","machine specifier",152,null],[12,"filetype","","type of file",152,null],[12,"ncmds","","number of load commands",152,null],[12,"sizeofcmds","","the size of all the load commands",152,null],[12,"flags","","flags",152,null],[3,"MachHeader64","","The 64-bit mach header.",null,null],[12,"magic","","mach magic number identifier",153,null],[12,"cputype","","cpu specifier",153,null],[12,"cpusubtype","","machine specifier",153,null],[12,"filetype","","type of file",153,null],[12,"ncmds","","number of load commands",153,null],[12,"sizeofcmds","","the size of all the load commands",153,null],[12,"flags","","flags",153,null],[12,"reserved","","reserved",153,null],[3,"LoadCommand","","Common fields at the start of every load command.",null,null],[12,"cmd","","Type of load command.",154,null],[12,"cmdsize","","Total size of command in bytes.",154,null],[3,"LcStr","","A variable length string in a load command.",null,null],[12,"offset","","offset to the string",155,null],[3,"SegmentCommand32","","32-bit segment load command.",null,null],[12,"cmd","","LC_SEGMENT",156,null],[12,"cmdsize","","includes sizeof section structs",156,null],[12,"segname","","segment name",156,null],[12,"vmaddr","","memory address of this segment",156,null],[12,"vmsize","","memory size of this segment",156,null],[12,"fileoff","","file offset of this segment",156,null],[12,"filesize","","amount to map from the file",156,null],[12,"maxprot","","maximum VM protection",156,null],[12,"initprot","","initial VM protection",156,null],[12,"nsects","","number of sections in segment",156,null],[12,"flags","","flags",156,null],[3,"SegmentCommand64","","64-bit segment load command.",null,null],[12,"cmd","","LC_SEGMENT_64",157,null],[12,"cmdsize","","includes sizeof section_64 structs",157,null],[12,"segname","","segment name",157,null],[12,"vmaddr","","memory address of this segment",157,null],[12,"vmsize","","memory size of this segment",157,null],[12,"fileoff","","file offset of this segment",157,null],[12,"filesize","","amount to map from the file",157,null],[12,"maxprot","","maximum VM protection",157,null],[12,"initprot","","initial VM protection",157,null],[12,"nsects","","number of sections in segment",157,null],[12,"flags","","flags",157,null],[3,"Section32","","32-bit section.",null,null],[12,"sectname","","name of this section",158,null],[12,"segname","","segment this section goes in",158,null],[12,"addr","","memory address of this section",158,null],[12,"size","","size in bytes of this section",158,null],[12,"offset","","file offset of this section",158,null],[12,"align","","section alignment (power of 2)",158,null],[12,"reloff","","file offset of relocation entries",158,null],[12,"nreloc","","number of relocation entries",158,null],[12,"flags","","flags (section type and attributes)",158,null],[12,"reserved1","","reserved (for offset or index)",158,null],[12,"reserved2","","reserved (for count or sizeof)",158,null],[3,"Section64","","64-bit section.",null,null],[12,"sectname","","name of this section",159,null],[12,"segname","","segment this section goes in",159,null],[12,"addr","","memory address of this section",159,null],[12,"size","","size in bytes of this section",159,null],[12,"offset","","file offset of this section",159,null],[12,"align","","section alignment (power of 2)",159,null],[12,"reloff","","file offset of relocation entries",159,null],[12,"nreloc","","number of relocation entries",159,null],[12,"flags","","flags (section type and attributes)",159,null],[12,"reserved1","","reserved (for offset or index)",159,null],[12,"reserved2","","reserved (for count or sizeof)",159,null],[12,"reserved3","","reserved",159,null],[3,"Fvmlib","","",null,null],[12,"name","","library\'s target pathname",160,null],[12,"minor_version","","library\'s minor version number",160,null],[12,"header_addr","","library\'s header address",160,null],[3,"FvmlibCommand","","",null,null],[12,"cmd","","LC_IDFVMLIB or LC_LOADFVMLIB",161,null],[12,"cmdsize","","includes pathname string",161,null],[12,"fvmlib","","the library identification",161,null],[3,"Dylib","","",null,null],[12,"name","","library\'s path name",162,null],[12,"timestamp","","library\'s build time stamp",162,null],[12,"current_version","","library\'s current version number",162,null],[12,"compatibility_version","","library\'s compatibility vers number",162,null],[3,"DylibCommand","","",null,null],[12,"cmd","","LC_ID_DYLIB, LC_LOAD_{,WEAK_}DYLIB, LC_REEXPORT_DYLIB",163,null],[12,"cmdsize","","includes pathname string",163,null],[12,"dylib","","the library identification",163,null],[3,"SubFrameworkCommand","","",null,null],[12,"cmd","","LC_SUB_FRAMEWORK",164,null],[12,"cmdsize","","includes umbrella string",164,null],[12,"umbrella","","the umbrella framework name",164,null],[3,"SubClientCommand","","",null,null],[12,"cmd","","LC_SUB_CLIENT",165,null],[12,"cmdsize","","includes client string",165,null],[12,"client","","the client name",165,null],[3,"SubUmbrellaCommand","","",null,null],[12,"cmd","","LC_SUB_UMBRELLA",166,null],[12,"cmdsize","","includes sub_umbrella string",166,null],[12,"sub_umbrella","","the sub_umbrella framework name",166,null],[3,"SubLibraryCommand","","",null,null],[12,"cmd","","LC_SUB_LIBRARY",167,null],[12,"cmdsize","","includes sub_library string",167,null],[12,"sub_library","","the sub_library name",167,null],[3,"PreboundDylibCommand","","",null,null],[12,"cmd","","LC_PREBOUND_DYLIB",168,null],[12,"cmdsize","","includes strings",168,null],[12,"name","","library\'s path name",168,null],[12,"nmodules","","number of modules in library",168,null],[12,"linked_modules","","bit vector of linked modules",168,null],[3,"DylinkerCommand","","",null,null],[12,"cmd","","LC_ID_DYLINKER, LC_LOAD_DYLINKER or LC_DYLD_ENVIRONMENT",169,null],[12,"cmdsize","","includes pathname string",169,null],[12,"name","","dynamic linker\'s path name",169,null],[3,"ThreadCommand","","",null,null],[12,"cmd","","LC_THREAD or  LC_UNIXTHREAD",170,null],[12,"cmdsize","","total size of this command",170,null],[3,"RoutinesCommand32","","",null,null],[12,"cmd","","LC_ROUTINES",171,null],[12,"cmdsize","","total size of this command",171,null],[12,"init_address","","address of initialization routine",171,null],[12,"init_module","","index into the module table that the init routine is…",171,null],[12,"reserved1","","",171,null],[12,"reserved2","","",171,null],[12,"reserved3","","",171,null],[12,"reserved4","","",171,null],[12,"reserved5","","",171,null],[12,"reserved6","","",171,null],[3,"RoutinesCommand64","","",null,null],[12,"cmd","","LC_ROUTINES_64",172,null],[12,"cmdsize","","total size of this command",172,null],[12,"init_address","","address of initialization routine",172,null],[12,"init_module","","index into the module table that the init routine is…",172,null],[12,"reserved1","","",172,null],[12,"reserved2","","",172,null],[12,"reserved3","","",172,null],[12,"reserved4","","",172,null],[12,"reserved5","","",172,null],[12,"reserved6","","",172,null],[3,"SymtabCommand","","",null,null],[12,"cmd","","LC_SYMTAB",173,null],[12,"cmdsize","","sizeof(struct SymtabCommand)",173,null],[12,"symoff","","symbol table offset",173,null],[12,"nsyms","","number of symbol table entries",173,null],[12,"stroff","","string table offset",173,null],[12,"strsize","","string table size in bytes",173,null],[3,"DysymtabCommand","","",null,null],[12,"cmd","","LC_DYSYMTAB",174,null],[12,"cmdsize","","sizeof(struct DysymtabCommand)",174,null],[12,"ilocalsym","","index to local symbols",174,null],[12,"nlocalsym","","number of local symbols",174,null],[12,"iextdefsym","","index to externally defined symbols",174,null],[12,"nextdefsym","","number of externally defined symbols",174,null],[12,"iundefsym","","index to undefined symbols",174,null],[12,"nundefsym","","number of undefined symbols",174,null],[12,"tocoff","","file offset to table of contents",174,null],[12,"ntoc","","number of entries in table of contents",174,null],[12,"modtaboff","","file offset to module table",174,null],[12,"nmodtab","","number of module table entries",174,null],[12,"extrefsymoff","","offset to referenced symbol table",174,null],[12,"nextrefsyms","","number of referenced symbol table entries",174,null],[12,"indirectsymoff","","file offset to the indirect symbol table",174,null],[12,"nindirectsyms","","number of indirect symbol table entries",174,null],[12,"extreloff","","offset to external relocation entries",174,null],[12,"nextrel","","number of external relocation entries",174,null],[12,"locreloff","","offset to local relocation entries",174,null],[12,"nlocrel","","number of local relocation entries",174,null],[3,"DylibTableOfContents","","",null,null],[12,"symbol_index","","the defined external symbol (index into the symbol table)",175,null],[12,"module_index","","index into the module table this symbol is defined in",175,null],[3,"DylibModule32","","",null,null],[12,"module_name","","the module name (index into string table)",176,null],[12,"iextdefsym","","index into externally defined symbols",176,null],[12,"nextdefsym","","number of externally defined symbols",176,null],[12,"irefsym","","index into reference symbol table",176,null],[12,"nrefsym","","number of reference symbol table entries",176,null],[12,"ilocalsym","","index into symbols for local symbols",176,null],[12,"nlocalsym","","number of local symbols",176,null],[12,"iextrel","","index into external relocation entries",176,null],[12,"nextrel","","number of external relocation entries",176,null],[12,"iinit_iterm","","low 16 bits are the index into the init section, high 16…",176,null],[12,"ninit_nterm","","low 16 bits are the number of init section entries, high…",176,null],[12,"objc_module_info_addr","","for this module address of the start of the…",176,null],[12,"objc_module_info_size","","for this module size of the (__OBJC,__module_info) section",176,null],[3,"DylibModule64","","",null,null],[12,"module_name","","the module name (index into string table)",177,null],[12,"iextdefsym","","index into externally defined symbols",177,null],[12,"nextdefsym","","number of externally defined symbols",177,null],[12,"irefsym","","index into reference symbol table",177,null],[12,"nrefsym","","number of reference symbol table entries",177,null],[12,"ilocalsym","","index into symbols for local symbols",177,null],[12,"nlocalsym","","number of local symbols",177,null],[12,"iextrel","","index into external relocation entries",177,null],[12,"nextrel","","number of external relocation entries",177,null],[12,"iinit_iterm","","low 16 bits are the index into the init section, high 16…",177,null],[12,"ninit_nterm","","low 16 bits are the number of init section entries, high…",177,null],[12,"objc_module_info_size","","for this module size of the (__OBJC,__module_info) section",177,null],[12,"objc_module_info_addr","","for this module address of the start of the…",177,null],[3,"DylibReference","","",null,null],[12,"bitfield","","",178,null],[3,"TwolevelHintsCommand","","",null,null],[12,"cmd","","LC_TWOLEVEL_HINTS",179,null],[12,"cmdsize","","sizeof(struct TwolevelHintsCommand)",179,null],[12,"offset","","offset to the hint table",179,null],[12,"nhints","","number of hints in the hint table",179,null],[3,"TwolevelHint","","",null,null],[12,"bitfield","","",180,null],[3,"PrebindCksumCommand","","",null,null],[12,"cmd","","LC_PREBIND_CKSUM",181,null],[12,"cmdsize","","sizeof(struct PrebindCksumCommand)",181,null],[12,"cksum","","the check sum or zero",181,null],[3,"UuidCommand","","",null,null],[12,"cmd","","LC_UUID",182,null],[12,"cmdsize","","sizeof(struct UuidCommand)",182,null],[12,"uuid","","the 128-bit uuid",182,null],[3,"RpathCommand","","",null,null],[12,"cmd","","LC_RPATH",183,null],[12,"cmdsize","","includes string",183,null],[12,"path","","path to add to run path",183,null],[3,"LinkeditDataCommand","","",null,null],[12,"cmd","","`LC_CODE_SIGNATURE`, `LC_SEGMENT_SPLIT_INFO`,…",184,null],[12,"cmdsize","","sizeof(struct LinkeditDataCommand)",184,null],[12,"dataoff","","file offset of data in __LINKEDIT segment",184,null],[12,"datasize","","file size of data in __LINKEDIT segment",184,null],[3,"FilesetEntryCommand","","",null,null],[12,"cmd","","",185,null],[12,"cmdsize","","includes id string",185,null],[12,"vmaddr","","memory address of the dylib",185,null],[12,"fileoff","","file offset of the dylib",185,null],[12,"entry_id","","contained entry id",185,null],[12,"reserved","","entry_id is 32-bits long, so this is the reserved padding",185,null],[3,"EncryptionInfoCommand32","","",null,null],[12,"cmd","","LC_ENCRYPTION_INFO",186,null],[12,"cmdsize","","sizeof(struct EncryptionInfoCommand32)",186,null],[12,"cryptoff","","file offset of encrypted range",186,null],[12,"cryptsize","","file size of encrypted range",186,null],[12,"cryptid","","which enryption system, 0 means not-encrypted yet",186,null],[3,"EncryptionInfoCommand64","","",null,null],[12,"cmd","","LC_ENCRYPTION_INFO_64",187,null],[12,"cmdsize","","sizeof(struct EncryptionInfoCommand64)",187,null],[12,"cryptoff","","file offset of encrypted range",187,null],[12,"cryptsize","","file size of encrypted range",187,null],[12,"cryptid","","which enryption system, 0 means not-encrypted yet",187,null],[12,"pad","","padding to make this struct\'s size a multiple of 8 bytes",187,null],[3,"VersionMinCommand","","",null,null],[12,"cmd","","LC_VERSION_MIN_MACOSX or LC_VERSION_MIN_IPHONEOS or…",188,null],[12,"cmdsize","","sizeof(struct VersionMinCommand)",188,null],[12,"version","","X.Y.Z is encoded in nibbles xxxx.yy.zz",188,null],[12,"sdk","","X.Y.Z is encoded in nibbles xxxx.yy.zz",188,null],[3,"BuildVersionCommand","","",null,null],[12,"cmd","","LC_BUILD_VERSION",189,null],[12,"cmdsize","","sizeof(struct BuildVersionCommand) plus ntools *…",189,null],[12,"platform","","platform",189,null],[12,"minos","","X.Y.Z is encoded in nibbles xxxx.yy.zz",189,null],[12,"sdk","","X.Y.Z is encoded in nibbles xxxx.yy.zz",189,null],[12,"ntools","","number of tool entries following this",189,null],[3,"BuildToolVersion","","",null,null],[12,"tool","","enum for the tool",190,null],[12,"version","","version number of the tool",190,null],[3,"DyldInfoCommand","","",null,null],[12,"cmd","","LC_DYLD_INFO or LC_DYLD_INFO_ONLY",191,null],[12,"cmdsize","","sizeof(struct DyldInfoCommand)",191,null],[12,"rebase_off","","file offset to rebase info",191,null],[12,"rebase_size","","size of rebase info",191,null],[12,"bind_off","","file offset to binding info",191,null],[12,"bind_size","","size of binding info",191,null],[12,"weak_bind_off","","file offset to weak binding info",191,null],[12,"weak_bind_size","","size of weak binding info",191,null],[12,"lazy_bind_off","","file offset to lazy binding info",191,null],[12,"lazy_bind_size","","size of lazy binding infs",191,null],[12,"export_off","","file offset to lazy binding info",191,null],[12,"export_size","","size of lazy binding infs",191,null],[3,"LinkerOptionCommand","","",null,null],[12,"cmd","","LC_LINKER_OPTION only used in MH_OBJECT filetypes",192,null],[12,"cmdsize","","",192,null],[12,"count","","number of strings",192,null],[3,"SymsegCommand","","",null,null],[12,"cmd","","LC_SYMSEG",193,null],[12,"cmdsize","","sizeof(struct SymsegCommand)",193,null],[12,"offset","","symbol segment offset",193,null],[12,"size","","symbol segment size in bytes",193,null],[3,"IdentCommand","","",null,null],[12,"cmd","","LC_IDENT",194,null],[12,"cmdsize","","strings that follow this command",194,null],[3,"FvmfileCommand","","",null,null],[12,"cmd","","LC_FVMFILE",195,null],[12,"cmdsize","","includes pathname string",195,null],[12,"name","","files pathname",195,null],[12,"header_addr","","files virtual address",195,null],[3,"EntryPointCommand","","",null,null],[12,"cmd","","LC_MAIN only used in MH_EXECUTE filetypes",196,null],[12,"cmdsize","","24",196,null],[12,"entryoff","","file (__TEXT) offset of main()",196,null],[12,"stacksize","","if not zero, initial stack size",196,null],[3,"SourceVersionCommand","","",null,null],[12,"cmd","","LC_SOURCE_VERSION",197,null],[12,"cmdsize","","16",197,null],[12,"version","","A.B.C.D.E packed as a24.b10.c10.d10.e10",197,null],[3,"DataInCodeEntry","","",null,null],[12,"offset","","from mach_header to start of data range",198,null],[12,"length","","number of bytes in data range",198,null],[12,"kind","","a DICE_KIND_* value",198,null],[3,"NoteCommand","","",null,null],[12,"cmd","","LC_NOTE",199,null],[12,"cmdsize","","sizeof(struct NoteCommand)",199,null],[12,"data_owner","","owner name for this LC_NOTE",199,null],[12,"offset","","file offset of this data",199,null],[12,"size","","length of data region",199,null],[3,"Nlist32","","",null,null],[12,"n_strx","","index into the string table",200,null],[12,"n_type","","type flag, see below",200,null],[12,"n_sect","","section number or NO_SECT",200,null],[12,"n_desc","","see <mach-o/stab.h>",200,null],[12,"n_value","","value of this symbol (or stab offset)",200,null],[3,"Nlist64","","",null,null],[12,"n_strx","","index into the string table",201,null],[12,"n_type","","type flag, see below",201,null],[12,"n_sect","","section number or NO_SECT",201,null],[12,"n_desc","","see <mach-o/stab.h>",201,null],[12,"n_value","","value of this symbol (or stab offset)",201,null],[3,"Relocation","","A relocation entry.",null,null],[12,"r_word0","","",202,null],[12,"r_word1","","",202,null],[3,"RelocationInfo","","",null,null],[12,"r_address","","offset in the section to what is being relocated",203,null],[12,"r_symbolnum","","symbol index if r_extern == 1 or section ordinal if…",203,null],[12,"r_pcrel","","was relocated pc relative already",203,null],[12,"r_length","","0=byte, 1=word, 2=long, 3=quad",203,null],[12,"r_extern","","does not include value of sym referenced",203,null],[12,"r_type","","if not 0, machine specific relocation type",203,null],[3,"ScatteredRelocationInfo","","",null,null],[12,"r_address","","offset in the section to what is being relocated",204,null],[12,"r_type","","if not 0, machine specific relocation type",204,null],[12,"r_length","","0=byte, 1=word, 2=long, 3=quad",204,null],[12,"r_pcrel","","was relocated pc relative already",204,null],[12,"r_value","","the value the item to be relocated is refering to (without…",204,null],[5,"cpu_subtype_intel","","",null,[[]]],[5,"cpu_subtype_intel_family","","",null,[[]]],[5,"cpu_subtype_intel_model","","",null,[[]]],[17,"CPU_ARCH_MASK","","mask for architecture bits",null,null],[17,"CPU_ARCH_ABI64","","64 bit ABI",null,null],[17,"CPU_ARCH_ABI64_32","","ABI for 64-bit hardware with 32-bit types; LP32",null,null],[17,"CPU_TYPE_ANY","","",null,null],[17,"CPU_TYPE_VAX","","",null,null],[17,"CPU_TYPE_MC680X0","","",null,null],[17,"CPU_TYPE_X86","","",null,null],[17,"CPU_TYPE_X86_64","","",null,null],[17,"CPU_TYPE_MIPS","","",null,null],[17,"CPU_TYPE_MC98000","","",null,null],[17,"CPU_TYPE_HPPA","","",null,null],[17,"CPU_TYPE_ARM","","",null,null],[17,"CPU_TYPE_ARM64","","",null,null],[17,"CPU_TYPE_ARM64_32","","",null,null],[17,"CPU_TYPE_MC88000","","",null,null],[17,"CPU_TYPE_SPARC","","",null,null],[17,"CPU_TYPE_I860","","",null,null],[17,"CPU_TYPE_ALPHA","","",null,null],[17,"CPU_TYPE_POWERPC","","",null,null],[17,"CPU_TYPE_POWERPC64","","",null,null],[17,"CPU_SUBTYPE_MASK","","mask for feature flags",null,null],[17,"CPU_SUBTYPE_LIB64","","64 bit libraries",null,null],[17,"CPU_SUBTYPE_PTRAUTH_ABI","","pointer authentication with versioned ABI",null,null],[17,"CPU_SUBTYPE_ANY","","When selecting a slice, ANY will pick the slice with the…",null,null],[17,"CPU_SUBTYPE_MULTIPLE","","",null,null],[17,"CPU_SUBTYPE_LITTLE_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_BIG_ENDIAN","","",null,null],[17,"CPU_SUBTYPE_VAX_ALL","","",null,null],[17,"CPU_SUBTYPE_VAX780","","",null,null],[17,"CPU_SUBTYPE_VAX785","","",null,null],[17,"CPU_SUBTYPE_VAX750","","",null,null],[17,"CPU_SUBTYPE_VAX730","","",null,null],[17,"CPU_SUBTYPE_UVAXI","","",null,null],[17,"CPU_SUBTYPE_UVAXII","","",null,null],[17,"CPU_SUBTYPE_VAX8200","","",null,null],[17,"CPU_SUBTYPE_VAX8500","","",null,null],[17,"CPU_SUBTYPE_VAX8600","","",null,null],[17,"CPU_SUBTYPE_VAX8650","","",null,null],[17,"CPU_SUBTYPE_VAX8800","","",null,null],[17,"CPU_SUBTYPE_UVAXIII","","",null,null],[17,"CPU_SUBTYPE_MC680X0_ALL","","",null,null],[17,"CPU_SUBTYPE_MC68030","","",null,null],[17,"CPU_SUBTYPE_MC68040","","",null,null],[17,"CPU_SUBTYPE_MC68030_ONLY","","",null,null],[17,"CPU_SUBTYPE_I386_ALL","","",null,null],[17,"CPU_SUBTYPE_386","","",null,null],[17,"CPU_SUBTYPE_486","","",null,null],[17,"CPU_SUBTYPE_486SX","","",null,null],[17,"CPU_SUBTYPE_586","","",null,null],[17,"CPU_SUBTYPE_PENT","","",null,null],[17,"CPU_SUBTYPE_PENTPRO","","",null,null],[17,"CPU_SUBTYPE_PENTII_M3","","",null,null],[17,"CPU_SUBTYPE_PENTII_M5","","",null,null],[17,"CPU_SUBTYPE_CELERON","","",null,null],[17,"CPU_SUBTYPE_CELERON_MOBILE","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_3_XEON","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_M","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4","","",null,null],[17,"CPU_SUBTYPE_PENTIUM_4_M","","",null,null],[17,"CPU_SUBTYPE_ITANIUM","","",null,null],[17,"CPU_SUBTYPE_ITANIUM_2","","",null,null],[17,"CPU_SUBTYPE_XEON","","",null,null],[17,"CPU_SUBTYPE_XEON_MP","","",null,null],[17,"CPU_SUBTYPE_INTEL_FAMILY_MAX","","",null,null],[17,"CPU_SUBTYPE_INTEL_MODEL_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_64_ALL","","",null,null],[17,"CPU_SUBTYPE_X86_ARCH1","","",null,null],[17,"CPU_SUBTYPE_X86_64_H","","Haswell feature subset",null,null],[17,"CPU_SUBTYPE_MIPS_ALL","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2300","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2600","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2800","","",null,null],[17,"CPU_SUBTYPE_MIPS_R2000A","","pmax",null,null],[17,"CPU_SUBTYPE_MIPS_R2000","","",null,null],[17,"CPU_SUBTYPE_MIPS_R3000A","","3max",null,null],[17,"CPU_SUBTYPE_MIPS_R3000","","",null,null],[17,"CPU_SUBTYPE_MC98000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC98601","","",null,null],[17,"CPU_SUBTYPE_HPPA_ALL","","",null,null],[17,"CPU_SUBTYPE_HPPA_7100LC","","",null,null],[17,"CPU_SUBTYPE_MC88000_ALL","","",null,null],[17,"CPU_SUBTYPE_MC88100","","",null,null],[17,"CPU_SUBTYPE_MC88110","","",null,null],[17,"CPU_SUBTYPE_SPARC_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_ALL","","",null,null],[17,"CPU_SUBTYPE_I860_860","","",null,null],[17,"CPU_SUBTYPE_POWERPC_ALL","","",null,null],[17,"CPU_SUBTYPE_POWERPC_601","","",null,null],[17,"CPU_SUBTYPE_POWERPC_602","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_603EV","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604","","",null,null],[17,"CPU_SUBTYPE_POWERPC_604E","","",null,null],[17,"CPU_SUBTYPE_POWERPC_620","","",null,null],[17,"CPU_SUBTYPE_POWERPC_750","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7400","","",null,null],[17,"CPU_SUBTYPE_POWERPC_7450","","",null,null],[17,"CPU_SUBTYPE_POWERPC_970","","",null,null],[17,"CPU_SUBTYPE_ARM_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM_V4T","","",null,null],[17,"CPU_SUBTYPE_ARM_V6","","",null,null],[17,"CPU_SUBTYPE_ARM_V5TEJ","","",null,null],[17,"CPU_SUBTYPE_ARM_XSCALE","","",null,null],[17,"CPU_SUBTYPE_ARM_V7","","ARMv7-A and ARMv7-R",null,null],[17,"CPU_SUBTYPE_ARM_V7F","","Cortex A9",null,null],[17,"CPU_SUBTYPE_ARM_V7S","","Swift",null,null],[17,"CPU_SUBTYPE_ARM_V7K","","",null,null],[17,"CPU_SUBTYPE_ARM_V8","","",null,null],[17,"CPU_SUBTYPE_ARM_V6M","","Not meant to be run under xnu",null,null],[17,"CPU_SUBTYPE_ARM_V7M","","Not meant to be run under xnu",null,null],[17,"CPU_SUBTYPE_ARM_V7EM","","Not meant to be run under xnu",null,null],[17,"CPU_SUBTYPE_ARM_V8M","","Not meant to be run under xnu",null,null],[17,"CPU_SUBTYPE_ARM64_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM64_V8","","",null,null],[17,"CPU_SUBTYPE_ARM64E","","",null,null],[17,"CPU_SUBTYPE_ARM64_32_ALL","","",null,null],[17,"CPU_SUBTYPE_ARM64_32_V8","","",null,null],[17,"VM_PROT_READ","","read permission",null,null],[17,"VM_PROT_WRITE","","write permission",null,null],[17,"VM_PROT_EXECUTE","","execute permission",null,null],[17,"FAT_MAGIC","","",null,null],[17,"FAT_CIGAM","","NXSwapLong(FAT_MAGIC)",null,null],[17,"FAT_MAGIC_64","","",null,null],[17,"FAT_CIGAM_64","","NXSwapLong(FAT_MAGIC_64)",null,null],[17,"MH_MAGIC","","the mach magic number",null,null],[17,"MH_CIGAM","","NXSwapInt(MH_MAGIC)",null,null],[17,"MH_MAGIC_64","","the 64-bit mach magic number",null,null],[17,"MH_CIGAM_64","","NXSwapInt(MH_MAGIC_64)",null,null],[17,"MH_OBJECT","","relocatable object file",null,null],[17,"MH_EXECUTE","","demand paged executable file",null,null],[17,"MH_FVMLIB","","fixed VM shared library file",null,null],[17,"MH_CORE","","core file",null,null],[17,"MH_PRELOAD","","preloaded executable file",null,null],[17,"MH_DYLIB","","dynamically bound shared library",null,null],[17,"MH_DYLINKER","","dynamic link editor",null,null],[17,"MH_BUNDLE","","dynamically bound bundle file",null,null],[17,"MH_DYLIB_STUB","","shared library stub for static linking only, no section…",null,null],[17,"MH_DSYM","","companion file with only debug sections",null,null],[17,"MH_KEXT_BUNDLE","","x86_64 kexts",null,null],[17,"MH_FILESET","","set of mach-o\'s",null,null],[17,"MH_NOUNDEFS","","the object file has no undefined references",null,null],[17,"MH_INCRLINK","","the object file is the output of an incremental link…",null,null],[17,"MH_DYLDLINK","","the object file is input for the dynamic linker and can\'t…",null,null],[17,"MH_BINDATLOAD","","the object file\'s undefined references are bound by the…",null,null],[17,"MH_PREBOUND","","the file has its dynamic undefined references prebound.",null,null],[17,"MH_SPLIT_SEGS","","the file has its read-only and read-write segments split",null,null],[17,"MH_LAZY_INIT","","the shared library init routine is to be run lazily via…",null,null],[17,"MH_TWOLEVEL","","the image is using two-level name space bindings",null,null],[17,"MH_FORCE_FLAT","","the executable is forcing all images to use flat name…",null,null],[17,"MH_NOMULTIDEFS","","this umbrella guarantees no multiple defintions of symbols…",null,null],[17,"MH_NOFIXPREBINDING","","do not have dyld notify the prebinding agent about this…",null,null],[17,"MH_PREBINDABLE","","the binary is not prebound but can have its prebinding…",null,null],[17,"MH_ALLMODSBOUND","","indicates that this binary binds to all two-level…",null,null],[17,"MH_SUBSECTIONS_VIA_SYMBOLS","","safe to divide up the sections into sub-sections via…",null,null],[17,"MH_CANONICAL","","the binary has been canonicalized via the unprebind…",null,null],[17,"MH_WEAK_DEFINES","","the final linked image contains external weak symbols",null,null],[17,"MH_BINDS_TO_WEAK","","the final linked image uses weak symbols",null,null],[17,"MH_ALLOW_STACK_EXECUTION","","When this bit is set, all stacks in the task will be given…",null,null],[17,"MH_ROOT_SAFE","","When this bit is set, the binary declares it is safe for…",null,null],[17,"MH_SETUID_SAFE","","When this bit is set, the binary declares it is safe for…",null,null],[17,"MH_NO_REEXPORTED_DYLIBS","","When this bit is set on a dylib, the static linker does…",null,null],[17,"MH_PIE","","When this bit is set, the OS will load the main executable…",null,null],[17,"MH_DEAD_STRIPPABLE_DYLIB","","Only for use on dylibs. When linking against a dylib that…",null,null],[17,"MH_HAS_TLV_DESCRIPTORS","","Contains a section of type S_THREAD_LOCAL_VARIABLES",null,null],[17,"MH_NO_HEAP_EXECUTION","","When this bit is set, the OS will run the main executable…",null,null],[17,"MH_APP_EXTENSION_SAFE","","The code was linked for use in an application extension.",null,null],[17,"MH_NLIST_OUTOFSYNC_WITH_DYLDINFO","","The external symbols listed in the nlist symbol table do…",null,null],[17,"MH_SIM_SUPPORT","","Allow LC_MIN_VERSION_MACOS and LC_BUILD_VERSION load…",null,null],[17,"MH_DYLIB_IN_CACHE","","Only for use on dylibs. When this bit is set, the dylib is…",null,null],[17,"LC_REQ_DYLD","","",null,null],[17,"LC_SEGMENT","","segment of this file to be mapped",null,null],[17,"LC_SYMTAB","","link-edit stab symbol table info",null,null],[17,"LC_SYMSEG","","link-edit gdb symbol table info (obsolete)",null,null],[17,"LC_THREAD","","thread",null,null],[17,"LC_UNIXTHREAD","","unix thread (includes a stack)",null,null],[17,"LC_LOADFVMLIB","","load a specified fixed VM shared library",null,null],[17,"LC_IDFVMLIB","","fixed VM shared library identification",null,null],[17,"LC_IDENT","","object identification info (obsolete)",null,null],[17,"LC_FVMFILE","","fixed VM file inclusion (internal use)",null,null],[17,"LC_PREPAGE","","prepage command (internal use)",null,null],[17,"LC_DYSYMTAB","","dynamic link-edit symbol table info",null,null],[17,"LC_LOAD_DYLIB","","load a dynamically linked shared library",null,null],[17,"LC_ID_DYLIB","","dynamically linked shared lib ident",null,null],[17,"LC_LOAD_DYLINKER","","load a dynamic linker",null,null],[17,"LC_ID_DYLINKER","","dynamic linker identification",null,null],[17,"LC_PREBOUND_DYLIB","","modules prebound for a dynamically linked shared library",null,null],[17,"LC_ROUTINES","","image routines",null,null],[17,"LC_SUB_FRAMEWORK","","sub framework",null,null],[17,"LC_SUB_UMBRELLA","","sub umbrella",null,null],[17,"LC_SUB_CLIENT","","sub client",null,null],[17,"LC_SUB_LIBRARY","","sub library",null,null],[17,"LC_TWOLEVEL_HINTS","","two-level namespace lookup hints",null,null],[17,"LC_PREBIND_CKSUM","","prebind checksum",null,null],[17,"LC_LOAD_WEAK_DYLIB","","load a dynamically linked shared library that is allowed…",null,null],[17,"LC_SEGMENT_64","","64-bit segment of this file to be mapped",null,null],[17,"LC_ROUTINES_64","","64-bit image routines",null,null],[17,"LC_UUID","","the uuid",null,null],[17,"LC_RPATH","","runpath additions",null,null],[17,"LC_CODE_SIGNATURE","","local of code signature",null,null],[17,"LC_SEGMENT_SPLIT_INFO","","local of info to split segments",null,null],[17,"LC_REEXPORT_DYLIB","","load and re-export dylib",null,null],[17,"LC_LAZY_LOAD_DYLIB","","delay load of dylib until first use",null,null],[17,"LC_ENCRYPTION_INFO","","encrypted segment information",null,null],[17,"LC_DYLD_INFO","","compressed dyld information",null,null],[17,"LC_DYLD_INFO_ONLY","","compressed dyld information only",null,null],[17,"LC_LOAD_UPWARD_DYLIB","","load upward dylib",null,null],[17,"LC_VERSION_MIN_MACOSX","","build for MacOSX min OS version",null,null],[17,"LC_VERSION_MIN_IPHONEOS","","build for iPhoneOS min OS version",null,null],[17,"LC_FUNCTION_STARTS","","compressed table of function start addresses",null,null],[17,"LC_DYLD_ENVIRONMENT","","string for dyld to treat like environment variable",null,null],[17,"LC_MAIN","","replacement for LC_UNIXTHREAD",null,null],[17,"LC_DATA_IN_CODE","","table of non-instructions in __text",null,null],[17,"LC_SOURCE_VERSION","","source version used to build binary",null,null],[17,"LC_DYLIB_CODE_SIGN_DRS","","Code signing DRs copied from linked dylibs",null,null],[17,"LC_ENCRYPTION_INFO_64","","64-bit encrypted segment information",null,null],[17,"LC_LINKER_OPTION","","linker options in MH_OBJECT files",null,null],[17,"LC_LINKER_OPTIMIZATION_HINT","","optimization hints in MH_OBJECT files",null,null],[17,"LC_VERSION_MIN_TVOS","","build for AppleTV min OS version",null,null],[17,"LC_VERSION_MIN_WATCHOS","","build for Watch min OS version",null,null],[17,"LC_NOTE","","arbitrary data included within a Mach-O file",null,null],[17,"LC_BUILD_VERSION","","build for platform min OS version",null,null],[17,"LC_DYLD_EXPORTS_TRIE","","used with `LinkeditDataCommand`, payload is trie",null,null],[17,"LC_DYLD_CHAINED_FIXUPS","","used with `LinkeditDataCommand`",null,null],[17,"LC_FILESET_ENTRY","","used with `FilesetEntryCommand`",null,null],[17,"SG_HIGHVM","","the file contents for this segment is for the high part of…",null,null],[17,"SG_FVMLIB","","this segment is the VM that is allocated by a fixed VM…",null,null],[17,"SG_NORELOC","","this segment has nothing that was relocated in it and…",null,null],[17,"SG_PROTECTED_VERSION_1","","This segment is protected. If the segment starts at file…",null,null],[17,"SG_READ_ONLY","","This segment is made read-only after fixups",null,null],[17,"SECTION_TYPE","","256 section types",null,null],[17,"SECTION_ATTRIBUTES","","24 section attributes",null,null],[17,"S_REGULAR","","regular section",null,null],[17,"S_ZEROFILL","","zero fill on demand section",null,null],[17,"S_CSTRING_LITERALS","","section with only literal C strings",null,null],[17,"S_4BYTE_LITERALS","","section with only 4 byte literals",null,null],[17,"S_8BYTE_LITERALS","","section with only 8 byte literals",null,null],[17,"S_LITERAL_POINTERS","","section with only pointers to literals",null,null],[17,"S_NON_LAZY_SYMBOL_POINTERS","","section with only non-lazy symbol pointers",null,null],[17,"S_LAZY_SYMBOL_POINTERS","","section with only lazy symbol pointers",null,null],[17,"S_SYMBOL_STUBS","","section with only symbol stubs, byte size of stub in the…",null,null],[17,"S_MOD_INIT_FUNC_POINTERS","","section with only function pointers for initialization",null,null],[17,"S_MOD_TERM_FUNC_POINTERS","","section with only function pointers for termination",null,null],[17,"S_COALESCED","","section contains symbols that are to be coalesced",null,null],[17,"S_GB_ZEROFILL","","zero fill on demand section (that can be larger than 4…",null,null],[17,"S_INTERPOSING","","section with only pairs of function pointers for interposing",null,null],[17,"S_16BYTE_LITERALS","","section with only 16 byte literals",null,null],[17,"S_DTRACE_DOF","","section contains DTrace Object Format",null,null],[17,"S_LAZY_DYLIB_SYMBOL_POINTERS","","section with only lazy symbol pointers to lazy loaded dylibs",null,null],[17,"S_THREAD_LOCAL_REGULAR","","template of initial values for TLVs",null,null],[17,"S_THREAD_LOCAL_ZEROFILL","","template of initial values for TLVs",null,null],[17,"S_THREAD_LOCAL_VARIABLES","","TLV descriptors",null,null],[17,"S_THREAD_LOCAL_VARIABLE_POINTERS","","pointers to TLV descriptors",null,null],[17,"S_THREAD_LOCAL_INIT_FUNCTION_POINTERS","","functions to call to initialize TLV values",null,null],[17,"S_INIT_FUNC_OFFSETS","","32-bit offsets to initializers",null,null],[17,"SECTION_ATTRIBUTES_USR","","User setable attributes",null,null],[17,"S_ATTR_PURE_INSTRUCTIONS","","section contains only true machine instructions",null,null],[17,"S_ATTR_NO_TOC","","section contains coalesced symbols that are not to be in a…",null,null],[17,"S_ATTR_STRIP_STATIC_SYMS","","ok to strip static symbols in this section in files with…",null,null],[17,"S_ATTR_NO_DEAD_STRIP","","no dead stripping",null,null],[17,"S_ATTR_LIVE_SUPPORT","","blocks are live if they reference live blocks",null,null],[17,"S_ATTR_SELF_MODIFYING_CODE","","Used with i386 code stubs written on by dyld",null,null],[17,"S_ATTR_DEBUG","","a debug section",null,null],[17,"SECTION_ATTRIBUTES_SYS","","system setable attributes",null,null],[17,"S_ATTR_SOME_INSTRUCTIONS","","section contains some machine instructions",null,null],[17,"S_ATTR_EXT_RELOC","","section has external relocation entries",null,null],[17,"S_ATTR_LOC_RELOC","","section has local relocation entries",null,null],[17,"SEG_PAGEZERO","","the pagezero segment which has no protections and catches…",null,null],[17,"SEG_TEXT","","the tradition UNIX text segment",null,null],[17,"SECT_TEXT","","the real text part of the text section no headers, and no…",null,null],[17,"SECT_FVMLIB_INIT0","","the fvmlib initialization section",null,null],[17,"SECT_FVMLIB_INIT1","","the section following the fvmlib initialization section",null,null],[17,"SEG_DATA","","the tradition UNIX data segment",null,null],[17,"SECT_DATA","","the real initialized data section no padding, no bss overlap",null,null],[17,"SECT_BSS","","the real uninitialized data section no padding",null,null],[17,"SECT_COMMON","","the section common symbols are allocated in by the link…",null,null],[17,"SEG_OBJC","","objective-C runtime segment",null,null],[17,"SECT_OBJC_SYMBOLS","","symbol table",null,null],[17,"SECT_OBJC_MODULES","","module information",null,null],[17,"SECT_OBJC_STRINGS","","string table",null,null],[17,"SECT_OBJC_REFS","","string table",null,null],[17,"SEG_ICON","","the icon segment",null,null],[17,"SECT_ICON_HEADER","","the icon headers",null,null],[17,"SECT_ICON_TIFF","","the icons in tiff format",null,null],[17,"SEG_LINKEDIT","","the segment containing all structs created and maintained…",null,null],[17,"SEG_LINKINFO","","the segment overlapping with linkedit containing linking…",null,null],[17,"SEG_UNIXSTACK","","the unix stack segment",null,null],[17,"SEG_IMPORT","","the segment for the self (dyld) modifing code stubs that…",null,null],[17,"INDIRECT_SYMBOL_LOCAL","","",null,null],[17,"INDIRECT_SYMBOL_ABS","","",null,null],[17,"PLATFORM_MACOS","","",null,null],[17,"PLATFORM_IOS","","",null,null],[17,"PLATFORM_TVOS","","",null,null],[17,"PLATFORM_WATCHOS","","",null,null],[17,"PLATFORM_BRIDGEOS","","",null,null],[17,"PLATFORM_MACCATALYST","","",null,null],[17,"PLATFORM_IOSSIMULATOR","","",null,null],[17,"PLATFORM_TVOSSIMULATOR","","",null,null],[17,"PLATFORM_WATCHOSSIMULATOR","","",null,null],[17,"PLATFORM_DRIVERKIT","","",null,null],[17,"TOOL_CLANG","","",null,null],[17,"TOOL_SWIFT","","",null,null],[17,"TOOL_LD","","",null,null],[17,"REBASE_TYPE_POINTER","","",null,null],[17,"REBASE_TYPE_TEXT_ABSOLUTE32","","",null,null],[17,"REBASE_TYPE_TEXT_PCREL32","","",null,null],[17,"REBASE_OPCODE_MASK","","",null,null],[17,"REBASE_IMMEDIATE_MASK","","",null,null],[17,"REBASE_OPCODE_DONE","","",null,null],[17,"REBASE_OPCODE_SET_TYPE_IMM","","",null,null],[17,"REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","","",null,null],[17,"REBASE_OPCODE_ADD_ADDR_ULEB","","",null,null],[17,"REBASE_OPCODE_ADD_ADDR_IMM_SCALED","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_IMM_TIMES","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ULEB_TIMES","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB","","",null,null],[17,"REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB","","",null,null],[17,"BIND_TYPE_POINTER","","",null,null],[17,"BIND_TYPE_TEXT_ABSOLUTE32","","",null,null],[17,"BIND_TYPE_TEXT_PCREL32","","",null,null],[17,"BIND_SPECIAL_DYLIB_SELF","","",null,null],[17,"BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE","","",null,null],[17,"BIND_SPECIAL_DYLIB_FLAT_LOOKUP","","",null,null],[17,"BIND_SPECIAL_DYLIB_WEAK_LOOKUP","","",null,null],[17,"BIND_SYMBOL_FLAGS_WEAK_IMPORT","","",null,null],[17,"BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION","","",null,null],[17,"BIND_OPCODE_MASK","","",null,null],[17,"BIND_IMMEDIATE_MASK","","",null,null],[17,"BIND_OPCODE_DONE","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB","","",null,null],[17,"BIND_OPCODE_SET_DYLIB_SPECIAL_IMM","","",null,null],[17,"BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM","","",null,null],[17,"BIND_OPCODE_SET_TYPE_IMM","","",null,null],[17,"BIND_OPCODE_SET_ADDEND_SLEB","","",null,null],[17,"BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB","","",null,null],[17,"BIND_OPCODE_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB","","",null,null],[17,"BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED","","",null,null],[17,"BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB","","",null,null],[17,"BIND_OPCODE_THREADED","","",null,null],[17,"BIND_SUBOPCODE_THREADED_SET_BIND_ORDINAL_TABLE_SIZE_ULEB","","",null,null],[17,"BIND_SUBOPCODE_THREADED_APPLY","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_MASK","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_REGULAR","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_KIND_ABSOLUTE","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_REEXPORT","","",null,null],[17,"EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER","","",null,null],[17,"DICE_KIND_DATA","","",null,null],[17,"DICE_KIND_JUMP_TABLE8","","",null,null],[17,"DICE_KIND_JUMP_TABLE16","","",null,null],[17,"DICE_KIND_JUMP_TABLE32","","",null,null],[17,"DICE_KIND_ABS_JUMP_TABLE32","","",null,null],[17,"N_STAB","","if any of these bits set, a symbolic debugging entry",null,null],[17,"N_PEXT","","private external symbol bit",null,null],[17,"N_TYPE","","mask for the type bits",null,null],[17,"N_EXT","","external symbol bit, set for external symbols",null,null],[17,"N_UNDF","","undefined, n_sect == NO_SECT",null,null],[17,"N_ABS","","absolute, n_sect == NO_SECT",null,null],[17,"N_SECT","","defined in section number n_sect",null,null],[17,"N_PBUD","","prebound undefined (defined in a dylib)",null,null],[17,"N_INDR","","indirect",null,null],[17,"NO_SECT","","symbol is not in any section",null,null],[17,"MAX_SECT","","1 thru 255 inclusive",null,null],[17,"REFERENCE_TYPE","","",null,null],[17,"REFERENCE_FLAG_UNDEFINED_NON_LAZY","","",null,null],[17,"REFERENCE_FLAG_UNDEFINED_LAZY","","",null,null],[17,"REFERENCE_FLAG_DEFINED","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_DEFINED","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY","","",null,null],[17,"REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY","","",null,null],[17,"REFERENCED_DYNAMICALLY","","",null,null],[17,"SELF_LIBRARY_ORDINAL","","",null,null],[17,"MAX_LIBRARY_ORDINAL","","",null,null],[17,"DYNAMIC_LOOKUP_ORDINAL","","",null,null],[17,"EXECUTABLE_ORDINAL","","",null,null],[17,"N_NO_DEAD_STRIP","","symbol is not to be dead stripped",null,null],[17,"N_DESC_DISCARDED","","symbol is discarded",null,null],[17,"N_WEAK_REF","","symbol is weak referenced",null,null],[17,"N_WEAK_DEF","","coalesed symbol is a weak definition",null,null],[17,"N_REF_TO_WEAK","","reference to a weak symbol",null,null],[17,"N_ARM_THUMB_DEF","","symbol is a Thumb function (ARM)",null,null],[17,"N_SYMBOL_RESOLVER","","",null,null],[17,"N_ALT_ENTRY","","",null,null],[17,"N_GSYM","","global symbol: name,,NO_SECT,type,0",null,null],[17,"N_FNAME","","procedure name (f77 kludge): name,,NO_SECT,0,0",null,null],[17,"N_FUN","","procedure: name,,n_sect,linenumber,address",null,null],[17,"N_STSYM","","static symbol: name,,n_sect,type,address",null,null],[17,"N_LCSYM","",".lcomm symbol: name,,n_sect,type,address",null,null],[17,"N_BNSYM","","begin nsect sym: 0,,n_sect,0,address",null,null],[17,"N_AST","","AST file path: name,,NO_SECT,0,0",null,null],[17,"N_OPT","","emitted with gcc2_compiled and in gcc source",null,null],[17,"N_RSYM","","register sym: name,,NO_SECT,type,register",null,null],[17,"N_SLINE","","src line: 0,,n_sect,linenumber,address",null,null],[17,"N_ENSYM","","end nsect sym: 0,,n_sect,0,address",null,null],[17,"N_SSYM","","structure elt: name,,NO_SECT,type,struct_offset",null,null],[17,"N_SO","","source file name: name,,n_sect,0,address",null,null],[17,"N_OSO","","object file name: name,,0,0,st_mtime",null,null],[17,"N_LSYM","","local sym: name,,NO_SECT,type,offset",null,null],[17,"N_BINCL","","include file beginning: name,,NO_SECT,0,sum",null,null],[17,"N_SOL","","#included file name: name,,n_sect,0,address",null,null],[17,"N_PARAMS","","compiler parameters: name,,NO_SECT,0,0",null,null],[17,"N_VERSION","","compiler version: name,,NO_SECT,0,0",null,null],[17,"N_OLEVEL","","compiler -O level: name,,NO_SECT,0,0",null,null],[17,"N_PSYM","","parameter: name,,NO_SECT,type,offset",null,null],[17,"N_EINCL","","include file end: name,,NO_SECT,0,0",null,null],[17,"N_ENTRY","","alternate entry: name,,n_sect,linenumber,address",null,null],[17,"N_LBRAC","","left bracket: 0,,NO_SECT,nesting level,address",null,null],[17,"N_EXCL","","deleted include file: name,,NO_SECT,0,sum",null,null],[17,"N_RBRAC","","right bracket: 0,,NO_SECT,nesting level,address",null,null],[17,"N_BCOMM","","begin common: name,,NO_SECT,0,0",null,null],[17,"N_ECOMM","","end common: name,,n_sect,0,0",null,null],[17,"N_ECOML","","end common (local name): 0,,n_sect,0,address",null,null],[17,"N_LENG","","second stab entry with length information",null,null],[17,"N_PC","","global pascal symbol: name,,NO_SECT,subtype,line",null,null],[17,"R_ABS","","absolute relocation type for Mach-O files",null,null],[17,"R_SCATTERED","","Bit set in `Relocation::r_word0` for scattered relocations.",null,null],[17,"GENERIC_RELOC_VANILLA","","generic relocation as discribed above",null,null],[17,"GENERIC_RELOC_PAIR","","Only follows a GENERIC_RELOC_SECTDIFF",null,null],[17,"GENERIC_RELOC_SECTDIFF","","",null,null],[17,"GENERIC_RELOC_PB_LA_PTR","","prebound lazy pointer",null,null],[17,"GENERIC_RELOC_LOCAL_SECTDIFF","","",null,null],[17,"GENERIC_RELOC_TLV","","thread local variables",null,null],[17,"ARM_RELOC_VANILLA","","generic relocation as discribed above",null,null],[17,"ARM_RELOC_PAIR","","the second relocation entry of a pair",null,null],[17,"ARM_RELOC_SECTDIFF","","a PAIR follows with subtract symbol value",null,null],[17,"ARM_RELOC_LOCAL_SECTDIFF","","like ARM_RELOC_SECTDIFF, but the symbol referenced was…",null,null],[17,"ARM_RELOC_PB_LA_PTR","","prebound lazy pointer",null,null],[17,"ARM_RELOC_BR24","","24 bit branch displacement (to a word address)",null,null],[17,"ARM_THUMB_RELOC_BR22","","22 bit branch displacement (to a half-word address)",null,null],[17,"ARM_THUMB_32BIT_BRANCH","","obsolete - a thumb 32-bit branch instruction possibly…",null,null],[17,"ARM_RELOC_HALF","","",null,null],[17,"ARM_RELOC_HALF_SECTDIFF","","",null,null],[17,"ARM64_RELOC_UNSIGNED","","for pointers",null,null],[17,"ARM64_RELOC_SUBTRACTOR","","must be followed by a ARM64_RELOC_UNSIGNED",null,null],[17,"ARM64_RELOC_BRANCH26","","a B/BL instruction with 26-bit displacement",null,null],[17,"ARM64_RELOC_PAGE21","","pc-rel distance to page of target",null,null],[17,"ARM64_RELOC_PAGEOFF12","","offset within page, scaled by r_length",null,null],[17,"ARM64_RELOC_GOT_LOAD_PAGE21","","pc-rel distance to page of GOT slot",null,null],[17,"ARM64_RELOC_GOT_LOAD_PAGEOFF12","","offset within page of GOT slot, scaled by r_length",null,null],[17,"ARM64_RELOC_POINTER_TO_GOT","","for pointers to GOT slots",null,null],[17,"ARM64_RELOC_TLVP_LOAD_PAGE21","","pc-rel distance to page of TLVP slot",null,null],[17,"ARM64_RELOC_TLVP_LOAD_PAGEOFF12","","offset within page of TLVP slot, scaled by r_length",null,null],[17,"ARM64_RELOC_ADDEND","","must be followed by PAGE21 or PAGEOFF12",null,null],[17,"ARM64_RELOC_AUTHENTICATED_POINTER","","",null,null],[17,"PPC_RELOC_VANILLA","","generic relocation as discribed above",null,null],[17,"PPC_RELOC_PAIR","","the second relocation entry of a pair",null,null],[17,"PPC_RELOC_BR14","","14 bit branch displacement (to a word address)",null,null],[17,"PPC_RELOC_BR24","","24 bit branch displacement (to a word address)",null,null],[17,"PPC_RELOC_HI16","","a PAIR follows with the low half",null,null],[17,"PPC_RELOC_LO16","","a PAIR follows with the high half",null,null],[17,"PPC_RELOC_HA16","","Same as the RELOC_HI16 except the low 16 bits and the high…",null,null],[17,"PPC_RELOC_LO14","","Same as the LO16 except that the low 2 bits are not stored…",null,null],[17,"PPC_RELOC_SECTDIFF","","a PAIR follows with subtract symbol value",null,null],[17,"PPC_RELOC_PB_LA_PTR","","prebound lazy pointer",null,null],[17,"PPC_RELOC_HI16_SECTDIFF","","section difference forms of above.  a PAIR",null,null],[17,"PPC_RELOC_LO16_SECTDIFF","","follows these with subtract symbol value",null,null],[17,"PPC_RELOC_HA16_SECTDIFF","","",null,null],[17,"PPC_RELOC_JBSR","","",null,null],[17,"PPC_RELOC_LO14_SECTDIFF","","",null,null],[17,"PPC_RELOC_LOCAL_SECTDIFF","","like PPC_RELOC_SECTDIFF, but the symbol referenced was…",null,null],[17,"X86_64_RELOC_UNSIGNED","","for absolute addresses",null,null],[17,"X86_64_RELOC_SIGNED","","for signed 32-bit displacement",null,null],[17,"X86_64_RELOC_BRANCH","","a CALL/JMP instruction with 32-bit displacement",null,null],[17,"X86_64_RELOC_GOT_LOAD","","a MOVQ load of a GOT entry",null,null],[17,"X86_64_RELOC_GOT","","other GOT references",null,null],[17,"X86_64_RELOC_SUBTRACTOR","","must be followed by a X86_64_RELOC_UNSIGNED",null,null],[17,"X86_64_RELOC_SIGNED_1","","for signed 32-bit displacement with a -1 addend",null,null],[17,"X86_64_RELOC_SIGNED_2","","for signed 32-bit displacement with a -2 addend",null,null],[17,"X86_64_RELOC_SIGNED_4","","for signed 32-bit displacement with a -4 addend",null,null],[17,"X86_64_RELOC_TLV","","for thread local variables",null,null],[11,"r_scattered","","Determine whether this is a scattered relocation.",202,[[]]],[11,"info","","Return the fields of a plain relocation.",202,[[],["relocationinfo",3]]],[11,"scattered_info","","Return the fields of a scattered relocation.",202,[[],["scatteredrelocationinfo",3]]],[11,"relocation","","Combine the fields into a `Relocation`.",203,[[["endian",8]],[["relocation",3],["endian",8]]]],[11,"relocation","","Combine the fields into a `Relocation`.",204,[[["endian",8]],[["relocation",3],["endian",8]]]],[0,"pe","object","PE/COFF definitions.",null,null],[3,"ImageDosHeader","object::pe","DOS .EXE header",null,null],[12,"e_magic","","Magic number",205,null],[12,"e_cblp","","Bytes on last page of file",205,null],[12,"e_cp","","Pages in file",205,null],[12,"e_crlc","","Relocations",205,null],[12,"e_cparhdr","","Size of header in paragraphs",205,null],[12,"e_minalloc","","Minimum extra paragraphs needed",205,null],[12,"e_maxalloc","","Maximum extra paragraphs needed",205,null],[12,"e_ss","","Initial (relative) SS value",205,null],[12,"e_sp","","Initial SP value",205,null],[12,"e_csum","","Checksum",205,null],[12,"e_ip","","Initial IP value",205,null],[12,"e_cs","","Initial (relative) CS value",205,null],[12,"e_lfarlc","","File address of relocation table",205,null],[12,"e_ovno","","Overlay number",205,null],[12,"e_res","","Reserved words",205,null],[12,"e_oemid","","OEM identifier (for e_oeminfo)",205,null],[12,"e_oeminfo","","OEM information; e_oemid specific",205,null],[12,"e_res2","","Reserved words",205,null],[12,"e_lfanew","","File address of new exe header",205,null],[3,"ImageOs2Header","","OS/2 .EXE header",null,null],[12,"ne_magic","","Magic number",206,null],[12,"ne_ver","","Version number",206,null],[12,"ne_rev","","Revision number",206,null],[12,"ne_enttab","","Offset of Entry Table",206,null],[12,"ne_cbenttab","","Number of bytes in Entry Table",206,null],[12,"ne_crc","","Checksum of whole file",206,null],[12,"ne_flags","","Flag word",206,null],[12,"ne_autodata","","Automatic data segment number",206,null],[12,"ne_heap","","Initial heap allocation",206,null],[12,"ne_stack","","Initial stack allocation",206,null],[12,"ne_csip","","Initial CS:IP setting",206,null],[12,"ne_sssp","","Initial SS:SP setting",206,null],[12,"ne_cseg","","Count of file segments",206,null],[12,"ne_cmod","","Entries in Module Reference Table",206,null],[12,"ne_cbnrestab","","Size of non-resident name table",206,null],[12,"ne_segtab","","Offset of Segment Table",206,null],[12,"ne_rsrctab","","Offset of Resource Table",206,null],[12,"ne_restab","","Offset of resident name table",206,null],[12,"ne_modtab","","Offset of Module Reference Table",206,null],[12,"ne_imptab","","Offset of Imported Names Table",206,null],[12,"ne_nrestab","","Offset of Non-resident Names Table",206,null],[12,"ne_cmovent","","Count of movable entries",206,null],[12,"ne_align","","Segment alignment shift count",206,null],[12,"ne_cres","","Count of resource segments",206,null],[12,"ne_exetyp","","Target Operating system",206,null],[12,"ne_flagsothers","","Other .EXE flags",206,null],[12,"ne_pretthunks","","offset to return thunks",206,null],[12,"ne_psegrefbytes","","offset to segment ref. bytes",206,null],[12,"ne_swaparea","","Minimum code swap area size",206,null],[12,"ne_expver","","Expected Windows version number",206,null],[3,"ImageVxdHeader","","Windows VXD header",null,null],[12,"e32_magic","","Magic number",207,null],[12,"e32_border","","The byte ordering for the VXD",207,null],[12,"e32_worder","","The word ordering for the VXD",207,null],[12,"e32_level","","The EXE format level for now = 0",207,null],[12,"e32_cpu","","The CPU type",207,null],[12,"e32_os","","The OS type",207,null],[12,"e32_ver","","Module version",207,null],[12,"e32_mflags","","Module flags",207,null],[12,"e32_mpages","","Module # pages",207,null],[12,"e32_startobj","","Object # for instruction pointer",207,null],[12,"e32_eip","","Extended instruction pointer",207,null],[12,"e32_stackobj","","Object # for stack pointer",207,null],[12,"e32_esp","","Extended stack pointer",207,null],[12,"e32_pagesize","","VXD page size",207,null],[12,"e32_lastpagesize","","Last page size in VXD",207,null],[12,"e32_fixupsize","","Fixup section size",207,null],[12,"e32_fixupsum","","Fixup section checksum",207,null],[12,"e32_ldrsize","","Loader section size",207,null],[12,"e32_ldrsum","","Loader section checksum",207,null],[12,"e32_objtab","","Object table offset",207,null],[12,"e32_objcnt","","Number of objects in module",207,null],[12,"e32_objmap","","Object page map offset",207,null],[12,"e32_itermap","","Object iterated data map offset",207,null],[12,"e32_rsrctab","","Offset of Resource Table",207,null],[12,"e32_rsrccnt","","Number of resource entries",207,null],[12,"e32_restab","","Offset of resident name table",207,null],[12,"e32_enttab","","Offset of Entry Table",207,null],[12,"e32_dirtab","","Offset of Module Directive Table",207,null],[12,"e32_dircnt","","Number of module directives",207,null],[12,"e32_fpagetab","","Offset of Fixup Page Table",207,null],[12,"e32_frectab","","Offset of Fixup Record Table",207,null],[12,"e32_impmod","","Offset of Import Module Name Table",207,null],[12,"e32_impmodcnt","","Number of entries in Import Module Name Table",207,null],[12,"e32_impproc","","Offset of Import Procedure Name Table",207,null],[12,"e32_pagesum","","Offset of Per-Page Checksum Table",207,null],[12,"e32_datapage","","Offset of Enumerated Data Pages",207,null],[12,"e32_preload","","Number of preload pages",207,null],[12,"e32_nrestab","","Offset of Non-resident Names Table",207,null],[12,"e32_cbnrestab","","Size of Non-resident Name Table",207,null],[12,"e32_nressum","","Non-resident Name Table Checksum",207,null],[12,"e32_autodata","","Object # for automatic data object",207,null],[12,"e32_debuginfo","","Offset of the debugging information",207,null],[12,"e32_debuglen","","The length of the debugging info. in bytes",207,null],[12,"e32_instpreload","","Number of instance pages in preload section of VXD file",207,null],[12,"e32_instdemand","","Number of instance pages in demand load section of VXD file",207,null],[12,"e32_heapsize","","Size of heap - for 16-bit apps",207,null],[12,"e32_res3","","Reserved words",207,null],[12,"e32_winresoff","","",207,null],[12,"e32_winreslen","","",207,null],[12,"e32_devid","","Device ID for VxD",207,null],[12,"e32_ddkver","","DDK version for VxD",207,null],[3,"MaskedRichHeaderEntry","","A PE rich header entry.",null,null],[12,"masked_comp_id","","",208,null],[12,"masked_count","","",208,null],[3,"ImageFileHeader","","",null,null],[12,"machine","","",209,null],[12,"number_of_sections","","",209,null],[12,"time_date_stamp","","",209,null],[12,"pointer_to_symbol_table","","",209,null],[12,"number_of_symbols","","",209,null],[12,"size_of_optional_header","","",209,null],[12,"characteristics","","",209,null],[3,"ImageDataDirectory","","",null,null],[12,"virtual_address","","",210,null],[12,"size","","",210,null],[3,"ImageOptionalHeader32","","",null,null],[12,"magic","","",211,null],[12,"major_linker_version","","",211,null],[12,"minor_linker_version","","",211,null],[12,"size_of_code","","",211,null],[12,"size_of_initialized_data","","",211,null],[12,"size_of_uninitialized_data","","",211,null],[12,"address_of_entry_point","","",211,null],[12,"base_of_code","","",211,null],[12,"base_of_data","","",211,null],[12,"image_base","","",211,null],[12,"section_alignment","","",211,null],[12,"file_alignment","","",211,null],[12,"major_operating_system_version","","",211,null],[12,"minor_operating_system_version","","",211,null],[12,"major_image_version","","",211,null],[12,"minor_image_version","","",211,null],[12,"major_subsystem_version","","",211,null],[12,"minor_subsystem_version","","",211,null],[12,"win32_version_value","","",211,null],[12,"size_of_image","","",211,null],[12,"size_of_headers","","",211,null],[12,"check_sum","","",211,null],[12,"subsystem","","",211,null],[12,"dll_characteristics","","",211,null],[12,"size_of_stack_reserve","","",211,null],[12,"size_of_stack_commit","","",211,null],[12,"size_of_heap_reserve","","",211,null],[12,"size_of_heap_commit","","",211,null],[12,"loader_flags","","",211,null],[12,"number_of_rva_and_sizes","","",211,null],[3,"ImageRomOptionalHeader","","",null,null],[12,"magic","","",212,null],[12,"major_linker_version","","",212,null],[12,"minor_linker_version","","",212,null],[12,"size_of_code","","",212,null],[12,"size_of_initialized_data","","",212,null],[12,"size_of_uninitialized_data","","",212,null],[12,"address_of_entry_point","","",212,null],[12,"base_of_code","","",212,null],[12,"base_of_data","","",212,null],[12,"base_of_bss","","",212,null],[12,"gpr_mask","","",212,null],[12,"cpr_mask","","",212,null],[12,"gp_value","","",212,null],[3,"ImageOptionalHeader64","","",null,null],[12,"magic","","",213,null],[12,"major_linker_version","","",213,null],[12,"minor_linker_version","","",213,null],[12,"size_of_code","","",213,null],[12,"size_of_initialized_data","","",213,null],[12,"size_of_uninitialized_data","","",213,null],[12,"address_of_entry_point","","",213,null],[12,"base_of_code","","",213,null],[12,"image_base","","",213,null],[12,"section_alignment","","",213,null],[12,"file_alignment","","",213,null],[12,"major_operating_system_version","","",213,null],[12,"minor_operating_system_version","","",213,null],[12,"major_image_version","","",213,null],[12,"minor_image_version","","",213,null],[12,"major_subsystem_version","","",213,null],[12,"minor_subsystem_version","","",213,null],[12,"win32_version_value","","",213,null],[12,"size_of_image","","",213,null],[12,"size_of_headers","","",213,null],[12,"check_sum","","",213,null],[12,"subsystem","","",213,null],[12,"dll_characteristics","","",213,null],[12,"size_of_stack_reserve","","",213,null],[12,"size_of_stack_commit","","",213,null],[12,"size_of_heap_reserve","","",213,null],[12,"size_of_heap_commit","","",213,null],[12,"loader_flags","","",213,null],[12,"number_of_rva_and_sizes","","",213,null],[3,"ImageNtHeaders64","","",null,null],[12,"signature","","",214,null],[12,"file_header","","",214,null],[12,"optional_header","","",214,null],[3,"ImageNtHeaders32","","",null,null],[12,"signature","","",215,null],[12,"file_header","","",215,null],[12,"optional_header","","",215,null],[3,"ImageRomHeaders","","",null,null],[12,"file_header","","",216,null],[12,"optional_header","","",216,null],[3,"Guid","","",null,null],[12,"data1","","",217,null],[12,"data2","","",217,null],[12,"data3","","",217,null],[12,"data4","","",217,null],[3,"AnonObjectHeader","","Non-COFF Object file header",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",218,null],[12,"sig2","","Must be 0xffff",218,null],[12,"version","","= 1 (implies the ClsId field is present)",218,null],[12,"machine","","",218,null],[12,"time_date_stamp","","",218,null],[12,"class_id","","Used to invoke CoCreateInstance",218,null],[12,"size_of_data","","Size of data that follows the header",218,null],[3,"AnonObjectHeaderV2","","",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",219,null],[12,"sig2","","Must be 0xffff",219,null],[12,"version","","= 2 (implies the Flags field is present - otherwise V1)",219,null],[12,"machine","","",219,null],[12,"time_date_stamp","","",219,null],[12,"class_id","","Used to invoke CoCreateInstance",219,null],[12,"size_of_data","","Size of data that follows the header",219,null],[12,"flags","","0x1 -> contains metadata",219,null],[12,"meta_data_size","","Size of CLR metadata",219,null],[12,"meta_data_offset","","Offset of CLR metadata",219,null],[3,"AnonObjectHeaderBigobj","","",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",220,null],[12,"sig2","","Must be 0xffff",220,null],[12,"version","","= 2 (implies the Flags field is present)",220,null],[12,"machine","","Actual machine - IMAGE_FILE_MACHINE_xxx",220,null],[12,"time_date_stamp","","",220,null],[12,"class_id","","{D1BAA1C7-BAEE-4ba9-AF20-FAF66AA4DCB8}",220,null],[12,"size_of_data","","Size of data that follows the header",220,null],[12,"flags","","0x1 -> contains metadata",220,null],[12,"meta_data_size","","Size of CLR metadata",220,null],[12,"meta_data_offset","","Offset of CLR metadata",220,null],[12,"number_of_sections","","extended from WORD",220,null],[12,"pointer_to_symbol_table","","",220,null],[12,"number_of_symbols","","",220,null],[3,"ImageSectionHeader","","",null,null],[12,"name","","",221,null],[12,"virtual_size","","",221,null],[12,"virtual_address","","",221,null],[12,"size_of_raw_data","","",221,null],[12,"pointer_to_raw_data","","",221,null],[12,"pointer_to_relocations","","",221,null],[12,"pointer_to_linenumbers","","",221,null],[12,"number_of_relocations","","",221,null],[12,"number_of_linenumbers","","",221,null],[12,"characteristics","","",221,null],[3,"ImageSymbol","","",null,null],[12,"name","","If first 4 bytes are 0, then second 4 bytes are offset…",222,null],[12,"value","","",222,null],[12,"section_number","","",222,null],[12,"typ","","",222,null],[12,"storage_class","","",222,null],[12,"number_of_aux_symbols","","",222,null],[3,"ImageSymbolBytes","","",null,null],[12,"0","","",223,null],[3,"ImageSymbolEx","","",null,null],[12,"name","","If first 4 bytes are 0, then second 4 bytes are offset…",224,null],[12,"value","","",224,null],[12,"section_number","","",224,null],[12,"typ","","",224,null],[12,"storage_class","","",224,null],[12,"number_of_aux_symbols","","",224,null],[3,"ImageSymbolExBytes","","",null,null],[12,"0","","",225,null],[3,"ImageAuxSymbolTokenDef","","",null,null],[12,"aux_type","","IMAGE_AUX_SYMBOL_TYPE",226,null],[12,"reserved1","","Must be 0",226,null],[12,"symbol_table_index","","",226,null],[12,"reserved2","","Must be 0",226,null],[3,"ImageAuxSymbolFunction","","Auxiliary symbol format 1: function definitions.",null,null],[12,"tag_index","","",227,null],[12,"total_size","","",227,null],[12,"pointer_to_linenumber","","",227,null],[12,"pointer_to_next_function","","",227,null],[12,"unused","","",227,null],[3,"ImageAuxSymbolFunctionBeginEnd","","Auxiliary symbol format 2: .bf and .ef symbols.",null,null],[12,"unused1","","",228,null],[12,"linenumber","","declaration line number",228,null],[12,"unused2","","",228,null],[12,"pointer_to_next_function","","",228,null],[12,"unused3","","",228,null],[3,"ImageAuxSymbolWeak","","Auxiliary symbol format 3: weak externals.",null,null],[12,"weak_default_sym_index","","the weak extern default symbol index",229,null],[12,"weak_search_type","","",229,null],[3,"ImageAuxSymbolSection","","Auxiliary symbol format 5: sections.",null,null],[12,"length","","section length",230,null],[12,"number_of_relocations","","number of relocation entries",230,null],[12,"number_of_linenumbers","","number of line numbers",230,null],[12,"check_sum","","checksum for communal",230,null],[12,"number","","section number to associate with",230,null],[12,"selection","","communal selection type",230,null],[12,"reserved","","",230,null],[12,"high_number","","high bits of the section number",230,null],[3,"ImageAuxSymbolCrc","","",null,null],[12,"crc","","",231,null],[3,"ImageRelocation","","",null,null],[12,"virtual_address","","Also `RelocCount` when IMAGE_SCN_LNK_NRELOC_OVFL is set",232,null],[12,"symbol_table_index","","",232,null],[12,"typ","","",232,null],[3,"ImageLinenumber","","",null,null],[12,"symbol_table_index_or_virtual_address","","Symbol table index of function name if Linenumber is 0.…",233,null],[12,"linenumber","","Line number.",233,null],[3,"ImageBaseRelocation","","",null,null],[12,"virtual_address","","",234,null],[12,"size_of_block","","",234,null],[3,"ImageArchiveMemberHeader","","",null,null],[12,"name","","File member name - `/\' terminated.",235,null],[12,"date","","File member date - decimal.",235,null],[12,"user_id","","File member user id - decimal.",235,null],[12,"group_id","","File member group id - decimal.",235,null],[12,"mode","","File member mode - octal.",235,null],[12,"size","","File member size - decimal.",235,null],[12,"end_header","","String to end header.",235,null],[3,"ImageExportDirectory","","",null,null],[12,"characteristics","","",236,null],[12,"time_date_stamp","","",236,null],[12,"major_version","","",236,null],[12,"minor_version","","",236,null],[12,"name","","",236,null],[12,"base","","",236,null],[12,"number_of_functions","","",236,null],[12,"number_of_names","","",236,null],[12,"address_of_functions","","RVA from base of image",236,null],[12,"address_of_names","","RVA from base of image",236,null],[12,"address_of_name_ordinals","","RVA from base of image",236,null],[3,"ImageImportByName","","",null,null],[12,"hint","","",237,null],[3,"ImageThunkData64","","",null,null],[12,"0","","",238,null],[3,"ImageThunkData32","","",null,null],[12,"0","","",239,null],[3,"ImageTlsDirectory64","","",null,null],[12,"start_address_of_raw_data","","",240,null],[12,"end_address_of_raw_data","","",240,null],[12,"address_of_index","","PDWORD",240,null],[12,"address_of_call_backs","","PIMAGE_TLS_CALLBACK *;",240,null],[12,"size_of_zero_fill","","",240,null],[12,"characteristics","","",240,null],[3,"ImageTlsDirectory32","","",null,null],[12,"start_address_of_raw_data","","",241,null],[12,"end_address_of_raw_data","","",241,null],[12,"address_of_index","","PDWORD",241,null],[12,"address_of_call_backs","","PIMAGE_TLS_CALLBACK *",241,null],[12,"size_of_zero_fill","","",241,null],[12,"characteristics","","",241,null],[3,"ImageImportDescriptor","","",null,null],[12,"original_first_thunk","","RVA to original unbound IAT…",242,null],[12,"time_date_stamp","","0 if not bound, -1 if bound, and real date\\\\time stamp in…",242,null],[12,"forwarder_chain","","-1 if no forwarders",242,null],[12,"name","","",242,null],[12,"first_thunk","","RVA to IAT (if bound this IAT has actual addresses)",242,null],[3,"ImageBoundImportDescriptor","","",null,null],[12,"time_date_stamp","","",243,null],[12,"offset_module_name","","",243,null],[12,"number_of_module_forwarder_refs","","",243,null],[3,"ImageBoundForwarderRef","","",null,null],[12,"time_date_stamp","","",244,null],[12,"offset_module_name","","",244,null],[12,"reserved","","",244,null],[3,"ImageDelayloadDescriptor","","",null,null],[12,"attributes","","",245,null],[12,"dll_name_rva","","RVA to the name of the target library (NULL-terminate…",245,null],[12,"module_handle_rva","","RVA to the HMODULE caching location (PHMODULE)",245,null],[12,"import_address_table_rva","","RVA to the start of the IAT (PIMAGE_THUNK_DATA)",245,null],[12,"import_name_table_rva","","RVA to the start of the name table…",245,null],[12,"bound_import_address_table_rva","","RVA to an optional bound IAT",245,null],[12,"unload_information_table_rva","","RVA to an optional unload info table",245,null],[12,"time_date_stamp","","0 if not bound, otherwise, date/time of the target DLL",245,null],[3,"ImageResourceDirectory","","",null,null],[12,"characteristics","","",246,null],[12,"time_date_stamp","","",246,null],[12,"major_version","","",246,null],[12,"minor_version","","",246,null],[12,"number_of_named_entries","","",246,null],[12,"number_of_id_entries","","",246,null],[3,"ImageResourceDirectoryEntry","","",null,null],[12,"name_or_id","","",247,null],[12,"offset_to_data_or_directory","","",247,null],[3,"ImageResourceDirectoryString","","",null,null],[12,"length","","",248,null],[3,"ImageResourceDirStringU","","",null,null],[12,"length","","",249,null],[3,"ImageResourceDataEntry","","",null,null],[12,"offset_to_data","","",250,null],[12,"size","","",250,null],[12,"code_page","","",250,null],[12,"reserved","","",250,null],[3,"ImageLoadConfigCodeIntegrity","","",null,null],[12,"flags","","Flags to indicate if CI information is available, etc.",251,null],[12,"catalog","","0xFFFF means not available",251,null],[12,"catalog_offset","","",251,null],[12,"reserved","","Additional bitmask to be defined later",251,null],[3,"ImageDynamicRelocationTable","","",null,null],[12,"version","","",252,null],[12,"size","","",252,null],[3,"ImageDynamicRelocation32","","",null,null],[12,"symbol","","",253,null],[12,"base_reloc_size","","",253,null],[3,"ImageDynamicRelocation64","","",null,null],[12,"symbol","","",254,null],[12,"base_reloc_size","","",254,null],[3,"ImageDynamicRelocation32V2","","",null,null],[12,"header_size","","",255,null],[12,"fixup_info_size","","",255,null],[12,"symbol","","",255,null],[12,"symbol_group","","",255,null],[12,"flags","","",255,null],[3,"ImageDynamicRelocation64V2","","",null,null],[12,"header_size","","",256,null],[12,"fixup_info_size","","",256,null],[12,"symbol","","",256,null],[12,"symbol_group","","",256,null],[12,"flags","","",256,null],[3,"ImagePrologueDynamicRelocationHeader","","",null,null],[12,"prologue_byte_count","","",257,null],[3,"ImageEpilogueDynamicRelocationHeader","","",null,null],[12,"epilogue_count","","",258,null],[12,"epilogue_byte_count","","",258,null],[12,"branch_descriptor_element_size","","",258,null],[12,"branch_descriptor_count","","",258,null],[3,"ImageLoadConfigDirectory32","","",null,null],[12,"size","","",259,null],[12,"time_date_stamp","","",259,null],[12,"major_version","","",259,null],[12,"minor_version","","",259,null],[12,"global_flags_clear","","",259,null],[12,"global_flags_set","","",259,null],[12,"critical_section_default_timeout","","",259,null],[12,"de_commit_free_block_threshold","","",259,null],[12,"de_commit_total_free_threshold","","",259,null],[12,"lock_prefix_table","","VA",259,null],[12,"maximum_allocation_size","","",259,null],[12,"virtual_memory_threshold","","",259,null],[12,"process_heap_flags","","",259,null],[12,"process_affinity_mask","","",259,null],[12,"csd_version","","",259,null],[12,"dependent_load_flags","","",259,null],[12,"edit_list","","VA",259,null],[12,"security_cookie","","VA",259,null],[12,"sehandler_table","","VA",259,null],[12,"sehandler_count","","",259,null],[12,"guard_cf_check_function_pointer","","VA",259,null],[12,"guard_cf_dispatch_function_pointer","","VA",259,null],[12,"guard_cf_function_table","","VA",259,null],[12,"guard_cf_function_count","","",259,null],[12,"guard_flags","","",259,null],[12,"code_integrity","","",259,null],[12,"guard_address_taken_iat_entry_table","","VA",259,null],[12,"guard_address_taken_iat_entry_count","","",259,null],[12,"guard_long_jump_target_table","","VA",259,null],[12,"guard_long_jump_target_count","","",259,null],[12,"dynamic_value_reloc_table","","VA",259,null],[12,"chpe_metadata_pointer","","",259,null],[12,"guard_rf_failure_routine","","VA",259,null],[12,"guard_rf_failure_routine_function_pointer","","VA",259,null],[12,"dynamic_value_reloc_table_offset","","",259,null],[12,"dynamic_value_reloc_table_section","","",259,null],[12,"reserved2","","",259,null],[12,"guard_rf_verify_stack_pointer_function_pointer","","VA",259,null],[12,"hot_patch_table_offset","","",259,null],[12,"reserved3","","",259,null],[12,"enclave_configuration_pointer","","VA",259,null],[12,"volatile_metadata_pointer","","VA",259,null],[3,"ImageLoadConfigDirectory64","","",null,null],[12,"size","","",260,null],[12,"time_date_stamp","","",260,null],[12,"major_version","","",260,null],[12,"minor_version","","",260,null],[12,"global_flags_clear","","",260,null],[12,"global_flags_set","","",260,null],[12,"critical_section_default_timeout","","",260,null],[12,"de_commit_free_block_threshold","","",260,null],[12,"de_commit_total_free_threshold","","",260,null],[12,"lock_prefix_table","","VA",260,null],[12,"maximum_allocation_size","","",260,null],[12,"virtual_memory_threshold","","",260,null],[12,"process_affinity_mask","","",260,null],[12,"process_heap_flags","","",260,null],[12,"csd_version","","",260,null],[12,"dependent_load_flags","","",260,null],[12,"edit_list","","VA",260,null],[12,"security_cookie","","VA",260,null],[12,"sehandler_table","","VA",260,null],[12,"sehandler_count","","",260,null],[12,"guard_cf_check_function_pointer","","VA",260,null],[12,"guard_cf_dispatch_function_pointer","","VA",260,null],[12,"guard_cf_function_table","","VA",260,null],[12,"guard_cf_function_count","","",260,null],[12,"guard_flags","","",260,null],[12,"code_integrity","","",260,null],[12,"guard_address_taken_iat_entry_table","","VA",260,null],[12,"guard_address_taken_iat_entry_count","","",260,null],[12,"guard_long_jump_target_table","","VA",260,null],[12,"guard_long_jump_target_count","","",260,null],[12,"dynamic_value_reloc_table","","VA",260,null],[12,"chpe_metadata_pointer","","VA",260,null],[12,"guard_rf_failure_routine","","VA",260,null],[12,"guard_rf_failure_routine_function_pointer","","VA",260,null],[12,"dynamic_value_reloc_table_offset","","",260,null],[12,"dynamic_value_reloc_table_section","","",260,null],[12,"reserved2","","",260,null],[12,"guard_rf_verify_stack_pointer_function_pointer","","VA",260,null],[12,"hot_patch_table_offset","","",260,null],[12,"reserved3","","",260,null],[12,"enclave_configuration_pointer","","VA",260,null],[12,"volatile_metadata_pointer","","VA",260,null],[3,"ImageHotPatchInfo","","",null,null],[12,"version","","",261,null],[12,"size","","",261,null],[12,"sequence_number","","",261,null],[12,"base_image_list","","",261,null],[12,"base_image_count","","",261,null],[12,"buffer_offset","","Version 2 and later",261,null],[12,"extra_patch_size","","Version 3 and later",261,null],[3,"ImageHotPatchBase","","",null,null],[12,"sequence_number","","",262,null],[12,"flags","","",262,null],[12,"original_time_date_stamp","","",262,null],[12,"original_check_sum","","",262,null],[12,"code_integrity_info","","",262,null],[12,"code_integrity_size","","",262,null],[12,"patch_table","","",262,null],[12,"buffer_offset","","Version 2 and later",262,null],[3,"ImageHotPatchHashes","","",null,null],[12,"sha256","","",263,null],[12,"sha1","","",263,null],[3,"ImageArmRuntimeFunctionEntry","","",null,null],[12,"begin_address","","",264,null],[12,"unwind_data","","",264,null],[3,"ImageArm64RuntimeFunctionEntry","","",null,null],[12,"begin_address","","",265,null],[12,"unwind_data","","",265,null],[3,"ImageAlpha64RuntimeFunctionEntry","","",null,null],[12,"begin_address","","",266,null],[12,"end_address","","",266,null],[12,"exception_handler","","",266,null],[12,"handler_data","","",266,null],[12,"prolog_end_address","","",266,null],[3,"ImageAlphaRuntimeFunctionEntry","","",null,null],[12,"begin_address","","",267,null],[12,"end_address","","",267,null],[12,"exception_handler","","",267,null],[12,"handler_data","","",267,null],[12,"prolog_end_address","","",267,null],[3,"ImageRuntimeFunctionEntry","","",null,null],[12,"begin_address","","",268,null],[12,"end_address","","",268,null],[12,"unwind_info_address_or_data","","",268,null],[3,"ImageEnclaveConfig32","","",null,null],[12,"size","","",269,null],[12,"minimum_required_config_size","","",269,null],[12,"policy_flags","","",269,null],[12,"number_of_imports","","",269,null],[12,"import_list","","",269,null],[12,"import_entry_size","","",269,null],[12,"family_id","","",269,null],[12,"image_id","","",269,null],[12,"image_version","","",269,null],[12,"security_version","","",269,null],[12,"enclave_size","","",269,null],[12,"number_of_threads","","",269,null],[12,"enclave_flags","","",269,null],[3,"ImageEnclaveConfig64","","",null,null],[12,"size","","",270,null],[12,"minimum_required_config_size","","",270,null],[12,"policy_flags","","",270,null],[12,"number_of_imports","","",270,null],[12,"import_list","","",270,null],[12,"import_entry_size","","",270,null],[12,"family_id","","",270,null],[12,"image_id","","",270,null],[12,"image_version","","",270,null],[12,"security_version","","",270,null],[12,"enclave_size","","",270,null],[12,"number_of_threads","","",270,null],[12,"enclave_flags","","",270,null],[3,"ImageEnclaveImport","","",null,null],[12,"match_type","","",271,null],[12,"minimum_security_version","","",271,null],[12,"unique_or_author_id","","",271,null],[12,"family_id","","",271,null],[12,"image_id","","",271,null],[12,"import_name","","",271,null],[12,"reserved","","",271,null],[3,"ImageDebugDirectory","","",null,null],[12,"characteristics","","",272,null],[12,"time_date_stamp","","",272,null],[12,"major_version","","",272,null],[12,"minor_version","","",272,null],[12,"typ","","",272,null],[12,"size_of_data","","",272,null],[12,"address_of_raw_data","","",272,null],[12,"pointer_to_raw_data","","",272,null],[3,"ImageCoffSymbolsHeader","","",null,null],[12,"number_of_symbols","","",273,null],[12,"lva_to_first_symbol","","",273,null],[12,"number_of_linenumbers","","",273,null],[12,"lva_to_first_linenumber","","",273,null],[12,"rva_to_first_byte_of_code","","",273,null],[12,"rva_to_last_byte_of_code","","",273,null],[12,"rva_to_first_byte_of_data","","",273,null],[12,"rva_to_last_byte_of_data","","",273,null],[3,"ImageDebugMisc","","",null,null],[12,"data_type","","type of misc data, see defines",274,null],[12,"length","","total length of record, rounded to four byte multiple.",274,null],[12,"unicode","","TRUE if data is unicode string",274,null],[12,"reserved","","",274,null],[3,"ImageFunctionEntry","","",null,null],[12,"starting_address","","",275,null],[12,"ending_address","","",275,null],[12,"end_of_prologue","","",275,null],[3,"ImageFunctionEntry64","","",null,null],[12,"starting_address","","",276,null],[12,"ending_address","","",276,null],[12,"end_of_prologue_or_unwind_info_address","","",276,null],[3,"ImageSeparateDebugHeader","","",null,null],[12,"signature","","",277,null],[12,"flags","","",277,null],[12,"machine","","",277,null],[12,"characteristics","","",277,null],[12,"time_date_stamp","","",277,null],[12,"check_sum","","",277,null],[12,"image_base","","",277,null],[12,"size_of_image","","",277,null],[12,"number_of_sections","","",277,null],[12,"exported_names_size","","",277,null],[12,"debug_directory_size","","",277,null],[12,"section_alignment","","",277,null],[12,"reserved","","",277,null],[3,"NonPagedDebugInfo","","",null,null],[12,"signature","","",278,null],[12,"flags","","",278,null],[12,"size","","",278,null],[12,"machine","","",278,null],[12,"characteristics","","",278,null],[12,"time_date_stamp","","",278,null],[12,"check_sum","","",278,null],[12,"size_of_image","","",278,null],[12,"image_base","","",278,null],[3,"ImageArchitectureEntry","","",null,null],[12,"fixup_inst_rva","","RVA of instruction to fixup",279,null],[12,"new_inst","","fixup instruction (see alphaops.h)",279,null],[3,"ImportObjectHeader","","",null,null],[12,"sig1","","Must be IMAGE_FILE_MACHINE_UNKNOWN",280,null],[12,"sig2","","Must be IMPORT_OBJECT_HDR_SIG2.",280,null],[12,"version","","",280,null],[12,"machine","","",280,null],[12,"time_date_stamp","","Time/date stamp",280,null],[12,"size_of_data","","particularly useful for incremental links",280,null],[12,"ordinal_or_hint","","if grf & IMPORT_OBJECT_ORDINAL",280,null],[12,"name_type","","",280,null],[3,"ImageCor20Header","","",null,null],[12,"cb","","",281,null],[12,"major_runtime_version","","",281,null],[12,"minor_runtime_version","","",281,null],[12,"meta_data","","",281,null],[12,"flags","","",281,null],[12,"entry_point_token_or_rva","","",281,null],[12,"resources","","",281,null],[12,"strong_name_signature","","",281,null],[12,"code_manager_table","","",281,null],[12,"vtable_fixups","","",281,null],[12,"export_address_table_jumps","","",281,null],[12,"managed_native_header","","",281,null],[6,"ClsId","","",null,null],[17,"IMAGE_DOS_SIGNATURE","","MZ",null,null],[17,"IMAGE_OS2_SIGNATURE","","NE",null,null],[17,"IMAGE_OS2_SIGNATURE_LE","","LE",null,null],[17,"IMAGE_VXD_SIGNATURE","","LE",null,null],[17,"IMAGE_NT_SIGNATURE","","PE00",null,null],[17,"IMAGE_SIZEOF_FILE_HEADER","","",null,null],[17,"IMAGE_FILE_RELOCS_STRIPPED","","Relocation info stripped from file.",null,null],[17,"IMAGE_FILE_EXECUTABLE_IMAGE","","File is executable (i.e. no unresolved external…",null,null],[17,"IMAGE_FILE_LINE_NUMS_STRIPPED","","Line nunbers stripped from file.",null,null],[17,"IMAGE_FILE_LOCAL_SYMS_STRIPPED","","Local symbols stripped from file.",null,null],[17,"IMAGE_FILE_AGGRESIVE_WS_TRIM","","Aggressively trim working set",null,null],[17,"IMAGE_FILE_LARGE_ADDRESS_AWARE","","App can handle >2gb addresses",null,null],[17,"IMAGE_FILE_BYTES_REVERSED_LO","","Bytes of machine word are reversed.",null,null],[17,"IMAGE_FILE_32BIT_MACHINE","","32 bit word machine.",null,null],[17,"IMAGE_FILE_DEBUG_STRIPPED","","Debugging info stripped from file in .DBG file",null,null],[17,"IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP","","If Image is on removable media, copy and run from the swap…",null,null],[17,"IMAGE_FILE_NET_RUN_FROM_SWAP","","If Image is on Net, copy and run from the swap file.",null,null],[17,"IMAGE_FILE_SYSTEM","","System File.",null,null],[17,"IMAGE_FILE_DLL","","File is a DLL.",null,null],[17,"IMAGE_FILE_UP_SYSTEM_ONLY","","File should only be run on a UP machine",null,null],[17,"IMAGE_FILE_BYTES_REVERSED_HI","","Bytes of machine word are reversed.",null,null],[17,"IMAGE_FILE_MACHINE_UNKNOWN","","",null,null],[17,"IMAGE_FILE_MACHINE_TARGET_HOST","","Useful for indicating we want to interact with the host…",null,null],[17,"IMAGE_FILE_MACHINE_I386","","Intel 386.",null,null],[17,"IMAGE_FILE_MACHINE_R3000","","MIPS little-endian, 0x160 big-endian",null,null],[17,"IMAGE_FILE_MACHINE_R4000","","MIPS little-endian",null,null],[17,"IMAGE_FILE_MACHINE_R10000","","MIPS little-endian",null,null],[17,"IMAGE_FILE_MACHINE_WCEMIPSV2","","MIPS little-endian WCE v2",null,null],[17,"IMAGE_FILE_MACHINE_ALPHA","","Alpha_AXP",null,null],[17,"IMAGE_FILE_MACHINE_SH3","","SH3 little-endian",null,null],[17,"IMAGE_FILE_MACHINE_SH3DSP","","",null,null],[17,"IMAGE_FILE_MACHINE_SH3E","","SH3E little-endian",null,null],[17,"IMAGE_FILE_MACHINE_SH4","","SH4 little-endian",null,null],[17,"IMAGE_FILE_MACHINE_SH5","","SH5",null,null],[17,"IMAGE_FILE_MACHINE_ARM","","ARM Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_THUMB","","ARM Thumb/Thumb-2 Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_ARMNT","","ARM Thumb-2 Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_AM33","","",null,null],[17,"IMAGE_FILE_MACHINE_POWERPC","","IBM PowerPC Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_POWERPCFP","","",null,null],[17,"IMAGE_FILE_MACHINE_IA64","","Intel 64",null,null],[17,"IMAGE_FILE_MACHINE_MIPS16","","MIPS",null,null],[17,"IMAGE_FILE_MACHINE_ALPHA64","","ALPHA64",null,null],[17,"IMAGE_FILE_MACHINE_MIPSFPU","","MIPS",null,null],[17,"IMAGE_FILE_MACHINE_MIPSFPU16","","MIPS",null,null],[17,"IMAGE_FILE_MACHINE_AXP64","","",null,null],[17,"IMAGE_FILE_MACHINE_TRICORE","","Infineon",null,null],[17,"IMAGE_FILE_MACHINE_CEF","","",null,null],[17,"IMAGE_FILE_MACHINE_EBC","","EFI Byte Code",null,null],[17,"IMAGE_FILE_MACHINE_AMD64","","AMD64 (K8)",null,null],[17,"IMAGE_FILE_MACHINE_M32R","","M32R little-endian",null,null],[17,"IMAGE_FILE_MACHINE_ARM64","","ARM64 Little-Endian",null,null],[17,"IMAGE_FILE_MACHINE_CEE","","",null,null],[17,"IMAGE_FILE_MACHINE_RISCV32","","RISCV32",null,null],[17,"IMAGE_FILE_MACHINE_RISCV64","","RISCV64",null,null],[17,"IMAGE_FILE_MACHINE_RISCV128","","RISCV128",null,null],[17,"IMAGE_NUMBEROF_DIRECTORY_ENTRIES","","",null,null],[17,"IMAGE_NT_OPTIONAL_HDR32_MAGIC","","",null,null],[17,"IMAGE_NT_OPTIONAL_HDR64_MAGIC","","",null,null],[17,"IMAGE_ROM_OPTIONAL_HDR_MAGIC","","",null,null],[17,"IMAGE_SUBSYSTEM_UNKNOWN","","Unknown subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_NATIVE","","Image doesn\'t require a subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_GUI","","Image runs in the Windows GUI subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_CUI","","Image runs in the Windows character subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_OS2_CUI","","image runs in the OS/2 character subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_POSIX_CUI","","image runs in the Posix character subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_NATIVE_WINDOWS","","image is a native Win9x driver.",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_CE_GUI","","Image runs in the Windows CE subsystem.",null,null],[17,"IMAGE_SUBSYSTEM_EFI_APPLICATION","","",null,null],[17,"IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER","","",null,null],[17,"IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER","","",null,null],[17,"IMAGE_SUBSYSTEM_EFI_ROM","","",null,null],[17,"IMAGE_SUBSYSTEM_XBOX","","",null,null],[17,"IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION","","",null,null],[17,"IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG","","",null,null],[17,"IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA","","Image can handle a high entropy 64-bit virtual address…",null,null],[17,"IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE","","DLL can move.",null,null],[17,"IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY","","Code Integrity Image",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NX_COMPAT","","Image is NX compatible",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NO_ISOLATION","","Image understands isolation and doesn\'t want it",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NO_SEH","","Image does not use SEH. No SE handler may reside in this…",null,null],[17,"IMAGE_DLLCHARACTERISTICS_NO_BIND","","Do not bind this image.",null,null],[17,"IMAGE_DLLCHARACTERISTICS_APPCONTAINER","","Image should execute in an AppContainer",null,null],[17,"IMAGE_DLLCHARACTERISTICS_WDM_DRIVER","","Driver uses WDM model",null,null],[17,"IMAGE_DLLCHARACTERISTICS_GUARD_CF","","Image supports Control Flow Guard.",null,null],[17,"IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE","","",null,null],[17,"IMAGE_DIRECTORY_ENTRY_EXPORT","","Export Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_IMPORT","","Import Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_RESOURCE","","Resource Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_EXCEPTION","","Exception Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_SECURITY","","Security Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_BASERELOC","","Base Relocation Table",null,null],[17,"IMAGE_DIRECTORY_ENTRY_DEBUG","","Debug Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_ARCHITECTURE","","Architecture Specific Data",null,null],[17,"IMAGE_DIRECTORY_ENTRY_GLOBALPTR","","RVA of GP",null,null],[17,"IMAGE_DIRECTORY_ENTRY_TLS","","TLS Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG","","Load Configuration Directory",null,null],[17,"IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT","","Bound Import Directory in headers",null,null],[17,"IMAGE_DIRECTORY_ENTRY_IAT","","Import Address Table",null,null],[17,"IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT","","Delay Load Import Descriptors",null,null],[17,"IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","","COM Runtime descriptor",null,null],[17,"IMAGE_SIZEOF_SHORT_NAME","","",null,null],[17,"IMAGE_SIZEOF_SECTION_HEADER","","",null,null],[17,"IMAGE_SCN_TYPE_NO_PAD","","Reserved.",null,null],[17,"IMAGE_SCN_CNT_CODE","","Section contains code.",null,null],[17,"IMAGE_SCN_CNT_INITIALIZED_DATA","","Section contains initialized data.",null,null],[17,"IMAGE_SCN_CNT_UNINITIALIZED_DATA","","Section contains uninitialized data.",null,null],[17,"IMAGE_SCN_LNK_OTHER","","Reserved.",null,null],[17,"IMAGE_SCN_LNK_INFO","","Section contains comments or some other type of information.",null,null],[17,"IMAGE_SCN_LNK_REMOVE","","Section contents will not become part of image.",null,null],[17,"IMAGE_SCN_LNK_COMDAT","","Section contents comdat.",null,null],[17,"IMAGE_SCN_NO_DEFER_SPEC_EXC","","Reset speculative exceptions handling bits in the TLB…",null,null],[17,"IMAGE_SCN_GPREL","","Section content can be accessed relative to GP",null,null],[17,"IMAGE_SCN_MEM_FARDATA","","",null,null],[17,"IMAGE_SCN_MEM_PURGEABLE","","",null,null],[17,"IMAGE_SCN_MEM_16BIT","","",null,null],[17,"IMAGE_SCN_MEM_LOCKED","","",null,null],[17,"IMAGE_SCN_MEM_PRELOAD","","",null,null],[17,"IMAGE_SCN_ALIGN_1BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_2BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_4BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_8BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_16BYTES","","Default alignment if no others are specified.",null,null],[17,"IMAGE_SCN_ALIGN_32BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_64BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_128BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_256BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_512BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_1024BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_2048BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_4096BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_8192BYTES","","",null,null],[17,"IMAGE_SCN_ALIGN_MASK","","",null,null],[17,"IMAGE_SCN_LNK_NRELOC_OVFL","","Section contains extended relocations.",null,null],[17,"IMAGE_SCN_MEM_DISCARDABLE","","Section can be discarded.",null,null],[17,"IMAGE_SCN_MEM_NOT_CACHED","","Section is not cachable.",null,null],[17,"IMAGE_SCN_MEM_NOT_PAGED","","Section is not pageable.",null,null],[17,"IMAGE_SCN_MEM_SHARED","","Section is shareable.",null,null],[17,"IMAGE_SCN_MEM_EXECUTE","","Section is executable.",null,null],[17,"IMAGE_SCN_MEM_READ","","Section is readable.",null,null],[17,"IMAGE_SCN_MEM_WRITE","","Section is writeable.",null,null],[17,"IMAGE_SCN_SCALE_INDEX","","Tls index is scaled",null,null],[17,"IMAGE_SIZEOF_SYMBOL","","",null,null],[17,"IMAGE_SIZEOF_SYMBOL_EX","","",null,null],[17,"IMAGE_SYM_UNDEFINED","","Symbol is undefined or is common.",null,null],[17,"IMAGE_SYM_ABSOLUTE","","Symbol is an absolute value.",null,null],[17,"IMAGE_SYM_DEBUG","","Symbol is a special debug item.",null,null],[17,"IMAGE_SYM_SECTION_MAX","","Values 0xFF00-0xFFFF are special",null,null],[17,"IMAGE_SYM_SECTION_MAX_EX","","",null,null],[17,"IMAGE_SYM_TYPE_NULL","","no type.",null,null],[17,"IMAGE_SYM_TYPE_VOID","","",null,null],[17,"IMAGE_SYM_TYPE_CHAR","","type character.",null,null],[17,"IMAGE_SYM_TYPE_SHORT","","type short integer.",null,null],[17,"IMAGE_SYM_TYPE_INT","","",null,null],[17,"IMAGE_SYM_TYPE_LONG","","",null,null],[17,"IMAGE_SYM_TYPE_FLOAT","","",null,null],[17,"IMAGE_SYM_TYPE_DOUBLE","","",null,null],[17,"IMAGE_SYM_TYPE_STRUCT","","",null,null],[17,"IMAGE_SYM_TYPE_UNION","","",null,null],[17,"IMAGE_SYM_TYPE_ENUM","","enumeration.",null,null],[17,"IMAGE_SYM_TYPE_MOE","","member of enumeration.",null,null],[17,"IMAGE_SYM_TYPE_BYTE","","",null,null],[17,"IMAGE_SYM_TYPE_WORD","","",null,null],[17,"IMAGE_SYM_TYPE_UINT","","",null,null],[17,"IMAGE_SYM_TYPE_DWORD","","",null,null],[17,"IMAGE_SYM_TYPE_PCODE","","",null,null],[17,"IMAGE_SYM_DTYPE_NULL","","no derived type.",null,null],[17,"IMAGE_SYM_DTYPE_POINTER","","pointer.",null,null],[17,"IMAGE_SYM_DTYPE_FUNCTION","","function.",null,null],[17,"IMAGE_SYM_DTYPE_ARRAY","","array.",null,null],[17,"IMAGE_SYM_CLASS_END_OF_FUNCTION","","",null,null],[17,"IMAGE_SYM_CLASS_NULL","","",null,null],[17,"IMAGE_SYM_CLASS_AUTOMATIC","","",null,null],[17,"IMAGE_SYM_CLASS_EXTERNAL","","",null,null],[17,"IMAGE_SYM_CLASS_STATIC","","",null,null],[17,"IMAGE_SYM_CLASS_REGISTER","","",null,null],[17,"IMAGE_SYM_CLASS_EXTERNAL_DEF","","",null,null],[17,"IMAGE_SYM_CLASS_LABEL","","",null,null],[17,"IMAGE_SYM_CLASS_UNDEFINED_LABEL","","",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_STRUCT","","",null,null],[17,"IMAGE_SYM_CLASS_ARGUMENT","","",null,null],[17,"IMAGE_SYM_CLASS_STRUCT_TAG","","",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_UNION","","",null,null],[17,"IMAGE_SYM_CLASS_UNION_TAG","","",null,null],[17,"IMAGE_SYM_CLASS_TYPE_DEFINITION","","",null,null],[17,"IMAGE_SYM_CLASS_UNDEFINED_STATIC","","",null,null],[17,"IMAGE_SYM_CLASS_ENUM_TAG","","",null,null],[17,"IMAGE_SYM_CLASS_MEMBER_OF_ENUM","","",null,null],[17,"IMAGE_SYM_CLASS_REGISTER_PARAM","","",null,null],[17,"IMAGE_SYM_CLASS_BIT_FIELD","","",null,null],[17,"IMAGE_SYM_CLASS_FAR_EXTERNAL","","",null,null],[17,"IMAGE_SYM_CLASS_BLOCK","","",null,null],[17,"IMAGE_SYM_CLASS_FUNCTION","","",null,null],[17,"IMAGE_SYM_CLASS_END_OF_STRUCT","","",null,null],[17,"IMAGE_SYM_CLASS_FILE","","",null,null],[17,"IMAGE_SYM_CLASS_SECTION","","",null,null],[17,"IMAGE_SYM_CLASS_WEAK_EXTERNAL","","",null,null],[17,"IMAGE_SYM_CLASS_CLR_TOKEN","","",null,null],[17,"N_BTMASK","","",null,null],[17,"N_TMASK","","",null,null],[17,"N_TMASK1","","",null,null],[17,"N_TMASK2","","",null,null],[17,"N_BTSHFT","","",null,null],[17,"N_TSHIFT","","",null,null],[17,"IMAGE_SYM_DTYPE_SHIFT","","",null,null],[17,"IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF","","",null,null],[17,"IMAGE_COMDAT_SELECT_NODUPLICATES","","",null,null],[17,"IMAGE_COMDAT_SELECT_ANY","","",null,null],[17,"IMAGE_COMDAT_SELECT_SAME_SIZE","","",null,null],[17,"IMAGE_COMDAT_SELECT_EXACT_MATCH","","",null,null],[17,"IMAGE_COMDAT_SELECT_ASSOCIATIVE","","",null,null],[17,"IMAGE_COMDAT_SELECT_LARGEST","","",null,null],[17,"IMAGE_COMDAT_SELECT_NEWEST","","",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY","","",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_LIBRARY","","",null,null],[17,"IMAGE_WEAK_EXTERN_SEARCH_ALIAS","","",null,null],[17,"IMAGE_WEAK_EXTERN_ANTI_DEPENDENCY","","",null,null],[17,"IMAGE_REL_I386_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_I386_DIR16","","Direct 16-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_I386_REL16","","PC-relative 16-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_I386_DIR32","","Direct 32-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_I386_DIR32NB","","Direct 32-bit reference to the symbols virtual address,…",null,null],[17,"IMAGE_REL_I386_SEG12","","Direct 16-bit reference to the segment-selector bits of a…",null,null],[17,"IMAGE_REL_I386_SECTION","","",null,null],[17,"IMAGE_REL_I386_SECREL","","",null,null],[17,"IMAGE_REL_I386_TOKEN","","clr token",null,null],[17,"IMAGE_REL_I386_SECREL7","","7 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_I386_REL32","","PC-relative 32-bit reference to the symbols virtual address",null,null],[17,"IMAGE_REL_MIPS_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_MIPS_REFHALF","","",null,null],[17,"IMAGE_REL_MIPS_REFWORD","","",null,null],[17,"IMAGE_REL_MIPS_JMPADDR","","",null,null],[17,"IMAGE_REL_MIPS_REFHI","","",null,null],[17,"IMAGE_REL_MIPS_REFLO","","",null,null],[17,"IMAGE_REL_MIPS_GPREL","","",null,null],[17,"IMAGE_REL_MIPS_LITERAL","","",null,null],[17,"IMAGE_REL_MIPS_SECTION","","",null,null],[17,"IMAGE_REL_MIPS_SECREL","","",null,null],[17,"IMAGE_REL_MIPS_SECRELLO","","Low 16-bit section relative referemce (used for >32k TLS)",null,null],[17,"IMAGE_REL_MIPS_SECRELHI","","High 16-bit section relative reference (used for >32k TLS)",null,null],[17,"IMAGE_REL_MIPS_TOKEN","","clr token",null,null],[17,"IMAGE_REL_MIPS_JMPADDR16","","",null,null],[17,"IMAGE_REL_MIPS_REFWORDNB","","",null,null],[17,"IMAGE_REL_MIPS_PAIR","","",null,null],[17,"IMAGE_REL_ALPHA_ABSOLUTE","","",null,null],[17,"IMAGE_REL_ALPHA_REFLONG","","",null,null],[17,"IMAGE_REL_ALPHA_REFQUAD","","",null,null],[17,"IMAGE_REL_ALPHA_GPREL32","","",null,null],[17,"IMAGE_REL_ALPHA_LITERAL","","",null,null],[17,"IMAGE_REL_ALPHA_LITUSE","","",null,null],[17,"IMAGE_REL_ALPHA_GPDISP","","",null,null],[17,"IMAGE_REL_ALPHA_BRADDR","","",null,null],[17,"IMAGE_REL_ALPHA_HINT","","",null,null],[17,"IMAGE_REL_ALPHA_INLINE_REFLONG","","",null,null],[17,"IMAGE_REL_ALPHA_REFHI","","",null,null],[17,"IMAGE_REL_ALPHA_REFLO","","",null,null],[17,"IMAGE_REL_ALPHA_PAIR","","",null,null],[17,"IMAGE_REL_ALPHA_MATCH","","",null,null],[17,"IMAGE_REL_ALPHA_SECTION","","",null,null],[17,"IMAGE_REL_ALPHA_SECREL","","",null,null],[17,"IMAGE_REL_ALPHA_REFLONGNB","","",null,null],[17,"IMAGE_REL_ALPHA_SECRELLO","","Low 16-bit section relative reference",null,null],[17,"IMAGE_REL_ALPHA_SECRELHI","","High 16-bit section relative reference",null,null],[17,"IMAGE_REL_ALPHA_REFQ3","","High 16 bits of 48 bit reference",null,null],[17,"IMAGE_REL_ALPHA_REFQ2","","Middle 16 bits of 48 bit reference",null,null],[17,"IMAGE_REL_ALPHA_REFQ1","","Low 16 bits of 48 bit reference",null,null],[17,"IMAGE_REL_ALPHA_GPRELLO","","Low 16-bit GP relative reference",null,null],[17,"IMAGE_REL_ALPHA_GPRELHI","","High 16-bit GP relative reference",null,null],[17,"IMAGE_REL_PPC_ABSOLUTE","","NOP",null,null],[17,"IMAGE_REL_PPC_ADDR64","","64-bit address",null,null],[17,"IMAGE_REL_PPC_ADDR32","","32-bit address",null,null],[17,"IMAGE_REL_PPC_ADDR24","","26-bit address, shifted left 2 (branch absolute)",null,null],[17,"IMAGE_REL_PPC_ADDR16","","16-bit address",null,null],[17,"IMAGE_REL_PPC_ADDR14","","16-bit address, shifted left 2 (load doubleword)",null,null],[17,"IMAGE_REL_PPC_REL24","","26-bit PC-relative offset, shifted left 2 (branch relative)",null,null],[17,"IMAGE_REL_PPC_REL14","","16-bit PC-relative offset, shifted left 2 (br cond relative)",null,null],[17,"IMAGE_REL_PPC_TOCREL16","","16-bit offset from TOC base",null,null],[17,"IMAGE_REL_PPC_TOCREL14","","16-bit offset from TOC base, shifted left 2 (load…",null,null],[17,"IMAGE_REL_PPC_ADDR32NB","","32-bit addr w/o image base",null,null],[17,"IMAGE_REL_PPC_SECREL","","va of containing section (as in an image sectionhdr)",null,null],[17,"IMAGE_REL_PPC_SECTION","","sectionheader number",null,null],[17,"IMAGE_REL_PPC_IFGLUE","","substitute TOC restore instruction iff symbol is glue code",null,null],[17,"IMAGE_REL_PPC_IMGLUE","","symbol is glue code; virtual address is TOC restore…",null,null],[17,"IMAGE_REL_PPC_SECREL16","","va of containing section (limited to 16 bits)",null,null],[17,"IMAGE_REL_PPC_REFHI","","",null,null],[17,"IMAGE_REL_PPC_REFLO","","",null,null],[17,"IMAGE_REL_PPC_PAIR","","",null,null],[17,"IMAGE_REL_PPC_SECRELLO","","Low 16-bit section relative reference (used for >32k TLS)",null,null],[17,"IMAGE_REL_PPC_SECRELHI","","High 16-bit section relative reference (used for >32k TLS)",null,null],[17,"IMAGE_REL_PPC_GPREL","","",null,null],[17,"IMAGE_REL_PPC_TOKEN","","clr token",null,null],[17,"IMAGE_REL_PPC_TYPEMASK","","mask to isolate above values in IMAGE_RELOCATION.Type",null,null],[17,"IMAGE_REL_PPC_NEG","","subtract reloc value rather than adding it",null,null],[17,"IMAGE_REL_PPC_BRTAKEN","","fix branch prediction bit to predict branch taken",null,null],[17,"IMAGE_REL_PPC_BRNTAKEN","","fix branch prediction bit to predict branch not taken",null,null],[17,"IMAGE_REL_PPC_TOCDEFN","","toc slot defined in file (or, data in toc)",null,null],[17,"IMAGE_REL_SH3_ABSOLUTE","","No relocation",null,null],[17,"IMAGE_REL_SH3_DIRECT16","","16 bit direct",null,null],[17,"IMAGE_REL_SH3_DIRECT32","","32 bit direct",null,null],[17,"IMAGE_REL_SH3_DIRECT8","","8 bit direct, -128..255",null,null],[17,"IMAGE_REL_SH3_DIRECT8_WORD","","8 bit direct .W (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT8_LONG","","8 bit direct .L (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT4","","4 bit direct (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT4_WORD","","4 bit direct .W (0 ext.)",null,null],[17,"IMAGE_REL_SH3_DIRECT4_LONG","","4 bit direct .L (0 ext.)",null,null],[17,"IMAGE_REL_SH3_PCREL8_WORD","","8 bit PC relative .W",null,null],[17,"IMAGE_REL_SH3_PCREL8_LONG","","8 bit PC relative .L",null,null],[17,"IMAGE_REL_SH3_PCREL12_WORD","","12 LSB PC relative .W",null,null],[17,"IMAGE_REL_SH3_STARTOF_SECTION","","Start of EXE section",null,null],[17,"IMAGE_REL_SH3_SIZEOF_SECTION","","Size of EXE section",null,null],[17,"IMAGE_REL_SH3_SECTION","","Section table index",null,null],[17,"IMAGE_REL_SH3_SECREL","","Offset within section",null,null],[17,"IMAGE_REL_SH3_DIRECT32_NB","","32 bit direct not based",null,null],[17,"IMAGE_REL_SH3_GPREL4_LONG","","GP-relative addressing",null,null],[17,"IMAGE_REL_SH3_TOKEN","","clr token",null,null],[17,"IMAGE_REL_SHM_PCRELPT","","Offset from current instruction in longwords if not…",null,null],[17,"IMAGE_REL_SHM_REFLO","","Low bits of 32-bit address",null,null],[17,"IMAGE_REL_SHM_REFHALF","","High bits of 32-bit address",null,null],[17,"IMAGE_REL_SHM_RELLO","","Low bits of relative reference",null,null],[17,"IMAGE_REL_SHM_RELHALF","","High bits of relative reference",null,null],[17,"IMAGE_REL_SHM_PAIR","","offset operand for relocation",null,null],[17,"IMAGE_REL_SH_NOMODE","","relocation ignores section mode",null,null],[17,"IMAGE_REL_ARM_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_ARM_ADDR32","","32 bit address",null,null],[17,"IMAGE_REL_ARM_ADDR32NB","","32 bit address w/o image base",null,null],[17,"IMAGE_REL_ARM_BRANCH24","","24 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_ARM_BRANCH11","","Thumb: 2 11 bit offsets",null,null],[17,"IMAGE_REL_ARM_TOKEN","","clr token",null,null],[17,"IMAGE_REL_ARM_GPREL12","","GP-relative addressing (ARM)",null,null],[17,"IMAGE_REL_ARM_GPREL7","","GP-relative addressing (Thumb)",null,null],[17,"IMAGE_REL_ARM_BLX24","","",null,null],[17,"IMAGE_REL_ARM_BLX11","","",null,null],[17,"IMAGE_REL_ARM_SECTION","","Section table index",null,null],[17,"IMAGE_REL_ARM_SECREL","","Offset within section",null,null],[17,"IMAGE_REL_ARM_MOV32A","","ARM: MOVW/MOVT",null,null],[17,"IMAGE_REL_ARM_MOV32","","ARM: MOVW/MOVT (deprecated)",null,null],[17,"IMAGE_REL_ARM_MOV32T","","Thumb: MOVW/MOVT",null,null],[17,"IMAGE_REL_THUMB_MOV32","","Thumb: MOVW/MOVT (deprecated)",null,null],[17,"IMAGE_REL_ARM_BRANCH20T","","Thumb: 32-bit conditional B",null,null],[17,"IMAGE_REL_THUMB_BRANCH20","","Thumb: 32-bit conditional B (deprecated)",null,null],[17,"IMAGE_REL_ARM_BRANCH24T","","Thumb: 32-bit B or BL",null,null],[17,"IMAGE_REL_THUMB_BRANCH24","","Thumb: 32-bit B or BL (deprecated)",null,null],[17,"IMAGE_REL_ARM_BLX23T","","Thumb: BLX immediate",null,null],[17,"IMAGE_REL_THUMB_BLX23","","Thumb: BLX immediate (deprecated)",null,null],[17,"IMAGE_REL_AM_ABSOLUTE","","",null,null],[17,"IMAGE_REL_AM_ADDR32","","",null,null],[17,"IMAGE_REL_AM_ADDR32NB","","",null,null],[17,"IMAGE_REL_AM_CALL32","","",null,null],[17,"IMAGE_REL_AM_FUNCINFO","","",null,null],[17,"IMAGE_REL_AM_REL32_1","","",null,null],[17,"IMAGE_REL_AM_REL32_2","","",null,null],[17,"IMAGE_REL_AM_SECREL","","",null,null],[17,"IMAGE_REL_AM_SECTION","","",null,null],[17,"IMAGE_REL_AM_TOKEN","","",null,null],[17,"IMAGE_REL_ARM64_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_ARM64_ADDR32","","32 bit address. Review! do we need it?",null,null],[17,"IMAGE_REL_ARM64_ADDR32NB","","32 bit address w/o image base (RVA: for Data/PData/XData)",null,null],[17,"IMAGE_REL_ARM64_BRANCH26","","26 bit offset << 2 & sign ext. for B & BL",null,null],[17,"IMAGE_REL_ARM64_PAGEBASE_REL21","","ADRP",null,null],[17,"IMAGE_REL_ARM64_REL21","","ADR",null,null],[17,"IMAGE_REL_ARM64_PAGEOFFSET_12A","","ADD/ADDS (immediate) with zero shift, for page offset",null,null],[17,"IMAGE_REL_ARM64_PAGEOFFSET_12L","","LDR (indexed, unsigned immediate), for page offset",null,null],[17,"IMAGE_REL_ARM64_SECREL","","Offset within section",null,null],[17,"IMAGE_REL_ARM64_SECREL_LOW12A","","ADD/ADDS (immediate) with zero shift, for bit 0:11 of…",null,null],[17,"IMAGE_REL_ARM64_SECREL_HIGH12A","","ADD/ADDS (immediate) with zero shift, for bit 12:23 of…",null,null],[17,"IMAGE_REL_ARM64_SECREL_LOW12L","","LDR (indexed, unsigned immediate), for bit 0:11 of section…",null,null],[17,"IMAGE_REL_ARM64_TOKEN","","",null,null],[17,"IMAGE_REL_ARM64_SECTION","","Section table index",null,null],[17,"IMAGE_REL_ARM64_ADDR64","","64 bit address",null,null],[17,"IMAGE_REL_ARM64_BRANCH19","","19 bit offset << 2 & sign ext. for conditional B",null,null],[17,"IMAGE_REL_AMD64_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_AMD64_ADDR64","","64-bit address (VA).",null,null],[17,"IMAGE_REL_AMD64_ADDR32","","32-bit address (VA).",null,null],[17,"IMAGE_REL_AMD64_ADDR32NB","","32-bit address w/o image base (RVA).",null,null],[17,"IMAGE_REL_AMD64_REL32","","32-bit relative address from byte following reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_1","","32-bit relative address from byte distance 1 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_2","","32-bit relative address from byte distance 2 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_3","","32-bit relative address from byte distance 3 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_4","","32-bit relative address from byte distance 4 from reloc",null,null],[17,"IMAGE_REL_AMD64_REL32_5","","32-bit relative address from byte distance 5 from reloc",null,null],[17,"IMAGE_REL_AMD64_SECTION","","Section index",null,null],[17,"IMAGE_REL_AMD64_SECREL","","32 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_AMD64_SECREL7","","7 bit unsigned offset from base of section containing target",null,null],[17,"IMAGE_REL_AMD64_TOKEN","","32 bit metadata token",null,null],[17,"IMAGE_REL_AMD64_SREL32","","32 bit signed span-dependent value emitted into object",null,null],[17,"IMAGE_REL_AMD64_PAIR","","",null,null],[17,"IMAGE_REL_AMD64_SSPAN32","","32 bit signed span-dependent value applied at link time",null,null],[17,"IMAGE_REL_AMD64_EHANDLER","","",null,null],[17,"IMAGE_REL_AMD64_IMPORT_BR","","Indirect branch to an import",null,null],[17,"IMAGE_REL_AMD64_IMPORT_CALL","","Indirect call to an import",null,null],[17,"IMAGE_REL_AMD64_CFG_BR","","Indirect branch to a CFG check",null,null],[17,"IMAGE_REL_AMD64_CFG_BR_REX","","Indirect branch to a CFG check, with REX.W prefix",null,null],[17,"IMAGE_REL_AMD64_CFG_CALL","","Indirect call to a CFG check",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR","","Indirect branch to a target in RAX (no CFG)",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR_REX","","Indirect branch to a target in RAX, with REX.W prefix (no…",null,null],[17,"IMAGE_REL_AMD64_INDIR_CALL","","Indirect call to a target in RAX (no CFG)",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_FIRST","","Indirect branch for a switch table using Reg 0 (RAX)",null,null],[17,"IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_LAST","","Indirect branch for a switch table using Reg 15 (R15)",null,null],[17,"IMAGE_REL_IA64_ABSOLUTE","","",null,null],[17,"IMAGE_REL_IA64_IMM14","","",null,null],[17,"IMAGE_REL_IA64_IMM22","","",null,null],[17,"IMAGE_REL_IA64_IMM64","","",null,null],[17,"IMAGE_REL_IA64_DIR32","","",null,null],[17,"IMAGE_REL_IA64_DIR64","","",null,null],[17,"IMAGE_REL_IA64_PCREL21B","","",null,null],[17,"IMAGE_REL_IA64_PCREL21M","","",null,null],[17,"IMAGE_REL_IA64_PCREL21F","","",null,null],[17,"IMAGE_REL_IA64_GPREL22","","",null,null],[17,"IMAGE_REL_IA64_LTOFF22","","",null,null],[17,"IMAGE_REL_IA64_SECTION","","",null,null],[17,"IMAGE_REL_IA64_SECREL22","","",null,null],[17,"IMAGE_REL_IA64_SECREL64I","","",null,null],[17,"IMAGE_REL_IA64_SECREL32","","",null,null],[17,"IMAGE_REL_IA64_DIR32NB","","",null,null],[17,"IMAGE_REL_IA64_SREL14","","",null,null],[17,"IMAGE_REL_IA64_SREL22","","",null,null],[17,"IMAGE_REL_IA64_SREL32","","",null,null],[17,"IMAGE_REL_IA64_UREL32","","",null,null],[17,"IMAGE_REL_IA64_PCREL60X","","This is always a BRL and never converted",null,null],[17,"IMAGE_REL_IA64_PCREL60B","","If possible, convert to MBB bundle with NOP.B in slot 1",null,null],[17,"IMAGE_REL_IA64_PCREL60F","","If possible, convert to MFB bundle with NOP.F in slot 1",null,null],[17,"IMAGE_REL_IA64_PCREL60I","","If possible, convert to MIB bundle with NOP.I in slot 1",null,null],[17,"IMAGE_REL_IA64_PCREL60M","","If possible, convert to MMB bundle with NOP.M in slot 1",null,null],[17,"IMAGE_REL_IA64_IMMGPREL64","","",null,null],[17,"IMAGE_REL_IA64_TOKEN","","clr token",null,null],[17,"IMAGE_REL_IA64_GPREL32","","",null,null],[17,"IMAGE_REL_IA64_ADDEND","","",null,null],[17,"IMAGE_REL_CEF_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_CEF_ADDR32","","32-bit address (VA).",null,null],[17,"IMAGE_REL_CEF_ADDR64","","64-bit address (VA).",null,null],[17,"IMAGE_REL_CEF_ADDR32NB","","32-bit address w/o image base (RVA).",null,null],[17,"IMAGE_REL_CEF_SECTION","","Section index",null,null],[17,"IMAGE_REL_CEF_SECREL","","32 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_CEF_TOKEN","","32 bit metadata token",null,null],[17,"IMAGE_REL_CEE_ABSOLUTE","","Reference is absolute, no relocation is necessary",null,null],[17,"IMAGE_REL_CEE_ADDR32","","32-bit address (VA).",null,null],[17,"IMAGE_REL_CEE_ADDR64","","64-bit address (VA).",null,null],[17,"IMAGE_REL_CEE_ADDR32NB","","32-bit address w/o image base (RVA).",null,null],[17,"IMAGE_REL_CEE_SECTION","","Section index",null,null],[17,"IMAGE_REL_CEE_SECREL","","32 bit offset from base of section containing target",null,null],[17,"IMAGE_REL_CEE_TOKEN","","32 bit metadata token",null,null],[17,"IMAGE_REL_M32R_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_M32R_ADDR32","","32 bit address",null,null],[17,"IMAGE_REL_M32R_ADDR32NB","","32 bit address w/o image base",null,null],[17,"IMAGE_REL_M32R_ADDR24","","24 bit address",null,null],[17,"IMAGE_REL_M32R_GPREL16","","GP relative addressing",null,null],[17,"IMAGE_REL_M32R_PCREL24","","24 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_M32R_PCREL16","","16 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_M32R_PCREL8","","8 bit offset << 2 & sign ext.",null,null],[17,"IMAGE_REL_M32R_REFHALF","","16 MSBs",null,null],[17,"IMAGE_REL_M32R_REFHI","","16 MSBs; adj for LSB sign ext.",null,null],[17,"IMAGE_REL_M32R_REFLO","","16 LSBs",null,null],[17,"IMAGE_REL_M32R_PAIR","","Link HI and LO",null,null],[17,"IMAGE_REL_M32R_SECTION","","Section table index",null,null],[17,"IMAGE_REL_M32R_SECREL32","","32 bit section relative reference",null,null],[17,"IMAGE_REL_M32R_TOKEN","","clr token",null,null],[17,"IMAGE_REL_EBC_ABSOLUTE","","No relocation required",null,null],[17,"IMAGE_REL_EBC_ADDR32NB","","32 bit address w/o image base",null,null],[17,"IMAGE_REL_EBC_REL32","","32-bit relative address from byte following reloc",null,null],[17,"IMAGE_REL_EBC_SECTION","","Section table index",null,null],[17,"IMAGE_REL_EBC_SECREL","","Offset within section",null,null],[17,"EMARCH_ENC_I17_IMM7B_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM7B_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM7B_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM9D_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM5C_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IC_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41A_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41B_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_IMM41C_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_SIZE_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"EMARCH_ENC_I17_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_OPCODE_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_I_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_I_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_I_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_I_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_D_WH_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM20_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_1_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_IMM39_2_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_P_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_P_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_P_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_P_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_TMPLT_SIGN_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_BTYPE_QP_INST_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_INST_WORD_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_SIZE_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_INST_WORD_POS_X","","Intel-IA64-Filler",null,null],[17,"X3_EMPTY_INST_VAL_POS_X","","Intel-IA64-Filler",null,null],[17,"IMAGE_REL_BASED_ABSOLUTE","","",null,null],[17,"IMAGE_REL_BASED_HIGH","","",null,null],[17,"IMAGE_REL_BASED_LOW","","",null,null],[17,"IMAGE_REL_BASED_HIGHLOW","","",null,null],[17,"IMAGE_REL_BASED_HIGHADJ","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_5","","",null,null],[17,"IMAGE_REL_BASED_RESERVED","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_7","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_8","","",null,null],[17,"IMAGE_REL_BASED_MACHINE_SPECIFIC_9","","",null,null],[17,"IMAGE_REL_BASED_DIR64","","",null,null],[17,"IMAGE_REL_BASED_IA64_IMM64","","",null,null],[17,"IMAGE_REL_BASED_MIPS_JMPADDR","","",null,null],[17,"IMAGE_REL_BASED_MIPS_JMPADDR16","","",null,null],[17,"IMAGE_REL_BASED_ARM_MOV32","","",null,null],[17,"IMAGE_REL_BASED_THUMB_MOV32","","",null,null],[17,"IMAGE_REL_BASED_RISCV_HIGH20","","",null,null],[17,"IMAGE_REL_BASED_RISCV_LOW12I","","",null,null],[17,"IMAGE_REL_BASED_RISCV_LOW12S","","",null,null],[17,"IMAGE_ARCHIVE_START_SIZE","","",null,null],[17,"IMAGE_ARCHIVE_START","","",null,null],[17,"IMAGE_ARCHIVE_END","","",null,null],[17,"IMAGE_ARCHIVE_PAD","","",null,null],[17,"IMAGE_ARCHIVE_LINKER_MEMBER","","",null,null],[17,"IMAGE_ARCHIVE_LONGNAMES_MEMBER","","",null,null],[17,"IMAGE_ARCHIVE_HYBRIDMAP_MEMBER","","",null,null],[17,"IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR","","",null,null],[17,"IMAGE_ORDINAL_FLAG64","","",null,null],[17,"IMAGE_ORDINAL_FLAG32","","",null,null],[17,"IMAGE_DELAYLOAD_RVA_BASED","","Delay load version 2 flag for…",null,null],[17,"IMAGE_RESOURCE_NAME_IS_STRING","","",null,null],[17,"IMAGE_RESOURCE_DATA_IS_DIRECTORY","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_RF_PROLOGUE","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_RF_EPILOGUE","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_IMPORT_CONTROL_TRANSFER","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_INDIR_CONTROL_TRANSFER","","",null,null],[17,"IMAGE_DYNAMIC_RELOCATION_GUARD_SWITCHTABLE_BRANCH","","",null,null],[17,"IMAGE_HOT_PATCH_BASE_OBLIGATORY","","",null,null],[17,"IMAGE_HOT_PATCH_BASE_CAN_ROLL_BACK","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_INVERSE","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_OBLIGATORY","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_RESERVED","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_TYPE","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_SOURCE_RVA","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_TARGET_RVA","","",null,null],[17,"IMAGE_HOT_PATCH_CHUNK_SIZE","","",null,null],[17,"IMAGE_HOT_PATCH_NONE","","",null,null],[17,"IMAGE_HOT_PATCH_FUNCTION","","",null,null],[17,"IMAGE_HOT_PATCH_ABSOLUTE","","",null,null],[17,"IMAGE_HOT_PATCH_REL32","","",null,null],[17,"IMAGE_HOT_PATCH_CALL_TARGET","","",null,null],[17,"IMAGE_HOT_PATCH_INDIRECT","","",null,null],[17,"IMAGE_HOT_PATCH_NO_CALL_TARGET","","",null,null],[17,"IMAGE_HOT_PATCH_DYNAMIC_VALUE","","",null,null],[17,"IMAGE_GUARD_CF_INSTRUMENTED","","Module performs control flow integrity checks using…",null,null],[17,"IMAGE_GUARD_CFW_INSTRUMENTED","","Module performs control flow and write integrity checks",null,null],[17,"IMAGE_GUARD_CF_FUNCTION_TABLE_PRESENT","","Module contains valid control flow target metadata",null,null],[17,"IMAGE_GUARD_SECURITY_COOKIE_UNUSED","","Module does not make use of the /GS security cookie",null,null],[17,"IMAGE_GUARD_PROTECT_DELAYLOAD_IAT","","Module supports read only delay load IAT",null,null],[17,"IMAGE_GUARD_DELAYLOAD_IAT_IN_ITS_OWN_SECTION","","Delayload import table in its own .didat section (with…",null,null],[17,"IMAGE_GUARD_CF_EXPORT_SUPPRESSION_INFO_PRESENT","","Module contains suppressed export information.",null,null],[17,"IMAGE_GUARD_CF_ENABLE_EXPORT_SUPPRESSION","","Module enables suppression of exports",null,null],[17,"IMAGE_GUARD_CF_LONGJUMP_TABLE_PRESENT","","Module contains longjmp target information",null,null],[17,"IMAGE_GUARD_RF_INSTRUMENTED","","Module contains return flow instrumentation and metadata",null,null],[17,"IMAGE_GUARD_RF_ENABLE","","Module requests that the OS enable return flow protection",null,null],[17,"IMAGE_GUARD_RF_STRICT","","Module requests that the OS enable return flow protection…",null,null],[17,"IMAGE_GUARD_RETPOLINE_PRESENT","","Module was built with retpoline support",null,null],[17,"IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK","","Stride of Guard CF function table encoded in these bits…",null,null],[17,"IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_SHIFT","","Shift to right-justify Guard CF function table stride",null,null],[17,"IMAGE_GUARD_FLAG_FID_SUPPRESSED","","The containing GFID entry is suppressed",null,null],[17,"IMAGE_GUARD_FLAG_EXPORT_SUPPRESSED","","The containing GFID entry is export suppressed",null,null],[17,"IMAGE_ENCLAVE_LONG_ID_LENGTH","","",null,null],[17,"IMAGE_ENCLAVE_SHORT_ID_LENGTH","","",null,null],[17,"IMAGE_ENCLAVE_POLICY_DEBUGGABLE","","",null,null],[17,"IMAGE_ENCLAVE_FLAG_PRIMARY_IMAGE","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_NONE","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_UNIQUE_ID","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_AUTHOR_ID","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_FAMILY_ID","","",null,null],[17,"IMAGE_ENCLAVE_IMPORT_MATCH_IMAGE_ID","","",null,null],[17,"IMAGE_DEBUG_TYPE_UNKNOWN","","",null,null],[17,"IMAGE_DEBUG_TYPE_COFF","","",null,null],[17,"IMAGE_DEBUG_TYPE_CODEVIEW","","",null,null],[17,"IMAGE_DEBUG_TYPE_FPO","","",null,null],[17,"IMAGE_DEBUG_TYPE_MISC","","",null,null],[17,"IMAGE_DEBUG_TYPE_EXCEPTION","","",null,null],[17,"IMAGE_DEBUG_TYPE_FIXUP","","",null,null],[17,"IMAGE_DEBUG_TYPE_OMAP_TO_SRC","","",null,null],[17,"IMAGE_DEBUG_TYPE_OMAP_FROM_SRC","","",null,null],[17,"IMAGE_DEBUG_TYPE_BORLAND","","",null,null],[17,"IMAGE_DEBUG_TYPE_RESERVED10","","",null,null],[17,"IMAGE_DEBUG_TYPE_CLSID","","",null,null],[17,"IMAGE_DEBUG_TYPE_VC_FEATURE","","",null,null],[17,"IMAGE_DEBUG_TYPE_POGO","","",null,null],[17,"IMAGE_DEBUG_TYPE_ILTCG","","",null,null],[17,"IMAGE_DEBUG_TYPE_MPX","","",null,null],[17,"IMAGE_DEBUG_TYPE_REPRO","","",null,null],[17,"FRAME_FPO","","",null,null],[17,"FRAME_TRAP","","",null,null],[17,"FRAME_TSS","","",null,null],[17,"FRAME_NONFPO","","",null,null],[17,"IMAGE_DEBUG_MISC_EXENAME","","",null,null],[17,"IMAGE_SEPARATE_DEBUG_SIGNATURE","","",null,null],[17,"NON_PAGED_DEBUG_SIGNATURE","","",null,null],[17,"IMAGE_SEPARATE_DEBUG_FLAGS_MASK","","",null,null],[17,"IMAGE_SEPARATE_DEBUG_MISMATCH","","when DBG was updated, the old checksum didn\'t match.",null,null],[17,"IMPORT_OBJECT_HDR_SIG2","","",null,null],[17,"IMPORT_OBJECT_CODE","","",null,null],[17,"IMPORT_OBJECT_DATA","","",null,null],[17,"IMPORT_OBJECT_CONST","","",null,null],[17,"IMPORT_OBJECT_ORDINAL","","Import by ordinal",null,null],[17,"IMPORT_OBJECT_NAME","","Import name == public symbol name.",null,null],[17,"IMPORT_OBJECT_NAME_NO_PREFIX","","Import name == public symbol name skipping leading ?, @,…",null,null],[17,"IMPORT_OBJECT_NAME_UNDECORATE","","Import name == public symbol name skipping leading ?, @,…",null,null],[17,"IMPORT_OBJECT_NAME_EXPORTAS","","Import name == a name is explicitly provided after the DLL…",null,null],[17,"COMIMAGE_FLAGS_ILONLY","","",null,null],[17,"COMIMAGE_FLAGS_32BITREQUIRED","","",null,null],[17,"COMIMAGE_FLAGS_IL_LIBRARY","","",null,null],[17,"COMIMAGE_FLAGS_STRONGNAMESIGNED","","",null,null],[17,"COMIMAGE_FLAGS_NATIVE_ENTRYPOINT","","",null,null],[17,"COMIMAGE_FLAGS_TRACKDEBUGDATA","","",null,null],[17,"COMIMAGE_FLAGS_32BITPREFERRED","","",null,null],[17,"COR_VERSION_MAJOR_V2","","",null,null],[17,"COR_VERSION_MAJOR","","",null,null],[17,"COR_VERSION_MINOR","","",null,null],[17,"COR_DELETED_NAME_LENGTH","","",null,null],[17,"COR_VTABLEGAP_NAME_LENGTH","","",null,null],[17,"NATIVE_TYPE_MAX_CB","","",null,null],[17,"COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE","","",null,null],[17,"IMAGE_COR_MIH_METHODRVA","","",null,null],[17,"IMAGE_COR_MIH_EHRVA","","",null,null],[17,"IMAGE_COR_MIH_BASICBLOCK","","",null,null],[17,"COR_VTABLE_32BIT","","V-table slots are 32-bits in size.",null,null],[17,"COR_VTABLE_64BIT","","V-table slots are 64-bits in size.",null,null],[17,"COR_VTABLE_FROM_UNMANAGED","","If set, transition from unmanaged.",null,null],[17,"COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN","","If set, transition from unmanaged with keeping the current…",null,null],[17,"COR_VTABLE_CALL_MOST_DERIVED","","Call most derived method described by",null,null],[17,"IMAGE_COR_EATJ_THUNK_SIZE","","Size of a jump thunk reserved range.",null,null],[17,"MAX_CLASS_NAME","","",null,null],[17,"MAX_PACKAGE_NAME","","",null,null],[11,"base_type","","",222,[[]]],[11,"derived_type","","",222,[[]]],[11,"base_type","","",224,[[]]],[11,"derived_type","","",224,[[]]],[11,"is_null","","Tell whether this import descriptor is the null descriptor…",242,[[]]],[11,"from","object","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"from","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"from","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"from","object::endian","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"into","","",282,[[]]],[11,"try_into","","",282,[[],["result",4]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"from","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"into","","",283,[[]]],[11,"try_into","","",283,[[],["result",4]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"from","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"from","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"from","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"from","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"from","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"from","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"from","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"from","object::read","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"from","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"from","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",284,[[]]],[11,"into_iter","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"into","","",284,[[]]],[11,"try_into","","",284,[[],["result",4]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"from","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"into","","",285,[[]]],[11,"try_into","","",285,[[],["result",4]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"from","","",286,[[]]],[11,"into_iter","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"into","","",286,[[]]],[11,"try_into","","",286,[[],["result",4]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"from","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"into","","",287,[[]]],[11,"try_into","","",287,[[],["result",4]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"from","","",288,[[]]],[11,"into_iter","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"into","","",288,[[]]],[11,"try_into","","",288,[[],["result",4]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"from","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"into","","",289,[[]]],[11,"try_into","","",289,[[],["result",4]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"from","","",290,[[]]],[11,"into_iter","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"into","","",290,[[]]],[11,"try_into","","",290,[[],["result",4]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"from","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"into","","",291,[[]]],[11,"try_into","","",291,[[],["result",4]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"from","","",292,[[]]],[11,"into_iter","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"into","","",292,[[]]],[11,"try_into","","",292,[[],["result",4]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"from","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"into","","",293,[[]]],[11,"try_into","","",293,[[],["result",4]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"from","","",294,[[]]],[11,"into_iter","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"into","","",294,[[]]],[11,"try_into","","",294,[[],["result",4]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"from","","",295,[[]]],[11,"into_iter","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"into","","",295,[[]]],[11,"try_into","","",295,[[],["result",4]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"from","","",296,[[]]],[11,"into_iter","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"into","","",296,[[]]],[11,"try_into","","",296,[[],["result",4]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"from","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"into","","",297,[[]]],[11,"try_into","","",297,[[],["result",4]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"to_owned","","",297,[[]]],[11,"clone_into","","",297,[[]]],[11,"to_string","","",297,[[],["string",3]]],[11,"from","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"from","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"from","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"from","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"from","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"from","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"from","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"from","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"from","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"from","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"from","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"from","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"from","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"from","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"from","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"from","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"from","object::read::archive","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",298,[[]]],[11,"into_iter","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"into","","",298,[[]]],[11,"try_into","","",298,[[],["result",4]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"from","object::read::coff","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"from","","",299,[[]]],[11,"into_iter","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"into","","",299,[[]]],[11,"try_into","","",299,[[],["result",4]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"from","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"into","","",300,[[]]],[11,"try_into","","",300,[[],["result",4]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"from","","",301,[[]]],[11,"into_iter","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"into","","",301,[[]]],[11,"try_into","","",301,[[],["result",4]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"from","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"into","","",302,[[]]],[11,"try_into","","",302,[[],["result",4]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",303,[[]]],[11,"into_iter","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"into","","",303,[[]]],[11,"try_into","","",303,[[],["result",4]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"from","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"into","","",304,[[]]],[11,"try_into","","",304,[[],["result",4]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"from","","",305,[[]]],[11,"into_iter","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"into","","",305,[[]]],[11,"try_into","","",305,[[],["result",4]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"from","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"into","","",306,[[]]],[11,"try_into","","",306,[[],["result",4]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"from","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"into","","",307,[[]]],[11,"try_into","","",307,[[],["result",4]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"into","","",308,[[]]],[11,"try_into","","",308,[[],["result",4]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"into","","",309,[[]]],[11,"try_into","","",309,[[],["result",4]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"into","","",310,[[]]],[11,"try_into","","",310,[[],["result",4]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","object::read::elf","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"into","","",311,[[]]],[11,"try_into","","",311,[[],["result",4]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"from","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"into","","",312,[[]]],[11,"try_into","","",312,[[],["result",4]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"from","","",313,[[]]],[11,"into_iter","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"into","","",313,[[]]],[11,"try_into","","",313,[[],["result",4]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"from","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"into","","",314,[[]]],[11,"try_into","","",314,[[],["result",4]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"from","","",315,[[]]],[11,"try_from","","",315,[[],["result",4]]],[11,"into","","",315,[[]]],[11,"try_into","","",315,[[],["result",4]]],[11,"borrow","","",315,[[]]],[11,"borrow_mut","","",315,[[]]],[11,"type_id","","",315,[[],["typeid",3]]],[11,"to_owned","","",315,[[]]],[11,"clone_into","","",315,[[]]],[11,"from","","",316,[[]]],[11,"into_iter","","",316,[[]]],[11,"try_from","","",316,[[],["result",4]]],[11,"into","","",316,[[]]],[11,"try_into","","",316,[[],["result",4]]],[11,"borrow","","",316,[[]]],[11,"borrow_mut","","",316,[[]]],[11,"type_id","","",316,[[],["typeid",3]]],[11,"from","","",317,[[]]],[11,"try_from","","",317,[[],["result",4]]],[11,"into","","",317,[[]]],[11,"try_into","","",317,[[],["result",4]]],[11,"borrow","","",317,[[]]],[11,"borrow_mut","","",317,[[]]],[11,"type_id","","",317,[[],["typeid",3]]],[11,"to_owned","","",317,[[]]],[11,"clone_into","","",317,[[]]],[11,"from","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",318,[[]]],[11,"into_iter","","",318,[[]]],[11,"try_from","","",318,[[],["result",4]]],[11,"into","","",318,[[]]],[11,"try_into","","",318,[[],["result",4]]],[11,"borrow","","",318,[[]]],[11,"borrow_mut","","",318,[[]]],[11,"type_id","","",318,[[],["typeid",3]]],[11,"from","","",319,[[]]],[11,"into_iter","","",319,[[]]],[11,"try_from","","",319,[[],["result",4]]],[11,"into","","",319,[[]]],[11,"try_into","","",319,[[],["result",4]]],[11,"borrow","","",319,[[]]],[11,"borrow_mut","","",319,[[]]],[11,"type_id","","",319,[[],["typeid",3]]],[11,"from","","",320,[[]]],[11,"into_iter","","",320,[[]]],[11,"try_from","","",320,[[],["result",4]]],[11,"into","","",320,[[]]],[11,"try_into","","",320,[[],["result",4]]],[11,"borrow","","",320,[[]]],[11,"borrow_mut","","",320,[[]]],[11,"type_id","","",320,[[],["typeid",3]]],[11,"from","","",321,[[]]],[11,"try_from","","",321,[[],["result",4]]],[11,"into","","",321,[[]]],[11,"try_into","","",321,[[],["result",4]]],[11,"borrow","","",321,[[]]],[11,"borrow_mut","","",321,[[]]],[11,"type_id","","",321,[[],["typeid",3]]],[11,"from","","",322,[[]]],[11,"into_iter","","",322,[[]]],[11,"try_from","","",322,[[],["result",4]]],[11,"into","","",322,[[]]],[11,"try_into","","",322,[[],["result",4]]],[11,"borrow","","",322,[[]]],[11,"borrow_mut","","",322,[[]]],[11,"type_id","","",322,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"from","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"from","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"from","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"from","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"from","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"from","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"from","object::read::macho","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",323,[[]]],[11,"into_iter","","",323,[[]]],[11,"try_from","","",323,[[],["result",4]]],[11,"into","","",323,[[]]],[11,"try_into","","",323,[[],["result",4]]],[11,"borrow","","",323,[[]]],[11,"borrow_mut","","",323,[[]]],[11,"type_id","","",323,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",324,[[]]],[11,"into_iter","","",324,[[]]],[11,"try_from","","",324,[[],["result",4]]],[11,"into","","",324,[[]]],[11,"try_into","","",324,[[],["result",4]]],[11,"borrow","","",324,[[]]],[11,"borrow_mut","","",324,[[]]],[11,"type_id","","",324,[[],["typeid",3]]],[11,"from","","",325,[[]]],[11,"try_from","","",325,[[],["result",4]]],[11,"into","","",325,[[]]],[11,"try_into","","",325,[[],["result",4]]],[11,"borrow","","",325,[[]]],[11,"borrow_mut","","",325,[[]]],[11,"type_id","","",325,[[],["typeid",3]]],[11,"from","","",326,[[]]],[11,"into_iter","","",326,[[]]],[11,"try_from","","",326,[[],["result",4]]],[11,"into","","",326,[[]]],[11,"try_into","","",326,[[],["result",4]]],[11,"borrow","","",326,[[]]],[11,"borrow_mut","","",326,[[]]],[11,"type_id","","",326,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"from","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"from","","",327,[[]]],[11,"into_iter","","",327,[[]]],[11,"try_from","","",327,[[],["result",4]]],[11,"into","","",327,[[]]],[11,"try_into","","",327,[[],["result",4]]],[11,"borrow","","",327,[[]]],[11,"borrow_mut","","",327,[[]]],[11,"type_id","","",327,[[],["typeid",3]]],[11,"from","","",328,[[]]],[11,"try_from","","",328,[[],["result",4]]],[11,"into","","",328,[[]]],[11,"try_into","","",328,[[],["result",4]]],[11,"borrow","","",328,[[]]],[11,"borrow_mut","","",328,[[]]],[11,"type_id","","",328,[[],["typeid",3]]],[11,"from","","",329,[[]]],[11,"into_iter","","",329,[[]]],[11,"try_from","","",329,[[],["result",4]]],[11,"into","","",329,[[]]],[11,"try_into","","",329,[[],["result",4]]],[11,"borrow","","",329,[[]]],[11,"borrow_mut","","",329,[[]]],[11,"type_id","","",329,[[],["typeid",3]]],[11,"from","","",330,[[]]],[11,"try_from","","",330,[[],["result",4]]],[11,"into","","",330,[[]]],[11,"try_into","","",330,[[],["result",4]]],[11,"borrow","","",330,[[]]],[11,"borrow_mut","","",330,[[]]],[11,"type_id","","",330,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"from","","",331,[[]]],[11,"try_from","","",331,[[],["result",4]]],[11,"into","","",331,[[]]],[11,"try_into","","",331,[[],["result",4]]],[11,"borrow","","",331,[[]]],[11,"borrow_mut","","",331,[[]]],[11,"type_id","","",331,[[],["typeid",3]]],[11,"to_owned","","",331,[[]]],[11,"clone_into","","",331,[[]]],[11,"from","","",332,[[]]],[11,"into_iter","","",332,[[]]],[11,"try_from","","",332,[[],["result",4]]],[11,"into","","",332,[[]]],[11,"try_into","","",332,[[],["result",4]]],[11,"borrow","","",332,[[]]],[11,"borrow_mut","","",332,[[]]],[11,"type_id","","",332,[[],["typeid",3]]],[11,"from","","",333,[[]]],[11,"try_from","","",333,[[],["result",4]]],[11,"into","","",333,[[]]],[11,"try_into","","",333,[[],["result",4]]],[11,"borrow","","",333,[[]]],[11,"borrow_mut","","",333,[[]]],[11,"type_id","","",333,[[],["typeid",3]]],[11,"to_owned","","",333,[[]]],[11,"clone_into","","",333,[[]]],[11,"from","","",334,[[]]],[11,"into_iter","","",334,[[]]],[11,"try_from","","",334,[[],["result",4]]],[11,"into","","",334,[[]]],[11,"try_into","","",334,[[],["result",4]]],[11,"borrow","","",334,[[]]],[11,"borrow_mut","","",334,[[]]],[11,"type_id","","",334,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"from","object::read::pe","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",335,[[]]],[11,"into_iter","","",335,[[]]],[11,"try_from","","",335,[[],["result",4]]],[11,"into","","",335,[[]]],[11,"try_into","","",335,[[],["result",4]]],[11,"borrow","","",335,[[]]],[11,"borrow_mut","","",335,[[]]],[11,"type_id","","",335,[[],["typeid",3]]],[11,"from","","",336,[[]]],[11,"try_from","","",336,[[],["result",4]]],[11,"into","","",336,[[]]],[11,"try_into","","",336,[[],["result",4]]],[11,"borrow","","",336,[[]]],[11,"borrow_mut","","",336,[[]]],[11,"type_id","","",336,[[],["typeid",3]]],[11,"from","","",337,[[]]],[11,"into_iter","","",337,[[]]],[11,"try_from","","",337,[[],["result",4]]],[11,"into","","",337,[[]]],[11,"try_into","","",337,[[],["result",4]]],[11,"borrow","","",337,[[]]],[11,"borrow_mut","","",337,[[]]],[11,"type_id","","",337,[[],["typeid",3]]],[11,"from","","",338,[[]]],[11,"into_iter","","",338,[[]]],[11,"try_from","","",338,[[],["result",4]]],[11,"into","","",338,[[]]],[11,"try_into","","",338,[[],["result",4]]],[11,"borrow","","",338,[[]]],[11,"borrow_mut","","",338,[[]]],[11,"type_id","","",338,[[],["typeid",3]]],[11,"from","","",339,[[]]],[11,"try_from","","",339,[[],["result",4]]],[11,"into","","",339,[[]]],[11,"try_into","","",339,[[],["result",4]]],[11,"borrow","","",339,[[]]],[11,"borrow_mut","","",339,[[]]],[11,"type_id","","",339,[[],["typeid",3]]],[11,"from","","",340,[[]]],[11,"into_iter","","",340,[[]]],[11,"try_from","","",340,[[],["result",4]]],[11,"into","","",340,[[]]],[11,"try_into","","",340,[[],["result",4]]],[11,"borrow","","",340,[[]]],[11,"borrow_mut","","",340,[[]]],[11,"type_id","","",340,[[],["typeid",3]]],[11,"from","","",341,[[]]],[11,"try_from","","",341,[[],["result",4]]],[11,"into","","",341,[[]]],[11,"try_into","","",341,[[],["result",4]]],[11,"borrow","","",341,[[]]],[11,"borrow_mut","","",341,[[]]],[11,"type_id","","",341,[[],["typeid",3]]],[11,"from","","",342,[[]]],[11,"into_iter","","",342,[[]]],[11,"try_from","","",342,[[],["result",4]]],[11,"into","","",342,[[]]],[11,"try_into","","",342,[[],["result",4]]],[11,"borrow","","",342,[[]]],[11,"borrow_mut","","",342,[[]]],[11,"type_id","","",342,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"from","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"from","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"from","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"from","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"from","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"from","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into_iter","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"from","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"from","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"from","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"from","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"from","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"from","object::archive","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"from","object::elf","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"from","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"from","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"from","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"from","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"from","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"from","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"from","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"from","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"from","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"from","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"from","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"from","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"from","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"from","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"from","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"from","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"from","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"from","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"from","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"from","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"from","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"from","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"from","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"from","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"from","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"from","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"from","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"from","object::macho","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"from","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"from","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"from","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"from","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"from","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"from","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"from","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"from","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"from","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"from","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"from","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"from","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"from","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"from","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"from","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"from","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"from","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"from","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"from","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"from","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"from","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"from","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"from","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"from","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"from","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"from","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"from","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"from","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"from","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"from","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"into","","",176,[[]]],[11,"try_into","","",176,[[],["result",4]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"from","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"into","","",177,[[]]],[11,"try_into","","",177,[[],["result",4]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"from","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"into","","",178,[[]]],[11,"try_into","","",178,[[],["result",4]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"from","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"into","","",179,[[]]],[11,"try_into","","",179,[[],["result",4]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"from","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"into","","",180,[[]]],[11,"try_into","","",180,[[],["result",4]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"from","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"into","","",181,[[]]],[11,"try_into","","",181,[[],["result",4]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"from","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"into","","",182,[[]]],[11,"try_into","","",182,[[],["result",4]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"from","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"into","","",183,[[]]],[11,"try_into","","",183,[[],["result",4]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"from","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"into","","",184,[[]]],[11,"try_into","","",184,[[],["result",4]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"from","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"into","","",185,[[]]],[11,"try_into","","",185,[[],["result",4]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"from","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"into","","",186,[[]]],[11,"try_into","","",186,[[],["result",4]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"from","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"into","","",187,[[]]],[11,"try_into","","",187,[[],["result",4]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"from","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"into","","",188,[[]]],[11,"try_into","","",188,[[],["result",4]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"from","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"into","","",189,[[]]],[11,"try_into","","",189,[[],["result",4]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"from","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"into","","",190,[[]]],[11,"try_into","","",190,[[],["result",4]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"from","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"into","","",191,[[]]],[11,"try_into","","",191,[[],["result",4]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"from","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"into","","",192,[[]]],[11,"try_into","","",192,[[],["result",4]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"from","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"into","","",193,[[]]],[11,"try_into","","",193,[[],["result",4]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"from","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"into","","",194,[[]]],[11,"try_into","","",194,[[],["result",4]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"from","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"into","","",195,[[]]],[11,"try_into","","",195,[[],["result",4]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"from","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"into","","",196,[[]]],[11,"try_into","","",196,[[],["result",4]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"from","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"into","","",197,[[]]],[11,"try_into","","",197,[[],["result",4]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"from","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"into","","",198,[[]]],[11,"try_into","","",198,[[],["result",4]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"from","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"into","","",199,[[]]],[11,"try_into","","",199,[[],["result",4]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"from","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"into","","",200,[[]]],[11,"try_into","","",200,[[],["result",4]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"from","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"into","","",201,[[]]],[11,"try_into","","",201,[[],["result",4]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"from","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"into","","",202,[[]]],[11,"try_into","","",202,[[],["result",4]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"from","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"into","","",203,[[]]],[11,"try_into","","",203,[[],["result",4]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"from","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"into","","",204,[[]]],[11,"try_into","","",204,[[],["result",4]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"from","object::pe","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"into","","",205,[[]]],[11,"try_into","","",205,[[],["result",4]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"from","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"into","","",206,[[]]],[11,"try_into","","",206,[[],["result",4]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"from","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"into","","",207,[[]]],[11,"try_into","","",207,[[],["result",4]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"from","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"into","","",208,[[]]],[11,"try_into","","",208,[[],["result",4]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"from","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"into","","",209,[[]]],[11,"try_into","","",209,[[],["result",4]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"from","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"into","","",210,[[]]],[11,"try_into","","",210,[[],["result",4]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"from","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"into","","",211,[[]]],[11,"try_into","","",211,[[],["result",4]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"from","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"into","","",212,[[]]],[11,"try_into","","",212,[[],["result",4]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"from","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"into","","",213,[[]]],[11,"try_into","","",213,[[],["result",4]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"from","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"into","","",214,[[]]],[11,"try_into","","",214,[[],["result",4]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"from","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"into","","",215,[[]]],[11,"try_into","","",215,[[],["result",4]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"from","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"into","","",216,[[]]],[11,"try_into","","",216,[[],["result",4]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"from","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"into","","",217,[[]]],[11,"try_into","","",217,[[],["result",4]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"from","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"into","","",218,[[]]],[11,"try_into","","",218,[[],["result",4]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"from","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"into","","",219,[[]]],[11,"try_into","","",219,[[],["result",4]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"from","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"into","","",220,[[]]],[11,"try_into","","",220,[[],["result",4]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"from","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"into","","",221,[[]]],[11,"try_into","","",221,[[],["result",4]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"from","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"into","","",222,[[]]],[11,"try_into","","",222,[[],["result",4]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"from","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"into","","",223,[[]]],[11,"try_into","","",223,[[],["result",4]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"from","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"into","","",224,[[]]],[11,"try_into","","",224,[[],["result",4]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"from","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"into","","",225,[[]]],[11,"try_into","","",225,[[],["result",4]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"from","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"into","","",226,[[]]],[11,"try_into","","",226,[[],["result",4]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"from","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"into","","",227,[[]]],[11,"try_into","","",227,[[],["result",4]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"from","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"into","","",228,[[]]],[11,"try_into","","",228,[[],["result",4]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"from","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"into","","",229,[[]]],[11,"try_into","","",229,[[],["result",4]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"from","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"into","","",230,[[]]],[11,"try_into","","",230,[[],["result",4]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"from","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"into","","",231,[[]]],[11,"try_into","","",231,[[],["result",4]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"from","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"into","","",232,[[]]],[11,"try_into","","",232,[[],["result",4]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"from","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"into","","",233,[[]]],[11,"try_into","","",233,[[],["result",4]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"from","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"into","","",234,[[]]],[11,"try_into","","",234,[[],["result",4]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"from","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"into","","",235,[[]]],[11,"try_into","","",235,[[],["result",4]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"from","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"into","","",236,[[]]],[11,"try_into","","",236,[[],["result",4]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"from","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"into","","",237,[[]]],[11,"try_into","","",237,[[],["result",4]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"from","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"into","","",238,[[]]],[11,"try_into","","",238,[[],["result",4]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"from","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"into","","",239,[[]]],[11,"try_into","","",239,[[],["result",4]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"from","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"into","","",240,[[]]],[11,"try_into","","",240,[[],["result",4]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"from","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"into","","",241,[[]]],[11,"try_into","","",241,[[],["result",4]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"from","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"into","","",242,[[]]],[11,"try_into","","",242,[[],["result",4]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"from","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"into","","",243,[[]]],[11,"try_into","","",243,[[],["result",4]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"from","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"into","","",244,[[]]],[11,"try_into","","",244,[[],["result",4]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"from","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"into","","",245,[[]]],[11,"try_into","","",245,[[],["result",4]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"from","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"into","","",246,[[]]],[11,"try_into","","",246,[[],["result",4]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"from","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"into","","",247,[[]]],[11,"try_into","","",247,[[],["result",4]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"from","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"into","","",248,[[]]],[11,"try_into","","",248,[[],["result",4]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"from","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"into","","",249,[[]]],[11,"try_into","","",249,[[],["result",4]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"from","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"into","","",250,[[]]],[11,"try_into","","",250,[[],["result",4]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"from","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"into","","",251,[[]]],[11,"try_into","","",251,[[],["result",4]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"from","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"into","","",252,[[]]],[11,"try_into","","",252,[[],["result",4]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"from","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"into","","",253,[[]]],[11,"try_into","","",253,[[],["result",4]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"from","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"into","","",254,[[]]],[11,"try_into","","",254,[[],["result",4]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"from","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"into","","",255,[[]]],[11,"try_into","","",255,[[],["result",4]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"from","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"into","","",256,[[]]],[11,"try_into","","",256,[[],["result",4]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"from","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"into","","",257,[[]]],[11,"try_into","","",257,[[],["result",4]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"from","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"into","","",258,[[]]],[11,"try_into","","",258,[[],["result",4]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"from","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"into","","",259,[[]]],[11,"try_into","","",259,[[],["result",4]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"from","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"into","","",260,[[]]],[11,"try_into","","",260,[[],["result",4]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"from","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"into","","",261,[[]]],[11,"try_into","","",261,[[],["result",4]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"from","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"into","","",262,[[]]],[11,"try_into","","",262,[[],["result",4]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"from","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"into","","",263,[[]]],[11,"try_into","","",263,[[],["result",4]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"from","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"into","","",264,[[]]],[11,"try_into","","",264,[[],["result",4]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"from","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"into","","",265,[[]]],[11,"try_into","","",265,[[],["result",4]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"from","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"into","","",266,[[]]],[11,"try_into","","",266,[[],["result",4]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"from","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"into","","",267,[[]]],[11,"try_into","","",267,[[],["result",4]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"from","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"into","","",268,[[]]],[11,"try_into","","",268,[[],["result",4]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"from","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"into","","",269,[[]]],[11,"try_into","","",269,[[],["result",4]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"from","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"into","","",270,[[]]],[11,"try_into","","",270,[[],["result",4]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"from","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"into","","",271,[[]]],[11,"try_into","","",271,[[],["result",4]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"from","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"into","","",272,[[]]],[11,"try_into","","",272,[[],["result",4]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"from","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"into","","",273,[[]]],[11,"try_into","","",273,[[],["result",4]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"from","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"into","","",274,[[]]],[11,"try_into","","",274,[[],["result",4]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"from","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"into","","",275,[[]]],[11,"try_into","","",275,[[],["result",4]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"from","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"into","","",276,[[]]],[11,"try_into","","",276,[[],["result",4]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"from","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"into","","",277,[[]]],[11,"try_into","","",277,[[],["result",4]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"from","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"into","","",278,[[]]],[11,"try_into","","",278,[[],["result",4]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"from","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"into","","",279,[[]]],[11,"try_into","","",279,[[],["result",4]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"from","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"into","","",280,[[]]],[11,"try_into","","",280,[[],["result",4]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"from","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"into","","",281,[[]]],[11,"try_into","","",281,[[],["result",4]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"from_big_endian","object::endian","",22,[[],["option",4]]],[11,"is_big_endian","","",22,[[]]],[11,"from_big_endian","","",282,[[],["option",4]]],[11,"is_big_endian","","",282,[[]]],[11,"from_big_endian","","",283,[[],["option",4]]],[11,"is_big_endian","","",283,[[]]],[11,"is_type_64","object::elf","",118,[[]]],[11,"e_ident","","",118,[[],["ident",3]]],[11,"e_type","","",118,[[]]],[11,"e_machine","","",118,[[]]],[11,"e_version","","",118,[[]]],[11,"e_entry","","",118,[[]]],[11,"e_phoff","","",118,[[]]],[11,"e_shoff","","",118,[[]]],[11,"e_flags","","",118,[[]]],[11,"e_ehsize","","",118,[[]]],[11,"e_phentsize","","",118,[[]]],[11,"e_phnum","","",118,[[]]],[11,"e_shentsize","","",118,[[]]],[11,"e_shnum","","",118,[[]]],[11,"e_shstrndx","","",118,[[]]],[11,"is_type_64","","",119,[[]]],[11,"e_ident","","",119,[[],["ident",3]]],[11,"e_type","","",119,[[]]],[11,"e_machine","","",119,[[]]],[11,"e_version","","",119,[[]]],[11,"e_entry","","",119,[[]]],[11,"e_phoff","","",119,[[]]],[11,"e_shoff","","",119,[[]]],[11,"e_flags","","",119,[[]]],[11,"e_ehsize","","",119,[[]]],[11,"e_phentsize","","",119,[[]]],[11,"e_phnum","","",119,[[]]],[11,"e_shentsize","","",119,[[]]],[11,"e_shnum","","",119,[[]]],[11,"e_shstrndx","","",119,[[]]],[11,"p_type","","",133,[[]]],[11,"p_flags","","",133,[[]]],[11,"p_offset","","",133,[[]]],[11,"p_vaddr","","",133,[[]]],[11,"p_paddr","","",133,[[]]],[11,"p_filesz","","",133,[[]]],[11,"p_memsz","","",133,[[]]],[11,"p_align","","",133,[[]]],[11,"p_type","","",134,[[]]],[11,"p_flags","","",134,[[]]],[11,"p_offset","","",134,[[]]],[11,"p_vaddr","","",134,[[]]],[11,"p_paddr","","",134,[[]]],[11,"p_filesz","","",134,[[]]],[11,"p_memsz","","",134,[[]]],[11,"p_align","","",134,[[]]],[11,"sh_name","","",121,[[]]],[11,"sh_type","","",121,[[]]],[11,"sh_flags","","",121,[[]]],[11,"sh_addr","","",121,[[]]],[11,"sh_offset","","",121,[[]]],[11,"sh_size","","",121,[[]]],[11,"sh_link","","",121,[[]]],[11,"sh_info","","",121,[[]]],[11,"sh_addralign","","",121,[[]]],[11,"sh_entsize","","",121,[[]]],[11,"sh_name","","",122,[[]]],[11,"sh_type","","",122,[[]]],[11,"sh_flags","","",122,[[]]],[11,"sh_addr","","",122,[[]]],[11,"sh_offset","","",122,[[]]],[11,"sh_size","","",122,[[]]],[11,"sh_link","","",122,[[]]],[11,"sh_info","","",122,[[]]],[11,"sh_addralign","","",122,[[]]],[11,"sh_entsize","","",122,[[]]],[11,"st_name","","",125,[[]]],[11,"st_info","","",125,[[]]],[11,"st_bind","","",125,[[]]],[11,"st_type","","",125,[[]]],[11,"st_other","","",125,[[]]],[11,"st_visibility","","",125,[[]]],[11,"st_shndx","","",125,[[]]],[11,"st_value","","",125,[[]]],[11,"st_size","","",125,[[]]],[11,"st_name","","",126,[[]]],[11,"st_info","","",126,[[]]],[11,"st_bind","","",126,[[]]],[11,"st_type","","",126,[[]]],[11,"st_other","","",126,[[]]],[11,"st_visibility","","",126,[[]]],[11,"st_shndx","","",126,[[]]],[11,"st_value","","",126,[[]]],[11,"st_size","","",126,[[]]],[11,"r_offset","","",129,[[]]],[11,"r_info","","",129,[[]]],[11,"r_sym","","",129,[[]]],[11,"r_type","","",129,[[]]],[11,"r_offset","","",131,[[]]],[11,"r_info","","",131,[[]]],[11,"r_sym","","",131,[[]]],[11,"r_type","","",131,[[]]],[11,"r_offset","","",130,[[]]],[11,"r_info","","",130,[[]]],[11,"r_addend","","",130,[[]]],[11,"r_sym","","",130,[[]]],[11,"r_type","","",130,[[]]],[11,"r_offset","","",132,[[]]],[11,"r_info","","",132,[[]]],[11,"r_addend","","",132,[[]]],[11,"r_sym","","",132,[[]]],[11,"r_type","","",132,[[]]],[11,"d_tag","","",135,[[]]],[11,"d_val","","",135,[[]]],[11,"d_tag","","",136,[[]]],[11,"d_val","","",136,[[]]],[11,"ch_type","","",123,[[]]],[11,"ch_size","","",123,[[]]],[11,"ch_addralign","","",123,[[]]],[11,"ch_type","","",124,[[]]],[11,"ch_size","","",124,[[]]],[11,"ch_addralign","","",124,[[]]],[11,"n_namesz","","",142,[[]]],[11,"n_descsz","","",142,[[]]],[11,"n_type","","",142,[[]]],[11,"n_namesz","","",143,[[]]],[11,"n_descsz","","",143,[[]]],[11,"n_type","","",143,[[]]],[11,"cputype","object::macho","",150,[[]]],[11,"cpusubtype","","",150,[[]]],[11,"offset","","",150,[[]]],[11,"size","","",150,[[]]],[11,"align","","",150,[[]]],[11,"cputype","","",151,[[]]],[11,"cpusubtype","","",151,[[]]],[11,"offset","","",151,[[]]],[11,"size","","",151,[[]]],[11,"align","","",151,[[]]],[11,"is_type_64","","",152,[[]]],[11,"is_big_endian","","",152,[[]]],[11,"is_little_endian","","",152,[[]]],[11,"magic","","",152,[[]]],[11,"cputype","","",152,[[]]],[11,"cpusubtype","","",152,[[]]],[11,"filetype","","",152,[[]]],[11,"ncmds","","",152,[[]]],[11,"sizeofcmds","","",152,[[]]],[11,"flags","","",152,[[]]],[11,"is_type_64","","",153,[[]]],[11,"is_big_endian","","",153,[[]]],[11,"is_little_endian","","",153,[[]]],[11,"magic","","",153,[[]]],[11,"cputype","","",153,[[]]],[11,"cpusubtype","","",153,[[]]],[11,"filetype","","",153,[[]]],[11,"ncmds","","",153,[[]]],[11,"sizeofcmds","","",153,[[]]],[11,"flags","","",153,[[]]],[11,"from_command","","",156,[[["loadcommanddata",3]],[["option",4],["result",6]]]],[11,"cmd","","",156,[[]]],[11,"cmdsize","","",156,[[]]],[11,"segname","","",156,[[]]],[11,"vmaddr","","",156,[[]]],[11,"vmsize","","",156,[[]]],[11,"fileoff","","",156,[[]]],[11,"filesize","","",156,[[]]],[11,"maxprot","","",156,[[]]],[11,"initprot","","",156,[[]]],[11,"nsects","","",156,[[]]],[11,"flags","","",156,[[]]],[11,"from_command","","",157,[[["loadcommanddata",3]],[["option",4],["result",6]]]],[11,"cmd","","",157,[[]]],[11,"cmdsize","","",157,[[]]],[11,"segname","","",157,[[]]],[11,"vmaddr","","",157,[[]]],[11,"vmsize","","",157,[[]]],[11,"fileoff","","",157,[[]]],[11,"filesize","","",157,[[]]],[11,"maxprot","","",157,[[]]],[11,"initprot","","",157,[[]]],[11,"nsects","","",157,[[]]],[11,"flags","","",157,[[]]],[11,"sectname","","",158,[[]]],[11,"segname","","",158,[[]]],[11,"addr","","",158,[[]]],[11,"size","","",158,[[]]],[11,"offset","","",158,[[]]],[11,"align","","",158,[[]]],[11,"reloff","","",158,[[]]],[11,"nreloc","","",158,[[]]],[11,"flags","","",158,[[]]],[11,"sectname","","",159,[[]]],[11,"segname","","",159,[[]]],[11,"addr","","",159,[[]]],[11,"size","","",159,[[]]],[11,"offset","","",159,[[]]],[11,"align","","",159,[[]]],[11,"reloff","","",159,[[]]],[11,"nreloc","","",159,[[]]],[11,"flags","","",159,[[]]],[11,"n_strx","","",200,[[]]],[11,"n_type","","",200,[[]]],[11,"n_sect","","",200,[[]]],[11,"n_desc","","",200,[[]]],[11,"n_value","","",200,[[]]],[11,"n_strx","","",201,[[]]],[11,"n_type","","",201,[[]]],[11,"n_sect","","",201,[[]]],[11,"n_desc","","",201,[[]]],[11,"n_value","","",201,[[]]],[11,"is_type_64","object::pe","",215,[[]]],[11,"is_valid_optional_magic","","",215,[[]]],[11,"signature","","",215,[[]]],[11,"file_header","","",215,[[],["imagefileheader",3]]],[11,"optional_header","","",215,[[]]],[11,"is_type_64","","",214,[[]]],[11,"is_valid_optional_magic","","",214,[[]]],[11,"signature","","",214,[[]]],[11,"file_header","","",214,[[],["imagefileheader",3]]],[11,"optional_header","","",214,[[]]],[11,"magic","","",211,[[]]],[11,"major_linker_version","","",211,[[]]],[11,"minor_linker_version","","",211,[[]]],[11,"size_of_code","","",211,[[]]],[11,"size_of_initialized_data","","",211,[[]]],[11,"size_of_uninitialized_data","","",211,[[]]],[11,"address_of_entry_point","","",211,[[]]],[11,"base_of_code","","",211,[[]]],[11,"base_of_data","","",211,[[],["option",4]]],[11,"image_base","","",211,[[]]],[11,"section_alignment","","",211,[[]]],[11,"file_alignment","","",211,[[]]],[11,"major_operating_system_version","","",211,[[]]],[11,"minor_operating_system_version","","",211,[[]]],[11,"major_image_version","","",211,[[]]],[11,"minor_image_version","","",211,[[]]],[11,"major_subsystem_version","","",211,[[]]],[11,"minor_subsystem_version","","",211,[[]]],[11,"win32_version_value","","",211,[[]]],[11,"size_of_image","","",211,[[]]],[11,"size_of_headers","","",211,[[]]],[11,"check_sum","","",211,[[]]],[11,"subsystem","","",211,[[]]],[11,"dll_characteristics","","",211,[[]]],[11,"size_of_stack_reserve","","",211,[[]]],[11,"size_of_stack_commit","","",211,[[]]],[11,"size_of_heap_reserve","","",211,[[]]],[11,"size_of_heap_commit","","",211,[[]]],[11,"loader_flags","","",211,[[]]],[11,"number_of_rva_and_sizes","","",211,[[]]],[11,"magic","","",213,[[]]],[11,"major_linker_version","","",213,[[]]],[11,"minor_linker_version","","",213,[[]]],[11,"size_of_code","","",213,[[]]],[11,"size_of_initialized_data","","",213,[[]]],[11,"size_of_uninitialized_data","","",213,[[]]],[11,"address_of_entry_point","","",213,[[]]],[11,"base_of_code","","",213,[[]]],[11,"base_of_data","","",213,[[],["option",4]]],[11,"image_base","","",213,[[]]],[11,"section_alignment","","",213,[[]]],[11,"file_alignment","","",213,[[]]],[11,"major_operating_system_version","","",213,[[]]],[11,"minor_operating_system_version","","",213,[[]]],[11,"major_image_version","","",213,[[]]],[11,"minor_image_version","","",213,[[]]],[11,"major_subsystem_version","","",213,[[]]],[11,"minor_subsystem_version","","",213,[[]]],[11,"win32_version_value","","",213,[[]]],[11,"size_of_image","","",213,[[]]],[11,"size_of_headers","","",213,[[]]],[11,"check_sum","","",213,[[]]],[11,"subsystem","","",213,[[]]],[11,"dll_characteristics","","",213,[[]]],[11,"size_of_stack_reserve","","",213,[[]]],[11,"size_of_stack_commit","","",213,[[]]],[11,"size_of_heap_reserve","","",213,[[]]],[11,"size_of_heap_commit","","",213,[[]]],[11,"loader_flags","","",213,[[]]],[11,"number_of_rva_and_sizes","","",213,[[]]],[11,"raw","","",238,[[]]],[11,"is_ordinal","","",238,[[]]],[11,"ordinal","","",238,[[]]],[11,"address","","",238,[[]]],[11,"raw","","",239,[[]]],[11,"is_ordinal","","",239,[[]]],[11,"ordinal","","",239,[[]]],[11,"address","","",239,[[]]],[11,"architecture","object::read","",41,[[],["architecture",4]]],[11,"is_little_endian","","",41,[[]]],[11,"is_64","","",41,[[]]],[11,"kind","","",41,[[],["objectkind",4]]],[11,"segments","","",41,[[],["segmentiterator",3]]],[11,"section_by_name_bytes","","",41,[[],[["section",3],["option",4]]]],[11,"section_by_index","","",41,[[["sectionindex",3]],[["result",6],["section",3]]]],[11,"sections","","",41,[[],["sectioniterator",3]]],[11,"comdats","","",41,[[],["comdatiterator",3]]],[11,"symbol_by_index","","",41,[[["symbolindex",3]],[["symbol",3],["result",6]]]],[11,"symbols","","",41,[[],["symboliterator",3]]],[11,"symbol_table","","",41,[[],[["option",4],["symboltable",3]]]],[11,"dynamic_symbols","","",41,[[],["symboliterator",3]]],[11,"dynamic_symbol_table","","",41,[[],[["option",4],["symboltable",3]]]],[11,"dynamic_relocations","","",41,[[],[["dynamicrelocationiterator",3],["option",4]]]],[11,"symbol_map","","",41,[[],[["symbolmapname",3],["symbolmap",3]]]],[11,"object_map","","",41,[[],["objectmap",3]]],[11,"imports","","",41,[[],[["vec",3],["result",6]]]],[11,"exports","","",41,[[],[["result",6],["vec",3]]]],[11,"has_debug_symbols","","",41,[[]]],[11,"mach_uuid","","",41,[[],[["result",6],["option",4]]]],[11,"build_id","","",41,[[],[["option",4],["result",6]]]],[11,"gnu_debuglink","","",41,[[],[["option",4],["result",6]]]],[11,"gnu_debugaltlink","","",41,[[],[["result",6],["option",4]]]],[11,"pdb_info","","",41,[[],[["option",4],["result",6]]]],[11,"relative_address_base","","",41,[[]]],[11,"entry","","",41,[[]]],[11,"flags","","",41,[[],["fileflags",4]]],[11,"architecture","object::read::coff","",45,[[],["architecture",4]]],[11,"is_little_endian","","",45,[[]]],[11,"is_64","","",45,[[]]],[11,"kind","","",45,[[],["objectkind",4]]],[11,"segments","","",45,[[],["coffsegmentiterator",3]]],[11,"section_by_name_bytes","","",45,[[],[["option",4],["coffsection",3]]]],[11,"section_by_index","","",45,[[["sectionindex",3]],[["coffsection",3],["result",6]]]],[11,"sections","","",45,[[],["coffsectioniterator",3]]],[11,"comdats","","",45,[[],["coffcomdatiterator",3]]],[11,"symbol_by_index","","",45,[[["symbolindex",3]],[["result",6],["coffsymbol",3]]]],[11,"symbols","","",45,[[],["coffsymboliterator",3]]],[11,"symbol_table","","",45,[[],[["coffsymboltable",3],["option",4]]]],[11,"dynamic_symbols","","",45,[[],["coffsymboliterator",3]]],[11,"dynamic_symbol_table","","",45,[[],[["coffsymboltable",3],["option",4]]]],[11,"dynamic_relocations","","",45,[[],[["option",4],["nodynamicrelocationiterator",3]]]],[11,"imports","","",45,[[],[["vec",3],["result",6]]]],[11,"exports","","",45,[[],[["result",6],["vec",3]]]],[11,"has_debug_symbols","","",45,[[]]],[11,"relative_address_base","","",45,[[]]],[11,"entry","","",45,[[]]],[11,"flags","","",45,[[],["fileflags",4]]],[11,"architecture","object::read::elf","",49,[[],["architecture",4]]],[11,"is_little_endian","","",49,[[]]],[11,"is_64","","",49,[[]]],[11,"kind","","",49,[[],["objectkind",4]]],[11,"segments","","",49,[[],["elfsegmentiterator",3]]],[11,"section_by_name_bytes","","",49,[[],[["option",4],["elfsection",3]]]],[11,"section_by_index","","",49,[[["sectionindex",3]],[["result",6],["elfsection",3]]]],[11,"sections","","",49,[[],["elfsectioniterator",3]]],[11,"comdats","","",49,[[],["elfcomdatiterator",3]]],[11,"symbol_by_index","","",49,[[["symbolindex",3]],[["elfsymbol",3],["result",6]]]],[11,"symbols","","",49,[[],["elfsymboliterator",3]]],[11,"symbol_table","","",49,[[],[["option",4],["elfsymboltable",3]]]],[11,"dynamic_symbols","","",49,[[],["elfsymboliterator",3]]],[11,"dynamic_symbol_table","","",49,[[],[["option",4],["elfsymboltable",3]]]],[11,"dynamic_relocations","","",49,[[],[["elfdynamicrelocationiterator",3],["option",4]]]],[11,"imports","","Get the imported symbols.",49,[[],[["result",6],["vec",3]]]],[11,"exports","","Get the exported symbols.",49,[[],[["result",6],["vec",3]]]],[11,"has_debug_symbols","","",49,[[]]],[11,"build_id","","",49,[[],[["option",4],["result",6]]]],[11,"gnu_debuglink","","",49,[[],[["result",6],["option",4]]]],[11,"gnu_debugaltlink","","",49,[[],[["result",6],["option",4]]]],[11,"relative_address_base","","",49,[[]]],[11,"entry","","",49,[[]]],[11,"flags","","",49,[[],["fileflags",4]]],[11,"architecture","object::read::macho","",75,[[],["architecture",4]]],[11,"is_little_endian","","",75,[[]]],[11,"is_64","","",75,[[]]],[11,"kind","","",75,[[],["objectkind",4]]],[11,"segments","","",75,[[],["machosegmentiterator",3]]],[11,"section_by_name_bytes","","",75,[[],[["machosection",3],["option",4]]]],[11,"section_by_index","","",75,[[["sectionindex",3]],[["result",6],["machosection",3]]]],[11,"sections","","",75,[[],["machosectioniterator",3]]],[11,"comdats","","",75,[[],["machocomdatiterator",3]]],[11,"symbol_by_index","","",75,[[["symbolindex",3]],[["result",6],["machosymbol",3]]]],[11,"symbols","","",75,[[],["machosymboliterator",3]]],[11,"symbol_table","","",75,[[],[["machosymboltable",3],["option",4]]]],[11,"dynamic_symbols","","",75,[[],["machosymboliterator",3]]],[11,"dynamic_symbol_table","","",75,[[],[["machosymboltable",3],["option",4]]]],[11,"object_map","","",75,[[],["objectmap",3]]],[11,"imports","","",75,[[],[["vec",3],["result",6]]]],[11,"exports","","",75,[[],[["result",6],["vec",3]]]],[11,"dynamic_relocations","","",75,[[],[["option",4],["nodynamicrelocationiterator",3]]]],[11,"has_debug_symbols","","",75,[[]]],[11,"mach_uuid","","",75,[[],[["result",6],["option",4]]]],[11,"relative_address_base","","",75,[[]]],[11,"entry","","",75,[[]]],[11,"flags","","",75,[[],["fileflags",4]]],[11,"architecture","object::read::pe","",90,[[],["architecture",4]]],[11,"is_little_endian","","",90,[[]]],[11,"is_64","","",90,[[]]],[11,"kind","","",90,[[],["objectkind",4]]],[11,"segments","","",90,[[],["pesegmentiterator",3]]],[11,"section_by_name_bytes","","",90,[[],[["option",4],["pesection",3]]]],[11,"section_by_index","","",90,[[["sectionindex",3]],[["pesection",3],["result",6]]]],[11,"sections","","",90,[[],["pesectioniterator",3]]],[11,"comdats","","",90,[[],["pecomdatiterator",3]]],[11,"symbol_by_index","","",90,[[["symbolindex",3]],[["result",6],["coffsymbol",3]]]],[11,"symbols","","",90,[[],["coffsymboliterator",3]]],[11,"symbol_table","","",90,[[],[["coffsymboltable",3],["option",4]]]],[11,"dynamic_symbols","","",90,[[],["coffsymboliterator",3]]],[11,"dynamic_symbol_table","","",90,[[],[["coffsymboltable",3],["option",4]]]],[11,"dynamic_relocations","","",90,[[],[["option",4],["nodynamicrelocationiterator",3]]]],[11,"imports","","",90,[[],[["vec",3],["result",6]]]],[11,"exports","","",90,[[],[["result",6],["vec",3]]]],[11,"pdb_info","","",90,[[],[["option",4],["result",6]]]],[11,"has_debug_symbols","","",90,[[]]],[11,"relative_address_base","","",90,[[]]],[11,"entry","","",90,[[]]],[11,"flags","","",90,[[],["fileflags",4]]],[11,"address","object::read","",285,[[]]],[11,"size","","",285,[[]]],[11,"align","","",285,[[]]],[11,"file_range","","",285,[[]]],[11,"data","","",285,[[],["result",6]]],[11,"data_range","","",285,[[],[["option",4],["result",6]]]],[11,"name_bytes","","",285,[[],[["result",6],["option",4]]]],[11,"name","","",285,[[],[["result",6],["option",4]]]],[11,"address","object::read::coff","",300,[[]]],[11,"size","","",300,[[]]],[11,"align","","",300,[[]]],[11,"file_range","","",300,[[]]],[11,"data","","",300,[[],["result",6]]],[11,"data_range","","",300,[[],[["option",4],["result",6]]]],[11,"name_bytes","","",300,[[],[["result",6],["option",4]]]],[11,"name","","",300,[[],[["result",6],["option",4]]]],[11,"address","object::read::elf","",312,[[]]],[11,"size","","",312,[[]]],[11,"align","","",312,[[]]],[11,"file_range","","",312,[[]]],[11,"data","","",312,[[],["result",6]]],[11,"data_range","","",312,[[],[["option",4],["result",6]]]],[11,"name_bytes","","",312,[[],[["option",4],["result",6]]]],[11,"name","","",312,[[],[["option",4],["result",6]]]],[11,"address","object::read::macho","",328,[[]]],[11,"size","","",328,[[]]],[11,"align","","",328,[[]]],[11,"file_range","","",328,[[]]],[11,"data","","",328,[[],["result",6]]],[11,"data_range","","",328,[[],[["option",4],["result",6]]]],[11,"name_bytes","","",328,[[],[["result",6],["option",4]]]],[11,"name","","",328,[[],[["result",6],["option",4]]]],[11,"address","object::read::pe","",339,[[]]],[11,"size","","",339,[[]]],[11,"align","","",339,[[]]],[11,"file_range","","",339,[[]]],[11,"data","","",339,[[],["result",6]]],[11,"data_range","","",339,[[],[["option",4],["result",6]]]],[11,"name_bytes","","",339,[[],[["result",6],["option",4]]]],[11,"name","","",339,[[],[["result",6],["option",4]]]],[11,"index","object::read","",287,[[],["sectionindex",3]]],[11,"address","","",287,[[]]],[11,"size","","",287,[[]]],[11,"align","","",287,[[]]],[11,"file_range","","",287,[[],["option",4]]],[11,"data","","",287,[[],["result",6]]],[11,"data_range","","",287,[[],[["option",4],["result",6]]]],[11,"compressed_file_range","","",287,[[],[["result",6],["compressedfilerange",3]]]],[11,"compressed_data","","",287,[[],[["result",6],["compresseddata",3]]]],[11,"name_bytes","","",287,[[],["result",6]]],[11,"name","","",287,[[],["result",6]]],[11,"segment_name_bytes","","",287,[[],[["result",6],["option",4]]]],[11,"segment_name","","",287,[[],[["result",6],["option",4]]]],[11,"kind","","",287,[[],["sectionkind",4]]],[11,"relocations","","",287,[[],["sectionrelocationiterator",3]]],[11,"flags","","",287,[[],["sectionflags",4]]],[11,"index","object::read::coff","",302,[[],["sectionindex",3]]],[11,"address","","",302,[[]]],[11,"size","","",302,[[]]],[11,"align","","",302,[[]]],[11,"file_range","","",302,[[],["option",4]]],[11,"data","","",302,[[],["result",6]]],[11,"data_range","","",302,[[],[["option",4],["result",6]]]],[11,"compressed_file_range","","",302,[[],[["result",6],["compressedfilerange",3]]]],[11,"compressed_data","","",302,[[],[["result",6],["compresseddata",3]]]],[11,"name_bytes","","",302,[[],["result",6]]],[11,"name","","",302,[[],["result",6]]],[11,"segment_name_bytes","","",302,[[],[["result",6],["option",4]]]],[11,"segment_name","","",302,[[],[["result",6],["option",4]]]],[11,"kind","","",302,[[],["sectionkind",4]]],[11,"relocations","","",302,[[],["coffrelocationiterator",3]]],[11,"flags","","",302,[[],["sectionflags",4]]],[11,"index","object::read::elf","",314,[[],["sectionindex",3]]],[11,"address","","",314,[[]]],[11,"size","","",314,[[]]],[11,"align","","",314,[[]]],[11,"file_range","","",314,[[],["option",4]]],[11,"data","","",314,[[],["result",6]]],[11,"data_range","","",314,[[],[["option",4],["result",6]]]],[11,"compressed_file_range","","",314,[[],[["result",6],["compressedfilerange",3]]]],[11,"compressed_data","","",314,[[],[["result",6],["compresseddata",3]]]],[11,"name_bytes","","",314,[[],["result",6]]],[11,"name","","",314,[[],["result",6]]],[11,"segment_name_bytes","","",314,[[],[["option",4],["result",6]]]],[11,"segment_name","","",314,[[],[["option",4],["result",6]]]],[11,"kind","","",314,[[],["sectionkind",4]]],[11,"relocations","","",314,[[],["elfsectionrelocationiterator",3]]],[11,"flags","","",314,[[],["sectionflags",4]]],[11,"index","object::read::macho","",330,[[],["sectionindex",3]]],[11,"address","","",330,[[]]],[11,"size","","",330,[[]]],[11,"align","","",330,[[]]],[11,"file_range","","",330,[[],["option",4]]],[11,"data","","",330,[[],["result",6]]],[11,"data_range","","",330,[[],[["option",4],["result",6]]]],[11,"compressed_file_range","","",330,[[],[["result",6],["compressedfilerange",3]]]],[11,"compressed_data","","",330,[[],[["result",6],["compresseddata",3]]]],[11,"name_bytes","","",330,[[],["result",6]]],[11,"name","","",330,[[],["result",6]]],[11,"segment_name_bytes","","",330,[[],[["result",6],["option",4]]]],[11,"segment_name","","",330,[[],[["result",6],["option",4]]]],[11,"kind","","",330,[[],["sectionkind",4]]],[11,"relocations","","",330,[[],["machorelocationiterator",3]]],[11,"flags","","",330,[[],["sectionflags",4]]],[11,"index","object::read::pe","",341,[[],["sectionindex",3]]],[11,"address","","",341,[[]]],[11,"size","","",341,[[]]],[11,"align","","",341,[[]]],[11,"file_range","","",341,[[],["option",4]]],[11,"data","","",341,[[],["result",6]]],[11,"data_range","","",341,[[],[["option",4],["result",6]]]],[11,"compressed_file_range","","",341,[[],[["result",6],["compressedfilerange",3]]]],[11,"compressed_data","","",341,[[],[["result",6],["compresseddata",3]]]],[11,"name_bytes","","",341,[[],["result",6]]],[11,"name","","",341,[[],["result",6]]],[11,"segment_name_bytes","","",341,[[],[["result",6],["option",4]]]],[11,"segment_name","","",341,[[],[["result",6],["option",4]]]],[11,"kind","","",341,[[],["sectionkind",4]]],[11,"relocations","","",341,[[],["perelocationiterator",3]]],[11,"flags","","",341,[[],["sectionflags",4]]],[11,"kind","object::read","",289,[[],["comdatkind",4]]],[11,"symbol","","",289,[[],["symbolindex",3]]],[11,"name_bytes","","",289,[[],["result",6]]],[11,"name","","",289,[[],["result",6]]],[11,"sections","","",289,[[],["comdatsectioniterator",3]]],[11,"kind","object::read::coff","",309,[[],["comdatkind",4]]],[11,"symbol","","",309,[[],["symbolindex",3]]],[11,"name_bytes","","",309,[[],["result",6]]],[11,"name","","",309,[[],["result",6]]],[11,"sections","","",309,[[]]],[11,"kind","object::read::elf","",321,[[],["comdatkind",4]]],[11,"symbol","","",321,[[],["symbolindex",3]]],[11,"name_bytes","","",321,[[],["result",6]]],[11,"name","","",321,[[],["result",6]]],[11,"sections","","",321,[[]]],[11,"kind","object::read::macho","",325,[[],["comdatkind",4]]],[11,"symbol","","",325,[[],["symbolindex",3]]],[11,"name_bytes","","",325,[[],["result",6]]],[11,"name","","",325,[[],["result",6]]],[11,"sections","","",325,[[]]],[11,"kind","object::read::pe","",336,[[],["comdatkind",4]]],[11,"symbol","","",336,[[],["symbolindex",3]]],[11,"name_bytes","","",336,[[],["result",6]]],[11,"name","","",336,[[],["result",6]]],[11,"sections","","",336,[[]]],[11,"symbols","object::read","",291,[[]]],[11,"symbol_by_index","","",291,[[["symbolindex",3]],["result",6]]],[11,"symbols","object::read::coff","",304,[[]]],[11,"symbol_by_index","","",304,[[["symbolindex",3]],["result",6]]],[11,"symbols","object::read::elf","",315,[[]]],[11,"symbol_by_index","","",315,[[["symbolindex",3]],["result",6]]],[11,"symbols","object::read::macho","",331,[[]]],[11,"symbol_by_index","","",331,[[["symbolindex",3]],["result",6]]],[11,"index","object::read","",293,[[],["symbolindex",3]]],[11,"name_bytes","","",293,[[],["result",6]]],[11,"name","","",293,[[],["result",6]]],[11,"address","","",293,[[]]],[11,"size","","",293,[[]]],[11,"kind","","",293,[[],["symbolkind",4]]],[11,"section","","",293,[[],["symbolsection",4]]],[11,"is_undefined","","",293,[[]]],[11,"is_definition","","",293,[[]]],[11,"is_common","","",293,[[]]],[11,"is_weak","","",293,[[]]],[11,"scope","","",293,[[],["symbolscope",4]]],[11,"is_global","","",293,[[]]],[11,"is_local","","",293,[[]]],[11,"flags","","",293,[[],[["symbolflags",4],["sectionindex",3]]]],[11,"index","object::read::coff","",306,[[],["symbolindex",3]]],[11,"name_bytes","","",306,[[],["result",6]]],[11,"name","","",306,[[],["result",6]]],[11,"address","","",306,[[]]],[11,"size","","",306,[[]]],[11,"kind","","",306,[[],["symbolkind",4]]],[11,"section","","",306,[[],["symbolsection",4]]],[11,"is_undefined","","",306,[[]]],[11,"is_definition","","",306,[[]]],[11,"is_common","","",306,[[]]],[11,"is_weak","","",306,[[]]],[11,"scope","","",306,[[],["symbolscope",4]]],[11,"is_global","","",306,[[]]],[11,"is_local","","",306,[[]]],[11,"flags","","",306,[[],[["symbolflags",4],["sectionindex",3]]]],[11,"index","object::read::elf","",317,[[],["symbolindex",3]]],[11,"name_bytes","","",317,[[],["result",6]]],[11,"name","","",317,[[],["result",6]]],[11,"address","","",317,[[]]],[11,"size","","",317,[[]]],[11,"kind","","",317,[[],["symbolkind",4]]],[11,"section","","",317,[[],["symbolsection",4]]],[11,"is_undefined","","",317,[[]]],[11,"is_definition","","",317,[[]]],[11,"is_common","","",317,[[]]],[11,"is_weak","","",317,[[]]],[11,"scope","","",317,[[],["symbolscope",4]]],[11,"is_global","","",317,[[]]],[11,"is_local","","",317,[[]]],[11,"flags","","",317,[[],[["symbolflags",4],["sectionindex",3]]]],[11,"index","object::read::macho","",333,[[],["symbolindex",3]]],[11,"name_bytes","","",333,[[],["result",6]]],[11,"name","","",333,[[],["result",6]]],[11,"address","","",333,[[]]],[11,"size","","",333,[[]]],[11,"kind","","",333,[[],["symbolkind",4]]],[11,"section","","",333,[[],["symbolsection",4]]],[11,"is_undefined","","",333,[[]]],[11,"is_definition","","",333,[[]]],[11,"is_common","","",333,[[]]],[11,"is_weak","","",333,[[]]],[11,"scope","","",333,[[],["symbolscope",4]]],[11,"is_global","","",333,[[]]],[11,"is_local","","",333,[[]]],[11,"flags","","",333,[[],[["symbolflags",4],["sectionindex",3]]]],[11,"address","object::read","",110,[[]]],[11,"address","","",112,[[]]],[11,"from","object::elf","",130,[[["rel32",3]]]],[11,"from","","",132,[[["rel64",3]]]],[11,"fmt","object","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","object::endian","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",282,[[["formatter",3]],["result",6]]],[11,"fmt","","",283,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","object::read","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",284,[[["formatter",3]],["result",6]]],[11,"fmt","","",285,[[["formatter",3]],["result",6]]],[11,"fmt","","",286,[[["formatter",3]],["result",6]]],[11,"fmt","","",287,[[["formatter",3]],["result",6]]],[11,"fmt","","",288,[[["formatter",3]],["result",6]]],[11,"fmt","","",289,[[["formatter",3]],["result",6]]],[11,"fmt","","",290,[[["formatter",3]],["result",6]]],[11,"fmt","","",291,[[["formatter",3]],["result",6]]],[11,"fmt","","",292,[[["formatter",3]],["result",6]]],[11,"fmt","","",293,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","object::read::archive","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",298,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","object::read::coff","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",299,[[["formatter",3]],["result",6]]],[11,"fmt","","",300,[[["formatter",3]],["result",6]]],[11,"fmt","","",301,[[["formatter",3]],["result",6]]],[11,"fmt","","",302,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",303,[[["formatter",3]],["result",6]]],[11,"fmt","","",304,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","","",306,[[["formatter",3]],["result",6]]],[11,"fmt","","",307,[[["formatter",3]],["result",6]]],[11,"fmt","","",308,[[["formatter",3]],["result",6]]],[11,"fmt","","",309,[[["formatter",3]],["result",6]]],[11,"fmt","","",310,[[["formatter",3]],["result",6]]],[11,"fmt","object::read::elf","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",311,[[["formatter",3]],["result",6]]],[11,"fmt","","",312,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",313,[[["formatter",3]],["result",6]]],[11,"fmt","","",314,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",315,[[["formatter",3]],["result",6]]],[11,"fmt","","",316,[[["formatter",3]],["result",6]]],[11,"fmt","","",317,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",318,[[["formatter",3]],["result",6]]],[11,"fmt","","",319,[[["formatter",3]],["result",6]]],[11,"fmt","","",320,[[["formatter",3]],["result",6]]],[11,"fmt","","",321,[[["formatter",3]],["result",6]]],[11,"fmt","","",322,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","object::read::macho","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",323,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",324,[[["formatter",3]],["result",6]]],[11,"fmt","","",325,[[["formatter",3]],["result",6]]],[11,"fmt","","",326,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",327,[[["formatter",3]],["result",6]]],[11,"fmt","","",328,[[["formatter",3]],["result",6]]],[11,"fmt","","",329,[[["formatter",3]],["result",6]]],[11,"fmt","","",330,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",331,[[["formatter",3]],["result",6]]],[11,"fmt","","",332,[[["formatter",3]],["result",6]]],[11,"fmt","","",333,[[["formatter",3]],["result",6]]],[11,"fmt","","",334,[[["formatter",3]],["result",6]]],[11,"fmt","object::read::pe","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",335,[[["formatter",3]],["result",6]]],[11,"fmt","","",336,[[["formatter",3]],["result",6]]],[11,"fmt","","",337,[[["formatter",3]],["result",6]]],[11,"fmt","","",338,[[["formatter",3]],["result",6]]],[11,"fmt","","",339,[[["formatter",3]],["result",6]]],[11,"fmt","","",340,[[["formatter",3]],["result",6]]],[11,"fmt","","",341,[[["formatter",3]],["result",6]]],[11,"fmt","","",342,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","object::read","",296,[[["formatter",3]],["result",6]]],[11,"fmt","","",297,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","object::archive","",117,[[["formatter",3]],["result",6]]],[11,"fmt","object::elf","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","object::macho","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",195,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",198,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",201,[[["formatter",3]],["result",6]]],[11,"fmt","","",202,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",204,[[["formatter",3]],["result",6]]],[11,"fmt","object::pe","",205,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","","",207,[[["formatter",3]],["result",6]]],[11,"fmt","","",208,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",211,[[["formatter",3]],["result",6]]],[11,"fmt","","",212,[[["formatter",3]],["result",6]]],[11,"fmt","","",213,[[["formatter",3]],["result",6]]],[11,"fmt","","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",216,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",219,[[["formatter",3]],["result",6]]],[11,"fmt","","",220,[[["formatter",3]],["result",6]]],[11,"fmt","","",221,[[["formatter",3]],["result",6]]],[11,"fmt","","",222,[[["formatter",3]],["result",6]]],[11,"fmt","","",223,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",226,[[["formatter",3]],["result",6]]],[11,"fmt","","",227,[[["formatter",3]],["result",6]]],[11,"fmt","","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",229,[[["formatter",3]],["result",6]]],[11,"fmt","","",230,[[["formatter",3]],["result",6]]],[11,"fmt","","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",233,[[["formatter",3]],["result",6]]],[11,"fmt","","",234,[[["formatter",3]],["result",6]]],[11,"fmt","","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",237,[[["formatter",3]],["result",6]]],[11,"fmt","","",238,[[["formatter",3]],["result",6]]],[11,"fmt","","",239,[[["formatter",3]],["result",6]]],[11,"fmt","","",240,[[["formatter",3]],["result",6]]],[11,"fmt","","",241,[[["formatter",3]],["result",6]]],[11,"fmt","","",242,[[["formatter",3]],["result",6]]],[11,"fmt","","",243,[[["formatter",3]],["result",6]]],[11,"fmt","","",244,[[["formatter",3]],["result",6]]],[11,"fmt","","",245,[[["formatter",3]],["result",6]]],[11,"fmt","","",246,[[["formatter",3]],["result",6]]],[11,"fmt","","",247,[[["formatter",3]],["result",6]]],[11,"fmt","","",248,[[["formatter",3]],["result",6]]],[11,"fmt","","",249,[[["formatter",3]],["result",6]]],[11,"fmt","","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",251,[[["formatter",3]],["result",6]]],[11,"fmt","","",252,[[["formatter",3]],["result",6]]],[11,"fmt","","",253,[[["formatter",3]],["result",6]]],[11,"fmt","","",254,[[["formatter",3]],["result",6]]],[11,"fmt","","",255,[[["formatter",3]],["result",6]]],[11,"fmt","","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",257,[[["formatter",3]],["result",6]]],[11,"fmt","","",258,[[["formatter",3]],["result",6]]],[11,"fmt","","",259,[[["formatter",3]],["result",6]]],[11,"fmt","","",260,[[["formatter",3]],["result",6]]],[11,"fmt","","",261,[[["formatter",3]],["result",6]]],[11,"fmt","","",262,[[["formatter",3]],["result",6]]],[11,"fmt","","",263,[[["formatter",3]],["result",6]]],[11,"fmt","","",264,[[["formatter",3]],["result",6]]],[11,"fmt","","",265,[[["formatter",3]],["result",6]]],[11,"fmt","","",266,[[["formatter",3]],["result",6]]],[11,"fmt","","",267,[[["formatter",3]],["result",6]]],[11,"fmt","","",268,[[["formatter",3]],["result",6]]],[11,"fmt","","",269,[[["formatter",3]],["result",6]]],[11,"fmt","","",270,[[["formatter",3]],["result",6]]],[11,"fmt","","",271,[[["formatter",3]],["result",6]]],[11,"fmt","","",272,[[["formatter",3]],["result",6]]],[11,"fmt","","",273,[[["formatter",3]],["result",6]]],[11,"fmt","","",274,[[["formatter",3]],["result",6]]],[11,"fmt","","",275,[[["formatter",3]],["result",6]]],[11,"fmt","","",276,[[["formatter",3]],["result",6]]],[11,"fmt","","",277,[[["formatter",3]],["result",6]]],[11,"fmt","","",278,[[["formatter",3]],["result",6]]],[11,"fmt","","",279,[[["formatter",3]],["result",6]]],[11,"fmt","","",280,[[["formatter",3]],["result",6]]],[11,"fmt","","",281,[[["formatter",3]],["result",6]]],[11,"fmt","object::read","",297,[[["formatter",3]],["result",6]]],[11,"eq","object","",0,[[["architecture",4]]]],[11,"eq","","",1,[[["addresssize",4]]]],[11,"eq","","",2,[[["binaryformat",4]]]],[11,"eq","","",3,[[["sectionkind",4]]]],[11,"ne","","",3,[[["sectionkind",4]]]],[11,"eq","","",4,[[["comdatkind",4]]]],[11,"eq","","",5,[[["symbolkind",4]]]],[11,"eq","","",6,[[["symbolscope",4]]]],[11,"eq","","",7,[[["relocationkind",4]]]],[11,"ne","","",7,[[["relocationkind",4]]]],[11,"eq","","",9,[[["relocationencoding",4]]]],[11,"eq","","",10,[[["fileflags",4]]]],[11,"ne","","",10,[[["fileflags",4]]]],[11,"eq","","",14,[[["sectionflags",4]]]],[11,"ne","","",14,[[["sectionflags",4]]]],[11,"eq","","",18,[[["symbolflags",4]]]],[11,"ne","","",18,[[["symbolflags",4]]]],[11,"eq","object::endian","",22,[[["endianness",4]]]],[11,"eq","","",282,[[["littleendian",3]]]],[11,"eq","","",283,[[["bigendian",3]]]],[11,"eq","","",24,[[["u16bytes",3]]]],[11,"ne","","",24,[[["u16bytes",3]]]],[11,"eq","","",25,[[["u32bytes",3]]]],[11,"ne","","",25,[[["u32bytes",3]]]],[11,"eq","","",26,[[["u64bytes",3]]]],[11,"ne","","",26,[[["u64bytes",3]]]],[11,"eq","","",27,[[["i16bytes",3]]]],[11,"ne","","",27,[[["i16bytes",3]]]],[11,"eq","","",28,[[["i32bytes",3]]]],[11,"ne","","",28,[[["i32bytes",3]]]],[11,"eq","","",29,[[["i64bytes",3]]]],[11,"ne","","",29,[[["i64bytes",3]]]],[11,"eq","object::read","",30,[[["bytes",3]]]],[11,"ne","","",30,[[["bytes",3]]]],[11,"eq","object::read::archive","",42,[[["archivekind",4]]]],[11,"eq","object::read","",297,[[["error",3]]]],[11,"ne","","",297,[[["error",3]]]],[11,"eq","","",35,[[["filekind",4]]]],[11,"eq","","",36,[[["objectkind",4]]]],[11,"eq","","",31,[[["sectionindex",3]]]],[11,"ne","","",31,[[["sectionindex",3]]]],[11,"eq","","",32,[[["symbolindex",3]]]],[11,"ne","","",32,[[["symbolindex",3]]]],[11,"eq","","",37,[[["symbolsection",4]]]],[11,"ne","","",37,[[["symbolsection",4]]]],[11,"eq","","",110,[[["symbolmapname",3]]]],[11,"ne","","",110,[[["symbolmapname",3]]]],[11,"eq","","",112,[[["objectmapentry",3]]]],[11,"ne","","",112,[[["objectmapentry",3]]]],[11,"eq","","",113,[[["import",3]]]],[11,"ne","","",113,[[["import",3]]]],[11,"eq","","",114,[[["export",3]]]],[11,"ne","","",114,[[["export",3]]]],[11,"eq","","",115,[[["codeview",3]]]],[11,"ne","","",115,[[["codeview",3]]]],[11,"eq","","",38,[[["relocationtarget",4]]]],[11,"ne","","",38,[[["relocationtarget",4]]]],[11,"eq","","",39,[[["compressionformat",4]]]],[11,"eq","","",33,[[["compressedfilerange",3]]]],[11,"ne","","",33,[[["compressedfilerange",3]]]],[11,"eq","","",34,[[["compresseddata",3]]]],[11,"ne","","",34,[[["compresseddata",3]]]],[11,"cmp","object::endian","",24,[[["u16bytes",3]],["ordering",4]]],[11,"cmp","","",25,[[["u32bytes",3]],["ordering",4]]],[11,"cmp","","",26,[[["u64bytes",3]],["ordering",4]]],[11,"cmp","","",27,[[["i16bytes",3]],["ordering",4]]],[11,"cmp","","",28,[[["i32bytes",3]],["ordering",4]]],[11,"cmp","","",29,[[["i64bytes",3]],["ordering",4]]],[11,"partial_cmp","","",24,[[["u16bytes",3]],[["option",4],["ordering",4]]]],[11,"lt","","",24,[[["u16bytes",3]]]],[11,"le","","",24,[[["u16bytes",3]]]],[11,"gt","","",24,[[["u16bytes",3]]]],[11,"ge","","",24,[[["u16bytes",3]]]],[11,"partial_cmp","","",25,[[["u32bytes",3]],[["option",4],["ordering",4]]]],[11,"lt","","",25,[[["u32bytes",3]]]],[11,"le","","",25,[[["u32bytes",3]]]],[11,"gt","","",25,[[["u32bytes",3]]]],[11,"ge","","",25,[[["u32bytes",3]]]],[11,"partial_cmp","","",26,[[["u64bytes",3]],[["option",4],["ordering",4]]]],[11,"lt","","",26,[[["u64bytes",3]]]],[11,"le","","",26,[[["u64bytes",3]]]],[11,"gt","","",26,[[["u64bytes",3]]]],[11,"ge","","",26,[[["u64bytes",3]]]],[11,"partial_cmp","","",27,[[["i16bytes",3]],[["option",4],["ordering",4]]]],[11,"lt","","",27,[[["i16bytes",3]]]],[11,"le","","",27,[[["i16bytes",3]]]],[11,"gt","","",27,[[["i16bytes",3]]]],[11,"ge","","",27,[[["i16bytes",3]]]],[11,"partial_cmp","","",28,[[["i32bytes",3]],[["option",4],["ordering",4]]]],[11,"lt","","",28,[[["i32bytes",3]]]],[11,"le","","",28,[[["i32bytes",3]]]],[11,"gt","","",28,[[["i32bytes",3]]]],[11,"ge","","",28,[[["i32bytes",3]]]],[11,"partial_cmp","","",29,[[["i64bytes",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["i64bytes",3]]]],[11,"le","","",29,[[["i64bytes",3]]]],[11,"gt","","",29,[[["i64bytes",3]]]],[11,"ge","","",29,[[["i64bytes",3]]]],[11,"hash","object","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",18,[[]]],[11,"hash","object::endian","",22,[[]]],[11,"hash","","",282,[[]]],[11,"hash","","",283,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","object::read::archive","",42,[[]]],[11,"hash","object::read","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",110,[[]]],[11,"hash","","",112,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"next","","",284,[[],["option",4]]],[11,"next","","",286,[[],["option",4]]],[11,"next","","",288,[[],["option",4]]],[11,"next","","",290,[[],["option",4]]],[11,"next","","",292,[[],["option",4]]],[11,"next","","",294,[[],["option",4]]],[11,"next","","",295,[[],["option",4]]],[11,"next","object::read::archive","",298,[[],["option",4]]],[11,"next","object::read::coff","",299,[[],["option",4]]],[11,"next","","",301,[[],["option",4]]],[11,"next","","",303,[[],["option",4]]],[11,"next","","",305,[[],["option",4]]],[11,"next","","",307,[[],["option",4]]],[11,"next","","",308,[[],["option",4]]],[11,"next","","",310,[[],["option",4]]],[11,"next","object::read::elf","",311,[[],["option",4]]],[11,"next","","",313,[[],["option",4]]],[11,"next","","",316,[[],["option",4]]],[11,"next","","",318,[[],["option",4]]],[11,"next","","",319,[[],["option",4]]],[11,"next","","",320,[[],["option",4]]],[11,"next","","",322,[[],["option",4]]],[11,"next","object::read::macho","",323,[[],[["option",4],["dyldcacheimage",3]]]],[11,"next","","",324,[[],["option",4]]],[11,"next","","",326,[[],["option",4]]],[11,"next","","",327,[[],["option",4]]],[11,"next","","",329,[[],["option",4]]],[11,"next","","",332,[[],["option",4]]],[11,"next","","",334,[[],["option",4]]],[11,"next","object::read::pe","",335,[[],["option",4]]],[11,"next","","",337,[[],["option",4]]],[11,"next","","",338,[[],["option",4]]],[11,"next","","",340,[[],["option",4]]],[11,"next","","",342,[[],["option",4]]],[11,"next","","",97,[[],[["option",4],["relocation",3]]]],[11,"next","object::read","",296,[[],["option",4]]],[11,"clone","object","",0,[[],["architecture",4]]],[11,"clone","","",1,[[],["addresssize",4]]],[11,"clone","","",2,[[],["binaryformat",4]]],[11,"clone","","",3,[[],["sectionkind",4]]],[11,"clone","","",4,[[],["comdatkind",4]]],[11,"clone","","",5,[[],["symbolkind",4]]],[11,"clone","","",6,[[],["symbolscope",4]]],[11,"clone","","",7,[[],["relocationkind",4]]],[11,"clone","","",9,[[],["relocationencoding",4]]],[11,"clone","","",10,[[],["fileflags",4]]],[11,"clone","","",14,[[],["sectionflags",4]]],[11,"clone","","",18,[[],["symbolflags",4]]],[11,"clone","object::endian","",22,[[],["endianness",4]]],[11,"clone","","",282,[[],["littleendian",3]]],[11,"clone","","",283,[[],["bigendian",3]]],[11,"clone","","",24,[[],["u16bytes",3]]],[11,"clone","","",25,[[],["u32bytes",3]]],[11,"clone","","",26,[[],["u64bytes",3]]],[11,"clone","","",27,[[],["i16bytes",3]]],[11,"clone","","",28,[[],["i32bytes",3]]],[11,"clone","","",29,[[],["i64bytes",3]]],[11,"clone","object::read","",30,[[],["bytes",3]]],[11,"clone","","",40,[[],["stringtable",3]]],[11,"clone","object::read::archive","",42,[[],["archivekind",4]]],[11,"clone","object::read::coff","",46,[[],["sectiontable",3]]],[11,"clone","","",304,[[],["coffsymboltable",3]]],[11,"clone","","",306,[[],["coffsymbol",3]]],[11,"clone","object::read::elf","",50,[[],["sectiontable",3]]],[11,"clone","","",51,[[],["symboltable",3]]],[11,"clone","","",315,[[],["elfsymboltable",3]]],[11,"clone","","",317,[[],["elfsymbol",3]]],[11,"clone","","",48,[[],["versionindex",3]]],[11,"clone","","",57,[[],["version",3]]],[11,"clone","","",58,[[],["versiontable",3]]],[11,"clone","","",59,[[],["verdefiterator",3]]],[11,"clone","","",60,[[],["verdauxiterator",3]]],[11,"clone","","",61,[[],["verneediterator",3]]],[11,"clone","","",62,[[],["vernauxiterator",3]]],[11,"clone","object::read::macho","",76,[[],["loadcommanditerator",3]]],[11,"clone","","",77,[[],["loadcommanddata",3]]],[11,"clone","","",72,[[],["loadcommandvariant",4]]],[11,"clone","","",78,[[],["symboltable",3]]],[11,"clone","","",331,[[],["machosymboltable",3]]],[11,"clone","","",333,[[],["machosymbol",3]]],[11,"clone","object::read::pe","",91,[[],["datadirectories",3]]],[11,"clone","","",88,[[],["exporttarget",4]]],[11,"clone","","",84,[[],["export",3]]],[11,"clone","","",92,[[],["exporttable",3]]],[11,"clone","","",93,[[],["importtable",3]]],[11,"clone","","",94,[[],["importdescriptoriterator",3]]],[11,"clone","","",95,[[],["importthunklist",3]]],[11,"clone","","",89,[[],["import",4]]],[11,"clone","","",96,[[],["relocationblockiterator",3]]],[11,"clone","","",97,[[],["relocationiterator",3]]],[11,"clone","","",85,[[],["relocation",3]]],[11,"clone","","",86,[[],["richheaderinfo",3]]],[11,"clone","","",87,[[],["richheaderentry",3]]],[11,"clone","object::read","",297,[[],["error",3]]],[11,"clone","","",35,[[],["filekind",4]]],[11,"clone","","",36,[[],["objectkind",4]]],[11,"clone","","",31,[[],["sectionindex",3]]],[11,"clone","","",32,[[],["symbolindex",3]]],[11,"clone","","",37,[[],["symbolsection",4]]],[11,"clone","","",109,[[],["symbolmap",3]]],[11,"clone","","",110,[[],["symbolmapname",3]]],[11,"clone","","",111,[[],["objectmap",3]]],[11,"clone","","",112,[[],["objectmapentry",3]]],[11,"clone","","",113,[[],["import",3]]],[11,"clone","","",114,[[],["export",3]]],[11,"clone","","",115,[[],["codeview",3]]],[11,"clone","","",38,[[],["relocationtarget",4]]],[11,"clone","","",39,[[],["compressionformat",4]]],[11,"clone","","",33,[[],["compressedfilerange",3]]],[11,"clone","","",34,[[],["compresseddata",3]]],[11,"clone","object::archive","",117,[[],["header",3]]],[11,"clone","object::elf","",118,[[],["fileheader32",3]]],[11,"clone","","",119,[[],["fileheader64",3]]],[11,"clone","","",120,[[],["ident",3]]],[11,"clone","","",121,[[],["sectionheader32",3]]],[11,"clone","","",122,[[],["sectionheader64",3]]],[11,"clone","","",123,[[],["compressionheader32",3]]],[11,"clone","","",124,[[],["compressionheader64",3]]],[11,"clone","","",125,[[],["sym32",3]]],[11,"clone","","",126,[[],["sym64",3]]],[11,"clone","","",127,[[],["syminfo32",3]]],[11,"clone","","",128,[[],["syminfo64",3]]],[11,"clone","","",129,[[],["rel32",3]]],[11,"clone","","",130,[[],["rela32",3]]],[11,"clone","","",131,[[],["rel64",3]]],[11,"clone","","",132,[[],["rela64",3]]],[11,"clone","","",133,[[],["programheader32",3]]],[11,"clone","","",134,[[],["programheader64",3]]],[11,"clone","","",135,[[],["dyn32",3]]],[11,"clone","","",136,[[],["dyn64",3]]],[11,"clone","","",137,[[],["versym",3]]],[11,"clone","","",138,[[],["verdef",3]]],[11,"clone","","",139,[[],["verdaux",3]]],[11,"clone","","",140,[[],["verneed",3]]],[11,"clone","","",141,[[],["vernaux",3]]],[11,"clone","","",142,[[],["noteheader32",3]]],[11,"clone","","",143,[[],["noteheader64",3]]],[11,"clone","","",144,[[],["hashheader",3]]],[11,"clone","","",145,[[],["gnuhashheader",3]]],[11,"clone","object::macho","",146,[[],["dyldcacheheader",3]]],[11,"clone","","",147,[[],["dyldcachemappinginfo",3]]],[11,"clone","","",148,[[],["dyldcacheimageinfo",3]]],[11,"clone","","",149,[[],["fatheader",3]]],[11,"clone","","",150,[[],["fatarch32",3]]],[11,"clone","","",151,[[],["fatarch64",3]]],[11,"clone","","",152,[[],["machheader32",3]]],[11,"clone","","",153,[[],["machheader64",3]]],[11,"clone","","",154,[[],["loadcommand",3]]],[11,"clone","","",155,[[],["lcstr",3]]],[11,"clone","","",156,[[],["segmentcommand32",3]]],[11,"clone","","",157,[[],["segmentcommand64",3]]],[11,"clone","","",158,[[],["section32",3]]],[11,"clone","","",159,[[],["section64",3]]],[11,"clone","","",160,[[],["fvmlib",3]]],[11,"clone","","",161,[[],["fvmlibcommand",3]]],[11,"clone","","",162,[[],["dylib",3]]],[11,"clone","","",163,[[],["dylibcommand",3]]],[11,"clone","","",164,[[],["subframeworkcommand",3]]],[11,"clone","","",165,[[],["subclientcommand",3]]],[11,"clone","","",166,[[],["subumbrellacommand",3]]],[11,"clone","","",167,[[],["sublibrarycommand",3]]],[11,"clone","","",168,[[],["prebounddylibcommand",3]]],[11,"clone","","",169,[[],["dylinkercommand",3]]],[11,"clone","","",170,[[],["threadcommand",3]]],[11,"clone","","",171,[[],["routinescommand32",3]]],[11,"clone","","",172,[[],["routinescommand64",3]]],[11,"clone","","",173,[[],["symtabcommand",3]]],[11,"clone","","",174,[[],["dysymtabcommand",3]]],[11,"clone","","",175,[[],["dylibtableofcontents",3]]],[11,"clone","","",176,[[],["dylibmodule32",3]]],[11,"clone","","",177,[[],["dylibmodule64",3]]],[11,"clone","","",178,[[],["dylibreference",3]]],[11,"clone","","",179,[[],["twolevelhintscommand",3]]],[11,"clone","","",180,[[],["twolevelhint",3]]],[11,"clone","","",181,[[],["prebindcksumcommand",3]]],[11,"clone","","",182,[[],["uuidcommand",3]]],[11,"clone","","",183,[[],["rpathcommand",3]]],[11,"clone","","",184,[[],["linkeditdatacommand",3]]],[11,"clone","","",185,[[],["filesetentrycommand",3]]],[11,"clone","","",186,[[],["encryptioninfocommand32",3]]],[11,"clone","","",187,[[],["encryptioninfocommand64",3]]],[11,"clone","","",188,[[],["versionmincommand",3]]],[11,"clone","","",189,[[],["buildversioncommand",3]]],[11,"clone","","",190,[[],["buildtoolversion",3]]],[11,"clone","","",191,[[],["dyldinfocommand",3]]],[11,"clone","","",192,[[],["linkeroptioncommand",3]]],[11,"clone","","",193,[[],["symsegcommand",3]]],[11,"clone","","",194,[[],["identcommand",3]]],[11,"clone","","",195,[[],["fvmfilecommand",3]]],[11,"clone","","",196,[[],["entrypointcommand",3]]],[11,"clone","","",197,[[],["sourceversioncommand",3]]],[11,"clone","","",198,[[],["dataincodeentry",3]]],[11,"clone","","",199,[[],["notecommand",3]]],[11,"clone","","",200,[[],["nlist32",3]]],[11,"clone","","",201,[[],["nlist64",3]]],[11,"clone","","",202,[[],["relocation",3]]],[11,"clone","","",203,[[],["relocationinfo",3]]],[11,"clone","","",204,[[],["scatteredrelocationinfo",3]]],[11,"clone","object::pe","",205,[[],["imagedosheader",3]]],[11,"clone","","",206,[[],["imageos2header",3]]],[11,"clone","","",207,[[],["imagevxdheader",3]]],[11,"clone","","",208,[[],["maskedrichheaderentry",3]]],[11,"clone","","",209,[[],["imagefileheader",3]]],[11,"clone","","",210,[[],["imagedatadirectory",3]]],[11,"clone","","",211,[[],["imageoptionalheader32",3]]],[11,"clone","","",212,[[],["imageromoptionalheader",3]]],[11,"clone","","",213,[[],["imageoptionalheader64",3]]],[11,"clone","","",214,[[],["imagentheaders64",3]]],[11,"clone","","",215,[[],["imagentheaders32",3]]],[11,"clone","","",216,[[],["imageromheaders",3]]],[11,"clone","","",217,[[],["guid",3]]],[11,"clone","","",218,[[],["anonobjectheader",3]]],[11,"clone","","",219,[[],["anonobjectheaderv2",3]]],[11,"clone","","",220,[[],["anonobjectheaderbigobj",3]]],[11,"clone","","",221,[[],["imagesectionheader",3]]],[11,"clone","","",222,[[],["imagesymbol",3]]],[11,"clone","","",223,[[],["imagesymbolbytes",3]]],[11,"clone","","",224,[[],["imagesymbolex",3]]],[11,"clone","","",225,[[],["imagesymbolexbytes",3]]],[11,"clone","","",226,[[],["imageauxsymboltokendef",3]]],[11,"clone","","",227,[[],["imageauxsymbolfunction",3]]],[11,"clone","","",228,[[],["imageauxsymbolfunctionbeginend",3]]],[11,"clone","","",229,[[],["imageauxsymbolweak",3]]],[11,"clone","","",230,[[],["imageauxsymbolsection",3]]],[11,"clone","","",231,[[],["imageauxsymbolcrc",3]]],[11,"clone","","",232,[[],["imagerelocation",3]]],[11,"clone","","",233,[[],["imagelinenumber",3]]],[11,"clone","","",234,[[],["imagebaserelocation",3]]],[11,"clone","","",235,[[],["imagearchivememberheader",3]]],[11,"clone","","",236,[[],["imageexportdirectory",3]]],[11,"clone","","",237,[[],["imageimportbyname",3]]],[11,"clone","","",238,[[],["imagethunkdata64",3]]],[11,"clone","","",239,[[],["imagethunkdata32",3]]],[11,"clone","","",240,[[],["imagetlsdirectory64",3]]],[11,"clone","","",241,[[],["imagetlsdirectory32",3]]],[11,"clone","","",242,[[],["imageimportdescriptor",3]]],[11,"clone","","",243,[[],["imageboundimportdescriptor",3]]],[11,"clone","","",244,[[],["imageboundforwarderref",3]]],[11,"clone","","",245,[[],["imagedelayloaddescriptor",3]]],[11,"clone","","",246,[[],["imageresourcedirectory",3]]],[11,"clone","","",247,[[],["imageresourcedirectoryentry",3]]],[11,"clone","","",248,[[],["imageresourcedirectorystring",3]]],[11,"clone","","",249,[[],["imageresourcedirstringu",3]]],[11,"clone","","",250,[[],["imageresourcedataentry",3]]],[11,"clone","","",251,[[],["imageloadconfigcodeintegrity",3]]],[11,"clone","","",252,[[],["imagedynamicrelocationtable",3]]],[11,"clone","","",253,[[],["imagedynamicrelocation32",3]]],[11,"clone","","",254,[[],["imagedynamicrelocation64",3]]],[11,"clone","","",255,[[],["imagedynamicrelocation32v2",3]]],[11,"clone","","",256,[[],["imagedynamicrelocation64v2",3]]],[11,"clone","","",257,[[],["imageprologuedynamicrelocationheader",3]]],[11,"clone","","",258,[[],["imageepiloguedynamicrelocationheader",3]]],[11,"clone","","",259,[[],["imageloadconfigdirectory32",3]]],[11,"clone","","",260,[[],["imageloadconfigdirectory64",3]]],[11,"clone","","",261,[[],["imagehotpatchinfo",3]]],[11,"clone","","",262,[[],["imagehotpatchbase",3]]],[11,"clone","","",263,[[],["imagehotpatchhashes",3]]],[11,"clone","","",264,[[],["imagearmruntimefunctionentry",3]]],[11,"clone","","",265,[[],["imagearm64runtimefunctionentry",3]]],[11,"clone","","",266,[[],["imagealpha64runtimefunctionentry",3]]],[11,"clone","","",267,[[],["imagealpharuntimefunctionentry",3]]],[11,"clone","","",268,[[],["imageruntimefunctionentry",3]]],[11,"clone","","",269,[[],["imageenclaveconfig32",3]]],[11,"clone","","",270,[[],["imageenclaveconfig64",3]]],[11,"clone","","",271,[[],["imageenclaveimport",3]]],[11,"clone","","",272,[[],["imagedebugdirectory",3]]],[11,"clone","","",273,[[],["imagecoffsymbolsheader",3]]],[11,"clone","","",274,[[],["imagedebugmisc",3]]],[11,"clone","","",275,[[],["imagefunctionentry",3]]],[11,"clone","","",276,[[],["imagefunctionentry64",3]]],[11,"clone","","",277,[[],["imageseparatedebugheader",3]]],[11,"clone","","",278,[[],["nonpageddebuginfo",3]]],[11,"clone","","",279,[[],["imagearchitectureentry",3]]],[11,"clone","","",280,[[],["importobjectheader",3]]],[11,"clone","","",281,[[],["imagecor20header",3]]],[11,"default","object::endian","",22,[[],["endianness",4]]],[11,"default","","",282,[[],["littleendian",3]]],[11,"default","","",283,[[],["bigendian",3]]],[11,"default","","",24,[[],["u16bytes",3]]],[11,"default","","",25,[[],["u32bytes",3]]],[11,"default","","",26,[[],["u64bytes",3]]],[11,"default","","",27,[[],["i16bytes",3]]],[11,"default","","",28,[[],["i32bytes",3]]],[11,"default","","",29,[[],["i64bytes",3]]],[11,"default","object::read","",30,[[],["bytes",3]]],[11,"default","","",40,[[]]],[11,"default","object::read::coff","",46,[[],["sectiontable",3]]],[11,"default","object::read::elf","",50,[[],["sectiontable",3]]],[11,"default","","",51,[[]]],[11,"default","","",48,[[],["versionindex",3]]],[11,"default","","",57,[[],["version",3]]],[11,"default","","",58,[[]]],[11,"default","object::read::macho","",76,[[],["loadcommanditerator",3]]],[11,"default","","",78,[[]]],[11,"default","object::read::pe","",96,[[],["relocationblockiterator",3]]],[11,"default","","",85,[[],["relocation",3]]],[11,"default","object::read","",109,[[],["symbolmap",3]]],[11,"default","","",111,[[],["objectmap",3]]],[11,"default","","",112,[[],["objectmapentry",3]]],[11,"default","object::elf","",123,[[],["compressionheader32",3]]],[11,"default","","",124,[[],["compressionheader64",3]]],[11,"default","","",125,[[],["sym32",3]]],[11,"default","","",126,[[],["sym64",3]]],[11,"default","object::pe","",221,[[],["imagesectionheader",3]]],[11,"read_bytes","object::read","Get a reference to a `u8` slice at the given offset, and…",101,[[],["result",4]]],[11,"read","","Get a reference to a `Pod` type at the given offset, and…",101,[[],["result",4]]],[11,"read_at","","Get a reference to a `Pod` type at the given offset.",101,[[],["result",4]]],[11,"read_slice","","Get a reference to a slice of a `Pod` type at the given…",101,[[],["result",4]]],[11,"read_slice_at","","Get a reference to a slice of a `Pod` type at the given…",101,[[],["result",4]]],[11,"parse","object::pe","Read the file header.",209,[[["readref",8]],["result",6]]],[11,"sections","","Read the section table.",209,[[["readref",8]],[["sectiontable",3],["result",6]]]],[11,"symbols","","Read the symbol table and string table.",209,[[["readref",8]],[["result",6],["symboltable",3]]]],[11,"name_offset","","Return the string table offset of the section name.",221,[[],[["option",4],["result",6]]]],[11,"name","","Return the section name.",221,[[["readref",8],["stringtable",3]],["result",6]]],[11,"raw_name","","Return the raw section name.",221,[[]]],[11,"coff_file_range","","Return the offset and size of the section in a COFF file.",221,[[],["option",4]]],[11,"coff_data","","Return the section data in a COFF file.",221,[[["readref",8]],["result",4]]],[11,"coff_alignment","","Return the section alignment in bytes.",221,[[]]],[11,"coff_relocations","","Read the relocations in a COFF file.",221,[[["readref",8]],["result",6]]],[11,"name","","Parse a COFF symbol name.",222,[[["readref",8],["stringtable",3]],["result",6]]],[11,"address","","Return the symbol address.",222,[[["sectiontable",3]],["result",6]]],[11,"is_definition","","Return true if the symbol is a definition of a function or…",222,[[]]],[11,"has_aux_file_name","","Return true if the symbol has an auxiliary file name.",222,[[]]],[11,"has_aux_function","","Return true if the symbol has an auxiliary function symbol.",222,[[]]],[11,"has_aux_section","","Return true if the symbol has an auxiliary section symbol.",222,[[]]],[11,"parse","object::read::elf","Read the file header.",63,[[["readref",8]],["result",6]]],[11,"is_supported","","Check that the ident field in the file header is a…",63,[[]]],[11,"is_class_32","","",63,[[]]],[11,"is_class_64","","",63,[[]]],[11,"is_little_endian","","",63,[[]]],[11,"is_big_endian","","",63,[[]]],[11,"endian","","",63,[[],["result",6]]],[11,"section_0","","Return the first section header, if present.",63,[[["readref",8]],[["option",4],["result",6]]]],[11,"phnum","","Return the `e_phnum` field of the header. Handles extended…",63,[[["readref",8]],["result",6]]],[11,"shnum","","Return the `e_shnum` field of the header. Handles extended…",63,[[["readref",8]],["result",6]]],[11,"shstrndx","","Return the `e_shstrndx` field of the header. Handles…",63,[[["readref",8]],["result",6]]],[11,"program_headers","","Return the slice of program headers.",63,[[["readref",8]],["result",6]]],[11,"section_headers","","Return the slice of section headers.",63,[[["readref",8]],["result",6]]],[11,"section_strings","","Return the string table for the section headers.",63,[[["readref",8]],[["result",6],["stringtable",3]]]],[11,"sections","","Return the section table.",63,[[["readref",8]],[["sectiontable",3],["result",6]]]],[11,"is_mips64el","","Returns whether this is a mips64el elf file.",63,[[]]],[11,"file_range","","Return the offset and size of the segment in the file.",64,[[]]],[11,"data","","Return the segment data.",64,[[["readref",8]],["result",4]]],[11,"data_as_array","","Return the segment data as a slice of the given type.",64,[[["readref",8]],["result",4]]],[11,"data_range","","Return the segment data in the given virtual address range",64,[[["readref",8]],[["option",4],["result",4]]]],[11,"dynamic","","Return entries in a dynamic segment.",64,[[["readref",8]],[["option",4],["result",6]]]],[11,"notes","","Return a note iterator for the segment data.",64,[[["readref",8]],[["result",6],["option",4]]]],[11,"name","","Parse the section name from the string table.",65,[[["readref",8],["stringtable",3]],["result",6]]],[11,"file_range","","Return the offset and size of the section in the file.",65,[[],["option",4]]],[11,"data","","Return the section data.",65,[[["readref",8]],["result",6]]],[11,"data_as_array","","Return the section data as a slice of the given type.",65,[[["readref",8]],["result",6]]],[11,"strings","","Return the strings in the section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"symbols","","Return the symbols in the section.",65,[[["sectiontable",3],["readref",8],["sectionindex",3]],[["option",4],["result",6]]]],[11,"rel","","Return the `Elf::Rel` entries in the section.",65,[[["readref",8]],[["option",4],["result",6]]]],[11,"rela","","Return the `Elf::Rela` entries in the section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"dynamic","","Return entries in a dynamic section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"notes","","Return a note iterator for the section data.",65,[[["readref",8]],[["option",4],["result",6]]]],[11,"group","","Return the contents of a group section.",65,[[["readref",8]],[["option",4],["result",6]]]],[11,"hash_header","","Return the header of a SysV hash section.",65,[[["readref",8]],[["option",4],["result",6]]]],[11,"hash","","Return the contents of a SysV hash section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"gnu_hash_header","","Return the header of a GNU hash section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"gnu_hash","","Return the contents of a GNU hash section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"gnu_versym","","Return the contents of a `SHT_GNU_VERSYM` section.",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"gnu_verdef","","Return an iterator for the entries of a `SHT_GNU_VERDEF`…",65,[[["readref",8]],[["option",4],["result",6]]]],[11,"gnu_verneed","","Return an iterator for the entries of a `SHT_GNU_VERNEED`…",65,[[["readref",8]],[["result",6],["option",4]]]],[11,"name","","Parse the symbol name from the string table.",66,[[["readref",8],["stringtable",3]],["result",6]]],[11,"is_undefined","","Return true if the symbol is undefined.",66,[[]]],[11,"is_definition","","Return true if the symbol is a definition of a function or…",66,[[]]],[11,"tag32","","Try to convert the tag to a `u32`.",69,[[],["option",4]]],[11,"val32","","Try to convert the value to a `u32`.",69,[[],["option",4]]],[11,"is_string","","Return true if the value is an offset in the dynamic…",69,[[]]],[11,"string","","Use the value to get a string in a string table.",69,[[["stringtable",3]],["result",6]]],[11,"is_address","","Return true if the value is an address.",69,[[]]],[11,"name","object::elf","Parse the version name from the string table.",139,[[["readref",8],["stringtable",3]],["result",6]]],[11,"file","","Parse the file from the string table.",140,[[["readref",8],["stringtable",3]],["result",6]]],[11,"name","","Parse the version name from the string table.",141,[[["readref",8],["stringtable",3]],["result",6]]],[11,"parse","object::macho","Read the dyld cache header.",146,[[["readref",8]],["result",6]]],[11,"parse_magic","","Returns (arch, endian) based on the magic string.",146,[[],["result",6]]],[11,"mappings","","Return the mapping information table.",146,[[["readref",8]],["result",6]]],[11,"images","","Return the image information table.",146,[[["readref",8]],["result",6]]],[11,"path","","The file system path of this image.",148,[[["readref",8]],["result",6]]],[11,"file_offset","","Find the file offset of the image by looking up its…",148,[[],["result",6]]],[11,"architecture","object::read::macho","",79,[[],["architecture",4]]],[11,"file_range","","",79,[[]]],[11,"data","","",79,[[["readref",8]],["result",6]]],[11,"parse","object::macho","Attempt to parse a fat header.",149,[[["readref",8]],[["fatheader",3],["result",6]]]],[11,"parse_arch32","","Attempt to parse a fat header and 32-bit fat arches.",149,[[["readref",8]],["result",6]]],[11,"parse_arch64","","Attempt to parse a fat header and 64-bit fat arches.",149,[[["readref",8]],["result",6]]],[11,"parse","object::read::macho","Read the file header.",80,[[["readref",8]],["result",6]]],[11,"is_supported","","",80,[[]]],[11,"endian","","",80,[[],["result",6]]],[11,"load_commands","","",80,[[["readref",8]],[["result",6],["loadcommanditerator",3]]]],[11,"uuid","","Return the UUID from the `LC_UUID` load command, if one is…",80,[[["readref",8]],[["result",6],["option",4]]]],[11,"symbols","object::macho","Return the symbol table that this command references.",173,[[["readref",8]],[["symboltable",3],["result",6]]]],[11,"name","object::read::macho","Return the `segname` bytes up until the null terminator.",81,[[]]],[11,"file_range","","Return the offset and size of the segment in the file.",81,[[]]],[11,"data","","Get the segment data from the file data.",81,[[["readref",8]],["result",4]]],[11,"sections","","Get the array of sections from the data following the…",81,[[["readref",8]],["result",6]]],[11,"name","","Return the `sectname` bytes up until the null terminator.",82,[[]]],[11,"segment_name","","Return the `segname` bytes up until the null terminator.",82,[[]]],[11,"file_range","","Return the offset and size of the section in the file.",82,[[],["option",4]]],[11,"data","","Return the section data.",82,[[["readref",8]],["result",4]]],[11,"relocations","","Return the relocation array.",82,[[["readref",8]],["result",6]]],[11,"name","","",83,[[["readref",8],["stringtable",3]],["result",6]]],[11,"is_stab","","Return true if this is a STAB symbol.",83,[[]]],[11,"is_undefined","","Return true if this is an undefined symbol.",83,[[]]],[11,"is_definition","","Return true if the symbol is a definition of a function or…",83,[[]]],[11,"library_ordinal","","Return the library ordinal.",83,[[]]],[11,"parse","object::read::pe","Read the NT headers, including the data directories.",98,[[["readref",8]],["result",6]]],[11,"sections","","Read the section table.",98,[[["readref",8]],[["sectiontable",3],["result",6]]]],[11,"symbols","","Read the symbol table and string table.",98,[[["readref",8]],[["result",6],["symboltable",3]]]],[11,"parse","object::pe","Read the DOS header.",205,[[["readref",8]],["result",6]]],[11,"nt_headers_offset","","Return the file offset of the nt_headers.",205,[[]]],[11,"pe_file_range","","Return the offset and size of the section in a PE file.",221,[[]]],[11,"pe_address_range","","Return the virtual address and size of the section.",221,[[]]],[11,"pe_data","","Return the section data in a PE file.",221,[[["readref",8]],["result",6]]],[11,"pe_data_at","","Return the data at the given virtual address if this…",221,[[["readref",8]],["option",4]]],[11,"pe_data_containing","","Return the section data if it contains the given virtual…",221,[[["readref",8]],["option",4]]],[11,"address_range","","Return the virtual address range of this directory entry.",210,[[]]],[11,"data","","Get the data referenced by this directory entry.",210,[[["readref",8],["sectiontable",3]],["result",6]]],[11,"endianness","object::read","Get the endianness of the file.",102,[[],["endianness",4]]],[11,"section_by_name","","Get the section named `section_name`, if such a section…",102,[[],["option",4]]],[11,"symbol_map","","Construct a map from addresses to symbol names.",102,[[],[["symbolmapname",3],["symbolmap",3]]]],[11,"object_map","","Construct a map from addresses to symbol names and object…",102,[[],["objectmap",3]]],[11,"mach_uuid","","The UUID from a Mach-O `LC_UUID` load command.",102,[[],[["result",6],["option",4]]]],[11,"build_id","","The build ID from an ELF `NT_GNU_BUILD_ID` note.",102,[[],[["option",4],["result",6]]]],[11,"gnu_debuglink","","The filename and CRC from a `.gnu_debuglink` section.",102,[[],[["option",4],["result",6]]]],[11,"gnu_debugaltlink","","The filename and build ID from a `.gnu_debugaltlink`…",102,[[],[["result",6],["option",4]]]],[11,"pdb_info","","The filename and GUID from the PE CodeView section",102,[[],[["option",4],["result",6]]]],[11,"uncompressed_data","","Returns the uncompressed contents of the section.",104,[[],[["cow",4],["result",6]]]],[11,"section_index","","Returns the section index for the section containing this…",107,[[],[["option",4],["sectionindex",3]]]]],"p":[[4,"Architecture"],[4,"AddressSize"],[4,"BinaryFormat"],[4,"SectionKind"],[4,"ComdatKind"],[4,"SymbolKind"],[4,"SymbolScope"],[4,"RelocationKind"],[13,"MachO"],[4,"RelocationEncoding"],[4,"FileFlags"],[13,"Elf"],[13,"MachO"],[13,"Coff"],[4,"SectionFlags"],[13,"Elf"],[13,"MachO"],[13,"Coff"],[4,"SymbolFlags"],[13,"Elf"],[13,"MachO"],[13,"CoffSection"],[4,"Endianness"],[8,"Endian"],[3,"U16Bytes"],[3,"U32Bytes"],[3,"U64Bytes"],[3,"I16Bytes"],[3,"I32Bytes"],[3,"I64Bytes"],[3,"Bytes"],[3,"SectionIndex"],[3,"SymbolIndex"],[3,"CompressedFileRange"],[3,"CompressedData"],[4,"FileKind"],[4,"ObjectKind"],[4,"SymbolSection"],[4,"RelocationTarget"],[4,"CompressionFormat"],[3,"StringTable"],[3,"File"],[4,"ArchiveKind"],[3,"ArchiveFile"],[3,"ArchiveMember"],[3,"CoffFile"],[3,"SectionTable"],[3,"SymbolTable"],[3,"VersionIndex"],[3,"ElfFile"],[3,"SectionTable"],[3,"SymbolTable"],[3,"RelocationSections"],[3,"NoteIterator"],[3,"Note"],[3,"HashTable"],[3,"GnuHashTable"],[3,"Version"],[3,"VersionTable"],[3,"VerdefIterator"],[3,"VerdauxIterator"],[3,"VerneedIterator"],[3,"VernauxIterator"],[8,"FileHeader"],[8,"ProgramHeader"],[8,"SectionHeader"],[8,"Sym"],[8,"Rel"],[8,"Rela"],[8,"Dyn"],[8,"CompressionHeader"],[8,"NoteHeader"],[4,"LoadCommandVariant"],[3,"DyldCache"],[3,"DyldCacheImage"],[3,"MachOFile"],[3,"LoadCommandIterator"],[3,"LoadCommandData"],[3,"SymbolTable"],[8,"FatArch"],[8,"MachHeader"],[8,"Segment"],[8,"Section"],[8,"Nlist"],[3,"Export"],[3,"Relocation"],[3,"RichHeaderInfo"],[3,"RichHeaderEntry"],[4,"ExportTarget"],[4,"Import"],[3,"PeFile"],[3,"DataDirectories"],[3,"ExportTable"],[3,"ImportTable"],[3,"ImportDescriptorIterator"],[3,"ImportThunkList"],[3,"RelocationBlockIterator"],[3,"RelocationIterator"],[8,"ImageNtHeaders"],[8,"ImageOptionalHeader"],[8,"ImageThunkData"],[8,"ReadRef"],[8,"Object"],[8,"ObjectSegment"],[8,"ObjectSection"],[8,"ObjectComdat"],[8,"ObjectSymbolTable"],[8,"ObjectSymbol"],[8,"SymbolMapEntry"],[3,"SymbolMap"],[3,"SymbolMapName"],[3,"ObjectMap"],[3,"ObjectMapEntry"],[3,"Import"],[3,"Export"],[3,"CodeView"],[3,"Relocation"],[3,"Header"],[3,"FileHeader32"],[3,"FileHeader64"],[3,"Ident"],[3,"SectionHeader32"],[3,"SectionHeader64"],[3,"CompressionHeader32"],[3,"CompressionHeader64"],[3,"Sym32"],[3,"Sym64"],[3,"Syminfo32"],[3,"Syminfo64"],[3,"Rel32"],[3,"Rela32"],[3,"Rel64"],[3,"Rela64"],[3,"ProgramHeader32"],[3,"ProgramHeader64"],[3,"Dyn32"],[3,"Dyn64"],[3,"Versym"],[3,"Verdef"],[3,"Verdaux"],[3,"Verneed"],[3,"Vernaux"],[3,"NoteHeader32"],[3,"NoteHeader64"],[3,"HashHeader"],[3,"GnuHashHeader"],[3,"DyldCacheHeader"],[3,"DyldCacheMappingInfo"],[3,"DyldCacheImageInfo"],[3,"FatHeader"],[3,"FatArch32"],[3,"FatArch64"],[3,"MachHeader32"],[3,"MachHeader64"],[3,"LoadCommand"],[3,"LcStr"],[3,"SegmentCommand32"],[3,"SegmentCommand64"],[3,"Section32"],[3,"Section64"],[3,"Fvmlib"],[3,"FvmlibCommand"],[3,"Dylib"],[3,"DylibCommand"],[3,"SubFrameworkCommand"],[3,"SubClientCommand"],[3,"SubUmbrellaCommand"],[3,"SubLibraryCommand"],[3,"PreboundDylibCommand"],[3,"DylinkerCommand"],[3,"ThreadCommand"],[3,"RoutinesCommand32"],[3,"RoutinesCommand64"],[3,"SymtabCommand"],[3,"DysymtabCommand"],[3,"DylibTableOfContents"],[3,"DylibModule32"],[3,"DylibModule64"],[3,"DylibReference"],[3,"TwolevelHintsCommand"],[3,"TwolevelHint"],[3,"PrebindCksumCommand"],[3,"UuidCommand"],[3,"RpathCommand"],[3,"LinkeditDataCommand"],[3,"FilesetEntryCommand"],[3,"EncryptionInfoCommand32"],[3,"EncryptionInfoCommand64"],[3,"VersionMinCommand"],[3,"BuildVersionCommand"],[3,"BuildToolVersion"],[3,"DyldInfoCommand"],[3,"LinkerOptionCommand"],[3,"SymsegCommand"],[3,"IdentCommand"],[3,"FvmfileCommand"],[3,"EntryPointCommand"],[3,"SourceVersionCommand"],[3,"DataInCodeEntry"],[3,"NoteCommand"],[3,"Nlist32"],[3,"Nlist64"],[3,"Relocation"],[3,"RelocationInfo"],[3,"ScatteredRelocationInfo"],[3,"ImageDosHeader"],[3,"ImageOs2Header"],[3,"ImageVxdHeader"],[3,"MaskedRichHeaderEntry"],[3,"ImageFileHeader"],[3,"ImageDataDirectory"],[3,"ImageOptionalHeader32"],[3,"ImageRomOptionalHeader"],[3,"ImageOptionalHeader64"],[3,"ImageNtHeaders64"],[3,"ImageNtHeaders32"],[3,"ImageRomHeaders"],[3,"Guid"],[3,"AnonObjectHeader"],[3,"AnonObjectHeaderV2"],[3,"AnonObjectHeaderBigobj"],[3,"ImageSectionHeader"],[3,"ImageSymbol"],[3,"ImageSymbolBytes"],[3,"ImageSymbolEx"],[3,"ImageSymbolExBytes"],[3,"ImageAuxSymbolTokenDef"],[3,"ImageAuxSymbolFunction"],[3,"ImageAuxSymbolFunctionBeginEnd"],[3,"ImageAuxSymbolWeak"],[3,"ImageAuxSymbolSection"],[3,"ImageAuxSymbolCrc"],[3,"ImageRelocation"],[3,"ImageLinenumber"],[3,"ImageBaseRelocation"],[3,"ImageArchiveMemberHeader"],[3,"ImageExportDirectory"],[3,"ImageImportByName"],[3,"ImageThunkData64"],[3,"ImageThunkData32"],[3,"ImageTlsDirectory64"],[3,"ImageTlsDirectory32"],[3,"ImageImportDescriptor"],[3,"ImageBoundImportDescriptor"],[3,"ImageBoundForwarderRef"],[3,"ImageDelayloadDescriptor"],[3,"ImageResourceDirectory"],[3,"ImageResourceDirectoryEntry"],[3,"ImageResourceDirectoryString"],[3,"ImageResourceDirStringU"],[3,"ImageResourceDataEntry"],[3,"ImageLoadConfigCodeIntegrity"],[3,"ImageDynamicRelocationTable"],[3,"ImageDynamicRelocation32"],[3,"ImageDynamicRelocation64"],[3,"ImageDynamicRelocation32V2"],[3,"ImageDynamicRelocation64V2"],[3,"ImagePrologueDynamicRelocationHeader"],[3,"ImageEpilogueDynamicRelocationHeader"],[3,"ImageLoadConfigDirectory32"],[3,"ImageLoadConfigDirectory64"],[3,"ImageHotPatchInfo"],[3,"ImageHotPatchBase"],[3,"ImageHotPatchHashes"],[3,"ImageArmRuntimeFunctionEntry"],[3,"ImageArm64RuntimeFunctionEntry"],[3,"ImageAlpha64RuntimeFunctionEntry"],[3,"ImageAlphaRuntimeFunctionEntry"],[3,"ImageRuntimeFunctionEntry"],[3,"ImageEnclaveConfig32"],[3,"ImageEnclaveConfig64"],[3,"ImageEnclaveImport"],[3,"ImageDebugDirectory"],[3,"ImageCoffSymbolsHeader"],[3,"ImageDebugMisc"],[3,"ImageFunctionEntry"],[3,"ImageFunctionEntry64"],[3,"ImageSeparateDebugHeader"],[3,"NonPagedDebugInfo"],[3,"ImageArchitectureEntry"],[3,"ImportObjectHeader"],[3,"ImageCor20Header"],[3,"LittleEndian"],[3,"BigEndian"],[3,"SegmentIterator"],[3,"Segment"],[3,"SectionIterator"],[3,"Section"],[3,"ComdatIterator"],[3,"Comdat"],[3,"ComdatSectionIterator"],[3,"SymbolTable"],[3,"SymbolIterator"],[3,"Symbol"],[3,"DynamicRelocationIterator"],[3,"SectionRelocationIterator"],[3,"NoDynamicRelocationIterator"],[3,"Error"],[3,"ArchiveMemberIterator"],[3,"CoffSegmentIterator"],[3,"CoffSegment"],[3,"CoffSectionIterator"],[3,"CoffSection"],[3,"SymbolIterator"],[3,"CoffSymbolTable"],[3,"CoffSymbolIterator"],[3,"CoffSymbol"],[3,"CoffRelocationIterator"],[3,"CoffComdatIterator"],[3,"CoffComdat"],[3,"CoffComdatSectionIterator"],[3,"ElfSegmentIterator"],[3,"ElfSegment"],[3,"ElfSectionIterator"],[3,"ElfSection"],[3,"ElfSymbolTable"],[3,"ElfSymbolIterator"],[3,"ElfSymbol"],[3,"ElfDynamicRelocationIterator"],[3,"ElfSectionRelocationIterator"],[3,"ElfComdatIterator"],[3,"ElfComdat"],[3,"ElfComdatSectionIterator"],[3,"DyldCacheImageIterator"],[3,"MachOComdatIterator"],[3,"MachOComdat"],[3,"MachOComdatSectionIterator"],[3,"MachOSegmentIterator"],[3,"MachOSegment"],[3,"MachOSectionIterator"],[3,"MachOSection"],[3,"MachOSymbolTable"],[3,"MachOSymbolIterator"],[3,"MachOSymbol"],[3,"MachORelocationIterator"],[3,"PeComdatIterator"],[3,"PeComdat"],[3,"PeComdatSectionIterator"],[3,"PeSegmentIterator"],[3,"PeSegment"],[3,"PeSectionIterator"],[3,"PeSection"],[3,"PeRelocationIterator"]]},\
"ppv_lite86":{"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the…",null,null],[19,"vec256_storage","","",null,null],[19,"vec512_storage","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but use…",null,null],[6,"AVX2","","",null,null],[11,"new128","","",0,[[]]],[11,"split128","","",0,[[]]],[11,"new128","","",1,[[]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[]]],[10,"rotate_each_word_right8","","",4,[[]]],[10,"rotate_each_word_right11","","",4,[[]]],[10,"rotate_each_word_right12","","",4,[[]]],[10,"rotate_each_word_right16","","",4,[[]]],[10,"rotate_each_word_right20","","",4,[[]]],[10,"rotate_each_word_right24","","",4,[[]]],[10,"rotate_each_word_right25","","",4,[[]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[]]],[8,"Vec2","","A vector composed of two elements, which may be words or…",null,null],[10,"extract","","",7,[[]]],[10,"insert","","",7,[[]]],[8,"Vec4","","A vector composed of four elements, which may be words or…",null,null],[10,"extract","","",8,[[]]],[10,"insert","","",8,[[]]],[8,"Vec4Ext","","Vec4 functions which may not be implemented yet for all…",null,null],[10,"transpose4","","",9,[[]]],[8,"Vector","","",null,null],[10,"to_scalars","","",10,[[]]],[8,"Words4","","A vector composed of four words; depending on their size,…",null,null],[10,"shuffle1230","","",11,[[]]],[10,"shuffle2301","","",11,[[]]],[10,"shuffle3012","","",11,[[]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four…",null,null],[10,"shuffle_lane_words1230","","",12,[[]]],[10,"shuffle_lane_words2301","","",12,[[]]],[10,"shuffle_lane_words3012","","",12,[[]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",13,[[]]],[10,"swap2","","",13,[[]]],[10,"swap4","","",13,[[]]],[10,"swap8","","",13,[[]]],[10,"swap16","","",13,[[]]],[10,"swap32","","",13,[[]]],[10,"swap64","","",13,[[]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",14,[[]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",14,[[]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",15,[[]]],[8,"Machine","","",null,null],[16,"u32x4","","",16,null],[16,"u64x2","","",16,null],[16,"u128x1","","",16,null],[16,"u32x4x2","","",16,null],[16,"u64x2x2","","",16,null],[16,"u64x4","","",16,null],[16,"u128x2","","",16,null],[16,"u32x4x4","","",16,null],[16,"u64x2x4","","",16,null],[16,"u128x4","","",16,null],[11,"unpack","","",16,[[],["store",8]]],[11,"vec","","",16,[[]]],[11,"read_le","","",16,[[]]],[11,"read_be","","",16,[[]]],[10,"instance","","Safety Caller must ensure the type of Self is appropriate…",16,[[]]],[8,"Store","","",null,null],[10,"unpack","","Safety Caller must ensure the type of Self is appropriate…",17,[[]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","Safety Caller must ensure the type of Self is appropriate…",18,[[]]],[10,"unsafe_read_be","","Safety Caller must ensure the type of Self is appropriate…",18,[[]]],[10,"write_le","","",18,[[]]],[10,"write_be","","",18,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to take…",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be…",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be…",null,null],[11,"from","ppv_lite86::x86_64","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"instance","","",29,[[]]],[11,"instance","","",30,[[]]],[11,"unpack","","",31,[[["vec128_storage",19]]]],[11,"eq","","",31,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",1,[[]]],[11,"into","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",19,[[],["yess3",3]]],[11,"clone","","",20,[[],["nos3",3]]],[11,"clone","","",21,[[],["yess4",3]]],[11,"clone","","",22,[[],["nos4",3]]],[11,"clone","","",23,[[],["yesa1",3]]],[11,"clone","","",24,[[],["noa1",3]]],[11,"clone","","",25,[[],["yesa2",3]]],[11,"clone","","",26,[[],["noa2",3]]],[11,"clone","","",27,[[],["yesni",3]]],[11,"clone","","",28,[[],["noni",3]]],[11,"clone","","",29,[[],["ssemachine",3]]],[11,"clone","","",30,[[],["avx2machine",3]]],[11,"clone","","",31,[[],["vec128_storage",19]]],[11,"clone","","",0,[[],["vec256_storage",19]]],[11,"clone","","",1,[[],["vec512_storage",19]]],[11,"default","","",31,[[]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"unpack","ppv_lite86","",16,[[],["store",8]]],[11,"vec","","",16,[[]]],[11,"read_le","","",16,[[]]],[11,"read_be","","",16,[[]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Vec4Ext"],[8,"Vector"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"LineColumn","","A line-column pair representing the start or end of a…",null,null],[12,"line","","The 1-indexed line in the source file on which the span…",0,null],[12,"column","","The 0-indexed column (in UTF-8 characters) in the source…",0,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","A `Punct` is a single punctuation character like `+`, `-`…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\\\"hello\\\"`), byte string (`b\\\"hello\\\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",1,null],[13,"Ident","","An identifier.",1,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",1,null],[13,"Literal","","A literal character (`\'a\'`), string (`\\\"hello\\\"`), number…",1,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",2,null],[13,"Brace","","`{ ... }`",2,null],[13,"Bracket","","`[ ... ]`",2,null],[13,"None","","`Ø ... Ø`",2,null],[4,"Spacing","","Whether a `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",3,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `\'` is `Joint` in `\'#`.",3,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`\'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",4,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",4,[[]]],[11,"span","","",5,[[],["span",3]]],[11,"call_site","","The span of the invocation of the current procedural macro.",6,[[],["span",3]]],[11,"mixed_site","","The span located at the invocation of the procedural…",6,[[],["span",3]]],[11,"resolved_at","","Creates a new span with the same line/column information…",6,[[["span",3]],["span",3]]],[11,"located_at","","Creates a new span with the same name resolution behavior…",6,[[["span",3]],["span",3]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",6,[[],["span",3]]],[11,"start","","Get the starting line/column in the source file for this…",6,[[],["linecolumn",3]]],[11,"end","","Get the ending line/column in the source file for this span.",6,[[],["linecolumn",3]]],[11,"join","","Create a new span encompassing `self` and `other`.",6,[[["span",3]],[["span",3],["option",4]]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",1,[[],["span",3]]],[11,"set_span","","Configures the span for only this token.",1,[[["span",3]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",7,[[["delimiter",4],["tokenstream",3]],["group",3]]],[11,"delimiter","","Returns the delimiter of this `Group`",7,[[],["delimiter",4]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",7,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream,…",7,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of this…",7,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of this…",7,[[],["span",3]]],[11,"set_span","","Configures the span for this `Group`\'s delimiters, but not…",7,[[["span",3]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",8,[[["spacing",4]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",8,[[]]],[11,"spacing","","Returns the spacing of this punctuation character,…",8,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",8,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",8,[[["span",3]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",9,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",9,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",9,[[["span",3]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",10,[[],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",10,[[],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",10,[[],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",10,[[],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",10,[[],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",10,[[],["literal",3]]],[11,"string","","String literal.",10,[[],["literal",3]]],[11,"character","","Character literal.",10,[[],["literal",3]]],[11,"byte_string","","Byte string literal.",10,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",10,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",10,[[["span",3]]]],[11,"subspan","","Returns a `Span` that is a subset of `self.span()`…",10,[[["rangebounds",8]],[["span",3],["option",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","proc_macro2::token_stream","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","proc_macro2","",6,[[["span",3]],["span",3]]],[11,"from","","",4,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",4,[[["tokentree",4]]]],[11,"from","","",1,[[["group",3]],["tokentree",4]]],[11,"from","","",1,[[["ident",3]],["tokentree",4]]],[11,"from","","",1,[[["punct",3]],["tokentree",4]]],[11,"from","","",1,[[["literal",3]],["tokentree",4]]],[11,"extend","","",4,[[["intoiterator",8]]]],[11,"extend","","",4,[[["intoiterator",8]]]],[11,"into_iter","","",4,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",11,[[],[["option",4],["tokentree",4]]]],[11,"clone","proc_macro2","",4,[[],["tokenstream",3]]],[11,"clone","","",0,[[],["linecolumn",3]]],[11,"clone","","",6,[[],["span",3]]],[11,"clone","","",1,[[],["tokentree",4]]],[11,"clone","","",7,[[],["group",3]]],[11,"clone","","",2,[[],["delimiter",4]]],[11,"clone","","",8,[[],["punct",3]]],[11,"clone","","",3,[[],["spacing",4]]],[11,"clone","","",9,[[],["ident",3]]],[11,"clone","","",10,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",11,[[],["intoiter",3]]],[11,"default","proc_macro2","",4,[[]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"cmp","","",9,[[["ident",3]],["ordering",4]]],[11,"eq","","",0,[[["linecolumn",3]]]],[11,"ne","","",0,[[["linecolumn",3]]]],[11,"eq","","",2,[[["delimiter",4]]]],[11,"eq","","",3,[[["spacing",4]]]],[11,"eq","","",9,[[["ident",3]]]],[11,"eq","","",9,[[]]],[11,"partial_cmp","","",0,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",9,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",11,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"hash","","",9,[[]]],[11,"from_iter","","",4,[[["intoiterator",8]]]],[11,"from_iter","","",4,[[["intoiterator",8]]]],[11,"from_str","","",4,[[],[["result",4],["tokenstream",3],["lexerror",3]]]],[11,"from_str","","",10,[[],[["result",4],["lexerror",3]]]]],"p":[[3,"LineColumn"],[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"LexError"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"IntoIter"]]},\
"quote":{"doc":"![github] ![crates-io] ![docs-rs]","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["span",3],["option",4]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[],[["span",3],["option",4]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rand":{"doc":"Utilities for random number generation","i":[[8,"CryptoRng","rand","A marker trait used to indicate that an [`RngCore`] or…",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",0,[[]]],[10,"next_u64","","Return the next random `u64`.",0,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",0,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,[[],[["error",3],["result",4]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",1,null],[10,"from_seed","","Create a new PRNG using the given seed.",1,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[],[["error",3],["result",4]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",1,[[]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",null,[[],["threadrng",3]]],[5,"random","","Generates a random value using the thread-local random…",null,[[]]],[0,"distributions","","Generating random samples from probability distributions",null,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[3,"DistIter","","An iterator that generates random values of `T` with…",null,null],[3,"DistMap","","A distribution of values of type `S` derived from the…",null,null],[3,"Open01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly…",null,null],[3,"Alphanumeric","","Sample a `u8`, uniformly distributed over ASCII letters…",null,null],[3,"Slice","","A distribution to sample items uniformly from a slice.",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"WeightedIndex","","A distribution using weighted sampling of discrete items",null,null],[3,"Standard","","A generic random value distribution, implemented for many…",null,null],[4,"BernoulliError","","Error type returned from `Bernoulli::new`.",null,null],[13,"InvalidProbability","","`p < 0` or `p > 1`.",2,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",3,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",3,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",3,null],[13,"TooMany","","Too many weights are provided (length greater than…",3,null],[11,"new","","Construct a new `Bernoulli` with the given probability of…",4,[[],[["result",4],["bernoullierror",4],["bernoulli",3]]]],[11,"from_ratio","","Construct a new `Bernoulli` with the probability of…",4,[[],[["result",4],["bernoullierror",4],["bernoulli",3]]]],[11,"new","","Create a new `Slice` instance which samples uniformly from…",5,[[],[["result",4],["emptyslice",3]]]],[11,"new","","Creates a new a `WeightedIndex` [`Distribution`] using the…",6,[[],[["result",4],["weightedindex",3],["weightederror",4]]]],[11,"update_weights","","Update a subset of weights, without changing the number of…",6,[[],[["result",4],["weightederror",4]]]],[0,"uniform","","A distribution uniformly sampling numbers within a given…",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer…",null,null],[3,"UniformChar","","The back-end implementing [`UniformSampler`] for `char`.",null,null],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for…",null,null],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",null,null],[8,"SampleUniform","","Helper trait for creating objects using the correct…",null,null],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",7,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",8,null],[10,"new","","Construct self, with inclusive lower bound and exclusive…",8,[[]]],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",8,[[]]],[10,"sample","","Sample a value.",8,[[]]],[11,"sample_single","","Sample a single value uniformly from a range with…",8,[[]]],[11,"sample_single_inclusive","","Sample a single value uniformly from a range with…",8,[[]]],[8,"SampleBorrow","","Helper trait similar to [`Borrow`] but implemented only…",null,null],[10,"borrow","","Immutably borrows from an owned value. See…",9,[[]]],[8,"SampleRange","","Range that supports generating a single sample efficiently.",null,null],[10,"sample_single","","Generate a sample from the given range.",10,[[]]],[10,"is_empty","","Check whether the range is empty.",10,[[]]],[11,"new","","Create a new `Uniform` instance which samples uniformly…",11,[[],["uniform",3]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly…",11,[[],["uniform",3]]],[0,"weighted","rand::distributions","Weighted index sampling",null,null],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling of discrete items",null,null],[4,"WeightedError","","Error type returned from `WeightedIndex::new`.",null,null],[13,"NoItem","","The provided weight collection contains no items.",3,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the…",3,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",3,null],[13,"TooMany","","Too many weights are provided (length greater than…",3,null],[0,"alias_method","","",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","",null,null],[8,"Weight","","",null,null],[11,"new","","",12,[[["vec",3]],[["weightederror",4],["result",4]]]],[8,"Distribution","rand::distributions","Types (distributions) that can be used to create a random…",null,null],[10,"sample","","Generate a random value of `T`, using `rng` as the source…",13,[[]]],[11,"sample_iter","","Create an iterator that generates random values of `T`,…",13,[[],["distiter",3]]],[11,"map","","Create a distribution of values of \'S\' by mapping the…",13,[[],["distmap",3]]],[8,"DistString","","`String` sampler",null,null],[10,"append_string","","Append `len` random chars to `string`",14,[[["string",3]]]],[11,"sample_string","","Generate a `String` of `len` random chars",14,[[],["string",3]]],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[3,"OsRng","rand::rngs","A random number generator that retrieves randomness from…",null,null],[3,"SmallRng","","A small-state, fast non-crypto PRNG",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen…",null,null],[3,"ThreadRng","","A reference to the thread-local generator",null,null],[0,"adapter","","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","`ReadRng` error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type…",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements…",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",15,[[],["readrng",3]]],[11,"new","","Create a new `ReseedingRng` from an existing PRNG,…",16,[[]]],[11,"reseed","","Reseed the internal PRNG.",16,[[],[["result",4],["error",3]]]],[0,"mock","rand::rngs","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",null,null],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence…",17,[[]]],[0,"seq","rand","Sequence-related functionality",null,null],[3,"SliceChooseIter","rand::seq","An iterator over multiple slice elements.",null,null],[0,"index","","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[4,"IndexVecIter","","Return type of `IndexVec::iter`.",null,null],[4,"IndexVecIntoIter","","Return type of `IndexVec::into_iter`.",null,null],[5,"sample","","Randomly sample exactly `amount` distinct indices from…",null,[[],["indexvec",4]]],[5,"sample_weighted","","Randomly sample exactly `amount` distinct indices from…",null,[[],[["indexvec",4],["weightederror",4],["result",4]]]],[11,"len","","Returns the number of indices",18,[[]]],[11,"is_empty","","Returns `true` if the length is 0.",18,[[]]],[11,"index","","Return the value at the given `index`.",18,[[]]],[11,"into_vec","","Return result as a `Vec<usize>`. Conversion may or may not…",18,[[],["vec",3]]],[11,"iter","","Iterate over the indices as a sequence of `usize` values",18,[[],["indexveciter",4]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and…",null,null],[16,"Item","","The element type.",19,null],[10,"choose","","Returns a reference to one random element of the slice, or…",19,[[],["option",4]]],[10,"choose_mut","","Returns a mutable reference to one random element of the…",19,[[],["option",4]]],[10,"choose_multiple","","Chooses `amount` elements from the slice at random,…",19,[[],["slicechooseiter",3]]],[10,"choose_weighted","","Similar to [`choose`], but where the likelihood of each…",19,[[],[["weightederror",4],["result",4]]]],[10,"choose_weighted_mut","","Similar to [`choose_mut`], but where the likelihood of…",19,[[],[["result",4],["weightederror",4]]]],[10,"choose_multiple_weighted","","Similar to [`choose_multiple`], but where the likelihood…",19,[[],[["result",4],["slicechooseiter",3],["weightederror",4]]]],[10,"shuffle","","Shuffle a mutable slice in place.",19,[[]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",19,[[]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling…",null,null],[11,"choose","","Choose one element at random from the iterator.",20,[[],["option",4]]],[11,"choose_stable","","Choose one element at random from the iterator.",20,[[],["option",4]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a…",20,[[]]],[11,"choose_multiple","","Collects `amount` values at random from the iterator into…",20,[[],["vec",3]]],[8,"Fill","rand","Types which may be filled with random data",null,null],[10,"try_fill","","Fill self with random data",21,[[],[["result",4],["error",3]]]],[8,"Rng","","An automatically-implemented extension trait on…",null,null],[11,"gen","","Return a random value supporting the [`Standard`]…",22,[[]]],[11,"gen_range","","Generate a random value in the given range.",22,[[]]],[11,"sample","","Sample a new value, using the given distribution.",22,[[["distribution",8]]]],[11,"sample_iter","","Create an iterator that generates values using the given…",22,[[],["distiter",3]]],[11,"fill","","Fill any type implementing [`Fill`] with random data",22,[[]]],[11,"try_fill","","Fill any type implementing [`Fill`] with random data",22,[[],[["result",4],["error",3]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",22,[[]]],[11,"gen_ratio","","Return a bool with a probability of…",22,[[]]],[11,"from","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_string","","",23,[[],["string",3]]],[11,"vzip","","",23,[[]]],[11,"from","rand::distributions","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"vzip","","",5,[[]]],[11,"from","rand::distributions::uniform","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from","rand::distributions","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"from","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"vzip","","",29,[[]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"vzip","","",3,[[]]],[11,"from","rand::distributions::uniform","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"vzip","","",33,[[]]],[11,"from","rand::distributions::weighted::alias_method","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","rand::rngs","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"vzip","","",37,[[]]],[11,"from","rand::rngs::adapter","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_string","","",38,[[],["string",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"from","rand::rngs::mock","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"vzip","","",17,[[]]],[11,"from","rand::seq","",39,[[]]],[11,"into_iter","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","rand::seq::index","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"from","","",40,[[]]],[11,"into_iter","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into_iter","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"vzip","","",41,[[]]],[11,"fmt","rand::rngs","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand","",23,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","rand::rngs","",34,[[],["osrng",3]]],[11,"read","rand","",0,[[],[["result",4],["error",3]]]],[11,"fmt","","",23,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","rand::rngs","",34,[[],["osrng",3]]],[11,"next_u32","","",34,[[]]],[11,"next_u64","","",34,[[]]],[11,"fill_bytes","","",34,[[]]],[11,"try_fill_bytes","","",34,[[],[["error",3],["result",4]]]],[11,"source","rand","",23,[[],[["option",4],["error",8]]]],[11,"from","","",23,[[["error",3]],["error",3]]],[11,"from","","",23,[[["nonzerou32",3]],["error",3]]],[11,"sample","rand::distributions","",4,[[]]],[11,"sample","","",25,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",27,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",27,[[]]],[11,"sample","","",26,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[],["nonzerou8",3]]],[11,"sample","","",29,[[],["nonzerou16",3]]],[11,"sample","","",29,[[],["nonzerou32",3]]],[11,"sample","","",29,[[],["nonzerou64",3]]],[11,"sample","","",29,[[],["nonzerou128",3]]],[11,"sample","","",29,[[],["nonzerousize",3]]],[11,"sample","","",29,[[]]],[11,"sample","","",28,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[]]],[11,"sample","","",29,[[],["option",4]]],[11,"sample","","",29,[[],["wrapping",3]]],[11,"sample","","",5,[[]]],[11,"sample","","",6,[[]]],[11,"sample","rand::distributions::uniform","",11,[[]]],[11,"append_string","rand::distributions","",29,[[["string",3]]]],[11,"append_string","","",28,[[["string",3]]]],[11,"new","rand::distributions::uniform","",30,[[]]],[11,"new_inclusive","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample_single","","",30,[[]]],[11,"sample_single_inclusive","","",30,[[]]],[11,"new","","",30,[[]]],[11,"new_inclusive","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample_single","","",30,[[]]],[11,"sample_single_inclusive","","",30,[[]]],[11,"new","","",30,[[]]],[11,"new_inclusive","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample_single","","",30,[[]]],[11,"sample_single_inclusive","","",30,[[]]],[11,"new","","",30,[[]]],[11,"new_inclusive","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample_single","","",30,[[]]],[11,"sample_single_inclusive","","",30,[[]]],[11,"new","","",30,[[]]],[11,"new_inclusive","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample_single","","",30,[[]]],[11,"sample_single_inclusive","","",30,[[]]],[11,"new","","",30,[[]]],[11,"new_inclusive","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample_single","","",30,[[]]],[11,"sample_single_inclusive","","",30,[[]]],[11,"new","","",30,[[]]],[11,"new_inclusive","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample_single","","",30,[[]]],[11,"sample_single_inclusive","","",30,[[]]],[11,"new","","",30,[[]]],[11,"new_inclusive","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample_single","","",30,[[]]],[11,"sample_single_inclusive","","",30,[[]]],[11,"new","","",30,[[]]],[11,"new_inclusive","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample_single","","",30,[[]]],[11,"sample_single_inclusive","","",30,[[]]],[11,"new","","",30,[[]]],[11,"new_inclusive","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample_single","","",30,[[]]],[11,"sample_single_inclusive","","",30,[[]]],[11,"new","","",30,[[]]],[11,"new_inclusive","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample_single","","",30,[[]]],[11,"sample_single_inclusive","","",30,[[]]],[11,"new","","",30,[[]]],[11,"new_inclusive","","",30,[[]]],[11,"sample","","",30,[[]]],[11,"sample_single","","",30,[[]]],[11,"sample_single_inclusive","","",30,[[]]],[11,"new","","",31,[[]]],[11,"new_inclusive","","",31,[[]]],[11,"sample","","",31,[[]]],[11,"new","","",32,[[]]],[11,"new_inclusive","","",32,[[]]],[11,"sample","","",32,[[]]],[11,"sample_single","","",32,[[]]],[11,"new","","",32,[[]]],[11,"new_inclusive","","",32,[[]]],[11,"sample","","",32,[[]]],[11,"sample_single","","",32,[[]]],[11,"new","","",33,[[]]],[11,"new_inclusive","","",33,[[]]],[11,"sample","","",33,[[],["duration",3]]],[11,"from","","",11,[[["range",3]],["uniform",3]]],[11,"from","","",11,[[["rangeinclusive",3]],["uniform",3]]],[11,"from","rand::seq::index","",18,[[["vec",3]]]],[11,"from","","",18,[[["vec",3]]]],[11,"fmt","rand::distributions","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::uniform","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted::alias_method","",12,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",29,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::mock","",17,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq::index","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq","",39,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",38,[[["formatter",3]],["result",6]]],[11,"eq","rand::distributions","",2,[[["bernoullierror",4]]]],[11,"eq","","",3,[[["weightederror",4]]]],[11,"eq","rand::rngs::mock","",17,[[["steprng",3]]]],[11,"ne","","",17,[[["steprng",3]]]],[11,"eq","rand::rngs","",35,[[["smallrng",3]]]],[11,"ne","","",35,[[["smallrng",3]]]],[11,"eq","","",36,[[["stdrng",3]]]],[11,"ne","","",36,[[["stdrng",3]]]],[11,"eq","rand::seq::index","",18,[[["indexvec",4]]]],[11,"next","rand::distributions","",24,[[],["option",4]]],[11,"size_hint","","",24,[[]]],[11,"next","rand::seq::index","",40,[[],["option",4]]],[11,"size_hint","","",40,[[]]],[11,"next","","",41,[[],["option",4]]],[11,"size_hint","","",41,[[]]],[11,"next","rand::seq","",39,[[],["option",4]]],[11,"size_hint","","",39,[[]]],[11,"into_iter","rand::seq::index","Convert into an iterator over the indices as a sequence of…",18,[[],["indexvecintoiter",4]]],[11,"len","rand::seq","",39,[[]]],[11,"clone","rand::distributions","",4,[[],["bernoulli",3]]],[11,"clone","","",2,[[],["bernoullierror",4]]],[11,"clone","","",27,[[],["openclosed01",3]]],[11,"clone","","",26,[[],["open01",3]]],[11,"clone","","",28,[[],["alphanumeric",3]]],[11,"clone","","",5,[[],["slice",3]]],[11,"clone","","",6,[[],["weightedindex",3]]],[11,"clone","","",3,[[],["weightederror",4]]],[11,"clone","rand::distributions::uniform","",11,[[],["uniform",3]]],[11,"clone","","",30,[[],["uniformint",3]]],[11,"clone","","",31,[[],["uniformchar",3]]],[11,"clone","","",32,[[],["uniformfloat",3]]],[11,"clone","","",33,[[],["uniformduration",3]]],[11,"clone","rand::distributions","",29,[[],["standard",3]]],[11,"clone","rand::rngs::adapter","",16,[[],["reseedingrng",3]]],[11,"clone","rand::rngs::mock","",17,[[],["steprng",3]]],[11,"clone","rand::rngs","",35,[[],["smallrng",3]]],[11,"clone","","",36,[[],["stdrng",3]]],[11,"clone","","",37,[[],["threadrng",3]]],[11,"clone","rand::seq::index","",18,[[],["indexvec",4]]],[11,"clone","","",41,[[],["indexvecintoiter",4]]],[11,"default","rand::rngs","",37,[[],["threadrng",3]]],[11,"source","rand::rngs::adapter","",38,[[],[["error",8],["option",4]]]],[11,"next_u32","","",15,[[]]],[11,"next_u64","","",15,[[]]],[11,"fill_bytes","","",15,[[]]],[11,"try_fill_bytes","","",15,[[],[["result",4],["error",3]]]],[11,"next_u32","","",16,[[]]],[11,"next_u64","","",16,[[]]],[11,"fill_bytes","","",16,[[]]],[11,"try_fill_bytes","","",16,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::rngs::mock","",17,[[]]],[11,"next_u64","","",17,[[]]],[11,"fill_bytes","","",17,[[]]],[11,"try_fill_bytes","","",17,[[],[["result",4],["error",3]]]],[11,"next_u32","rand::rngs","",35,[[]]],[11,"next_u64","","",35,[[]]],[11,"fill_bytes","","",35,[[]]],[11,"try_fill_bytes","","",35,[[],[["result",4],["error",3]]]],[11,"next_u32","","",36,[[]]],[11,"next_u64","","",36,[[]]],[11,"fill_bytes","","",36,[[]]],[11,"try_fill_bytes","","",36,[[],[["result",4],["error",3]]]],[11,"next_u32","","",37,[[]]],[11,"next_u64","","",37,[[]]],[11,"fill_bytes","","",37,[[]]],[11,"try_fill_bytes","","",37,[[],[["result",4],["error",3]]]],[11,"from_seed","","",35,[[]]],[11,"from_rng","","",35,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_seed","","",36,[[]]],[11,"from_rng","","",36,[[["rngcore",8]],[["result",4],["error",3]]]],[18,"CUSTOM_START","rand","Codes at or above this point can be used by users to…",23,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",23,null],[11,"new","","Construct from any type supporting `std::error::Error`",23,[[],["error",3]]],[11,"inner","","Reference the inner error (`std` only)",23,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (`std` only)",23,[[],[["box",3],["error",8]]]],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",23,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",23,[[],[["option",4],["nonzerou32",3]]]],[11,"sample_iter","rand::distributions","Create an iterator that generates random values of `T`,…",13,[[],["distiter",3]]],[11,"map","","Create a distribution of values of \'S\' by mapping the…",13,[[],["distmap",3]]],[11,"sample_string","","Generate a `String` of `len` random chars",14,[[],["string",3]]],[11,"gen","rand","Return a random value supporting the [`Standard`]…",22,[[]]],[11,"gen_range","","Generate a random value in the given range.",22,[[]]],[11,"sample","","Sample a new value, using the given distribution.",22,[[["distribution",8]]]],[11,"sample_iter","","Create an iterator that generates values using the given…",22,[[],["distiter",3]]],[11,"fill","","Fill any type implementing [`Fill`] with random data",22,[[]]],[11,"try_fill","","Fill any type implementing [`Fill`] with random data",22,[[],[["result",4],["error",3]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",22,[[]]],[11,"gen_ratio","","Return a bool with a probability of…",22,[[]]]],"p":[[8,"RngCore"],[8,"SeedableRng"],[4,"BernoulliError"],[4,"WeightedError"],[3,"Bernoulli"],[3,"Slice"],[3,"WeightedIndex"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[8,"SampleRange"],[3,"Uniform"],[3,"WeightedIndex"],[8,"Distribution"],[8,"DistString"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"Fill"],[8,"Rng"],[3,"Error"],[3,"DistIter"],[3,"DistMap"],[3,"Open01"],[3,"OpenClosed01"],[3,"Alphanumeric"],[3,"Standard"],[3,"UniformInt"],[3,"UniformChar"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"OsRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"ReadError"],[3,"SliceChooseIter"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"]]},\
"rand_chacha":{"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that…",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that…",null,null],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",0,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",0,[[]]],[11,"set_stream","","Set the stream number.",0,[[]]],[11,"get_stream","","Get the stream number.",0,[[]]],[11,"get_seed","","Get the seed.",0,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",1,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",1,[[]]],[11,"set_stream","","Set the stream number.",1,[[]]],[11,"get_stream","","Get the stream number.",1,[[]]],[11,"get_seed","","Get the seed.",1,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit…",2,[[]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit…",2,[[]]],[11,"set_stream","","Set the stream number.",2,[[]]],[11,"get_stream","","Get the stream number.",2,[[]]],[11,"get_seed","","Get the seed.",2,[[]]],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[["chacha20core",3]]]],[11,"from","","",1,[[["chacha12core",3]]]],[11,"from","","",2,[[["chacha8core",3]]]],[11,"clone","","",4,[[],["chacha20core",3]]],[11,"clone","","",0,[[],["chacha20rng",3]]],[11,"clone","","",3,[[],["chacha12core",3]]],[11,"clone","","",1,[[],["chacha12rng",3]]],[11,"clone","","",5,[[],["chacha8core",3]]],[11,"clone","","",2,[[],["chacha8rng",3]]],[11,"eq","","",4,[[["chacha20core",3]]]],[11,"ne","","",4,[[["chacha20core",3]]]],[11,"eq","","",0,[[["chacha20rng",3]]]],[11,"eq","","",3,[[["chacha12core",3]]]],[11,"ne","","",3,[[["chacha12core",3]]]],[11,"eq","","",1,[[["chacha12rng",3]]]],[11,"eq","","",5,[[["chacha8core",3]]]],[11,"ne","","",5,[[["chacha8core",3]]]],[11,"eq","","",2,[[["chacha8rng",3]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"generate","","",4,[[]]],[11,"generate","","",3,[[]]],[11,"generate","","",5,[[]]],[11,"next_u32","","",0,[[]]],[11,"next_u64","","",0,[[]]],[11,"fill_bytes","","",0,[[]]],[11,"try_fill_bytes","","",0,[[],[["result",4],["error",3]]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["result",4],["error",3]]]],[11,"next_u32","","",2,[[]]],[11,"next_u64","","",2,[[]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["result",4],["error",3]]]],[11,"from_seed","","",4,[[]]],[11,"from_seed","","",0,[[]]],[11,"from_seed","","",3,[[]]],[11,"from_seed","","",1,[[]]],[11,"from_seed","","",5,[[]]],[11,"from_seed","","",2,[[]]]],"p":[[3,"ChaCha20Rng"],[3,"ChaCha12Rng"],[3,"ChaCha8Rng"],[3,"ChaCha12Core"],[3,"ChaCha20Core"],[3,"ChaCha8Core"]]},\
"rand_core":{"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",0,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",2,null],[16,"Results","","Results type. This is the \'block\' an RNG implementing…",2,null],[10,"generate","","Generate a new block of results.",2,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",0,[[],["blockrng",3]]],[11,"index","","Get the index into the result buffer.",0,[[]]],[11,"reset","","Reset the number of available results. This will force a…",0,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",0,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[],["blockrng64",3]]],[11,"index","","Get the index into the result buffer.",1,[[]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[]]],[18,"CUSTOM_START","rand_core","Codes at or above this point can be used by users to…",3,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",3,null],[11,"new","","Construct from any type supporting `std::error::Error`",3,[[]]],[11,"inner","","Reference the inner error (`std` only)",3,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (`std` only)",3,[[],[["box",3],["error",8]]]],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",3,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",3,[[],[["nonzerou32",3],["option",4]]]],[0,"impls","","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[]]],[10,"next_u64","","Return the next random `u64`.",4,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[],[["result",4],["error",3]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via [`getrandom`].",5,[[]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_string","","",3,[[],["string",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","rand_core::block","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"next_u32","","",0,[[]]],[11,"next_u64","","",0,[[]]],[11,"fill_bytes","","",0,[[]]],[11,"try_fill_bytes","","",0,[[],[["result",4],["error",3]]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["result",4],["error",3]]]],[11,"next_u32","rand_core","",6,[[]]],[11,"next_u64","","",6,[[]]],[11,"fill_bytes","","",6,[[]]],[11,"try_fill_bytes","","",6,[[],[["result",4],["error",3]]]],[11,"from_seed","rand_core::block","",0,[[]]],[11,"seed_from_u64","","",0,[[]]],[11,"from_rng","","",0,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_seed","","",1,[[]]],[11,"seed_from_u64","","",1,[[]]],[11,"from_rng","","",1,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from","rand_core","",3,[[["nonzerou32",3]]]],[11,"from","","",3,[[["error",3]]]],[11,"fmt","rand_core::block","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"clone","rand_core::block","",0,[[],["blockrng",3]]],[11,"clone","","",1,[[],["blockrng64",3]]],[11,"clone","rand_core","",6,[[],["osrng",3]]],[11,"default","","",6,[[],["osrng",3]]],[11,"source","","",3,[[],[["error",8],["option",4]]]],[11,"read","","",4,[[],[["result",4],["error",3]]]]],"p":[[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[3,"Error"],[8,"RngCore"],[8,"SeedableRng"],[3,"OsRng"]]},\
"rustc_demangle":{"doc":"Demangle Rust compiler symbol names.","i":[[3,"Demangle","rustc_demangle","Representation of a demangled symbol name.",null,null],[3,"TryDemangleError","","Error returned from the `try_demangle` function below when…",null,null],[5,"demangle","","De-mangles a Rust symbol into a more readable version",null,[[],["demangle",3]]],[5,"try_demangle","","The same as `demangle`, except return an `Err` if the…",null,[[],[["result",4],["trydemangleerror",3],["demangle",3]]]],[11,"as_str","","Returns the underlying string that\'s being demangled.",0,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",1,[[],["trydemangleerror",3]]]],"p":[[3,"Demangle"],[3,"TryDemangleError"]]},\
"ryu":{"doc":"![github] ![crates-io] ![docs-rs]","i":[[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",null,null],[11,"new","","This is a cheap operation; you don\'t need to worry about…",0,[[]]],[11,"format","","Print a floating point number into this buffer and return…",0,[[["float",8]]]],[11,"format_finite","","Print a floating point number into this buffer and return…",0,[[["float",8]]]],[0,"raw","","Unsafe functions that mirror the API of the C…",null,null],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes…",null,[[]]],[5,"format64","","Print f64 to the given buffer and return number of bytes…",null,[[]]],[8,"Float","ryu","A floating point number, f32 or f64, that can be written…",null,null],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[]]]],"p":[[3,"Buffer"]]},\
"secret_integers":{"doc":"This crate defines simple wrappers around Rust\'s integer…","i":[[3,"U8","secret_integers","",null,null],[12,"0","","",0,null],[3,"U16","","",null,null],[12,"0","","",1,null],[3,"U32","","",null,null],[12,"0","","",2,null],[3,"U64","","",null,null],[12,"0","","",3,null],[3,"U128","","",null,null],[12,"0","","",4,null],[3,"I8","","",null,null],[12,"0","","",5,null],[3,"I16","","",null,null],[12,"0","","",6,null],[3,"I32","","",null,null],[12,"0","","",7,null],[3,"I64","","",null,null],[12,"0","","",8,null],[3,"I128","","",null,null],[12,"0","","",9,null],[5,"U128_from_U8","","",null,[[["u8",3]],["u128",3]]],[5,"U8_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u8",3]]],[5,"U128_from_U16","","",null,[[["u16",3]],["u128",3]]],[5,"U16_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u16",3]]],[5,"U128_from_U32","","",null,[[["u32",3]],["u128",3]]],[5,"U32_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u32",3]]],[5,"U128_from_U64","","",null,[[["u64",3]],["u128",3]]],[5,"U64_from_U128","","Warning: wrapping semantics.",null,[[["u128",3]],["u64",3]]],[5,"U64_from_U8","","",null,[[["u8",3]],["u64",3]]],[5,"U8_from_U64","","Warning: wrapping semantics.",null,[[["u64",3]],["u8",3]]],[5,"U64_from_U16","","",null,[[["u16",3]],["u64",3]]],[5,"U16_from_U64","","Warning: wrapping semantics.",null,[[["u64",3]],["u16",3]]],[5,"U64_from_U32","","",null,[[["u32",3]],["u64",3]]],[5,"U32_from_U64","","Warning: wrapping semantics.",null,[[["u64",3]],["u32",3]]],[5,"U32_from_U8","","",null,[[["u8",3]],["u32",3]]],[5,"U8_from_U32","","Warning: wrapping semantics.",null,[[["u32",3]],["u8",3]]],[5,"U32_from_U16","","",null,[[["u16",3]],["u32",3]]],[5,"U16_from_U32","","Warning: wrapping semantics.",null,[[["u32",3]],["u16",3]]],[5,"U16_from_U8","","",null,[[["u8",3]],["u16",3]]],[5,"U8_from_U16","","Warning: wrapping semantics.",null,[[["u16",3]],["u8",3]]],[5,"declassify_u8_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u16_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u32_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u64_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_u128_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"declassify_usize_from_U8","","Warning: conversion can be lossy!",null,[[["u8",3]]]],[5,"U8_from_usize","","",null,[[],["u8",3]]],[5,"declassify_u16_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"declassify_u32_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"declassify_u64_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"u128_from_U16","","Warning: conversion can be lossy!",null,[[["u16",3]]]],[5,"declassify_u32_from_U32","","Warning: conversion can be lossy!",null,[[["u32",3]]]],[5,"declassify_u64_from_U32","","Warning: conversion can be lossy!",null,[[["u32",3]]]],[5,"declassify_u128_from_U32","","Warning: conversion can be lossy!",null,[[["u32",3]]]],[5,"declassify_u64_from_U64","","Warning: conversion can be lossy!",null,[[["u64",3]]]],[5,"declassify_u128_from_U64","","Warning: conversion can be lossy!",null,[[["u64",3]]]],[5,"declassify_u128_from_U128","","Warning: conversion can be lossy!",null,[[["u128",3]]]],[5,"u8_from_U16","","",null,[[],["u16",3]]],[5,"u8_from_U32","","",null,[[],["u32",3]]],[5,"u16_from_U32","","",null,[[],["u32",3]]],[5,"u8_from_U64","","",null,[[],["u64",3]]],[5,"u16_from_U64","","",null,[[],["u64",3]]],[5,"u32_from_U64","","",null,[[],["u64",3]]],[5,"U64_from_usize","","",null,[[],["u64",3]]],[5,"u8_from_U128","","",null,[[],["u128",3]]],[5,"u16_from_U128","","",null,[[],["u128",3]]],[5,"u32_from_U128","","",null,[[],["u128",3]]],[5,"u64_from_U128","","",null,[[],["u128",3]]],[5,"U128_from_usize","","",null,[[],["u128",3]]],[5,"I128_from_I8","","",null,[[["i8",3]],["i128",3]]],[5,"I8_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i8",3]]],[5,"I128_from_I16","","",null,[[["i16",3]],["i128",3]]],[5,"I16_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i16",3]]],[5,"I128_from_I32","","",null,[[["i32",3]],["i128",3]]],[5,"I32_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i32",3]]],[5,"I128_from_I64","","",null,[[["i64",3]],["i128",3]]],[5,"I64_from_I128","","Warning: wrapping semantics.",null,[[["i128",3]],["i64",3]]],[5,"I64_from_I8","","",null,[[["i8",3]],["i64",3]]],[5,"I8_from_I64","","Warning: wrapping semantics.",null,[[["i64",3]],["i8",3]]],[5,"I64_from_I16","","",null,[[["i16",3]],["i64",3]]],[5,"I16_from_I64","","Warning: wrapping semantics.",null,[[["i64",3]],["i16",3]]],[5,"I64_from_I32","","",null,[[["i32",3]],["i64",3]]],[5,"I32_from_I64","","Warning: wrapping semantics.",null,[[["i64",3]],["i32",3]]],[5,"I32_from_I8","","",null,[[["i8",3]],["i32",3]]],[5,"I8_from_I32","","Warning: wrapping semantics.",null,[[["i32",3]],["i8",3]]],[5,"I32_from_I16","","",null,[[["i16",3]],["i32",3]]],[5,"I16_from_I32","","Warning: wrapping semantics.",null,[[["i32",3]],["i16",3]]],[5,"I16_from_I8","","",null,[[["i8",3]],["i16",3]]],[5,"I8_from_I16","","Warning: wrapping semantics.",null,[[["i16",3]],["i8",3]]],[11,"classify","","",0,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",0,[[]]],[11,"zero","","",0,[[]]],[11,"one","","",0,[[]]],[11,"ones","","",0,[[]]],[11,"from_le_bytes","","",0,[[],[["vec",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",0,[[],[["vec",3],["u8",3]]]],[11,"to_be_bytes","","",0,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",0,[[],["u8",3]]],[11,"checked_add","","Warning: panics when overflow.",0,[[]]],[11,"checked_sub","","Warning: panics when overflow.",0,[[]]],[11,"checked_mul","","Warning: panics when overflow.",0,[[]]],[11,"rotate_left","","",0,[[]]],[11,"rotate_right","","",0,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",0,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",0,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",0,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",0,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",0,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",0,[[]]],[11,"classify","","",1,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",1,[[]]],[11,"zero","","",1,[[]]],[11,"one","","",1,[[]]],[11,"ones","","",1,[[]]],[11,"from_le_bytes","","",1,[[],[["vec",3],["u16",3]]]],[11,"to_le_bytes","","",1,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",1,[[],[["vec",3],["u16",3]]]],[11,"to_be_bytes","","",1,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",1,[[],["u16",3]]],[11,"checked_add","","Warning: panics when overflow.",1,[[]]],[11,"checked_sub","","Warning: panics when overflow.",1,[[]]],[11,"checked_mul","","Warning: panics when overflow.",1,[[]]],[11,"rotate_left","","",1,[[]]],[11,"rotate_right","","",1,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",1,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",1,[[]]],[11,"classify","","",2,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",2,[[]]],[11,"zero","","",2,[[]]],[11,"one","","",2,[[]]],[11,"ones","","",2,[[]]],[11,"from_le_bytes","","",2,[[],[["vec",3],["u32",3]]]],[11,"to_le_bytes","","",2,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",2,[[],[["vec",3],["u32",3]]]],[11,"to_be_bytes","","",2,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",2,[[],["u32",3]]],[11,"checked_add","","Warning: panics when overflow.",2,[[]]],[11,"checked_sub","","Warning: panics when overflow.",2,[[]]],[11,"checked_mul","","Warning: panics when overflow.",2,[[]]],[11,"rotate_left","","",2,[[]]],[11,"rotate_right","","",2,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",2,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",2,[[]]],[11,"classify","","",3,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",3,[[]]],[11,"zero","","",3,[[]]],[11,"one","","",3,[[]]],[11,"ones","","",3,[[]]],[11,"from_le_bytes","","",3,[[],[["u64",3],["vec",3]]]],[11,"to_le_bytes","","",3,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",3,[[],[["u64",3],["vec",3]]]],[11,"to_be_bytes","","",3,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",3,[[],["u64",3]]],[11,"checked_add","","Warning: panics when overflow.",3,[[]]],[11,"checked_sub","","Warning: panics when overflow.",3,[[]]],[11,"checked_mul","","Warning: panics when overflow.",3,[[]]],[11,"rotate_left","","",3,[[]]],[11,"rotate_right","","",3,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",3,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",3,[[]]],[11,"classify","","",4,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",4,[[]]],[11,"zero","","",4,[[]]],[11,"one","","",4,[[]]],[11,"ones","","",4,[[]]],[11,"from_le_bytes","","",4,[[],[["u128",3],["vec",3]]]],[11,"to_le_bytes","","",4,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",4,[[],[["u128",3],["vec",3]]]],[11,"to_be_bytes","","",4,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",4,[[],["u128",3]]],[11,"checked_add","","Warning: panics when overflow.",4,[[]]],[11,"checked_sub","","Warning: panics when overflow.",4,[[]]],[11,"checked_mul","","Warning: panics when overflow.",4,[[]]],[11,"rotate_left","","",4,[[]]],[11,"rotate_right","","",4,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",4,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",4,[[]]],[11,"classify","","",5,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",5,[[]]],[11,"zero","","",5,[[]]],[11,"one","","",5,[[]]],[11,"ones","","",5,[[]]],[11,"from_le_bytes","","",5,[[],[["i8",3],["vec",3]]]],[11,"to_le_bytes","","",5,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",5,[[],[["i8",3],["vec",3]]]],[11,"to_be_bytes","","",5,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",5,[[],["i8",3]]],[11,"checked_add","","Warning: panics when overflow.",5,[[]]],[11,"checked_sub","","Warning: panics when overflow.",5,[[]]],[11,"checked_mul","","Warning: panics when overflow.",5,[[]]],[11,"rotate_left","","",5,[[]]],[11,"rotate_right","","",5,[[]]],[11,"comp_eq","","",5,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",5,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",5,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",5,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",5,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",5,[[]]],[11,"classify","","",6,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",6,[[]]],[11,"zero","","",6,[[]]],[11,"one","","",6,[[]]],[11,"ones","","",6,[[]]],[11,"from_le_bytes","","",6,[[],[["i16",3],["vec",3]]]],[11,"to_le_bytes","","",6,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",6,[[],[["i16",3],["vec",3]]]],[11,"to_be_bytes","","",6,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",6,[[],["i16",3]]],[11,"checked_add","","Warning: panics when overflow.",6,[[]]],[11,"checked_sub","","Warning: panics when overflow.",6,[[]]],[11,"checked_mul","","Warning: panics when overflow.",6,[[]]],[11,"rotate_left","","",6,[[]]],[11,"rotate_right","","",6,[[]]],[11,"comp_eq","","",6,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",6,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",6,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",6,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",6,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",6,[[]]],[11,"classify","","",7,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",7,[[]]],[11,"zero","","",7,[[]]],[11,"one","","",7,[[]]],[11,"ones","","",7,[[]]],[11,"from_le_bytes","","",7,[[],[["i32",3],["vec",3]]]],[11,"to_le_bytes","","",7,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",7,[[],[["i32",3],["vec",3]]]],[11,"to_be_bytes","","",7,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",7,[[],["i32",3]]],[11,"checked_add","","Warning: panics when overflow.",7,[[]]],[11,"checked_sub","","Warning: panics when overflow.",7,[[]]],[11,"checked_mul","","Warning: panics when overflow.",7,[[]]],[11,"rotate_left","","",7,[[]]],[11,"rotate_right","","",7,[[]]],[11,"comp_eq","","",7,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",7,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",7,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",7,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",7,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",7,[[]]],[11,"classify","","",8,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",8,[[]]],[11,"zero","","",8,[[]]],[11,"one","","",8,[[]]],[11,"ones","","",8,[[]]],[11,"from_le_bytes","","",8,[[],[["vec",3],["i64",3]]]],[11,"to_le_bytes","","",8,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",8,[[],[["vec",3],["i64",3]]]],[11,"to_be_bytes","","",8,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",8,[[],["i64",3]]],[11,"checked_add","","Warning: panics when overflow.",8,[[]]],[11,"checked_sub","","Warning: panics when overflow.",8,[[]]],[11,"checked_mul","","Warning: panics when overflow.",8,[[]]],[11,"rotate_left","","",8,[[]]],[11,"rotate_right","","",8,[[]]],[11,"comp_eq","","",8,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",8,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",8,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",8,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",8,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",8,[[]]],[11,"classify","","",9,[[["into",8]]]],[11,"declassify","","Warning: use with caution, breaks the constant-time…",9,[[]]],[11,"zero","","",9,[[]]],[11,"one","","",9,[[]]],[11,"ones","","",9,[[]]],[11,"from_le_bytes","","",9,[[],[["vec",3],["i128",3]]]],[11,"to_le_bytes","","",9,[[],[["vec",3],["u8",3]]]],[11,"from_be_bytes","","",9,[[],[["vec",3],["i128",3]]]],[11,"to_be_bytes","","",9,[[],[["vec",3],["u8",3]]]],[11,"max_value","","",9,[[],["i128",3]]],[11,"checked_add","","Warning: panics when overflow.",9,[[]]],[11,"checked_sub","","Warning: panics when overflow.",9,[[]]],[11,"checked_mul","","Warning: panics when overflow.",9,[[]]],[11,"rotate_left","","",9,[[]]],[11,"rotate_right","","",9,[[]]],[11,"comp_eq","","",9,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",9,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",9,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",9,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",9,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",9,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"from","","",1,[[]]],[11,"from","","",2,[[]]],[11,"from","","",3,[[]]],[11,"from","","",4,[[]]],[11,"from","","",5,[[]]],[11,"from","","",6,[[]]],[11,"from","","",7,[[]]],[11,"from","","",8,[[]]],[11,"from","","",9,[[]]],[11,"from","","",4,[[["u8",3]],["u128",3]]],[11,"from","","",0,[[["u128",3]],["u8",3]]],[11,"from","","",4,[[["u16",3]],["u128",3]]],[11,"from","","",1,[[["u128",3]],["u16",3]]],[11,"from","","",4,[[["u32",3]],["u128",3]]],[11,"from","","",2,[[["u128",3]],["u32",3]]],[11,"from","","",4,[[["u64",3]],["u128",3]]],[11,"from","","",3,[[["u128",3]],["u64",3]]],[11,"from","","",3,[[["u8",3]],["u64",3]]],[11,"from","","",0,[[["u64",3]],["u8",3]]],[11,"from","","",3,[[["u16",3]],["u64",3]]],[11,"from","","",1,[[["u64",3]],["u16",3]]],[11,"from","","",3,[[["u32",3]],["u64",3]]],[11,"from","","",2,[[["u64",3]],["u32",3]]],[11,"from","","",2,[[["u8",3]],["u32",3]]],[11,"from","","",0,[[["u32",3]],["u8",3]]],[11,"from","","",2,[[["u16",3]],["u32",3]]],[11,"from","","",1,[[["u32",3]],["u16",3]]],[11,"from","","",1,[[["u8",3]],["u16",3]]],[11,"from","","",0,[[["u16",3]],["u8",3]]],[11,"from","","",0,[[],["u8",3]]],[11,"from","","",1,[[],["u16",3]]],[11,"from","","",2,[[],["u32",3]]],[11,"from","","",2,[[],["u32",3]]],[11,"from","","",3,[[],["u64",3]]],[11,"from","","",3,[[],["u64",3]]],[11,"from","","",3,[[],["u64",3]]],[11,"from","","",3,[[],["u64",3]]],[11,"from","","",4,[[],["u128",3]]],[11,"from","","",4,[[],["u128",3]]],[11,"from","","",4,[[],["u128",3]]],[11,"from","","",4,[[],["u128",3]]],[11,"from","","",4,[[],["u128",3]]],[11,"from","","",9,[[["i8",3]],["i128",3]]],[11,"from","","",5,[[["i128",3]],["i8",3]]],[11,"from","","",9,[[["i16",3]],["i128",3]]],[11,"from","","",6,[[["i128",3]],["i16",3]]],[11,"from","","",9,[[["i32",3]],["i128",3]]],[11,"from","","",7,[[["i128",3]],["i32",3]]],[11,"from","","",9,[[["i64",3]],["i128",3]]],[11,"from","","",8,[[["i128",3]],["i64",3]]],[11,"from","","",8,[[["i8",3]],["i64",3]]],[11,"from","","",5,[[["i64",3]],["i8",3]]],[11,"from","","",8,[[["i16",3]],["i64",3]]],[11,"from","","",6,[[["i64",3]],["i16",3]]],[11,"from","","",8,[[["i32",3]],["i64",3]]],[11,"from","","",7,[[["i64",3]],["i32",3]]],[11,"from","","",7,[[["i8",3]],["i32",3]]],[11,"from","","",5,[[["i32",3]],["i8",3]]],[11,"from","","",7,[[["i16",3]],["i32",3]]],[11,"from","","",6,[[["i32",3]],["i16",3]]],[11,"from","","",6,[[["i8",3]],["i16",3]]],[11,"from","","",5,[[["i16",3]],["i8",3]]],[11,"from","","",9,[[["u128",3]],["i128",3]]],[11,"from","","",4,[[["i128",3]],["u128",3]]],[11,"from","","",8,[[["u64",3]],["i64",3]]],[11,"from","","",3,[[["i64",3]],["u64",3]]],[11,"from","","",7,[[["u32",3]],["i32",3]]],[11,"from","","",2,[[["i32",3]],["u32",3]]],[11,"from","","",6,[[["u16",3]],["i16",3]]],[11,"from","","",1,[[["i16",3]],["u16",3]]],[11,"from","","",5,[[["u8",3]],["i8",3]]],[11,"from","","",0,[[["i8",3]],["u8",3]]],[11,"clone","","",0,[[],["u8",3]]],[11,"clone","","",1,[[],["u16",3]]],[11,"clone","","",2,[[],["u32",3]]],[11,"clone","","",3,[[],["u64",3]]],[11,"clone","","",4,[[],["u128",3]]],[11,"clone","","",5,[[],["i8",3]]],[11,"clone","","",6,[[],["i16",3]]],[11,"clone","","",7,[[],["i32",3]]],[11,"clone","","",8,[[],["i64",3]]],[11,"clone","","",9,[[],["i128",3]]],[11,"default","","",0,[[],["u8",3]]],[11,"default","","",1,[[],["u16",3]]],[11,"default","","",2,[[],["u32",3]]],[11,"default","","",3,[[],["u64",3]]],[11,"default","","",4,[[],["u128",3]]],[11,"default","","",5,[[],["i8",3]]],[11,"default","","",6,[[],["i16",3]]],[11,"default","","",7,[[],["i32",3]]],[11,"default","","",8,[[],["i64",3]]],[11,"default","","",9,[[],["i128",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"sub","","",0,[[]]],[11,"sub","","",1,[[]]],[11,"sub","","",2,[[]]],[11,"sub","","",3,[[]]],[11,"sub","","",4,[[]]],[11,"sub","","",5,[[]]],[11,"sub","","",6,[[]]],[11,"sub","","",7,[[]]],[11,"sub","","",8,[[]]],[11,"sub","","",9,[[]]],[11,"add","","",0,[[]]],[11,"add","","",1,[[]]],[11,"add","","",2,[[]]],[11,"add","","",3,[[]]],[11,"add","","",4,[[]]],[11,"add","","",5,[[]]],[11,"add","","",6,[[]]],[11,"add","","",7,[[]]],[11,"add","","",8,[[]]],[11,"add","","",9,[[]]],[11,"mul","","",0,[[]]],[11,"mul","","",1,[[]]],[11,"mul","","",2,[[]]],[11,"mul","","",3,[[]]],[11,"mul","","",4,[[]]],[11,"mul","","",5,[[]]],[11,"mul","","",6,[[]]],[11,"mul","","",7,[[]]],[11,"mul","","",8,[[]]],[11,"mul","","",9,[[]]],[11,"neg","","",0,[[]]],[11,"neg","","",1,[[]]],[11,"neg","","",2,[[]]],[11,"neg","","",3,[[]]],[11,"neg","","",4,[[]]],[11,"neg","","",5,[[]]],[11,"neg","","",6,[[]]],[11,"neg","","",7,[[]]],[11,"neg","","",8,[[]]],[11,"neg","","",9,[[]]],[11,"add_assign","","",0,[[]]],[11,"add_assign","","",1,[[]]],[11,"add_assign","","",2,[[]]],[11,"add_assign","","",3,[[]]],[11,"add_assign","","",4,[[]]],[11,"add_assign","","",5,[[]]],[11,"add_assign","","",6,[[]]],[11,"add_assign","","",7,[[]]],[11,"add_assign","","",8,[[]]],[11,"add_assign","","",9,[[]]],[11,"sub_assign","","",0,[[]]],[11,"sub_assign","","",1,[[]]],[11,"sub_assign","","",2,[[]]],[11,"sub_assign","","",3,[[]]],[11,"sub_assign","","",4,[[]]],[11,"sub_assign","","",5,[[]]],[11,"sub_assign","","",6,[[]]],[11,"sub_assign","","",7,[[]]],[11,"sub_assign","","",8,[[]]],[11,"sub_assign","","",9,[[]]],[11,"mul_assign","","",0,[[]]],[11,"mul_assign","","",1,[[]]],[11,"mul_assign","","",2,[[]]],[11,"mul_assign","","",3,[[]]],[11,"mul_assign","","",4,[[]]],[11,"mul_assign","","",5,[[]]],[11,"mul_assign","","",6,[[]]],[11,"mul_assign","","",7,[[]]],[11,"mul_assign","","",8,[[]]],[11,"mul_assign","","",9,[[]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"not","","",6,[[]]],[11,"not","","",7,[[]]],[11,"not","","",8,[[]]],[11,"not","","",9,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitand","","",6,[[]]],[11,"bitand","","",7,[[]]],[11,"bitand","","",8,[[]]],[11,"bitand","","",9,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitor","","",6,[[]]],[11,"bitor","","",7,[[]]],[11,"bitor","","",8,[[]]],[11,"bitor","","",9,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"bitxor","","",6,[[]]],[11,"bitxor","","",7,[[]]],[11,"bitxor","","",8,[[]]],[11,"bitxor","","",9,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shl","","",6,[[]]],[11,"shl","","",7,[[]]],[11,"shl","","",8,[[]]],[11,"shl","","",9,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"shr","","",6,[[]]],[11,"shr","","",7,[[]]],[11,"shr","","",8,[[]]],[11,"shr","","",9,[[]]],[11,"bitand_assign","","",0,[[]]],[11,"bitand_assign","","",1,[[]]],[11,"bitand_assign","","",2,[[]]],[11,"bitand_assign","","",3,[[]]],[11,"bitand_assign","","",4,[[]]],[11,"bitand_assign","","",5,[[]]],[11,"bitand_assign","","",6,[[]]],[11,"bitand_assign","","",7,[[]]],[11,"bitand_assign","","",8,[[]]],[11,"bitand_assign","","",9,[[]]],[11,"bitor_assign","","",0,[[]]],[11,"bitor_assign","","",1,[[]]],[11,"bitor_assign","","",2,[[]]],[11,"bitor_assign","","",3,[[]]],[11,"bitor_assign","","",4,[[]]],[11,"bitor_assign","","",5,[[]]],[11,"bitor_assign","","",6,[[]]],[11,"bitor_assign","","",7,[[]]],[11,"bitor_assign","","",8,[[]]],[11,"bitor_assign","","",9,[[]]],[11,"bitxor_assign","","",0,[[]]],[11,"bitxor_assign","","",1,[[]]],[11,"bitxor_assign","","",2,[[]]],[11,"bitxor_assign","","",3,[[]]],[11,"bitxor_assign","","",4,[[]]],[11,"bitxor_assign","","",5,[[]]],[11,"bitxor_assign","","",6,[[]]],[11,"bitxor_assign","","",7,[[]]],[11,"bitxor_assign","","",8,[[]]],[11,"bitxor_assign","","",9,[[]]],[11,"shl_assign","","",0,[[]]],[11,"shl_assign","","",1,[[]]],[11,"shl_assign","","",2,[[]]],[11,"shl_assign","","",3,[[]]],[11,"shl_assign","","",4,[[]]],[11,"shl_assign","","",5,[[]]],[11,"shl_assign","","",6,[[]]],[11,"shl_assign","","",7,[[]]],[11,"shl_assign","","",8,[[]]],[11,"shl_assign","","",9,[[]]],[11,"shr_assign","","",0,[[]]],[11,"shr_assign","","",1,[[]]],[11,"shr_assign","","",2,[[]]],[11,"shr_assign","","",3,[[]]],[11,"shr_assign","","",4,[[]]],[11,"shr_assign","","",5,[[]]],[11,"shr_assign","","",6,[[]]],[11,"shr_assign","","",7,[[]]],[11,"shr_assign","","",8,[[]]],[11,"shr_assign","","",9,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]]],"p":[[3,"U8"],[3,"U16"],[3,"U32"],[3,"U64"],[3,"U128"],[3,"I8"],[3,"I16"],[3,"I32"],[3,"I64"],[3,"I128"]]},\
"serde":{"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not…",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input…",0,null],[0,"value","","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BytesDeserializer","","A deserializer holding a `&[u8]`. Always calls…",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[],["borrowedstrdeserializer",3]]],[11,"new","","Create a new deserializer from the given bytes.",2,[[]]],[11,"new","","Create a new borrowed deserializer from the given borrowed…",3,[[]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",4,[[]]],[11,"end","","Check for remaining elements after passing a…",4,[[],["result",4]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",5,[[]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",6,[[]]],[11,"end","","Check for remaining elements after passing a…",6,[[],["result",4]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",7,[[]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",8,[[]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",8,[[["unexpected",4],["expected",8]]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",8,[[["unexpected",4],["expected",8]]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",8,[[["expected",8]]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",8,[[]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",8,[[]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",8,[[]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",8,[[]]],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",9,[[["formatter",3]],["result",6]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",10,[[],["result",4]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",11,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",11,[[],["result",4]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",12,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",12,[[],["result",4]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",12,[[],["result",4]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",12,[[],["result",4]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",12,[[],["result",4]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",12,[[],["result",4]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",12,[[],["result",4]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",12,[[],["result",4]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",12,[[],["result",4]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",12,[[],["result",4]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",12,[[],["result",4]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",12,[[],["result",4]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",12,[[],["result",4]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",12,[[],["result",4]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",12,[[],["result",4]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",12,[[],["result",4]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",12,[[],["result",4]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",12,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",12,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",12,[[],["result",4]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",12,[[],["result",4]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",12,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",12,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",12,[[],["result",4]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",12,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",12,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",12,[[],["result",4]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",12,[[],["result",4]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",12,[[],["result",4]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",12,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",12,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",12,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",12,[[]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",13,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",13,[[["formatter",3]],["result",6]]],[11,"visit_bool","","The input contains a boolean.",13,[[],["result",4]]],[11,"visit_i8","","The input contains an `i8`.",13,[[],["result",4]]],[11,"visit_i16","","The input contains an `i16`.",13,[[],["result",4]]],[11,"visit_i32","","The input contains an `i32`.",13,[[],["result",4]]],[11,"visit_i64","","The input contains an `i64`.",13,[[],["result",4]]],[11,"visit_i128","","The input contains a `i128`.",13,[[],["result",4]]],[11,"visit_u8","","The input contains a `u8`.",13,[[],["result",4]]],[11,"visit_u16","","The input contains a `u16`.",13,[[],["result",4]]],[11,"visit_u32","","The input contains a `u32`.",13,[[],["result",4]]],[11,"visit_u64","","The input contains a `u64`.",13,[[],["result",4]]],[11,"visit_u128","","The input contains a `u128`.",13,[[],["result",4]]],[11,"visit_f32","","The input contains an `f32`.",13,[[],["result",4]]],[11,"visit_f64","","The input contains an `f64`.",13,[[],["result",4]]],[11,"visit_char","","The input contains a `char`.",13,[[],["result",4]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",13,[[],["result",4]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",13,[[],["result",4]]],[11,"visit_string","","The input contains a string and ownership of the string is…",13,[[["string",3]],["result",4]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",13,[[],["result",4]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",13,[[],["result",4]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",13,[[["vec",3]],["result",4]]],[11,"visit_none","","The input contains an optional that is absent.",13,[[],["result",4]]],[11,"visit_some","","The input contains an optional that is present.",13,[[],["result",4]]],[11,"visit_unit","","The input contains a unit `()`.",13,[[],["result",4]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",13,[[],["result",4]]],[11,"visit_seq","","The input contains a sequence of elements.",13,[[],["result",4]]],[11,"visit_map","","The input contains a key-value map.",13,[[],["result",4]]],[11,"visit_enum","","The input contains an enum.",13,[[],["result",4]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",14,[[],[["result",4],["option",4]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",14,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",14,[[],["option",4]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",15,[[],[["result",4],["option",4]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",15,[[],["result",4]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",15,[[],[["result",4],["option",4]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",15,[[],[["result",4],["option",4]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",15,[[],["result",4]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",15,[[],[["result",4],["option",4]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",15,[[],["option",4]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",16,null],[10,"variant_seed","","`variant` is called to identify which variant to…",16,[[],["result",4]]],[11,"variant","","`variant` is called to identify which variant to…",16,[[],["result",4]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",17,null],[10,"unit_variant","","Called when deserializing a variant with no values.",17,[[],["result",4]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",17,[[],["result",4]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",17,[[],["result",4]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",17,[[],["result",4]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",17,[[],["result",4]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",18,null],[10,"into_deserializer","","Convert this value into a deserializer.",18,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",19,[[]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",20,[[],["result",4]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",21,null],[16,"Error","","The error type when some error occurs during serialization.",21,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",21,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",21,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",21,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",21,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",21,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",21,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",21,null],[10,"serialize_bool","","Serialize a `bool` value.",21,[[],["result",4]]],[10,"serialize_i8","","Serialize an `i8` value.",21,[[],["result",4]]],[10,"serialize_i16","","Serialize an `i16` value.",21,[[],["result",4]]],[10,"serialize_i32","","Serialize an `i32` value.",21,[[],["result",4]]],[10,"serialize_i64","","Serialize an `i64` value.",21,[[],["result",4]]],[11,"serialize_i128","","Serialize an `i128` value.",21,[[],["result",4]]],[10,"serialize_u8","","Serialize a `u8` value.",21,[[],["result",4]]],[10,"serialize_u16","","Serialize a `u16` value.",21,[[],["result",4]]],[10,"serialize_u32","","Serialize a `u32` value.",21,[[],["result",4]]],[10,"serialize_u64","","Serialize a `u64` value.",21,[[],["result",4]]],[11,"serialize_u128","","Serialize a `u128` value.",21,[[],["result",4]]],[10,"serialize_f32","","Serialize an `f32` value.",21,[[],["result",4]]],[10,"serialize_f64","","Serialize an `f64` value.",21,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",21,[[],["result",4]]],[10,"serialize_str","","Serialize a `&str`.",21,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",21,[[],["result",4]]],[10,"serialize_none","","Serialize a [`None`] value.",21,[[],["result",4]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",21,[[],["result",4]]],[10,"serialize_unit","","Serialize a `()` value.",21,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",21,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",21,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",21,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",21,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",21,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",21,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",21,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",21,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",21,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",21,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",21,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",21,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",21,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of…",21,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",21,[[]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a sequence element.",22,[[],["result",4]]],[10,"end","","Finish serializing a sequence.",22,[[],["result",4]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_element","","Serialize a tuple element.",23,[[],["result",4]]],[10,"end","","Finish serializing a tuple.",23,[[],["result",4]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple struct field.",24,[[],["result",4]]],[10,"end","","Finish serializing a tuple struct.",24,[[],["result",4]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_field","","Serialize a tuple variant field.",25,[[],["result",4]]],[10,"end","","Finish serializing a tuple variant.",25,[[],["result",4]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_key","","Serialize a map key.",26,[[],["result",4]]],[10,"serialize_value","","Serialize a map value.",26,[[],["result",4]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",26,[[],["result",4]]],[10,"end","","Finish serializing a map.",26,[[],["result",4]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct field.",27,[[],["result",4]]],[11,"skip_field","","Indicate that a struct field has been skipped.",27,[[],["result",4]]],[10,"end","","Finish serializing a struct.",27,[[],["result",4]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",28,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",28,null],[10,"serialize_field","","Serialize a struct variant field.",28,[[],["result",4]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",28,[[],["result",4]]],[10,"end","","Finish serializing a struct variant.",28,[[],["result",4]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",10,[[],["result",4]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",12,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",12,[[],["result",4]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",12,[[],["result",4]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",12,[[],["result",4]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",12,[[],["result",4]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",12,[[],["result",4]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",12,[[],["result",4]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",12,[[],["result",4]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",12,[[],["result",4]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",12,[[],["result",4]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",12,[[],["result",4]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",12,[[],["result",4]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",12,[[],["result",4]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",12,[[],["result",4]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",12,[[],["result",4]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",12,[[],["result",4]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",12,[[],["result",4]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",12,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",12,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",12,[[],["result",4]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",12,[[],["result",4]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",12,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",12,[[],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",12,[[],["result",4]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",12,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",12,[[],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",12,[[],["result",4]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",12,[[],["result",4]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",12,[[],["result",4]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",12,[[],["result",4]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",12,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",12,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",12,[[]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",20,[[],["result",4]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",21,null],[16,"Error","","The error type when some error occurs during serialization.",21,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",21,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",21,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",21,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",21,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",21,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",21,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",21,null],[10,"serialize_bool","","Serialize a `bool` value.",21,[[],["result",4]]],[10,"serialize_i8","","Serialize an `i8` value.",21,[[],["result",4]]],[10,"serialize_i16","","Serialize an `i16` value.",21,[[],["result",4]]],[10,"serialize_i32","","Serialize an `i32` value.",21,[[],["result",4]]],[10,"serialize_i64","","Serialize an `i64` value.",21,[[],["result",4]]],[11,"serialize_i128","","Serialize an `i128` value.",21,[[],["result",4]]],[10,"serialize_u8","","Serialize a `u8` value.",21,[[],["result",4]]],[10,"serialize_u16","","Serialize a `u16` value.",21,[[],["result",4]]],[10,"serialize_u32","","Serialize a `u32` value.",21,[[],["result",4]]],[10,"serialize_u64","","Serialize a `u64` value.",21,[[],["result",4]]],[11,"serialize_u128","","Serialize a `u128` value.",21,[[],["result",4]]],[10,"serialize_f32","","Serialize an `f32` value.",21,[[],["result",4]]],[10,"serialize_f64","","Serialize an `f64` value.",21,[[],["result",4]]],[10,"serialize_char","","Serialize a character.",21,[[],["result",4]]],[10,"serialize_str","","Serialize a `&str`.",21,[[],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",21,[[],["result",4]]],[10,"serialize_none","","Serialize a [`None`] value.",21,[[],["result",4]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",21,[[],["result",4]]],[10,"serialize_unit","","Serialize a `()` value.",21,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",21,[[],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",21,[[],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",21,[[],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",21,[[],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",21,[[["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",21,[[],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",21,[[],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",21,[[],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",21,[[["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",21,[[],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",21,[[],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",21,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",21,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of…",21,[[],["result",4]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",21,[[]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"fmt","serde::de","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","serde::de::value","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","serde::ser","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"deserialize","serde::de","",29,[[],[["result",4],["ignoredany",3]]]],[11,"deserialize_bool","serde::de::value","",31,[[],["result",4]]],[11,"deserialize_i8","","",31,[[],["result",4]]],[11,"deserialize_i16","","",31,[[],["result",4]]],[11,"deserialize_i32","","",31,[[],["result",4]]],[11,"deserialize_i64","","",31,[[],["result",4]]],[11,"deserialize_i128","","",31,[[],["result",4]]],[11,"deserialize_u8","","",31,[[],["result",4]]],[11,"deserialize_u16","","",31,[[],["result",4]]],[11,"deserialize_u32","","",31,[[],["result",4]]],[11,"deserialize_u64","","",31,[[],["result",4]]],[11,"deserialize_u128","","",31,[[],["result",4]]],[11,"deserialize_f32","","",31,[[],["result",4]]],[11,"deserialize_f64","","",31,[[],["result",4]]],[11,"deserialize_char","","",31,[[],["result",4]]],[11,"deserialize_str","","",31,[[],["result",4]]],[11,"deserialize_string","","",31,[[],["result",4]]],[11,"deserialize_bytes","","",31,[[],["result",4]]],[11,"deserialize_byte_buf","","",31,[[],["result",4]]],[11,"deserialize_unit","","",31,[[],["result",4]]],[11,"deserialize_unit_struct","","",31,[[],["result",4]]],[11,"deserialize_newtype_struct","","",31,[[],["result",4]]],[11,"deserialize_seq","","",31,[[],["result",4]]],[11,"deserialize_tuple","","",31,[[],["result",4]]],[11,"deserialize_tuple_struct","","",31,[[],["result",4]]],[11,"deserialize_map","","",31,[[],["result",4]]],[11,"deserialize_struct","","",31,[[],["result",4]]],[11,"deserialize_enum","","",31,[[],["result",4]]],[11,"deserialize_identifier","","",31,[[],["result",4]]],[11,"deserialize_ignored_any","","",31,[[],["result",4]]],[11,"deserialize_any","","",31,[[],["result",4]]],[11,"deserialize_option","","",31,[[],["result",4]]],[11,"deserialize_bool","","",32,[[],["result",4]]],[11,"deserialize_i8","","",32,[[],["result",4]]],[11,"deserialize_i16","","",32,[[],["result",4]]],[11,"deserialize_i32","","",32,[[],["result",4]]],[11,"deserialize_i64","","",32,[[],["result",4]]],[11,"deserialize_i128","","",32,[[],["result",4]]],[11,"deserialize_u8","","",32,[[],["result",4]]],[11,"deserialize_u16","","",32,[[],["result",4]]],[11,"deserialize_u32","","",32,[[],["result",4]]],[11,"deserialize_u64","","",32,[[],["result",4]]],[11,"deserialize_u128","","",32,[[],["result",4]]],[11,"deserialize_f32","","",32,[[],["result",4]]],[11,"deserialize_f64","","",32,[[],["result",4]]],[11,"deserialize_char","","",32,[[],["result",4]]],[11,"deserialize_str","","",32,[[],["result",4]]],[11,"deserialize_string","","",32,[[],["result",4]]],[11,"deserialize_bytes","","",32,[[],["result",4]]],[11,"deserialize_byte_buf","","",32,[[],["result",4]]],[11,"deserialize_option","","",32,[[],["result",4]]],[11,"deserialize_unit","","",32,[[],["result",4]]],[11,"deserialize_unit_struct","","",32,[[],["result",4]]],[11,"deserialize_newtype_struct","","",32,[[],["result",4]]],[11,"deserialize_seq","","",32,[[],["result",4]]],[11,"deserialize_tuple","","",32,[[],["result",4]]],[11,"deserialize_tuple_struct","","",32,[[],["result",4]]],[11,"deserialize_map","","",32,[[],["result",4]]],[11,"deserialize_struct","","",32,[[],["result",4]]],[11,"deserialize_enum","","",32,[[],["result",4]]],[11,"deserialize_identifier","","",32,[[],["result",4]]],[11,"deserialize_ignored_any","","",32,[[],["result",4]]],[11,"deserialize_any","","",32,[[],["result",4]]],[11,"deserialize_bool","","",33,[[],["result",4]]],[11,"deserialize_i8","","",33,[[],["result",4]]],[11,"deserialize_i16","","",33,[[],["result",4]]],[11,"deserialize_i32","","",33,[[],["result",4]]],[11,"deserialize_i64","","",33,[[],["result",4]]],[11,"deserialize_i128","","",33,[[],["result",4]]],[11,"deserialize_u8","","",33,[[],["result",4]]],[11,"deserialize_u16","","",33,[[],["result",4]]],[11,"deserialize_u32","","",33,[[],["result",4]]],[11,"deserialize_u64","","",33,[[],["result",4]]],[11,"deserialize_u128","","",33,[[],["result",4]]],[11,"deserialize_f32","","",33,[[],["result",4]]],[11,"deserialize_f64","","",33,[[],["result",4]]],[11,"deserialize_char","","",33,[[],["result",4]]],[11,"deserialize_str","","",33,[[],["result",4]]],[11,"deserialize_string","","",33,[[],["result",4]]],[11,"deserialize_bytes","","",33,[[],["result",4]]],[11,"deserialize_byte_buf","","",33,[[],["result",4]]],[11,"deserialize_option","","",33,[[],["result",4]]],[11,"deserialize_unit","","",33,[[],["result",4]]],[11,"deserialize_unit_struct","","",33,[[],["result",4]]],[11,"deserialize_newtype_struct","","",33,[[],["result",4]]],[11,"deserialize_seq","","",33,[[],["result",4]]],[11,"deserialize_tuple","","",33,[[],["result",4]]],[11,"deserialize_tuple_struct","","",33,[[],["result",4]]],[11,"deserialize_map","","",33,[[],["result",4]]],[11,"deserialize_struct","","",33,[[],["result",4]]],[11,"deserialize_enum","","",33,[[],["result",4]]],[11,"deserialize_identifier","","",33,[[],["result",4]]],[11,"deserialize_ignored_any","","",33,[[],["result",4]]],[11,"deserialize_any","","",33,[[],["result",4]]],[11,"deserialize_bool","","",34,[[],["result",4]]],[11,"deserialize_i8","","",34,[[],["result",4]]],[11,"deserialize_i16","","",34,[[],["result",4]]],[11,"deserialize_i32","","",34,[[],["result",4]]],[11,"deserialize_i64","","",34,[[],["result",4]]],[11,"deserialize_i128","","",34,[[],["result",4]]],[11,"deserialize_u8","","",34,[[],["result",4]]],[11,"deserialize_u16","","",34,[[],["result",4]]],[11,"deserialize_u32","","",34,[[],["result",4]]],[11,"deserialize_u64","","",34,[[],["result",4]]],[11,"deserialize_u128","","",34,[[],["result",4]]],[11,"deserialize_f32","","",34,[[],["result",4]]],[11,"deserialize_f64","","",34,[[],["result",4]]],[11,"deserialize_char","","",34,[[],["result",4]]],[11,"deserialize_str","","",34,[[],["result",4]]],[11,"deserialize_string","","",34,[[],["result",4]]],[11,"deserialize_bytes","","",34,[[],["result",4]]],[11,"deserialize_byte_buf","","",34,[[],["result",4]]],[11,"deserialize_option","","",34,[[],["result",4]]],[11,"deserialize_unit","","",34,[[],["result",4]]],[11,"deserialize_unit_struct","","",34,[[],["result",4]]],[11,"deserialize_newtype_struct","","",34,[[],["result",4]]],[11,"deserialize_seq","","",34,[[],["result",4]]],[11,"deserialize_tuple","","",34,[[],["result",4]]],[11,"deserialize_tuple_struct","","",34,[[],["result",4]]],[11,"deserialize_map","","",34,[[],["result",4]]],[11,"deserialize_struct","","",34,[[],["result",4]]],[11,"deserialize_enum","","",34,[[],["result",4]]],[11,"deserialize_identifier","","",34,[[],["result",4]]],[11,"deserialize_ignored_any","","",34,[[],["result",4]]],[11,"deserialize_any","","",34,[[],["result",4]]],[11,"deserialize_bool","","",35,[[],["result",4]]],[11,"deserialize_i8","","",35,[[],["result",4]]],[11,"deserialize_i16","","",35,[[],["result",4]]],[11,"deserialize_i32","","",35,[[],["result",4]]],[11,"deserialize_i64","","",35,[[],["result",4]]],[11,"deserialize_i128","","",35,[[],["result",4]]],[11,"deserialize_u8","","",35,[[],["result",4]]],[11,"deserialize_u16","","",35,[[],["result",4]]],[11,"deserialize_u32","","",35,[[],["result",4]]],[11,"deserialize_u64","","",35,[[],["result",4]]],[11,"deserialize_u128","","",35,[[],["result",4]]],[11,"deserialize_f32","","",35,[[],["result",4]]],[11,"deserialize_f64","","",35,[[],["result",4]]],[11,"deserialize_char","","",35,[[],["result",4]]],[11,"deserialize_str","","",35,[[],["result",4]]],[11,"deserialize_string","","",35,[[],["result",4]]],[11,"deserialize_bytes","","",35,[[],["result",4]]],[11,"deserialize_byte_buf","","",35,[[],["result",4]]],[11,"deserialize_option","","",35,[[],["result",4]]],[11,"deserialize_unit","","",35,[[],["result",4]]],[11,"deserialize_unit_struct","","",35,[[],["result",4]]],[11,"deserialize_newtype_struct","","",35,[[],["result",4]]],[11,"deserialize_seq","","",35,[[],["result",4]]],[11,"deserialize_tuple","","",35,[[],["result",4]]],[11,"deserialize_tuple_struct","","",35,[[],["result",4]]],[11,"deserialize_map","","",35,[[],["result",4]]],[11,"deserialize_struct","","",35,[[],["result",4]]],[11,"deserialize_enum","","",35,[[],["result",4]]],[11,"deserialize_identifier","","",35,[[],["result",4]]],[11,"deserialize_ignored_any","","",35,[[],["result",4]]],[11,"deserialize_any","","",35,[[],["result",4]]],[11,"deserialize_bool","","",36,[[],["result",4]]],[11,"deserialize_i8","","",36,[[],["result",4]]],[11,"deserialize_i16","","",36,[[],["result",4]]],[11,"deserialize_i32","","",36,[[],["result",4]]],[11,"deserialize_i64","","",36,[[],["result",4]]],[11,"deserialize_i128","","",36,[[],["result",4]]],[11,"deserialize_u8","","",36,[[],["result",4]]],[11,"deserialize_u16","","",36,[[],["result",4]]],[11,"deserialize_u32","","",36,[[],["result",4]]],[11,"deserialize_u64","","",36,[[],["result",4]]],[11,"deserialize_u128","","",36,[[],["result",4]]],[11,"deserialize_f32","","",36,[[],["result",4]]],[11,"deserialize_f64","","",36,[[],["result",4]]],[11,"deserialize_char","","",36,[[],["result",4]]],[11,"deserialize_str","","",36,[[],["result",4]]],[11,"deserialize_string","","",36,[[],["result",4]]],[11,"deserialize_bytes","","",36,[[],["result",4]]],[11,"deserialize_byte_buf","","",36,[[],["result",4]]],[11,"deserialize_option","","",36,[[],["result",4]]],[11,"deserialize_unit","","",36,[[],["result",4]]],[11,"deserialize_unit_struct","","",36,[[],["result",4]]],[11,"deserialize_newtype_struct","","",36,[[],["result",4]]],[11,"deserialize_seq","","",36,[[],["result",4]]],[11,"deserialize_tuple","","",36,[[],["result",4]]],[11,"deserialize_tuple_struct","","",36,[[],["result",4]]],[11,"deserialize_map","","",36,[[],["result",4]]],[11,"deserialize_struct","","",36,[[],["result",4]]],[11,"deserialize_enum","","",36,[[],["result",4]]],[11,"deserialize_identifier","","",36,[[],["result",4]]],[11,"deserialize_ignored_any","","",36,[[],["result",4]]],[11,"deserialize_any","","",36,[[],["result",4]]],[11,"deserialize_bool","","",37,[[],["result",4]]],[11,"deserialize_i8","","",37,[[],["result",4]]],[11,"deserialize_i16","","",37,[[],["result",4]]],[11,"deserialize_i32","","",37,[[],["result",4]]],[11,"deserialize_i64","","",37,[[],["result",4]]],[11,"deserialize_i128","","",37,[[],["result",4]]],[11,"deserialize_u8","","",37,[[],["result",4]]],[11,"deserialize_u16","","",37,[[],["result",4]]],[11,"deserialize_u32","","",37,[[],["result",4]]],[11,"deserialize_u64","","",37,[[],["result",4]]],[11,"deserialize_u128","","",37,[[],["result",4]]],[11,"deserialize_f32","","",37,[[],["result",4]]],[11,"deserialize_f64","","",37,[[],["result",4]]],[11,"deserialize_char","","",37,[[],["result",4]]],[11,"deserialize_str","","",37,[[],["result",4]]],[11,"deserialize_string","","",37,[[],["result",4]]],[11,"deserialize_bytes","","",37,[[],["result",4]]],[11,"deserialize_byte_buf","","",37,[[],["result",4]]],[11,"deserialize_option","","",37,[[],["result",4]]],[11,"deserialize_unit","","",37,[[],["result",4]]],[11,"deserialize_unit_struct","","",37,[[],["result",4]]],[11,"deserialize_newtype_struct","","",37,[[],["result",4]]],[11,"deserialize_seq","","",37,[[],["result",4]]],[11,"deserialize_tuple","","",37,[[],["result",4]]],[11,"deserialize_tuple_struct","","",37,[[],["result",4]]],[11,"deserialize_map","","",37,[[],["result",4]]],[11,"deserialize_struct","","",37,[[],["result",4]]],[11,"deserialize_enum","","",37,[[],["result",4]]],[11,"deserialize_identifier","","",37,[[],["result",4]]],[11,"deserialize_ignored_any","","",37,[[],["result",4]]],[11,"deserialize_any","","",37,[[],["result",4]]],[11,"deserialize_bool","","",38,[[],["result",4]]],[11,"deserialize_i8","","",38,[[],["result",4]]],[11,"deserialize_i16","","",38,[[],["result",4]]],[11,"deserialize_i32","","",38,[[],["result",4]]],[11,"deserialize_i64","","",38,[[],["result",4]]],[11,"deserialize_i128","","",38,[[],["result",4]]],[11,"deserialize_u8","","",38,[[],["result",4]]],[11,"deserialize_u16","","",38,[[],["result",4]]],[11,"deserialize_u32","","",38,[[],["result",4]]],[11,"deserialize_u64","","",38,[[],["result",4]]],[11,"deserialize_u128","","",38,[[],["result",4]]],[11,"deserialize_f32","","",38,[[],["result",4]]],[11,"deserialize_f64","","",38,[[],["result",4]]],[11,"deserialize_char","","",38,[[],["result",4]]],[11,"deserialize_str","","",38,[[],["result",4]]],[11,"deserialize_string","","",38,[[],["result",4]]],[11,"deserialize_bytes","","",38,[[],["result",4]]],[11,"deserialize_byte_buf","","",38,[[],["result",4]]],[11,"deserialize_option","","",38,[[],["result",4]]],[11,"deserialize_unit","","",38,[[],["result",4]]],[11,"deserialize_unit_struct","","",38,[[],["result",4]]],[11,"deserialize_newtype_struct","","",38,[[],["result",4]]],[11,"deserialize_seq","","",38,[[],["result",4]]],[11,"deserialize_tuple","","",38,[[],["result",4]]],[11,"deserialize_tuple_struct","","",38,[[],["result",4]]],[11,"deserialize_map","","",38,[[],["result",4]]],[11,"deserialize_struct","","",38,[[],["result",4]]],[11,"deserialize_enum","","",38,[[],["result",4]]],[11,"deserialize_identifier","","",38,[[],["result",4]]],[11,"deserialize_ignored_any","","",38,[[],["result",4]]],[11,"deserialize_any","","",38,[[],["result",4]]],[11,"deserialize_bool","","",39,[[],["result",4]]],[11,"deserialize_i8","","",39,[[],["result",4]]],[11,"deserialize_i16","","",39,[[],["result",4]]],[11,"deserialize_i32","","",39,[[],["result",4]]],[11,"deserialize_i64","","",39,[[],["result",4]]],[11,"deserialize_i128","","",39,[[],["result",4]]],[11,"deserialize_u8","","",39,[[],["result",4]]],[11,"deserialize_u16","","",39,[[],["result",4]]],[11,"deserialize_u32","","",39,[[],["result",4]]],[11,"deserialize_u64","","",39,[[],["result",4]]],[11,"deserialize_u128","","",39,[[],["result",4]]],[11,"deserialize_f32","","",39,[[],["result",4]]],[11,"deserialize_f64","","",39,[[],["result",4]]],[11,"deserialize_char","","",39,[[],["result",4]]],[11,"deserialize_str","","",39,[[],["result",4]]],[11,"deserialize_string","","",39,[[],["result",4]]],[11,"deserialize_bytes","","",39,[[],["result",4]]],[11,"deserialize_byte_buf","","",39,[[],["result",4]]],[11,"deserialize_option","","",39,[[],["result",4]]],[11,"deserialize_unit","","",39,[[],["result",4]]],[11,"deserialize_unit_struct","","",39,[[],["result",4]]],[11,"deserialize_newtype_struct","","",39,[[],["result",4]]],[11,"deserialize_seq","","",39,[[],["result",4]]],[11,"deserialize_tuple","","",39,[[],["result",4]]],[11,"deserialize_tuple_struct","","",39,[[],["result",4]]],[11,"deserialize_map","","",39,[[],["result",4]]],[11,"deserialize_struct","","",39,[[],["result",4]]],[11,"deserialize_enum","","",39,[[],["result",4]]],[11,"deserialize_identifier","","",39,[[],["result",4]]],[11,"deserialize_ignored_any","","",39,[[],["result",4]]],[11,"deserialize_any","","",39,[[],["result",4]]],[11,"deserialize_bool","","",40,[[],["result",4]]],[11,"deserialize_i8","","",40,[[],["result",4]]],[11,"deserialize_i16","","",40,[[],["result",4]]],[11,"deserialize_i32","","",40,[[],["result",4]]],[11,"deserialize_i64","","",40,[[],["result",4]]],[11,"deserialize_i128","","",40,[[],["result",4]]],[11,"deserialize_u8","","",40,[[],["result",4]]],[11,"deserialize_u16","","",40,[[],["result",4]]],[11,"deserialize_u32","","",40,[[],["result",4]]],[11,"deserialize_u64","","",40,[[],["result",4]]],[11,"deserialize_u128","","",40,[[],["result",4]]],[11,"deserialize_f32","","",40,[[],["result",4]]],[11,"deserialize_f64","","",40,[[],["result",4]]],[11,"deserialize_char","","",40,[[],["result",4]]],[11,"deserialize_str","","",40,[[],["result",4]]],[11,"deserialize_string","","",40,[[],["result",4]]],[11,"deserialize_bytes","","",40,[[],["result",4]]],[11,"deserialize_byte_buf","","",40,[[],["result",4]]],[11,"deserialize_option","","",40,[[],["result",4]]],[11,"deserialize_unit","","",40,[[],["result",4]]],[11,"deserialize_unit_struct","","",40,[[],["result",4]]],[11,"deserialize_newtype_struct","","",40,[[],["result",4]]],[11,"deserialize_seq","","",40,[[],["result",4]]],[11,"deserialize_tuple","","",40,[[],["result",4]]],[11,"deserialize_tuple_struct","","",40,[[],["result",4]]],[11,"deserialize_map","","",40,[[],["result",4]]],[11,"deserialize_struct","","",40,[[],["result",4]]],[11,"deserialize_enum","","",40,[[],["result",4]]],[11,"deserialize_identifier","","",40,[[],["result",4]]],[11,"deserialize_ignored_any","","",40,[[],["result",4]]],[11,"deserialize_any","","",40,[[],["result",4]]],[11,"deserialize_bool","","",41,[[],["result",4]]],[11,"deserialize_i8","","",41,[[],["result",4]]],[11,"deserialize_i16","","",41,[[],["result",4]]],[11,"deserialize_i32","","",41,[[],["result",4]]],[11,"deserialize_i64","","",41,[[],["result",4]]],[11,"deserialize_i128","","",41,[[],["result",4]]],[11,"deserialize_u8","","",41,[[],["result",4]]],[11,"deserialize_u16","","",41,[[],["result",4]]],[11,"deserialize_u32","","",41,[[],["result",4]]],[11,"deserialize_u64","","",41,[[],["result",4]]],[11,"deserialize_u128","","",41,[[],["result",4]]],[11,"deserialize_f32","","",41,[[],["result",4]]],[11,"deserialize_f64","","",41,[[],["result",4]]],[11,"deserialize_char","","",41,[[],["result",4]]],[11,"deserialize_str","","",41,[[],["result",4]]],[11,"deserialize_string","","",41,[[],["result",4]]],[11,"deserialize_bytes","","",41,[[],["result",4]]],[11,"deserialize_byte_buf","","",41,[[],["result",4]]],[11,"deserialize_option","","",41,[[],["result",4]]],[11,"deserialize_unit","","",41,[[],["result",4]]],[11,"deserialize_unit_struct","","",41,[[],["result",4]]],[11,"deserialize_newtype_struct","","",41,[[],["result",4]]],[11,"deserialize_seq","","",41,[[],["result",4]]],[11,"deserialize_tuple","","",41,[[],["result",4]]],[11,"deserialize_tuple_struct","","",41,[[],["result",4]]],[11,"deserialize_map","","",41,[[],["result",4]]],[11,"deserialize_struct","","",41,[[],["result",4]]],[11,"deserialize_enum","","",41,[[],["result",4]]],[11,"deserialize_identifier","","",41,[[],["result",4]]],[11,"deserialize_ignored_any","","",41,[[],["result",4]]],[11,"deserialize_any","","",41,[[],["result",4]]],[11,"deserialize_bool","","",42,[[],["result",4]]],[11,"deserialize_i8","","",42,[[],["result",4]]],[11,"deserialize_i16","","",42,[[],["result",4]]],[11,"deserialize_i32","","",42,[[],["result",4]]],[11,"deserialize_i64","","",42,[[],["result",4]]],[11,"deserialize_i128","","",42,[[],["result",4]]],[11,"deserialize_u8","","",42,[[],["result",4]]],[11,"deserialize_u16","","",42,[[],["result",4]]],[11,"deserialize_u32","","",42,[[],["result",4]]],[11,"deserialize_u64","","",42,[[],["result",4]]],[11,"deserialize_u128","","",42,[[],["result",4]]],[11,"deserialize_f32","","",42,[[],["result",4]]],[11,"deserialize_f64","","",42,[[],["result",4]]],[11,"deserialize_char","","",42,[[],["result",4]]],[11,"deserialize_str","","",42,[[],["result",4]]],[11,"deserialize_string","","",42,[[],["result",4]]],[11,"deserialize_bytes","","",42,[[],["result",4]]],[11,"deserialize_byte_buf","","",42,[[],["result",4]]],[11,"deserialize_option","","",42,[[],["result",4]]],[11,"deserialize_unit","","",42,[[],["result",4]]],[11,"deserialize_unit_struct","","",42,[[],["result",4]]],[11,"deserialize_newtype_struct","","",42,[[],["result",4]]],[11,"deserialize_seq","","",42,[[],["result",4]]],[11,"deserialize_tuple","","",42,[[],["result",4]]],[11,"deserialize_tuple_struct","","",42,[[],["result",4]]],[11,"deserialize_map","","",42,[[],["result",4]]],[11,"deserialize_struct","","",42,[[],["result",4]]],[11,"deserialize_enum","","",42,[[],["result",4]]],[11,"deserialize_identifier","","",42,[[],["result",4]]],[11,"deserialize_ignored_any","","",42,[[],["result",4]]],[11,"deserialize_any","","",42,[[],["result",4]]],[11,"deserialize_bool","","",43,[[],["result",4]]],[11,"deserialize_i8","","",43,[[],["result",4]]],[11,"deserialize_i16","","",43,[[],["result",4]]],[11,"deserialize_i32","","",43,[[],["result",4]]],[11,"deserialize_i64","","",43,[[],["result",4]]],[11,"deserialize_i128","","",43,[[],["result",4]]],[11,"deserialize_u8","","",43,[[],["result",4]]],[11,"deserialize_u16","","",43,[[],["result",4]]],[11,"deserialize_u32","","",43,[[],["result",4]]],[11,"deserialize_u64","","",43,[[],["result",4]]],[11,"deserialize_u128","","",43,[[],["result",4]]],[11,"deserialize_f32","","",43,[[],["result",4]]],[11,"deserialize_f64","","",43,[[],["result",4]]],[11,"deserialize_char","","",43,[[],["result",4]]],[11,"deserialize_str","","",43,[[],["result",4]]],[11,"deserialize_string","","",43,[[],["result",4]]],[11,"deserialize_bytes","","",43,[[],["result",4]]],[11,"deserialize_byte_buf","","",43,[[],["result",4]]],[11,"deserialize_option","","",43,[[],["result",4]]],[11,"deserialize_unit","","",43,[[],["result",4]]],[11,"deserialize_unit_struct","","",43,[[],["result",4]]],[11,"deserialize_newtype_struct","","",43,[[],["result",4]]],[11,"deserialize_seq","","",43,[[],["result",4]]],[11,"deserialize_tuple","","",43,[[],["result",4]]],[11,"deserialize_tuple_struct","","",43,[[],["result",4]]],[11,"deserialize_map","","",43,[[],["result",4]]],[11,"deserialize_struct","","",43,[[],["result",4]]],[11,"deserialize_enum","","",43,[[],["result",4]]],[11,"deserialize_identifier","","",43,[[],["result",4]]],[11,"deserialize_ignored_any","","",43,[[],["result",4]]],[11,"deserialize_any","","",43,[[],["result",4]]],[11,"deserialize_bool","","",44,[[],["result",4]]],[11,"deserialize_i8","","",44,[[],["result",4]]],[11,"deserialize_i16","","",44,[[],["result",4]]],[11,"deserialize_i32","","",44,[[],["result",4]]],[11,"deserialize_i64","","",44,[[],["result",4]]],[11,"deserialize_i128","","",44,[[],["result",4]]],[11,"deserialize_u8","","",44,[[],["result",4]]],[11,"deserialize_u16","","",44,[[],["result",4]]],[11,"deserialize_u32","","",44,[[],["result",4]]],[11,"deserialize_u64","","",44,[[],["result",4]]],[11,"deserialize_u128","","",44,[[],["result",4]]],[11,"deserialize_f32","","",44,[[],["result",4]]],[11,"deserialize_f64","","",44,[[],["result",4]]],[11,"deserialize_char","","",44,[[],["result",4]]],[11,"deserialize_str","","",44,[[],["result",4]]],[11,"deserialize_string","","",44,[[],["result",4]]],[11,"deserialize_bytes","","",44,[[],["result",4]]],[11,"deserialize_byte_buf","","",44,[[],["result",4]]],[11,"deserialize_option","","",44,[[],["result",4]]],[11,"deserialize_unit","","",44,[[],["result",4]]],[11,"deserialize_unit_struct","","",44,[[],["result",4]]],[11,"deserialize_newtype_struct","","",44,[[],["result",4]]],[11,"deserialize_seq","","",44,[[],["result",4]]],[11,"deserialize_tuple","","",44,[[],["result",4]]],[11,"deserialize_tuple_struct","","",44,[[],["result",4]]],[11,"deserialize_map","","",44,[[],["result",4]]],[11,"deserialize_struct","","",44,[[],["result",4]]],[11,"deserialize_enum","","",44,[[],["result",4]]],[11,"deserialize_identifier","","",44,[[],["result",4]]],[11,"deserialize_ignored_any","","",44,[[],["result",4]]],[11,"deserialize_any","","",44,[[],["result",4]]],[11,"deserialize_bool","","",45,[[],["result",4]]],[11,"deserialize_i8","","",45,[[],["result",4]]],[11,"deserialize_i16","","",45,[[],["result",4]]],[11,"deserialize_i32","","",45,[[],["result",4]]],[11,"deserialize_i64","","",45,[[],["result",4]]],[11,"deserialize_i128","","",45,[[],["result",4]]],[11,"deserialize_u8","","",45,[[],["result",4]]],[11,"deserialize_u16","","",45,[[],["result",4]]],[11,"deserialize_u32","","",45,[[],["result",4]]],[11,"deserialize_u64","","",45,[[],["result",4]]],[11,"deserialize_u128","","",45,[[],["result",4]]],[11,"deserialize_f32","","",45,[[],["result",4]]],[11,"deserialize_f64","","",45,[[],["result",4]]],[11,"deserialize_char","","",45,[[],["result",4]]],[11,"deserialize_str","","",45,[[],["result",4]]],[11,"deserialize_string","","",45,[[],["result",4]]],[11,"deserialize_bytes","","",45,[[],["result",4]]],[11,"deserialize_byte_buf","","",45,[[],["result",4]]],[11,"deserialize_option","","",45,[[],["result",4]]],[11,"deserialize_unit","","",45,[[],["result",4]]],[11,"deserialize_unit_struct","","",45,[[],["result",4]]],[11,"deserialize_newtype_struct","","",45,[[],["result",4]]],[11,"deserialize_seq","","",45,[[],["result",4]]],[11,"deserialize_tuple","","",45,[[],["result",4]]],[11,"deserialize_tuple_struct","","",45,[[],["result",4]]],[11,"deserialize_map","","",45,[[],["result",4]]],[11,"deserialize_struct","","",45,[[],["result",4]]],[11,"deserialize_enum","","",45,[[],["result",4]]],[11,"deserialize_identifier","","",45,[[],["result",4]]],[11,"deserialize_ignored_any","","",45,[[],["result",4]]],[11,"deserialize_any","","",45,[[],["result",4]]],[11,"deserialize_bool","","",46,[[],["result",4]]],[11,"deserialize_i8","","",46,[[],["result",4]]],[11,"deserialize_i16","","",46,[[],["result",4]]],[11,"deserialize_i32","","",46,[[],["result",4]]],[11,"deserialize_i64","","",46,[[],["result",4]]],[11,"deserialize_i128","","",46,[[],["result",4]]],[11,"deserialize_u8","","",46,[[],["result",4]]],[11,"deserialize_u16","","",46,[[],["result",4]]],[11,"deserialize_u32","","",46,[[],["result",4]]],[11,"deserialize_u64","","",46,[[],["result",4]]],[11,"deserialize_u128","","",46,[[],["result",4]]],[11,"deserialize_f32","","",46,[[],["result",4]]],[11,"deserialize_f64","","",46,[[],["result",4]]],[11,"deserialize_char","","",46,[[],["result",4]]],[11,"deserialize_str","","",46,[[],["result",4]]],[11,"deserialize_string","","",46,[[],["result",4]]],[11,"deserialize_bytes","","",46,[[],["result",4]]],[11,"deserialize_byte_buf","","",46,[[],["result",4]]],[11,"deserialize_option","","",46,[[],["result",4]]],[11,"deserialize_unit","","",46,[[],["result",4]]],[11,"deserialize_unit_struct","","",46,[[],["result",4]]],[11,"deserialize_newtype_struct","","",46,[[],["result",4]]],[11,"deserialize_seq","","",46,[[],["result",4]]],[11,"deserialize_tuple","","",46,[[],["result",4]]],[11,"deserialize_tuple_struct","","",46,[[],["result",4]]],[11,"deserialize_map","","",46,[[],["result",4]]],[11,"deserialize_struct","","",46,[[],["result",4]]],[11,"deserialize_enum","","",46,[[],["result",4]]],[11,"deserialize_identifier","","",46,[[],["result",4]]],[11,"deserialize_ignored_any","","",46,[[],["result",4]]],[11,"deserialize_any","","",46,[[],["result",4]]],[11,"deserialize_bool","","",47,[[],["result",4]]],[11,"deserialize_i8","","",47,[[],["result",4]]],[11,"deserialize_i16","","",47,[[],["result",4]]],[11,"deserialize_i32","","",47,[[],["result",4]]],[11,"deserialize_i64","","",47,[[],["result",4]]],[11,"deserialize_i128","","",47,[[],["result",4]]],[11,"deserialize_u8","","",47,[[],["result",4]]],[11,"deserialize_u16","","",47,[[],["result",4]]],[11,"deserialize_u32","","",47,[[],["result",4]]],[11,"deserialize_u64","","",47,[[],["result",4]]],[11,"deserialize_u128","","",47,[[],["result",4]]],[11,"deserialize_f32","","",47,[[],["result",4]]],[11,"deserialize_f64","","",47,[[],["result",4]]],[11,"deserialize_char","","",47,[[],["result",4]]],[11,"deserialize_str","","",47,[[],["result",4]]],[11,"deserialize_string","","",47,[[],["result",4]]],[11,"deserialize_bytes","","",47,[[],["result",4]]],[11,"deserialize_byte_buf","","",47,[[],["result",4]]],[11,"deserialize_option","","",47,[[],["result",4]]],[11,"deserialize_unit","","",47,[[],["result",4]]],[11,"deserialize_unit_struct","","",47,[[],["result",4]]],[11,"deserialize_newtype_struct","","",47,[[],["result",4]]],[11,"deserialize_seq","","",47,[[],["result",4]]],[11,"deserialize_tuple","","",47,[[],["result",4]]],[11,"deserialize_tuple_struct","","",47,[[],["result",4]]],[11,"deserialize_map","","",47,[[],["result",4]]],[11,"deserialize_struct","","",47,[[],["result",4]]],[11,"deserialize_identifier","","",47,[[],["result",4]]],[11,"deserialize_ignored_any","","",47,[[],["result",4]]],[11,"deserialize_any","","",47,[[],["result",4]]],[11,"deserialize_enum","","",47,[[],["result",4]]],[11,"deserialize_any","","",48,[[],["result",4]]],[11,"deserialize_enum","","",48,[[],["result",4]]],[11,"deserialize_bool","","",48,[[],["result",4]]],[11,"deserialize_i8","","",48,[[],["result",4]]],[11,"deserialize_i16","","",48,[[],["result",4]]],[11,"deserialize_i32","","",48,[[],["result",4]]],[11,"deserialize_i64","","",48,[[],["result",4]]],[11,"deserialize_i128","","",48,[[],["result",4]]],[11,"deserialize_u8","","",48,[[],["result",4]]],[11,"deserialize_u16","","",48,[[],["result",4]]],[11,"deserialize_u32","","",48,[[],["result",4]]],[11,"deserialize_u64","","",48,[[],["result",4]]],[11,"deserialize_u128","","",48,[[],["result",4]]],[11,"deserialize_f32","","",48,[[],["result",4]]],[11,"deserialize_f64","","",48,[[],["result",4]]],[11,"deserialize_char","","",48,[[],["result",4]]],[11,"deserialize_str","","",48,[[],["result",4]]],[11,"deserialize_string","","",48,[[],["result",4]]],[11,"deserialize_bytes","","",48,[[],["result",4]]],[11,"deserialize_byte_buf","","",48,[[],["result",4]]],[11,"deserialize_option","","",48,[[],["result",4]]],[11,"deserialize_unit","","",48,[[],["result",4]]],[11,"deserialize_unit_struct","","",48,[[],["result",4]]],[11,"deserialize_newtype_struct","","",48,[[],["result",4]]],[11,"deserialize_seq","","",48,[[],["result",4]]],[11,"deserialize_tuple","","",48,[[],["result",4]]],[11,"deserialize_tuple_struct","","",48,[[],["result",4]]],[11,"deserialize_map","","",48,[[],["result",4]]],[11,"deserialize_struct","","",48,[[],["result",4]]],[11,"deserialize_identifier","","",48,[[],["result",4]]],[11,"deserialize_ignored_any","","",48,[[],["result",4]]],[11,"deserialize_any","","",1,[[],["result",4]]],[11,"deserialize_enum","","",1,[[],["result",4]]],[11,"deserialize_bool","","",1,[[],["result",4]]],[11,"deserialize_i8","","",1,[[],["result",4]]],[11,"deserialize_i16","","",1,[[],["result",4]]],[11,"deserialize_i32","","",1,[[],["result",4]]],[11,"deserialize_i64","","",1,[[],["result",4]]],[11,"deserialize_i128","","",1,[[],["result",4]]],[11,"deserialize_u8","","",1,[[],["result",4]]],[11,"deserialize_u16","","",1,[[],["result",4]]],[11,"deserialize_u32","","",1,[[],["result",4]]],[11,"deserialize_u64","","",1,[[],["result",4]]],[11,"deserialize_u128","","",1,[[],["result",4]]],[11,"deserialize_f32","","",1,[[],["result",4]]],[11,"deserialize_f64","","",1,[[],["result",4]]],[11,"deserialize_char","","",1,[[],["result",4]]],[11,"deserialize_str","","",1,[[],["result",4]]],[11,"deserialize_string","","",1,[[],["result",4]]],[11,"deserialize_bytes","","",1,[[],["result",4]]],[11,"deserialize_byte_buf","","",1,[[],["result",4]]],[11,"deserialize_option","","",1,[[],["result",4]]],[11,"deserialize_unit","","",1,[[],["result",4]]],[11,"deserialize_unit_struct","","",1,[[],["result",4]]],[11,"deserialize_newtype_struct","","",1,[[],["result",4]]],[11,"deserialize_seq","","",1,[[],["result",4]]],[11,"deserialize_tuple","","",1,[[],["result",4]]],[11,"deserialize_tuple_struct","","",1,[[],["result",4]]],[11,"deserialize_map","","",1,[[],["result",4]]],[11,"deserialize_struct","","",1,[[],["result",4]]],[11,"deserialize_identifier","","",1,[[],["result",4]]],[11,"deserialize_ignored_any","","",1,[[],["result",4]]],[11,"deserialize_any","","",49,[[],["result",4]]],[11,"deserialize_enum","","",49,[[],["result",4]]],[11,"deserialize_bool","","",49,[[],["result",4]]],[11,"deserialize_i8","","",49,[[],["result",4]]],[11,"deserialize_i16","","",49,[[],["result",4]]],[11,"deserialize_i32","","",49,[[],["result",4]]],[11,"deserialize_i64","","",49,[[],["result",4]]],[11,"deserialize_i128","","",49,[[],["result",4]]],[11,"deserialize_u8","","",49,[[],["result",4]]],[11,"deserialize_u16","","",49,[[],["result",4]]],[11,"deserialize_u32","","",49,[[],["result",4]]],[11,"deserialize_u64","","",49,[[],["result",4]]],[11,"deserialize_u128","","",49,[[],["result",4]]],[11,"deserialize_f32","","",49,[[],["result",4]]],[11,"deserialize_f64","","",49,[[],["result",4]]],[11,"deserialize_char","","",49,[[],["result",4]]],[11,"deserialize_str","","",49,[[],["result",4]]],[11,"deserialize_string","","",49,[[],["result",4]]],[11,"deserialize_bytes","","",49,[[],["result",4]]],[11,"deserialize_byte_buf","","",49,[[],["result",4]]],[11,"deserialize_option","","",49,[[],["result",4]]],[11,"deserialize_unit","","",49,[[],["result",4]]],[11,"deserialize_unit_struct","","",49,[[],["result",4]]],[11,"deserialize_newtype_struct","","",49,[[],["result",4]]],[11,"deserialize_seq","","",49,[[],["result",4]]],[11,"deserialize_tuple","","",49,[[],["result",4]]],[11,"deserialize_tuple_struct","","",49,[[],["result",4]]],[11,"deserialize_map","","",49,[[],["result",4]]],[11,"deserialize_struct","","",49,[[],["result",4]]],[11,"deserialize_identifier","","",49,[[],["result",4]]],[11,"deserialize_ignored_any","","",49,[[],["result",4]]],[11,"deserialize_any","","",50,[[],["result",4]]],[11,"deserialize_enum","","",50,[[],["result",4]]],[11,"deserialize_bool","","",50,[[],["result",4]]],[11,"deserialize_i8","","",50,[[],["result",4]]],[11,"deserialize_i16","","",50,[[],["result",4]]],[11,"deserialize_i32","","",50,[[],["result",4]]],[11,"deserialize_i64","","",50,[[],["result",4]]],[11,"deserialize_i128","","",50,[[],["result",4]]],[11,"deserialize_u8","","",50,[[],["result",4]]],[11,"deserialize_u16","","",50,[[],["result",4]]],[11,"deserialize_u32","","",50,[[],["result",4]]],[11,"deserialize_u64","","",50,[[],["result",4]]],[11,"deserialize_u128","","",50,[[],["result",4]]],[11,"deserialize_f32","","",50,[[],["result",4]]],[11,"deserialize_f64","","",50,[[],["result",4]]],[11,"deserialize_char","","",50,[[],["result",4]]],[11,"deserialize_str","","",50,[[],["result",4]]],[11,"deserialize_string","","",50,[[],["result",4]]],[11,"deserialize_bytes","","",50,[[],["result",4]]],[11,"deserialize_byte_buf","","",50,[[],["result",4]]],[11,"deserialize_option","","",50,[[],["result",4]]],[11,"deserialize_unit","","",50,[[],["result",4]]],[11,"deserialize_unit_struct","","",50,[[],["result",4]]],[11,"deserialize_newtype_struct","","",50,[[],["result",4]]],[11,"deserialize_seq","","",50,[[],["result",4]]],[11,"deserialize_tuple","","",50,[[],["result",4]]],[11,"deserialize_tuple_struct","","",50,[[],["result",4]]],[11,"deserialize_map","","",50,[[],["result",4]]],[11,"deserialize_struct","","",50,[[],["result",4]]],[11,"deserialize_identifier","","",50,[[],["result",4]]],[11,"deserialize_ignored_any","","",50,[[],["result",4]]],[11,"deserialize_any","","",2,[[],["result",4]]],[11,"deserialize_bool","","",2,[[],["result",4]]],[11,"deserialize_i8","","",2,[[],["result",4]]],[11,"deserialize_i16","","",2,[[],["result",4]]],[11,"deserialize_i32","","",2,[[],["result",4]]],[11,"deserialize_i64","","",2,[[],["result",4]]],[11,"deserialize_i128","","",2,[[],["result",4]]],[11,"deserialize_u8","","",2,[[],["result",4]]],[11,"deserialize_u16","","",2,[[],["result",4]]],[11,"deserialize_u32","","",2,[[],["result",4]]],[11,"deserialize_u64","","",2,[[],["result",4]]],[11,"deserialize_u128","","",2,[[],["result",4]]],[11,"deserialize_f32","","",2,[[],["result",4]]],[11,"deserialize_f64","","",2,[[],["result",4]]],[11,"deserialize_char","","",2,[[],["result",4]]],[11,"deserialize_str","","",2,[[],["result",4]]],[11,"deserialize_string","","",2,[[],["result",4]]],[11,"deserialize_bytes","","",2,[[],["result",4]]],[11,"deserialize_byte_buf","","",2,[[],["result",4]]],[11,"deserialize_option","","",2,[[],["result",4]]],[11,"deserialize_unit","","",2,[[],["result",4]]],[11,"deserialize_unit_struct","","",2,[[],["result",4]]],[11,"deserialize_newtype_struct","","",2,[[],["result",4]]],[11,"deserialize_seq","","",2,[[],["result",4]]],[11,"deserialize_tuple","","",2,[[],["result",4]]],[11,"deserialize_tuple_struct","","",2,[[],["result",4]]],[11,"deserialize_map","","",2,[[],["result",4]]],[11,"deserialize_struct","","",2,[[],["result",4]]],[11,"deserialize_enum","","",2,[[],["result",4]]],[11,"deserialize_identifier","","",2,[[],["result",4]]],[11,"deserialize_ignored_any","","",2,[[],["result",4]]],[11,"deserialize_any","","",3,[[],["result",4]]],[11,"deserialize_bool","","",3,[[],["result",4]]],[11,"deserialize_i8","","",3,[[],["result",4]]],[11,"deserialize_i16","","",3,[[],["result",4]]],[11,"deserialize_i32","","",3,[[],["result",4]]],[11,"deserialize_i64","","",3,[[],["result",4]]],[11,"deserialize_i128","","",3,[[],["result",4]]],[11,"deserialize_u8","","",3,[[],["result",4]]],[11,"deserialize_u16","","",3,[[],["result",4]]],[11,"deserialize_u32","","",3,[[],["result",4]]],[11,"deserialize_u64","","",3,[[],["result",4]]],[11,"deserialize_u128","","",3,[[],["result",4]]],[11,"deserialize_f32","","",3,[[],["result",4]]],[11,"deserialize_f64","","",3,[[],["result",4]]],[11,"deserialize_char","","",3,[[],["result",4]]],[11,"deserialize_str","","",3,[[],["result",4]]],[11,"deserialize_string","","",3,[[],["result",4]]],[11,"deserialize_bytes","","",3,[[],["result",4]]],[11,"deserialize_byte_buf","","",3,[[],["result",4]]],[11,"deserialize_option","","",3,[[],["result",4]]],[11,"deserialize_unit","","",3,[[],["result",4]]],[11,"deserialize_unit_struct","","",3,[[],["result",4]]],[11,"deserialize_newtype_struct","","",3,[[],["result",4]]],[11,"deserialize_seq","","",3,[[],["result",4]]],[11,"deserialize_tuple","","",3,[[],["result",4]]],[11,"deserialize_tuple_struct","","",3,[[],["result",4]]],[11,"deserialize_map","","",3,[[],["result",4]]],[11,"deserialize_struct","","",3,[[],["result",4]]],[11,"deserialize_enum","","",3,[[],["result",4]]],[11,"deserialize_identifier","","",3,[[],["result",4]]],[11,"deserialize_ignored_any","","",3,[[],["result",4]]],[11,"deserialize_any","","",4,[[],["result",4]]],[11,"deserialize_bool","","",4,[[],["result",4]]],[11,"deserialize_i8","","",4,[[],["result",4]]],[11,"deserialize_i16","","",4,[[],["result",4]]],[11,"deserialize_i32","","",4,[[],["result",4]]],[11,"deserialize_i64","","",4,[[],["result",4]]],[11,"deserialize_i128","","",4,[[],["result",4]]],[11,"deserialize_u8","","",4,[[],["result",4]]],[11,"deserialize_u16","","",4,[[],["result",4]]],[11,"deserialize_u32","","",4,[[],["result",4]]],[11,"deserialize_u64","","",4,[[],["result",4]]],[11,"deserialize_u128","","",4,[[],["result",4]]],[11,"deserialize_f32","","",4,[[],["result",4]]],[11,"deserialize_f64","","",4,[[],["result",4]]],[11,"deserialize_char","","",4,[[],["result",4]]],[11,"deserialize_str","","",4,[[],["result",4]]],[11,"deserialize_string","","",4,[[],["result",4]]],[11,"deserialize_bytes","","",4,[[],["result",4]]],[11,"deserialize_byte_buf","","",4,[[],["result",4]]],[11,"deserialize_option","","",4,[[],["result",4]]],[11,"deserialize_unit","","",4,[[],["result",4]]],[11,"deserialize_unit_struct","","",4,[[],["result",4]]],[11,"deserialize_newtype_struct","","",4,[[],["result",4]]],[11,"deserialize_seq","","",4,[[],["result",4]]],[11,"deserialize_tuple","","",4,[[],["result",4]]],[11,"deserialize_tuple_struct","","",4,[[],["result",4]]],[11,"deserialize_map","","",4,[[],["result",4]]],[11,"deserialize_struct","","",4,[[],["result",4]]],[11,"deserialize_enum","","",4,[[],["result",4]]],[11,"deserialize_identifier","","",4,[[],["result",4]]],[11,"deserialize_ignored_any","","",4,[[],["result",4]]],[11,"deserialize_any","","",5,[[],["result",4]]],[11,"deserialize_bool","","",5,[[],["result",4]]],[11,"deserialize_i8","","",5,[[],["result",4]]],[11,"deserialize_i16","","",5,[[],["result",4]]],[11,"deserialize_i32","","",5,[[],["result",4]]],[11,"deserialize_i64","","",5,[[],["result",4]]],[11,"deserialize_i128","","",5,[[],["result",4]]],[11,"deserialize_u8","","",5,[[],["result",4]]],[11,"deserialize_u16","","",5,[[],["result",4]]],[11,"deserialize_u32","","",5,[[],["result",4]]],[11,"deserialize_u64","","",5,[[],["result",4]]],[11,"deserialize_u128","","",5,[[],["result",4]]],[11,"deserialize_f32","","",5,[[],["result",4]]],[11,"deserialize_f64","","",5,[[],["result",4]]],[11,"deserialize_char","","",5,[[],["result",4]]],[11,"deserialize_str","","",5,[[],["result",4]]],[11,"deserialize_string","","",5,[[],["result",4]]],[11,"deserialize_bytes","","",5,[[],["result",4]]],[11,"deserialize_byte_buf","","",5,[[],["result",4]]],[11,"deserialize_option","","",5,[[],["result",4]]],[11,"deserialize_unit","","",5,[[],["result",4]]],[11,"deserialize_unit_struct","","",5,[[],["result",4]]],[11,"deserialize_newtype_struct","","",5,[[],["result",4]]],[11,"deserialize_seq","","",5,[[],["result",4]]],[11,"deserialize_tuple","","",5,[[],["result",4]]],[11,"deserialize_tuple_struct","","",5,[[],["result",4]]],[11,"deserialize_map","","",5,[[],["result",4]]],[11,"deserialize_struct","","",5,[[],["result",4]]],[11,"deserialize_enum","","",5,[[],["result",4]]],[11,"deserialize_identifier","","",5,[[],["result",4]]],[11,"deserialize_ignored_any","","",5,[[],["result",4]]],[11,"deserialize_any","","",6,[[],["result",4]]],[11,"deserialize_seq","","",6,[[],["result",4]]],[11,"deserialize_tuple","","",6,[[],["result",4]]],[11,"deserialize_bool","","",6,[[],["result",4]]],[11,"deserialize_i8","","",6,[[],["result",4]]],[11,"deserialize_i16","","",6,[[],["result",4]]],[11,"deserialize_i32","","",6,[[],["result",4]]],[11,"deserialize_i64","","",6,[[],["result",4]]],[11,"deserialize_i128","","",6,[[],["result",4]]],[11,"deserialize_u8","","",6,[[],["result",4]]],[11,"deserialize_u16","","",6,[[],["result",4]]],[11,"deserialize_u32","","",6,[[],["result",4]]],[11,"deserialize_u64","","",6,[[],["result",4]]],[11,"deserialize_u128","","",6,[[],["result",4]]],[11,"deserialize_f32","","",6,[[],["result",4]]],[11,"deserialize_f64","","",6,[[],["result",4]]],[11,"deserialize_char","","",6,[[],["result",4]]],[11,"deserialize_str","","",6,[[],["result",4]]],[11,"deserialize_string","","",6,[[],["result",4]]],[11,"deserialize_bytes","","",6,[[],["result",4]]],[11,"deserialize_byte_buf","","",6,[[],["result",4]]],[11,"deserialize_option","","",6,[[],["result",4]]],[11,"deserialize_unit","","",6,[[],["result",4]]],[11,"deserialize_unit_struct","","",6,[[],["result",4]]],[11,"deserialize_newtype_struct","","",6,[[],["result",4]]],[11,"deserialize_tuple_struct","","",6,[[],["result",4]]],[11,"deserialize_map","","",6,[[],["result",4]]],[11,"deserialize_struct","","",6,[[],["result",4]]],[11,"deserialize_enum","","",6,[[],["result",4]]],[11,"deserialize_identifier","","",6,[[],["result",4]]],[11,"deserialize_ignored_any","","",6,[[],["result",4]]],[11,"deserialize_any","","",7,[[],["result",4]]],[11,"deserialize_enum","","",7,[[],["result",4]]],[11,"deserialize_bool","","",7,[[],["result",4]]],[11,"deserialize_i8","","",7,[[],["result",4]]],[11,"deserialize_i16","","",7,[[],["result",4]]],[11,"deserialize_i32","","",7,[[],["result",4]]],[11,"deserialize_i64","","",7,[[],["result",4]]],[11,"deserialize_i128","","",7,[[],["result",4]]],[11,"deserialize_u8","","",7,[[],["result",4]]],[11,"deserialize_u16","","",7,[[],["result",4]]],[11,"deserialize_u32","","",7,[[],["result",4]]],[11,"deserialize_u64","","",7,[[],["result",4]]],[11,"deserialize_u128","","",7,[[],["result",4]]],[11,"deserialize_f32","","",7,[[],["result",4]]],[11,"deserialize_f64","","",7,[[],["result",4]]],[11,"deserialize_char","","",7,[[],["result",4]]],[11,"deserialize_str","","",7,[[],["result",4]]],[11,"deserialize_string","","",7,[[],["result",4]]],[11,"deserialize_bytes","","",7,[[],["result",4]]],[11,"deserialize_byte_buf","","",7,[[],["result",4]]],[11,"deserialize_option","","",7,[[],["result",4]]],[11,"deserialize_unit","","",7,[[],["result",4]]],[11,"deserialize_unit_struct","","",7,[[],["result",4]]],[11,"deserialize_newtype_struct","","",7,[[],["result",4]]],[11,"deserialize_seq","","",7,[[],["result",4]]],[11,"deserialize_tuple","","",7,[[],["result",4]]],[11,"deserialize_tuple_struct","","",7,[[],["result",4]]],[11,"deserialize_map","","",7,[[],["result",4]]],[11,"deserialize_struct","","",7,[[],["result",4]]],[11,"deserialize_identifier","","",7,[[],["result",4]]],[11,"deserialize_ignored_any","","",7,[[],["result",4]]],[11,"expecting","serde::de","",29,[[["formatter",3]],["result",6]]],[11,"visit_bool","","",29,[[],["result",4]]],[11,"visit_i64","","",29,[[],["result",4]]],[11,"visit_i128","","",29,[[],["result",4]]],[11,"visit_u64","","",29,[[],["result",4]]],[11,"visit_u128","","",29,[[],["result",4]]],[11,"visit_f64","","",29,[[],["result",4]]],[11,"visit_str","","",29,[[],["result",4]]],[11,"visit_none","","",29,[[],["result",4]]],[11,"visit_some","","",29,[[],["result",4]]],[11,"visit_newtype_struct","","",29,[[],["result",4]]],[11,"visit_unit","","",29,[[],["result",4]]],[11,"visit_seq","","",29,[[],["result",4]]],[11,"visit_map","","",29,[[],["result",4]]],[11,"visit_bytes","","",29,[[],["result",4]]],[11,"visit_enum","","",29,[[],["result",4]]],[11,"next_element_seed","serde::de::value","",4,[[],[["result",4],["option",4]]]],[11,"size_hint","","",4,[[],["option",4]]],[11,"next_element_seed","","",6,[[],[["result",4],["option",4]]]],[11,"size_hint","","",6,[[],["option",4]]],[11,"next_key_seed","","",6,[[],[["result",4],["option",4]]]],[11,"next_value_seed","","",6,[[],["result",4]]],[11,"next_entry_seed","","",6,[[],[["option",4],["result",4]]]],[11,"size_hint","","",6,[[],["option",4]]],[11,"variant_seed","","",47,[[],["result",4]]],[11,"variant_seed","","",48,[[],["result",4]]],[11,"variant_seed","","",1,[[],["result",4]]],[11,"variant_seed","","",49,[[],["result",4]]],[11,"variant_seed","","",50,[[],["result",4]]],[11,"variant_seed","","",7,[[],["result",4]]],[11,"serialize_element","serde::ser","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_element","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_key","","",51,[[],["result",4]]],[11,"serialize_value","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"custom","serde::de::value","",30,[[]]],[11,"custom","","",30,[[]]],[11,"clone","","",30,[[],["error",3]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[],["seqdeserializer",3]]],[11,"clone","","",5,[[],["seqaccessdeserializer",3]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[],["mapaccessdeserializer",3]]],[11,"clone","serde::de","",29,[[],["ignoredany",3]]],[11,"clone","","",0,[[],["unexpected",4]]],[11,"default","","",29,[[],["ignoredany",3]]],[11,"eq","serde::de::value","",30,[[["error",3]]]],[11,"ne","","",30,[[["error",3]]]],[11,"eq","serde::de","",0,[[["unexpected",4]]]],[11,"ne","","",0,[[["unexpected",4]]]],[11,"fmt","serde::de::value","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de::value","",30,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"description","serde::de::value","",30,[[]]]],"p":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]},\
"serde_derive":{"doc":"This crate provides Serde\'s two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]},\
"serde_json":{"doc":"Serde JSON","i":[[3,"Deserializer","serde_json","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[3,"Error","","This type represents all possible errors that can occur…",null,null],[3,"Serializer","","A structure for serializing Rust values into JSON.",null,null],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[],["result",6]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["result",6],["string",3]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["result",6],["string",3]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["vec",3],["result",6]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[],["result",6]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value",4]],[["result",4],["error",3]]]],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[],[["value",4],["result",4],["error",3]]]],[0,"de","","Deserialize JSON data to a Rust data structure.",null,null],[3,"SliceRead","serde_json::de","JSON input source that reads from a slice of bytes.",null,null],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",null,null],[3,"IoRead","","JSON input source that reads from a std::io input stream.",null,null],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",null,null],[5,"from_reader","","Deserialize an instance of type `T` from an IO stream of…",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type `T` from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type `T` from a string of JSON…",null,[[],["result",6]]],[8,"Read","","Trait used by the deserializer for iterating over input.…",null,null],[11,"new","","Create a JSON deserializer from one of the possible…",1,[[]]],[11,"from_reader","","Creates a JSON deserializer from an `io::Read`.",1,[[]]],[11,"from_slice","","Creates a JSON deserializer from a `&[u8]`.",1,[[]]],[11,"from_str","","Creates a JSON deserializer from a `&str`.",1,[[]]],[11,"end","","The `Deserializer::end` method should be called after a…",1,[[],["result",6]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of…",1,[[],["streamdeserializer",3]]],[11,"new","","Create a JSON stream deserializer from one of the possible…",2,[[]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a…",2,[[]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",null,null],[3,"Error","serde_json::error","This type represents all possible errors that can occur…",null,null],[4,"Category","","Categorizes the cause of a `serde_json::Error`.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes…",3,null],[13,"Syntax","","The error was caused by input that was not syntactically…",3,null],[13,"Data","","The error was caused by input data that was semantically…",3,null],[13,"Eof","","The error was caused by prematurely reaching the end of…",3,null],[6,"Result","","Alias for a `Result` with the error type…",null,null],[11,"line","","One-based line number at which the error was detected.",4,[[]]],[11,"column","","One-based column number at which the error was detected.",4,[[]]],[11,"classify","","Categorizes the cause of this error.",4,[[],["category",4]]],[11,"is_io","","Returns true if this error was caused by a failure to read…",4,[[]]],[11,"is_syntax","","Returns true if this error was caused by input that was…",4,[[]]],[11,"is_data","","Returns true if this error was caused by input data that…",4,[[]]],[11,"is_eof","","Returns true if this error was caused by prematurely…",4,[[]]],[0,"map","serde_json","A map of String to serde_json::Value.",null,null],[3,"Map","serde_json::map","Represents a JSON key/value type.",null,null],[3,"VacantEntry","","A vacant Entry. It is part of the [`Entry`] enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the [`Entry`] enum.",null,null],[3,"Iter","","An iterator over a serde_json::Map\'s entries.",null,null],[3,"IterMut","","A mutable iterator over a serde_json::Map\'s entries.",null,null],[3,"IntoIter","","An owning iterator over a serde_json::Map\'s entries.",null,null],[3,"Keys","","An iterator over a serde_json::Map\'s keys.",null,null],[3,"Values","","An iterator over a serde_json::Map\'s values.",null,null],[3,"ValuesMut","","A mutable iterator over a serde_json::Map\'s values.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be…",null,null],[13,"Vacant","","A vacant Entry.",5,null],[13,"Occupied","","An occupied Entry.",5,null],[11,"new","","Makes a new empty Map.",6,[[]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",6,[[]]],[11,"clear","","Clears the map, removing all values.",6,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",6,[[],[["option",4],["value",4]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",6,[[]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",6,[[],[["option",4],["value",4]]]],[11,"insert","","Inserts a key-value pair into the map.",6,[[["value",4],["string",3]],[["option",4],["value",4]]]],[11,"remove","","Removes a key from the map, returning the value at the key…",6,[[],[["option",4],["value",4]]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and…",6,[[],["option",4]]],[11,"append","","Moves all elements from other into Self, leaving other…",6,[[]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for…",6,[[],["entry",4]]],[11,"len","","Returns the number of elements in the map.",6,[[]]],[11,"is_empty","","Returns true if the map contains no elements.",6,[[]]],[11,"iter","","Gets an iterator over the entries of the map.",6,[[],["iter",3]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",6,[[],["itermut",3]]],[11,"keys","","Gets an iterator over the keys of the map.",6,[[],["keys",3]]],[11,"values","","Gets an iterator over the values of the map.",6,[[],["values",3]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",6,[[],["valuesmut",3]]],[11,"key","","Returns a reference to this entry\'s key.",5,[[],["string",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default…",5,[[["value",4]],["value",4]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of…",5,[[],["value",4]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry…",5,[[]]],[11,"key","","Gets a reference to the key that would be used when…",7,[[],["string",3]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key,…",7,[[["value",4]],["value",4]]],[11,"key","","Gets a reference to the key in the entry.",8,[[],["string",3]]],[11,"get","","Gets a reference to the value in the entry.",8,[[],["value",4]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",8,[[],["value",4]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",8,[[],["value",4]]],[11,"insert","","Sets the value of the entry with the `OccupiedEntry`\'s…",8,[[["value",4]],["value",4]]],[11,"remove","","Takes the value of the entry out of the map, and returns it.",8,[[],["value",4]]],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra…",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human…",null,null],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",null,null],[13,"Quote","","An escaped quote `\\\"`",9,null],[13,"ReverseSolidus","","An escaped reverse solidus `\\\\`",9,null],[13,"Solidus","","An escaped solidus `/`",9,null],[13,"Backspace","","An escaped backspace character (usually escaped as `\\\\b`)",9,null],[13,"FormFeed","","An escaped form feed character (usually escaped as `\\\\f`)",9,null],[13,"LineFeed","","An escaped line feed character (usually escaped as `\\\\n`)",9,null],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as…",9,null],[13,"Tab","","An escaped tab character (usually escaped as `\\\\t`)",9,null],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped…",9,null],[5,"to_writer","","Serialize the given data structure as JSON into the IO…",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON…",null,[[],["result",6]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["vec",3],["result",6]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["result",6],["string",3]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed…",null,[[],[["result",6],["string",3]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control…",null,null],[11,"write_null","","Writes a `null` value to the specified writer.",10,[[],["result",6]]],[11,"write_bool","","Writes a `true` or `false` value to the specified writer.",10,[[],["result",6]]],[11,"write_i8","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_i16","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_i32","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_i64","","Writes an integer value like `-123` to the specified writer.",10,[[],["result",6]]],[11,"write_u8","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_u16","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_u32","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_u64","","Writes an integer value like `123` to the specified writer.",10,[[],["result",6]]],[11,"write_f32","","Writes a floating point value like `-31.26e+12` to the…",10,[[],["result",6]]],[11,"write_f64","","Writes a floating point value like `-31.26e+12` to the…",10,[[],["result",6]]],[11,"write_number_str","","Writes a number that has already been rendered to a string.",10,[[],["result",6]]],[11,"begin_string","","Called before each series of `write_string_fragment` and…",10,[[],["result",6]]],[11,"end_string","","Called after each series of `write_string_fragment` and…",10,[[],["result",6]]],[11,"write_string_fragment","","Writes a string fragment that doesn\'t need any escaping to…",10,[[],["result",6]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["charescape",4]],["result",6]]],[11,"begin_array","","Called before every array. Writes a `[` to the specified…",10,[[],["result",6]]],[11,"end_array","","Called after every array. Writes a `]` to the specified…",10,[[],["result",6]]],[11,"begin_array_value","","Called before every array value. Writes a `,` if needed to…",10,[[],["result",6]]],[11,"end_array_value","","Called after every array value.",10,[[],["result",6]]],[11,"begin_object","","Called before every object. Writes a `{` to the specified…",10,[[],["result",6]]],[11,"end_object","","Called after every object. Writes a `}` to the specified…",10,[[],["result",6]]],[11,"begin_object_key","","Called before every object key.",10,[[],["result",6]]],[11,"end_object_key","","Called after every object key. A `:` should be written to…",10,[[],["result",6]]],[11,"begin_object_value","","Called before every object value. A `:` should be written…",10,[[],["result",6]]],[11,"end_object_value","","Called after every object value.",10,[[],["result",6]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn\'t need any escaping…",10,[[],["result",6]]],[11,"new","","Creates a new JSON serializer.",11,[[]]],[11,"pretty","","Creates a new JSON pretty print serializer.",11,[[]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to…",11,[[]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",11,[[]]],[11,"new","","Construct a pretty printer formatter that defaults to…",12,[[]]],[11,"with_indent","","Construct a pretty printer formatter that uses the…",12,[[]]],[0,"value","serde_json","The Value enum, a loosely typed way of representing any…",null,null],[3,"Serializer","serde_json::value","Serializer whose output is a `Value`.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating point.",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",0,null],[13,"Bool","","Represents a JSON boolean.",0,null],[13,"Number","","Represents a JSON number, whether integer or floating point.",0,null],[13,"String","","Represents a JSON string.",0,null],[13,"Array","","Represents a JSON array.",0,null],[13,"Object","","Represents a JSON object.",0,null],[5,"to_value","","Convert a `T` into `serde_json::Value` which is an enum…",null,[[],[["value",4],["result",4],["error",3]]]],[5,"from_value","","Interpret a `serde_json::Value` as an instance of type `T`.",null,[[["value",4]],[["result",4],["error",3]]]],[8,"Index","","A type that can be used to index into a `serde_json::Value`.",null,null],[11,"get","","Index into a JSON array or map. A string index can be used…",0,[[["index",8]],[["option",4],["value",4]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index can…",0,[[["index",8]],[["option",4],["value",4]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",0,[[]]],[11,"as_object","","If the `Value` is an Object, returns the associated Map.…",0,[[],[["option",4],["map",3]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",0,[[],[["option",4],["map",3]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",0,[[]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",0,[[],[["vec",3],["option",4]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",0,[[],[["option",4],["vec",3]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",0,[[]]],[11,"as_str","","If the `Value` is a String, returns the associated str.…",0,[[],["option",4]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",0,[[]]],[11,"is_i64","","Returns true if the `Value` is an integer between…",0,[[]]],[11,"is_u64","","Returns true if the `Value` is an integer between zero and…",0,[[]]],[11,"is_f64","","Returns true if the `Value` is a number that can be…",0,[[]]],[11,"as_i64","","If the `Value` is an integer, represent it as i64 if…",0,[[],["option",4]]],[11,"as_u64","","If the `Value` is an integer, represent it as u64 if…",0,[[],["option",4]]],[11,"as_f64","","If the `Value` is a number, represent it as f64 if…",0,[[],["option",4]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",0,[[]]],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.…",0,[[],["option",4]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",0,[[]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",0,[[],["option",4]]],[11,"pointer","","Looks up a value by a JSON Pointer.",0,[[],[["option",4],["value",4]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable…",0,[[],[["option",4],["value",4]]]],[11,"take","","Takes the value out of the `Value`, leaving a `Null` in…",0,[[],["value",4]]],[11,"is_i64","serde_json","Returns true if the `Number` is an integer between…",13,[[]]],[11,"is_u64","","Returns true if the `Number` is an integer between zero…",13,[[]]],[11,"is_f64","","Returns true if the `Number` can be represented by f64.",13,[[]]],[11,"as_i64","","If the `Number` is an integer, represent it as i64 if…",13,[[],["option",4]]],[11,"as_u64","","If the `Number` is an integer, represent it as u64 if…",13,[[],["option",4]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None…",13,[[],["option",4]]],[11,"from_f64","","Converts a finite `f64` to a `Number`. Infinite or NaN…",13,[[],[["option",4],["number",3]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input…",14,[[]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,[[]]],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[]]],[6,"Result","serde_json","Alias for a `Result` with the error type…",null,null],[14,"json","","Construct a `serde_json::Value` from a JSON literal.",null,null],[11,"from","serde_json::de","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","serde_json::error","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","serde_json::ser","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","serde_json::map","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","serde_json","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","serde_json::value","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","serde_json::de","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","serde_json::error","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","serde_json::map","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","serde_json::ser","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","serde_json::value","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"begin_array","serde_json::ser","",12,[[],["result",6]]],[11,"end_array","","",12,[[],["result",6]]],[11,"begin_array_value","","",12,[[],["result",6]]],[11,"end_array_value","","",12,[[],["result",6]]],[11,"begin_object","","",12,[[],["result",6]]],[11,"end_object","","",12,[[],["result",6]]],[11,"begin_object_key","","",12,[[],["result",6]]],[11,"begin_object_value","","",12,[[],["result",6]]],[11,"end_object_value","","",12,[[],["result",6]]],[11,"next","serde_json::de","",14,[[],[["result",6],["option",4]]]],[11,"peek","","",14,[[],[["result",6],["option",4]]]],[11,"discard","","",14,[[]]],[11,"position","","",14,[[],["position",3]]],[11,"peek_position","","",14,[[],["position",3]]],[11,"byte_offset","","",14,[[]]],[11,"parse_str","","",14,[[["vec",3]],[["reference",4],["result",6]]]],[11,"parse_str_raw","","",14,[[["vec",3]],[["reference",4],["result",6]]]],[11,"ignore_str","","",14,[[],["result",6]]],[11,"decode_hex_escape","","",14,[[],["result",6]]],[11,"set_failed","","",14,[[]]],[11,"next","","",15,[[],[["result",6],["option",4]]]],[11,"peek","","",15,[[],[["result",6],["option",4]]]],[11,"discard","","",15,[[]]],[11,"position","","",15,[[],["position",3]]],[11,"peek_position","","",15,[[],["position",3]]],[11,"byte_offset","","",15,[[]]],[11,"parse_str","","",15,[[["vec",3]],[["reference",4],["result",6]]]],[11,"parse_str_raw","","",15,[[["vec",3]],[["result",6],["reference",4]]]],[11,"ignore_str","","",15,[[],["result",6]]],[11,"decode_hex_escape","","",15,[[],["result",6]]],[11,"set_failed","","",15,[[]]],[11,"next","","",16,[[],[["result",6],["option",4]]]],[11,"peek","","",16,[[],[["result",6],["option",4]]]],[11,"discard","","",16,[[]]],[11,"position","","",16,[[],["position",3]]],[11,"peek_position","","",16,[[],["position",3]]],[11,"byte_offset","","",16,[[]]],[11,"parse_str","","",16,[[["vec",3]],[["reference",4],["result",6]]]],[11,"parse_str_raw","","",16,[[["vec",3]],[["result",6],["reference",4]]]],[11,"ignore_str","","",16,[[],["result",6]]],[11,"decode_hex_escape","","",16,[[],["result",6]]],[11,"set_failed","","",16,[[]]],[11,"from","serde_json::value","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"from","","Convert 32-bit floating point number to `Value`",0,[[]]],[11,"from","","Convert 64-bit floating point number to `Value`",0,[[]]],[11,"from","","Convert boolean to `Value`",0,[[]]],[11,"from","","Convert `String` to `Value`",0,[[["string",3]]]],[11,"from","","Convert string slice to `Value`",0,[[]]],[11,"from","","Convert copy-on-write string to `Value`",0,[[["cow",4]]]],[11,"from","","Convert `Number` to `Value`",0,[[["number",3]]]],[11,"from","","Convert map (with string keys) to `Value`",0,[[["value",4],["map",3],["string",3]]]],[11,"from","","Convert a `Vec` to `Value`",0,[[["vec",3]]]],[11,"from","","Convert a slice to `Value`",0,[[]]],[11,"from","","Convert `()` to `Value`",0,[[]]],[11,"from","serde_json","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"next_back","serde_json::map","",17,[[],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"next_back","","",20,[[],["option",4]]],[11,"next_back","","",21,[[],["option",4]]],[11,"next_back","","",22,[[],["option",4]]],[11,"len","","",17,[[]]],[11,"len","","",18,[[]]],[11,"len","","",19,[[]]],[11,"len","","",20,[[]]],[11,"len","","",21,[[]]],[11,"len","","",22,[[]]],[11,"extend","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"next","serde_json::de","",2,[[],[["option",4],["result",6]]]],[11,"next","serde_json::map","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"clone","serde_json::error","",3,[[],["category",4]]],[11,"clone","serde_json::map","",6,[[]]],[11,"clone","serde_json::ser","",23,[[],["compactformatter",3]]],[11,"clone","","",12,[[],["prettyformatter",3]]],[11,"clone","serde_json::value","",0,[[],["value",4]]],[11,"clone","serde_json","",13,[[],["number",3]]],[11,"default","serde_json::map","",6,[[]]],[11,"default","serde_json::ser","",12,[[]]],[11,"default","serde_json::value","",0,[[],["value",4]]],[11,"eq","serde_json::error","",3,[[["category",4]]]],[11,"eq","serde_json::map","",6,[[]]],[11,"eq","serde_json::value","",0,[[["value",4]]]],[11,"ne","","",0,[[["value",4]]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[["string",3]]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","","",0,[[]]],[11,"eq","serde_json","",13,[[["number",3]]]],[11,"ne","","",13,[[["number",3]]]],[11,"fmt","serde_json::error","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::map","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","serde_json::ser","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","",0,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",13,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::error","",4,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","Display a JSON value as a string.",0,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",13,[[["formatter",3]],["result",6]]],[11,"index","serde_json::map","",6,[[],["value",4]]],[11,"index","serde_json::value","Index into a `serde_json::Value` using the syntax…",0,[[],["value",4]]],[11,"index_mut","serde_json::map","",6,[[],["value",4]]],[11,"index_mut","serde_json::value","Write into a `serde_json::Value` using the syntax…",0,[[],["value",4]]],[11,"from_iter","serde_json::map","",6,[[]]],[11,"from_iter","serde_json::value","Convert an iteratable type to a `Value`",0,[[["intoiterator",8]]]],[11,"from_iter","","Convert an iteratable type to a `Value`",0,[[["intoiterator",8]]]],[11,"from_str","serde_json","",13,[[],["result",4]]],[11,"from_str","serde_json::value","",0,[[],[["value",4],["result",4],["error",3]]]],[11,"source","serde_json::error","",4,[[],[["error",8],["option",4]]]],[11,"deserialize_any","serde_json::value","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_i8","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_i16","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_i32","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_i64","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_u8","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_u16","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_u32","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_u64","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_f32","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_f64","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_i128","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_u128","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_option","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_enum","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_newtype_struct","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_bool","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_char","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_str","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_string","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_bytes","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_byte_buf","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_unit","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_unit_struct","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_seq","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_tuple","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_tuple_struct","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_map","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_struct","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_identifier","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_ignored_any","","",0,[[],[["result",4],["error",3]]]],[11,"deserialize_any","serde_json","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i8","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i16","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i32","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i64","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u8","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u16","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u32","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u64","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_f32","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_f64","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_i128","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_u128","","",13,[[],[["result",4],["error",3]]]],[11,"deserialize_bool","","",13,[[],["result",4]]],[11,"deserialize_char","","",13,[[],["result",4]]],[11,"deserialize_str","","",13,[[],["result",4]]],[11,"deserialize_string","","",13,[[],["result",4]]],[11,"deserialize_bytes","","",13,[[],["result",4]]],[11,"deserialize_byte_buf","","",13,[[],["result",4]]],[11,"deserialize_option","","",13,[[],["result",4]]],[11,"deserialize_unit","","",13,[[],["result",4]]],[11,"deserialize_unit_struct","","",13,[[],["result",4]]],[11,"deserialize_newtype_struct","","",13,[[],["result",4]]],[11,"deserialize_seq","","",13,[[],["result",4]]],[11,"deserialize_tuple","","",13,[[],["result",4]]],[11,"deserialize_tuple_struct","","",13,[[],["result",4]]],[11,"deserialize_map","","",13,[[],["result",4]]],[11,"deserialize_struct","","",13,[[],["result",4]]],[11,"deserialize_enum","","",13,[[],["result",4]]],[11,"deserialize_identifier","","",13,[[],["result",4]]],[11,"deserialize_ignored_any","","",13,[[],["result",4]]],[11,"into_deserializer","serde_json::value","",0,[[]]],[11,"custom","serde_json::error","",4,[[["display",8]],["error",3]]],[11,"serialize","serde_json::map","",6,[[],["result",4]]],[11,"serialize","serde_json::value","",0,[[],["result",4]]],[11,"serialize","serde_json","",13,[[],["result",4]]],[11,"serialize_bool","serde_json::value","",24,[[],[["result",6],["value",4]]]],[11,"serialize_i8","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_i16","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_i32","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_i64","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_u8","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_u16","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_u32","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_u64","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_f32","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_f64","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_char","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_str","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_bytes","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_unit","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_unit_struct","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_unit_variant","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_newtype_struct","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_newtype_variant","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_none","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_some","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_seq","","",24,[[["option",4]],["result",6]]],[11,"serialize_tuple","","",24,[[],["result",6]]],[11,"serialize_tuple_struct","","",24,[[],["result",6]]],[11,"serialize_tuple_variant","","",24,[[],["result",6]]],[11,"serialize_map","","",24,[[["option",4]],["result",6]]],[11,"serialize_struct","","",24,[[],["result",6]]],[11,"serialize_struct_variant","","",24,[[],["result",6]]],[11,"collect_str","","",24,[[],[["result",6],["value",4]]]],[11,"deserialize","serde_json::map","",6,[[],["result",4]]],[11,"deserialize","serde_json::value","",0,[[],[["result",4],["value",4]]]],[11,"deserialize","serde_json","",13,[[],[["number",3],["result",4]]]],[11,"custom","serde_json::error","",4,[[["display",8]],["error",3]]],[11,"invalid_type","","",4,[[["unexpected",4],["expected",8]]]]],"p":[[4,"Value"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"Category"],[3,"Error"],[4,"Entry"],[3,"Map"],[3,"VacantEntry"],[3,"OccupiedEntry"],[4,"CharEscape"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"],[3,"Serializer"]]},\
"syn":{"doc":"![github] ![crates-io] ![docs-rs]","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tokens","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"Arm","","One arm of a `match` expression: `0...10 => { return true;…",null,null],[12,"attrs","","",10,null],[12,"pat","","",10,null],[12,"guard","","",10,null],[12,"fat_arrow_token","","",10,null],[12,"body","","",10,null],[12,"comma","","",10,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",11,null],[12,"member","","Name or index of the field.",11,null],[12,"colon_token","","The colon in `Struct { x: x }`. If written in shorthand…",11,null],[12,"expr","","Value of the field.",11,null],[3,"Label","","A lifetime labeling a `for`, `while`, or `loop`.",null,null],[12,"name","","",12,null],[12,"colon_token","","",12,null],[3,"MethodTurbofish","","The `::<>` explicit type parameters passed to a method…",null,null],[12,"colon2_token","","",13,null],[12,"lt_token","","",13,null],[12,"args","","",13,null],[12,"gt_token","","",13,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[12,"attrs","","",14,null],[12,"bracket_token","","",14,null],[12,"elems","","",14,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[12,"attrs","","",15,null],[12,"left","","",15,null],[12,"eq_token","","",15,null],[12,"right","","",15,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[12,"attrs","","",16,null],[12,"left","","",16,null],[12,"op","","",16,null],[12,"right","","",16,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[12,"attrs","","",17,null],[12,"async_token","","",17,null],[12,"capture","","",17,null],[12,"block","","",17,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[12,"attrs","","",18,null],[12,"base","","",18,null],[12,"dot_token","","",18,null],[12,"await_token","","",18,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",19,null],[12,"left","","",19,null],[12,"op","","",19,null],[12,"right","","",19,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[12,"attrs","","",20,null],[12,"label","","",20,null],[12,"block","","",20,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[12,"attrs","","",21,null],[12,"box_token","","",21,null],[12,"expr","","",21,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[12,"attrs","","",22,null],[12,"break_token","","",22,null],[12,"label","","",22,null],[12,"expr","","",22,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",23,null],[12,"func","","",23,null],[12,"paren_token","","",23,null],[12,"args","","",23,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",24,null],[12,"expr","","",24,null],[12,"as_token","","",24,null],[12,"ty","","",24,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[12,"attrs","","",25,null],[12,"asyncness","","",25,null],[12,"movability","","",25,null],[12,"capture","","",25,null],[12,"or1_token","","",25,null],[12,"inputs","","",25,null],[12,"or2_token","","",25,null],[12,"output","","",25,null],[12,"body","","",25,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[12,"attrs","","",26,null],[12,"continue_token","","",26,null],[12,"label","","",26,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",27,null],[12,"base","","",27,null],[12,"dot_token","","",27,null],[12,"member","","",27,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[12,"attrs","","",28,null],[12,"label","","",28,null],[12,"for_token","","",28,null],[12,"pat","","",28,null],[12,"in_token","","",28,null],[12,"expr","","",28,null],[12,"body","","",28,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",29,null],[12,"group_token","","",29,null],[12,"expr","","",29,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[12,"attrs","","",30,null],[12,"if_token","","",30,null],[12,"cond","","",30,null],[12,"then_branch","","",30,null],[12,"else_branch","","",30,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",31,null],[12,"expr","","",31,null],[12,"bracket_token","","",31,null],[12,"index","","",31,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[12,"attrs","","",32,null],[12,"let_token","","",32,null],[12,"pat","","",32,null],[12,"eq_token","","",32,null],[12,"expr","","",32,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",null,null],[12,"attrs","","",33,null],[12,"lit","","",33,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[12,"attrs","","",34,null],[12,"label","","",34,null],[12,"loop_token","","",34,null],[12,"body","","",34,null],[3,"ExprMacro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",null,null],[12,"attrs","","",35,null],[12,"mac","","",35,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[12,"attrs","","",36,null],[12,"match_token","","",36,null],[12,"expr","","",36,null],[12,"brace_token","","",36,null],[12,"arms","","",36,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[12,"attrs","","",37,null],[12,"receiver","","",37,null],[12,"dot_token","","",37,null],[12,"method","","",37,null],[12,"turbofish","","",37,null],[12,"paren_token","","",37,null],[12,"args","","",37,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",38,null],[12,"paren_token","","",38,null],[12,"expr","","",38,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",39,null],[12,"qself","","",39,null],[12,"path","","",39,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[12,"attrs","","",40,null],[12,"from","","",40,null],[12,"limits","","",40,null],[12,"to","","",40,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[12,"attrs","","",41,null],[12,"and_token","","",41,null],[12,"raw","","",41,null],[12,"mutability","","",41,null],[12,"expr","","",41,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[12,"attrs","","",42,null],[12,"bracket_token","","",42,null],[12,"expr","","",42,null],[12,"semi_token","","",42,null],[12,"len","","",42,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[12,"attrs","","",43,null],[12,"return_token","","",43,null],[12,"expr","","",43,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[12,"attrs","","",44,null],[12,"path","","",44,null],[12,"brace_token","","",44,null],[12,"fields","","",44,null],[12,"dot2_token","","",44,null],[12,"rest","","",44,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[12,"attrs","","",45,null],[12,"expr","","",45,null],[12,"question_token","","",45,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[12,"attrs","","",46,null],[12,"try_token","","",46,null],[12,"block","","",46,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[12,"attrs","","",47,null],[12,"paren_token","","",47,null],[12,"elems","","",47,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[12,"attrs","","",48,null],[12,"expr","","",48,null],[12,"colon_token","","",48,null],[12,"ty","","",48,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",49,null],[12,"op","","",49,null],[12,"expr","","",49,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[12,"attrs","","",50,null],[12,"unsafe_token","","",50,null],[12,"block","","",50,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[12,"attrs","","",51,null],[12,"label","","",51,null],[12,"while_token","","",51,null],[12,"cond","","",51,null],[12,"body","","",51,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[12,"attrs","","",52,null],[12,"yield_token","","",52,null],[12,"expr","","",52,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",53,null],[12,"span","","",53,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<\'a, \'b, \'c>`.",null,null],[12,"for_token","","",54,null],[12,"lt_token","","",54,null],[12,"lifetimes","","",54,null],[12,"gt_token","","",54,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",55,null],[12,"const_token","","",55,null],[12,"ident","","",55,null],[12,"colon_token","","",55,null],[12,"ty","","",55,null],[12,"eq_token","","",55,null],[12,"default","","",55,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",56,null],[12,"params","","",56,null],[12,"gt_token","","",56,null],[12,"where_clause","","",56,null],[3,"LifetimeDef","","A lifetime definition: `\'a: \'b + \'c + \'d`.",null,null],[12,"attrs","","",57,null],[12,"lifetime","","",57,null],[12,"colon_token","","",57,null],[12,"bounds","","",57,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",58,null],[12,"eq_token","","",58,null],[12,"rhs_ty","","",58,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",null,null],[12,"lifetime","","",59,null],[12,"colon_token","","",59,null],[12,"bounds","","",59,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",60,null],[12,"bounded_ty","","The type being bounded",60,null],[12,"colon_token","","",60,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+\'static`)",60,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",61,null],[12,"modifier","","",61,null],[12,"lifetimes","","The `for<\'a>` in `for<\'a> Foo<&\'a T>`",61,null],[12,"path","","The `Foo<&\'a T>` in `for<\'a> Foo<&\'a T>`",61,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",62,null],[12,"ident","","",62,null],[12,"colon_token","","",62,null],[12,"bounds","","",62,null],[12,"eq_token","","",62,null],[12,"default","","",62,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",63,null],[12,"predicates","","",63,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"ForeignItemFn","","A foreign function in an `extern` block.",null,null],[12,"attrs","","",64,null],[12,"vis","","",64,null],[12,"sig","","",64,null],[12,"semi_token","","",64,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",65,null],[12,"mac","","",65,null],[12,"semi_token","","",65,null],[3,"ForeignItemStatic","","A foreign static item in an `extern` block: `static ext:…",null,null],[12,"attrs","","",66,null],[12,"vis","","",66,null],[12,"static_token","","",66,null],[12,"mutability","","",66,null],[12,"ident","","",66,null],[12,"colon_token","","",66,null],[12,"ty","","",66,null],[12,"semi_token","","",66,null],[3,"ForeignItemType","","A foreign type in an `extern` block: `type void`.",null,null],[12,"attrs","","",67,null],[12,"vis","","",67,null],[12,"type_token","","",67,null],[12,"ident","","",67,null],[12,"semi_token","","",67,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",68,null],[12,"vis","","",68,null],[12,"defaultness","","",68,null],[12,"const_token","","",68,null],[12,"ident","","",68,null],[12,"colon_token","","",68,null],[12,"ty","","",68,null],[12,"eq_token","","",68,null],[12,"expr","","",68,null],[12,"semi_token","","",68,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",69,null],[12,"mac","","",69,null],[12,"semi_token","","",69,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",70,null],[12,"vis","","",70,null],[12,"defaultness","","",70,null],[12,"sig","","",70,null],[12,"block","","",70,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",71,null],[12,"vis","","",71,null],[12,"defaultness","","",71,null],[12,"type_token","","",71,null],[12,"ident","","",71,null],[12,"generics","","",71,null],[12,"eq_token","","",71,null],[12,"ty","","",71,null],[12,"semi_token","","",71,null],[3,"ItemConst","","A constant item: `const MAX: u16 = 65535`.",null,null],[12,"attrs","","",72,null],[12,"vis","","",72,null],[12,"const_token","","",72,null],[12,"ident","","",72,null],[12,"colon_token","","",72,null],[12,"ty","","",72,null],[12,"eq_token","","",72,null],[12,"expr","","",72,null],[12,"semi_token","","",72,null],[3,"ItemEnum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",null,null],[12,"attrs","","",73,null],[12,"vis","","",73,null],[12,"enum_token","","",73,null],[12,"ident","","",73,null],[12,"generics","","",73,null],[12,"brace_token","","",73,null],[12,"variants","","",73,null],[3,"ItemExternCrate","","An `extern crate` item: `extern crate serde`.",null,null],[12,"attrs","","",74,null],[12,"vis","","",74,null],[12,"extern_token","","",74,null],[12,"crate_token","","",74,null],[12,"ident","","",74,null],[12,"rename","","",74,null],[12,"semi_token","","",74,null],[3,"ItemFn","","A free-standing function: `fn process(n: usize) ->…",null,null],[12,"attrs","","",75,null],[12,"vis","","",75,null],[12,"sig","","",75,null],[12,"block","","",75,null],[3,"ItemForeignMod","","A block of foreign items: `extern \\\"C\\\" { ... }`.",null,null],[12,"attrs","","",76,null],[12,"abi","","",76,null],[12,"brace_token","","",76,null],[12,"items","","",76,null],[3,"ItemImpl","","An impl block providing trait or associated items:…",null,null],[12,"attrs","","",77,null],[12,"defaultness","","",77,null],[12,"unsafety","","",77,null],[12,"impl_token","","",77,null],[12,"generics","","",77,null],[12,"trait_","","Trait this impl implements.",77,null],[12,"self_ty","","The Self type of the impl.",77,null],[12,"brace_token","","",77,null],[12,"items","","",77,null],[3,"ItemMacro","","A macro invocation, which includes `macro_rules!`…",null,null],[12,"attrs","","",78,null],[12,"ident","","The `example` in `macro_rules! example { ... }`.",78,null],[12,"mac","","",78,null],[12,"semi_token","","",78,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the `macro`…",null,null],[12,"attrs","","",79,null],[12,"vis","","",79,null],[12,"macro_token","","",79,null],[12,"ident","","",79,null],[12,"rules","","",79,null],[3,"ItemMod","","A module or module declaration: `mod m` or `mod m { ... }`.",null,null],[12,"attrs","","",80,null],[12,"vis","","",80,null],[12,"mod_token","","",80,null],[12,"ident","","",80,null],[12,"content","","",80,null],[12,"semi","","",80,null],[3,"ItemStatic","","A static item: `static BIKE: Shed = Shed(42)`.",null,null],[12,"attrs","","",81,null],[12,"vis","","",81,null],[12,"static_token","","",81,null],[12,"mutability","","",81,null],[12,"ident","","",81,null],[12,"colon_token","","",81,null],[12,"ty","","",81,null],[12,"eq_token","","",81,null],[12,"expr","","",81,null],[12,"semi_token","","",81,null],[3,"ItemStruct","","A struct definition: `struct Foo<A> { x: A }`.",null,null],[12,"attrs","","",82,null],[12,"vis","","",82,null],[12,"struct_token","","",82,null],[12,"ident","","",82,null],[12,"generics","","",82,null],[12,"fields","","",82,null],[12,"semi_token","","",82,null],[3,"ItemTrait","","A trait definition: `pub trait Iterator { ... }`.",null,null],[12,"attrs","","",83,null],[12,"vis","","",83,null],[12,"unsafety","","",83,null],[12,"auto_token","","",83,null],[12,"trait_token","","",83,null],[12,"ident","","",83,null],[12,"generics","","",83,null],[12,"colon_token","","",83,null],[12,"supertraits","","",83,null],[12,"brace_token","","",83,null],[12,"items","","",83,null],[3,"ItemTraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",null,null],[12,"attrs","","",84,null],[12,"vis","","",84,null],[12,"trait_token","","",84,null],[12,"ident","","",84,null],[12,"generics","","",84,null],[12,"eq_token","","",84,null],[12,"bounds","","",84,null],[12,"semi_token","","",84,null],[3,"ItemType","","A type alias: `type Result<T> = std::result::Result<T,…",null,null],[12,"attrs","","",85,null],[12,"vis","","",85,null],[12,"type_token","","",85,null],[12,"ident","","",85,null],[12,"generics","","",85,null],[12,"eq_token","","",85,null],[12,"ty","","",85,null],[12,"semi_token","","",85,null],[3,"ItemUnion","","A union definition: `union Foo<A, B> { x: A, y: B }`.",null,null],[12,"attrs","","",86,null],[12,"vis","","",86,null],[12,"union_token","","",86,null],[12,"ident","","",86,null],[12,"generics","","",86,null],[12,"fields","","",86,null],[3,"ItemUse","","A use declaration: `use std::collections::HashMap`.",null,null],[12,"attrs","","",87,null],[12,"vis","","",87,null],[12,"use_token","","",87,null],[12,"leading_colon","","",87,null],[12,"tree","","",87,null],[12,"semi_token","","",87,null],[3,"Receiver","","The `self` argument of an associated method, whether taken…",null,null],[12,"attrs","","",88,null],[12,"reference","","",88,null],[12,"mutability","","",88,null],[12,"self_token","","",88,null],[3,"Signature","","A function signature in a trait or implementation: `unsafe…",null,null],[12,"constness","","",89,null],[12,"asyncness","","",89,null],[12,"unsafety","","",89,null],[12,"abi","","",89,null],[12,"fn_token","","",89,null],[12,"ident","","",89,null],[12,"generics","","",89,null],[12,"paren_token","","",89,null],[12,"inputs","","",89,null],[12,"variadic","","",89,null],[12,"output","","",89,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",90,null],[12,"const_token","","",90,null],[12,"ident","","",90,null],[12,"colon_token","","",90,null],[12,"ty","","",90,null],[12,"default","","",90,null],[12,"semi_token","","",90,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",91,null],[12,"mac","","",91,null],[12,"semi_token","","",91,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",92,null],[12,"sig","","",92,null],[12,"default","","",92,null],[12,"semi_token","","",92,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",93,null],[12,"type_token","","",93,null],[12,"ident","","",93,null],[12,"generics","","",93,null],[12,"colon_token","","",93,null],[12,"bounds","","",93,null],[12,"default","","",93,null],[12,"semi_token","","",93,null],[3,"UseGlob","","A glob import in a `use` item: `*`.",null,null],[12,"star_token","","",94,null],[3,"UseGroup","","A braced group of imports in a `use` item: `{A, B, C}`.",null,null],[12,"brace_token","","",95,null],[12,"items","","",95,null],[3,"UseName","","An identifier imported by a `use` item: `HashMap`.",null,null],[12,"ident","","",96,null],[3,"UsePath","","A path prefix of imports in a `use` item: `std::...`.",null,null],[12,"ident","","",97,null],[12,"colon2_token","","",97,null],[12,"tree","","",97,null],[3,"UseRename","","An renamed identifier imported by a `use` item: `HashMap…",null,null],[12,"ident","","",98,null],[12,"as_token","","",98,null],[12,"rename","","",98,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",99,null],[12,"attrs","","",99,null],[12,"items","","",99,null],[3,"Lifetime","","A Rust lifetime: `\'a`.",null,null],[12,"apostrophe","","",100,null],[12,"ident","","",100,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",101,null],[12,"span","","",101,null],[3,"LitByte","","A byte literal: `b\'f\'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\\\"foo\\\"`.",null,null],[3,"LitChar","","A character literal: `\'a\'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\\\"foo\\\"`.",null,null],[3,"Macro","","A macro invocation: `println!(\\\"{}\\\", mac)`.",null,null],[12,"path","","",102,null],[12,"bang_token","","",102,null],[12,"delimiter","","",102,null],[12,"tokens","","",102,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",103,null],[12,"brace_token","","",103,null],[12,"variants","","",103,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",104,null],[12,"fields","","",104,null],[12,"semi_token","","",104,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",105,null],[12,"fields","","",105,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",106,null],[12,"vis","","Visibility of the struct or enum.",106,null],[12,"ident","","Name of the struct or enum.",106,null],[12,"generics","","Generics required to complete the definition.",106,null],[12,"data","","Data within the struct or enum.",106,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",107,null],[12,"stmts","","Statements in a block",107,null],[3,"Local","","A local `let` binding: `let x: u64 = s.parse()?`.",null,null],[12,"attrs","","",108,null],[12,"let_token","","",108,null],[12,"pat","","",108,null],[12,"init","","",108,null],[12,"semi_token","","",108,null],[3,"Abi","","The binary interface of a function: `extern \\\"C\\\"`.",null,null],[12,"extern_token","","",109,null],[12,"name","","",109,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",110,null],[12,"name","","",110,null],[12,"ty","","",110,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",111,null],[12,"elem","","",111,null],[12,"semi_token","","",111,null],[12,"len","","",111,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",112,null],[12,"unsafety","","",112,null],[12,"abi","","",112,null],[12,"fn_token","","",112,null],[12,"paren_token","","",112,null],[12,"inputs","","",112,null],[12,"variadic","","",112,null],[12,"output","","",112,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",113,null],[12,"elem","","",113,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",114,null],[12,"bounds","","",114,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",115,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",116,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",117,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",118,null],[12,"elem","","",118,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",119,null],[12,"path","","",119,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",120,null],[12,"const_token","","",120,null],[12,"mutability","","",120,null],[12,"elem","","",120,null],[3,"TypeReference","","A reference type: `&\'a T` or `&\'a mut T`.",null,null],[12,"and_token","","",121,null],[12,"lifetime","","",121,null],[12,"mutability","","",121,null],[12,"elem","","",121,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",122,null],[12,"elem","","",122,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",123,null],[12,"bounds","","",123,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",124,null],[12,"elems","","",124,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",125,null],[12,"dots","","",125,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",126,null],[12,"member","","",126,null],[12,"colon_token","","",126,null],[12,"pat","","",126,null],[3,"PatBox","","A box pattern: `box v`.",null,null],[12,"attrs","","",127,null],[12,"box_token","","",127,null],[12,"pat","","",127,null],[3,"PatIdent","","A pattern that binds a new variable: `ref mut binding @…",null,null],[12,"attrs","","",128,null],[12,"by_ref","","",128,null],[12,"mutability","","",128,null],[12,"ident","","",128,null],[12,"subpat","","",128,null],[3,"PatLit","","A literal pattern: `0`.",null,null],[12,"attrs","","",129,null],[12,"expr","","",129,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",130,null],[12,"mac","","",130,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",131,null],[12,"leading_vert","","",131,null],[12,"cases","","",131,null],[3,"PatPath","","A path pattern like `Color::Red`, optionally qualified…",null,null],[12,"attrs","","",132,null],[12,"qself","","",132,null],[12,"path","","",132,null],[3,"PatRange","","A range pattern: `1..=2`.",null,null],[12,"attrs","","",133,null],[12,"lo","","",133,null],[12,"limits","","",133,null],[12,"hi","","",133,null],[3,"PatReference","","A reference pattern: `&mut var`.",null,null],[12,"attrs","","",134,null],[12,"and_token","","",134,null],[12,"mutability","","",134,null],[12,"pat","","",134,null],[3,"PatRest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",null,null],[12,"attrs","","",135,null],[12,"dot2_token","","",135,null],[3,"PatSlice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",null,null],[12,"attrs","","",136,null],[12,"bracket_token","","",136,null],[12,"elems","","",136,null],[3,"PatStruct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",null,null],[12,"attrs","","",137,null],[12,"path","","",137,null],[12,"brace_token","","",137,null],[12,"fields","","",137,null],[12,"dot2_token","","",137,null],[3,"PatTuple","","A tuple pattern: `(a, b)`.",null,null],[12,"attrs","","",138,null],[12,"paren_token","","",138,null],[12,"elems","","",138,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",null,null],[12,"attrs","","",139,null],[12,"path","","",139,null],[12,"pat","","",139,null],[3,"PatType","","A type ascription pattern: `foo: f64`.",null,null],[12,"attrs","","",140,null],[12,"pat","","",140,null],[12,"colon_token","","",140,null],[12,"ty","","",140,null],[3,"PatWild","","A pattern that matches any value: `_`.",null,null],[12,"attrs","","",141,null],[12,"underscore_token","","",141,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",142,null],[12,"lt_token","","",142,null],[12,"args","","",142,null],[12,"gt_token","","",142,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",143,null],[12,"eq_token","","",143,null],[12,"ty","","",143,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",144,null],[12,"colon_token","","",144,null],[12,"bounds","","",144,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",145,null],[12,"inputs","","`(A, B)`",145,null],[12,"output","","`C`",145,null],[3,"Path","","A path at which a named item is exported (e.g.…",null,null],[12,"leading_colon","","",146,null],[12,"segments","","",146,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",147,null],[12,"arguments","","",147,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",148,null],[12,"ty","","",148,null],[12,"position","","",148,null],[12,"as_token","","",148,null],[12,"gt_token","","",148,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",149,null],[13,"Inner","","",149,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",150,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",150,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",150,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",151,null],[13,"Lit","","A Rust literal, like the `\\\"new_name\\\"` in…",151,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",152,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",152,null],[13,"Unit","","Unit struct or unit variant such as `None`.",152,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",153,null],[13,"Crate","","A crate-level visibility: `crate`.",153,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",153,null],[13,"Inherited","","An inherited visibility, which usually means private.",153,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like `T`.",null,null],[13,"Type","","A type argument.",154,null],[13,"Const","","A const expression. Must be inside of a block.",154,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",155,null],[13,"Closed","","Inclusive at the beginning and end.",155,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",156,null],[13,"Assign","","An assignment expression: `a = compute()`.",156,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",156,null],[13,"Async","","An async block: `async { ... }`.",156,null],[13,"Await","","An await expression: `fut.await`.",156,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",156,null],[13,"Block","","A blocked scope: `{ ... }`.",156,null],[13,"Box","","A box expression: `box f`.",156,null],[13,"Break","","A `break`, with an optional label to break and an optional…",156,null],[13,"Call","","A function call expression: `invoke(a, b)`.",156,null],[13,"Cast","","A cast expression: `foo as f64`.",156,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",156,null],[13,"Continue","","A `continue`, with an optional label.",156,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",156,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",156,null],[13,"Group","","An expression contained within invisible delimiters.",156,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",156,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",156,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",156,null],[13,"Lit","","A literal in place of an expression: `1`, `\\\"foo\\\"`.",156,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",156,null],[13,"Macro","","A macro invocation expression: `format!(\\\"{}\\\", q)`.",156,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",156,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",156,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",156,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",156,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",156,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",156,null],[13,"Repeat","","An array literal constructed from one repeated element:…",156,null],[13,"Return","","A `return`, with an optional value to be returned.",156,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",156,null],[13,"Try","","A try-expression: `expr?`.",156,null],[13,"TryBlock","","A try block: `try { ... }`.",156,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",156,null],[13,"Type","","A type ascription expression: `foo: f64`.",156,null],[13,"Unary","","A unary operation: `!x`, `*x`.",156,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",156,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",156,null],[13,"While","","A while loop: `while expr { ... }`.",156,null],[13,"Yield","","A yield expression: `yield expr`.",156,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",157,null],[13,"Unnamed","","An unnamed field like `self.0`.",157,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",158,null],[13,"Lifetime","","A lifetime definition: `\'a: \'b + \'c + \'d`.",158,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",158,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",159,null],[13,"Maybe","","",159,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",160,null],[13,"Lifetime","","",160,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<\'c> Foo<\'c>:…",161,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `\'a: \'b + \'c`.",161,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",161,null],[4,"FnArg","","An argument in a function signature: the `n: usize` in `fn…",null,null],[13,"Receiver","","The `self` argument of an associated method, whether taken…",162,null],[13,"Typed","","A function argument accepted by pattern and type.",162,null],[4,"ForeignItem","","An item within an `extern` block.",null,null],[13,"Fn","","A foreign function in an `extern` block.",163,null],[13,"Static","","A foreign static item in an `extern` block: `static ext:…",163,null],[13,"Type","","A foreign type in an `extern` block: `type void`.",163,null],[13,"Macro","","A macro invocation within an extern block.",163,null],[13,"Verbatim","","Tokens in an `extern` block not interpreted by Syn.",163,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",164,null],[13,"Method","","A method within an impl block.",164,null],[13,"Type","","An associated type within an impl block.",164,null],[13,"Macro","","A macro invocation within an impl block.",164,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",164,null],[4,"Item","","Things that can appear directly inside of a module or scope.",null,null],[13,"Const","","A constant item: `const MAX: u16 = 65535`.",165,null],[13,"Enum","","An enum definition: `enum Foo<A, B> { A(A), B(B) }`.",165,null],[13,"ExternCrate","","An `extern crate` item: `extern crate serde`.",165,null],[13,"Fn","","A free-standing function: `fn process(n: usize) ->…",165,null],[13,"ForeignMod","","A block of foreign items: `extern \\\"C\\\" { ... }`.",165,null],[13,"Impl","","An impl block providing trait or associated items:…",165,null],[13,"Macro","","A macro invocation, which includes `macro_rules!`…",165,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the `macro`…",165,null],[13,"Mod","","A module or module declaration: `mod m` or `mod m { ... }`.",165,null],[13,"Static","","A static item: `static BIKE: Shed = Shed(42)`.",165,null],[13,"Struct","","A struct definition: `struct Foo<A> { x: A }`.",165,null],[13,"Trait","","A trait definition: `pub trait Iterator { ... }`.",165,null],[13,"TraitAlias","","A trait alias: `pub trait SharableIterator = Iterator +…",165,null],[13,"Type","","A type alias: `type Result<T> = std::result::Result<T,…",165,null],[13,"Union","","A union definition: `union Foo<A, B> { x: A, y: B }`.",165,null],[13,"Use","","A use declaration: `use std::collections::HashMap`.",165,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",165,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",166,null],[13,"Method","","A trait method within the definition of a trait.",166,null],[13,"Type","","An associated type within the definition of a trait.",166,null],[13,"Macro","","A macro invocation within the definition of a trait.",166,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted by…",166,null],[4,"UseTree","","A suffix of an import tree in a `use` item: `Type as…",null,null],[13,"Path","","A path prefix of imports in a `use` item: `std::...`.",167,null],[13,"Name","","An identifier imported by a `use` item: `HashMap`.",167,null],[13,"Rename","","An renamed identifier imported by a `use` item: `HashMap…",167,null],[13,"Glob","","A glob import in a `use` item: `*`.",167,null],[13,"Group","","A braced group of imports in a `use` item: `{A, B, C}`.",167,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\\\"foo\\\"`.",168,null],[13,"ByteStr","","A byte string literal: `b\\\"foo\\\"`.",168,null],[13,"Byte","","A byte literal: `b\'f\'`.",168,null],[13,"Char","","A character literal: `\'a\'`.",168,null],[13,"Int","","An integer literal: `1` or `1u16`.",168,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",168,null],[13,"Bool","","A boolean literal: `true` or `false`.",168,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",168,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\\\"data\\\"`.",169,null],[13,"Raw","","A raw string like `r##\\\"data\\\"##`.",169,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",170,null],[13,"Brace","","",170,null],[13,"Bracket","","",170,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",171,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",171,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",171,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",172,null],[13,"Sub","","The `-` operator (subtraction)",172,null],[13,"Mul","","The `*` operator (multiplication)",172,null],[13,"Div","","The `/` operator (division)",172,null],[13,"Rem","","The `%` operator (modulus)",172,null],[13,"And","","The `&&` operator (logical and)",172,null],[13,"Or","","The `||` operator (logical or)",172,null],[13,"BitXor","","The `^` operator (bitwise xor)",172,null],[13,"BitAnd","","The `&` operator (bitwise and)",172,null],[13,"BitOr","","The `|` operator (bitwise or)",172,null],[13,"Shl","","The `<<` operator (shift left)",172,null],[13,"Shr","","The `>>` operator (shift right)",172,null],[13,"Eq","","The `==` operator (equality)",172,null],[13,"Lt","","The `<` operator (less than)",172,null],[13,"Le","","The `<=` operator (less than or equal to)",172,null],[13,"Ne","","The `!=` operator (not equal to)",172,null],[13,"Ge","","The `>=` operator (greater than or equal to)",172,null],[13,"Gt","","The `>` operator (greater than)",172,null],[13,"AddEq","","The `+=` operator",172,null],[13,"SubEq","","The `-=` operator",172,null],[13,"MulEq","","The `*=` operator",172,null],[13,"DivEq","","The `/=` operator",172,null],[13,"RemEq","","The `%=` operator",172,null],[13,"BitXorEq","","The `^=` operator",172,null],[13,"BitAndEq","","The `&=` operator",172,null],[13,"BitOrEq","","The `|=` operator",172,null],[13,"ShlEq","","The `<<=` operator",172,null],[13,"ShrEq","","The `>>=` operator",172,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",173,null],[13,"Not","","The `!` operator for logical inversion",173,null],[13,"Neg","","The `-` operator for negation",173,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",174,null],[13,"Item","","An item definition.",174,null],[13,"Expr","","Expr without trailing semicolon.",174,null],[13,"Semi","","Expression with trailing semicolon.",174,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",175,null],[13,"Type","","A particular type is returned.",175,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",176,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",176,null],[13,"Group","","A type contained within invisible delimiters.",176,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",176,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",176,null],[13,"Macro","","A macro in the type position.",176,null],[13,"Never","","The never type: `!`.",176,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",176,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",176,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",176,null],[13,"Reference","","A reference type: `&\'a T` or `&\'a mut T`.",176,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",176,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",176,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",176,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",176,null],[4,"Pat","","A pattern in a local binding, function signature, match…",null,null],[13,"Box","","A box pattern: `box v`.",177,null],[13,"Ident","","A pattern that binds a new variable: `ref mut binding @…",177,null],[13,"Lit","","A literal pattern: `0`.",177,null],[13,"Macro","","A macro in pattern position.",177,null],[13,"Or","","A pattern that matches any one of a set of cases.",177,null],[13,"Path","","A path pattern like `Color::Red`, optionally qualified…",177,null],[13,"Range","","A range pattern: `1..=2`.",177,null],[13,"Reference","","A reference pattern: `&mut var`.",177,null],[13,"Rest","","The dots in a tuple or slice pattern: `[0, 1, ..]`",177,null],[13,"Slice","","A dynamically sized slice pattern: `[a, b, ref i @ .., y,…",177,null],[13,"Struct","","A struct or struct variant pattern: `Variant { x, y, .. }`.",177,null],[13,"Tuple","","A tuple pattern: `(a, b)`.",177,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: `Variant(x, y,…",177,null],[13,"Type","","A type ascription pattern: `foo: f64`.",177,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",177,null],[13,"Wild","","A pattern that matches any value: `_`.",177,null],[4,"GenericArgument","","An individual generic argument, like `\'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",178,null],[13,"Type","","A type argument.",178,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",178,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",178,null],[13,"Const","","A const expression. Must be inside of a block.",178,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",179,null],[13,"AngleBracketed","","The `<\'a, T>` in `std::slice::iter<\'a, T>`.",179,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",179,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[],[["result",6],["parse",8]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[],[["result",6],["file",3]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",180,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",181,null],[3,"As","","`as`",null,null],[12,"span","","",182,null],[3,"Async","","`async`",null,null],[12,"span","","",183,null],[3,"Auto","","`auto`",null,null],[12,"span","","",184,null],[3,"Await","","`await`",null,null],[12,"span","","",185,null],[3,"Become","","`become`",null,null],[12,"span","","",186,null],[3,"Box","","`box`",null,null],[12,"span","","",187,null],[3,"Break","","`break`",null,null],[12,"span","","",188,null],[3,"Const","","`const`",null,null],[12,"span","","",189,null],[3,"Continue","","`continue`",null,null],[12,"span","","",190,null],[3,"Crate","","`crate`",null,null],[12,"span","","",191,null],[3,"Default","","`default`",null,null],[12,"span","","",192,null],[3,"Do","","`do`",null,null],[12,"span","","",193,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",194,null],[3,"Else","","`else`",null,null],[12,"span","","",195,null],[3,"Enum","","`enum`",null,null],[12,"span","","",196,null],[3,"Extern","","`extern`",null,null],[12,"span","","",197,null],[3,"Final","","`final`",null,null],[12,"span","","",198,null],[3,"Fn","","`fn`",null,null],[12,"span","","",199,null],[3,"For","","`for`",null,null],[12,"span","","",200,null],[3,"If","","`if`",null,null],[12,"span","","",201,null],[3,"Impl","","`impl`",null,null],[12,"span","","",202,null],[3,"In","","`in`",null,null],[12,"span","","",203,null],[3,"Let","","`let`",null,null],[12,"span","","",204,null],[3,"Loop","","`loop`",null,null],[12,"span","","",205,null],[3,"Macro","","`macro`",null,null],[12,"span","","",206,null],[3,"Match","","`match`",null,null],[12,"span","","",207,null],[3,"Mod","","`mod`",null,null],[12,"span","","",208,null],[3,"Move","","`move`",null,null],[12,"span","","",209,null],[3,"Mut","","`mut`",null,null],[12,"span","","",210,null],[3,"Override","","`override`",null,null],[12,"span","","",211,null],[3,"Priv","","`priv`",null,null],[12,"span","","",212,null],[3,"Pub","","`pub`",null,null],[12,"span","","",213,null],[3,"Ref","","`ref`",null,null],[12,"span","","",214,null],[3,"Return","","`return`",null,null],[12,"span","","",215,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",216,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",217,null],[3,"Static","","`static`",null,null],[12,"span","","",218,null],[3,"Struct","","`struct`",null,null],[12,"span","","",219,null],[3,"Super","","`super`",null,null],[12,"span","","",220,null],[3,"Trait","","`trait`",null,null],[12,"span","","",221,null],[3,"Try","","`try`",null,null],[12,"span","","",222,null],[3,"Type","","`type`",null,null],[12,"span","","",223,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",224,null],[3,"Union","","`union`",null,null],[12,"span","","",225,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",226,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",227,null],[3,"Use","","`use`",null,null],[12,"span","","",228,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",229,null],[3,"Where","","`where`",null,null],[12,"span","","",230,null],[3,"While","","`while`",null,null],[12,"span","","",231,null],[3,"Yield","","`yield`",null,null],[12,"span","","",232,null],[3,"Add","","`+`",null,null],[12,"spans","","",233,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",234,null],[3,"And","","`&`",null,null],[12,"spans","","",235,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",236,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",237,null],[3,"At","","`@`",null,null],[12,"spans","","",238,null],[3,"Bang","","`!`",null,null],[12,"spans","","",239,null],[3,"Caret","","`^`",null,null],[12,"spans","","",240,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",241,null],[3,"Colon","","`:`",null,null],[12,"spans","","",242,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",243,null],[3,"Comma","","`,`",null,null],[12,"spans","","",244,null],[3,"Div","","`/`",null,null],[12,"spans","","",245,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",246,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",247,null],[3,"Dot","","`.`",null,null],[12,"spans","","",248,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",249,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",250,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",251,null],[3,"Eq","","`=`",null,null],[12,"spans","","",252,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",253,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",254,null],[3,"Gt","","`>`",null,null],[12,"spans","","",255,null],[3,"Le","","`<=`",null,null],[12,"spans","","",256,null],[3,"Lt","","`<`",null,null],[12,"spans","","",257,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",258,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",259,null],[3,"Or","","`|`",null,null],[12,"spans","","",260,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",261,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",262,null],[3,"Pound","","`#`",null,null],[12,"spans","","",263,null],[3,"Question","","`?`",null,null],[12,"spans","","",264,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",265,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",266,null],[3,"Rem","","`%`",null,null],[12,"spans","","",267,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",268,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",269,null],[3,"Semi","","`;`",null,null],[12,"spans","","",270,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",271,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",272,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",273,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",274,null],[3,"Star","","`*`",null,null],[12,"spans","","",275,null],[3,"Sub","","`-`",null,null],[12,"spans","","",276,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",277,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",278,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",279,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",280,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",281,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",282,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",279,[[["tokenstream",3]]]],[11,"surround","","",280,[[["tokenstream",3]]]],[11,"surround","","",281,[[["tokenstream",3]]]],[11,"surround","","",282,[[["tokenstream",3]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[],[["result",6],["meta",4]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",0,[[],[["parse",8],["result",6]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",0,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"path","","Returns the identifier that begins this structured meta…",150,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",152,[[],[["iter",3],["field",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",152,[[],[["field",3],["itermut",3]]]],[11,"len","","Returns the number of fields.",152,[[]]],[11,"is_empty","","Returns `true` if there are zero fields.",152,[[]]],[11,"parse_without_eager_brace","","An alternative to the primary `Expr::parse` parser (from…",156,[[["parsestream",6]],[["expr",4],["result",6]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",56,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",56,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",56,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",56,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",56,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",56,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",56,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for…",56,[[]]],[11,"as_turbofish","","Turn a type\'s generics like `<X, Y>` into a turbofish like…",283,[[],["turbofish",3]]],[11,"new","","",57,[[["lifetime",3]]]],[11,"receiver","","A method\'s `self` receiver, such as `&self` or `self:…",89,[[],[["option",4],["fnarg",4]]]],[11,"lifetime","","",88,[[],[["lifetime",3],["option",4]]]],[11,"new","","Panics",100,[[["span",3]]]],[11,"span","","",100,[[],["span",3]]],[11,"set_span","","",100,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",168,[[["literal",3]]]],[11,"suffix","","",168,[[]]],[11,"span","","",168,[[],["span",3]]],[11,"set_span","","",168,[[["span",3]]]],[11,"new","","",284,[[["span",3]]]],[11,"value","","",284,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string…",284,[[],[["parse",8],["result",6]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",284,[[["parser",8]],["result",6]]],[11,"span","","",284,[[],["span",3]]],[11,"set_span","","",284,[[["span",3]]]],[11,"suffix","","",284,[[]]],[11,"new","","",285,[[["span",3]]]],[11,"value","","",285,[[],["vec",3]]],[11,"span","","",285,[[],["span",3]]],[11,"set_span","","",285,[[["span",3]]]],[11,"suffix","","",285,[[]]],[11,"new","","",286,[[["span",3]]]],[11,"value","","",286,[[]]],[11,"span","","",286,[[],["span",3]]],[11,"set_span","","",286,[[["span",3]]]],[11,"suffix","","",286,[[]]],[11,"new","","",287,[[["span",3]]]],[11,"value","","",287,[[]]],[11,"span","","",287,[[],["span",3]]],[11,"set_span","","",287,[[["span",3]]]],[11,"suffix","","",287,[[]]],[11,"new","","",288,[[["span",3]]]],[11,"base10_digits","","",288,[[]]],[11,"base10_parse","","Parses the literal into a selected number type.",288,[[],["result",6]]],[11,"suffix","","",288,[[]]],[11,"span","","",288,[[],["span",3]]],[11,"set_span","","",288,[[["span",3]]]],[11,"new","","",289,[[["span",3]]]],[11,"base10_digits","","",289,[[]]],[11,"base10_parse","","",289,[[],["result",6]]],[11,"suffix","","",289,[[]]],[11,"span","","",289,[[],["span",3]]],[11,"set_span","","",289,[[["span",3]]]],[11,"new","","",101,[[["span",3]]]],[11,"value","","",101,[[]]],[11,"span","","",101,[[],["span",3]]],[11,"set_span","","",101,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters…",102,[[],[["parse",8],["result",6]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters…",102,[[["parser",8]],["result",6]]],[11,"parse_within","","Parse the body of a block as zero or more statements,…",107,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"without_plus","","In some positions, types may not contain the `+`…",176,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",175,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",123,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",114,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",146,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",146,[[]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",146,[[],[["option",4],["ident",3]]]],[11,"is_empty","","",179,[[]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",290,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",290,[[],["cursor",3]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",291,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",291,[[]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",291,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",291,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",291,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",291,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",291,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",291,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",291,[[],["option",4]]],[11,"span","","Returns the `Span` of the current token, or…",291,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",292,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",292,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",292,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",293,null],[13,"End","","",293,null],[11,"new","","Creates an empty punctuated sequence.",294,[[]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",294,[[]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",294,[[]]],[11,"first","","Borrows the first element in this sequence.",294,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",294,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",294,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",294,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",294,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",294,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",294,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",294,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",294,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",294,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",294,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",294,[[],[["option",4],["pair",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",294,[[]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",294,[[]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",294,[[]]],[11,"insert","","Inserts an element at position `index`.",294,[[]]],[11,"clear","","Clears the sequence of all values and punctuation, making…",294,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",294,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",294,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",294,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",294,[[["parsestream",6]],["result",6]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",293,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",293,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",293,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",293,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",293,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",293,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",295,[[],["span",3]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm","","",null,[[["arm",3]]]],[5,"visit_attr_style","","",null,[[["attrstyle",4]]]],[5,"visit_attribute","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op","","",null,[[["binop",4]]]],[5,"visit_binding","","",null,[[["binding",3]]]],[5,"visit_block","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param","","",null,[[["constparam",3]]]],[5,"visit_constraint","","",null,[[["constraint",3]]]],[5,"visit_data","","",null,[[["data",4]]]],[5,"visit_data_enum","","",null,[[["dataenum",3]]]],[5,"visit_data_struct","","",null,[[["datastruct",3]]]],[5,"visit_data_union","","",null,[[["dataunion",3]]]],[5,"visit_derive_input","","",null,[[["deriveinput",3]]]],[5,"visit_expr","","",null,[[["expr",4]]]],[5,"visit_expr_array","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async","","",null,[[["exprasync",3]]]],[5,"visit_expr_await","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block","","",null,[[["exprblock",3]]]],[5,"visit_expr_box","","",null,[[["exprbox",3]]]],[5,"visit_expr_break","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if","","",null,[[["exprif",3]]]],[5,"visit_expr_index","","",null,[[["exprindex",3]]]],[5,"visit_expr_let","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren","","",null,[[["exprparen",3]]]],[5,"visit_expr_path","","",null,[[["exprpath",3]]]],[5,"visit_expr_range","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield","","",null,[[["expryield",3]]]],[5,"visit_field","","",null,[[["field",3]]]],[5,"visit_field_pat","","",null,[[["fieldpat",3]]]],[5,"visit_field_value","","",null,[[["fieldvalue",3]]]],[5,"visit_fields","","",null,[[["fields",4]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file","","",null,[[["file",3]]]],[5,"visit_fn_arg","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param","","",null,[[["genericparam",4]]]],[5,"visit_generics","","",null,[[["generics",3]]]],[5,"visit_ident","","",null,[[["ident",3]]]],[5,"visit_impl_item","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type","","",null,[[["implitemtype",3]]]],[5,"visit_index","","",null,[[["index",3]]]],[5,"visit_item","","",null,[[["item",4]]]],[5,"visit_item_const","","",null,[[["itemconst",3]]]],[5,"visit_item_enum","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod","","",null,[[["itemmod",3]]]],[5,"visit_item_static","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type","","",null,[[["itemtype",3]]]],[5,"visit_item_union","","",null,[[["itemunion",3]]]],[5,"visit_item_use","","",null,[[["itemuse",3]]]],[5,"visit_label","","",null,[[["label",3]]]],[5,"visit_lifetime","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef",3]]]],[5,"visit_lit","","",null,[[["lit",4]]]],[5,"visit_lit_bool","","",null,[[["litbool",3]]]],[5,"visit_lit_byte","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char","","",null,[[["litchar",3]]]],[5,"visit_lit_float","","",null,[[["litfloat",3]]]],[5,"visit_lit_int","","",null,[[["litint",3]]]],[5,"visit_lit_str","","",null,[[["litstr",3]]]],[5,"visit_local","","",null,[[["local",3]]]],[5,"visit_macro","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter",4]]]],[5,"visit_member","","",null,[[["member",4]]]],[5,"visit_meta","","",null,[[["meta",4]]]],[5,"visit_meta_list","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat","","",null,[[["pat",4]]]],[5,"visit_pat_box","","",null,[[["patbox",3]]]],[5,"visit_pat_ident","","",null,[[["patident",3]]]],[5,"visit_pat_lit","","",null,[[["patlit",3]]]],[5,"visit_pat_macro","","",null,[[["patmacro",3]]]],[5,"visit_pat_or","","",null,[[["pator",3]]]],[5,"visit_pat_path","","",null,[[["patpath",3]]]],[5,"visit_pat_range","","",null,[[["patrange",3]]]],[5,"visit_pat_reference","","",null,[[["patreference",3]]]],[5,"visit_pat_rest","","",null,[[["patrest",3]]]],[5,"visit_pat_slice","","",null,[[["patslice",3]]]],[5,"visit_pat_struct","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type","","",null,[[["pattype",3]]]],[5,"visit_pat_wild","","",null,[[["patwild",3]]]],[5,"visit_path","","",null,[[["path",3]]]],[5,"visit_path_arguments","","",null,[[["patharguments",4]]]],[5,"visit_path_segment","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type","","",null,[[["predicatetype",3]]]],[5,"visit_qself","","",null,[[["qself",3]]]],[5,"visit_range_limits","","",null,[[["rangelimits",4]]]],[5,"visit_receiver","","",null,[[["receiver",3]]]],[5,"visit_return_type","","",null,[[["returntype",4]]]],[5,"visit_signature","","",null,[[["signature",3]]]],[5,"visit_span","","",null,[[["span",3]]]],[5,"visit_stmt","","",null,[[["stmt",4]]]],[5,"visit_trait_bound","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type","","",null,[[["traititemtype",3]]]],[5,"visit_type","","",null,[[["type",4]]]],[5,"visit_type_array","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn",3]]]],[5,"visit_type_group","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro","","",null,[[["typemacro",3]]]],[5,"visit_type_never","","",null,[[["typenever",3]]]],[5,"visit_type_param","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren","","",null,[[["typeparen",3]]]],[5,"visit_type_path","","",null,[[["typepath",3]]]],[5,"visit_type_ptr","","",null,[[["typeptr",3]]]],[5,"visit_type_reference","","",null,[[["typereference",3]]]],[5,"visit_type_slice","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple","","",null,[[["typetuple",3]]]],[5,"visit_un_op","","",null,[[["unop",4]]]],[5,"visit_use_glob","","",null,[[["useglob",3]]]],[5,"visit_use_group","","",null,[[["usegroup",3]]]],[5,"visit_use_name","","",null,[[["usename",3]]]],[5,"visit_use_path","","",null,[[["usepath",3]]]],[5,"visit_use_rename","","",null,[[["userename",3]]]],[5,"visit_use_tree","","",null,[[["usetree",4]]]],[5,"visit_variadic","","",null,[[["variadic",3]]]],[5,"visit_variant","","",null,[[["variant",3]]]],[5,"visit_vis_crate","","",null,[[["viscrate",3]]]],[5,"visit_vis_public","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted",3]]]],[5,"visit_visibility","","",null,[[["visibility",4]]]],[5,"visit_where_clause","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate",4]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",296,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",296,[[["arm",3]]]],[11,"visit_attr_style","","",296,[[["attrstyle",4]]]],[11,"visit_attribute","","",296,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",296,[[["barefnarg",3]]]],[11,"visit_bin_op","","",296,[[["binop",4]]]],[11,"visit_binding","","",296,[[["binding",3]]]],[11,"visit_block","","",296,[[["block",3]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",296,[[["constparam",3]]]],[11,"visit_constraint","","",296,[[["constraint",3]]]],[11,"visit_data","","",296,[[["data",4]]]],[11,"visit_data_enum","","",296,[[["dataenum",3]]]],[11,"visit_data_struct","","",296,[[["datastruct",3]]]],[11,"visit_data_union","","",296,[[["dataunion",3]]]],[11,"visit_derive_input","","",296,[[["deriveinput",3]]]],[11,"visit_expr","","",296,[[["expr",4]]]],[11,"visit_expr_array","","",296,[[["exprarray",3]]]],[11,"visit_expr_assign","","",296,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",296,[[["exprassignop",3]]]],[11,"visit_expr_async","","",296,[[["exprasync",3]]]],[11,"visit_expr_await","","",296,[[["exprawait",3]]]],[11,"visit_expr_binary","","",296,[[["exprbinary",3]]]],[11,"visit_expr_block","","",296,[[["exprblock",3]]]],[11,"visit_expr_box","","",296,[[["exprbox",3]]]],[11,"visit_expr_break","","",296,[[["exprbreak",3]]]],[11,"visit_expr_call","","",296,[[["exprcall",3]]]],[11,"visit_expr_cast","","",296,[[["exprcast",3]]]],[11,"visit_expr_closure","","",296,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",296,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",296,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",296,[[["exprforloop",3]]]],[11,"visit_expr_group","","",296,[[["exprgroup",3]]]],[11,"visit_expr_if","","",296,[[["exprif",3]]]],[11,"visit_expr_index","","",296,[[["exprindex",3]]]],[11,"visit_expr_let","","",296,[[["exprlet",3]]]],[11,"visit_expr_lit","","",296,[[["exprlit",3]]]],[11,"visit_expr_loop","","",296,[[["exprloop",3]]]],[11,"visit_expr_macro","","",296,[[["exprmacro",3]]]],[11,"visit_expr_match","","",296,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",296,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",296,[[["exprparen",3]]]],[11,"visit_expr_path","","",296,[[["exprpath",3]]]],[11,"visit_expr_range","","",296,[[["exprrange",3]]]],[11,"visit_expr_reference","","",296,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",296,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",296,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",296,[[["exprstruct",3]]]],[11,"visit_expr_try","","",296,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",296,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",296,[[["exprtuple",3]]]],[11,"visit_expr_type","","",296,[[["exprtype",3]]]],[11,"visit_expr_unary","","",296,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",296,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",296,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",296,[[["expryield",3]]]],[11,"visit_field","","",296,[[["field",3]]]],[11,"visit_field_pat","","",296,[[["fieldpat",3]]]],[11,"visit_field_value","","",296,[[["fieldvalue",3]]]],[11,"visit_fields","","",296,[[["fields",4]]]],[11,"visit_fields_named","","",296,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",296,[[["fieldsunnamed",3]]]],[11,"visit_file","","",296,[[["file",3]]]],[11,"visit_fn_arg","","",296,[[["fnarg",4]]]],[11,"visit_foreign_item","","",296,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",296,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",296,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",296,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",296,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",296,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",296,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",296,[[["genericparam",4]]]],[11,"visit_generics","","",296,[[["generics",3]]]],[11,"visit_ident","","",296,[[["ident",3]]]],[11,"visit_impl_item","","",296,[[["implitem",4]]]],[11,"visit_impl_item_const","","",296,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",296,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",296,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",296,[[["implitemtype",3]]]],[11,"visit_index","","",296,[[["index",3]]]],[11,"visit_item","","",296,[[["item",4]]]],[11,"visit_item_const","","",296,[[["itemconst",3]]]],[11,"visit_item_enum","","",296,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",296,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",296,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",296,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",296,[[["itemimpl",3]]]],[11,"visit_item_macro","","",296,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",296,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",296,[[["itemmod",3]]]],[11,"visit_item_static","","",296,[[["itemstatic",3]]]],[11,"visit_item_struct","","",296,[[["itemstruct",3]]]],[11,"visit_item_trait","","",296,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",296,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",296,[[["itemtype",3]]]],[11,"visit_item_union","","",296,[[["itemunion",3]]]],[11,"visit_item_use","","",296,[[["itemuse",3]]]],[11,"visit_label","","",296,[[["label",3]]]],[11,"visit_lifetime","","",296,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",296,[[["lifetimedef",3]]]],[11,"visit_lit","","",296,[[["lit",4]]]],[11,"visit_lit_bool","","",296,[[["litbool",3]]]],[11,"visit_lit_byte","","",296,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",296,[[["litbytestr",3]]]],[11,"visit_lit_char","","",296,[[["litchar",3]]]],[11,"visit_lit_float","","",296,[[["litfloat",3]]]],[11,"visit_lit_int","","",296,[[["litint",3]]]],[11,"visit_lit_str","","",296,[[["litstr",3]]]],[11,"visit_local","","",296,[[["local",3]]]],[11,"visit_macro","","",296,[[["macro",3]]]],[11,"visit_macro_delimiter","","",296,[[["macrodelimiter",4]]]],[11,"visit_member","","",296,[[["member",4]]]],[11,"visit_meta","","",296,[[["meta",4]]]],[11,"visit_meta_list","","",296,[[["metalist",3]]]],[11,"visit_meta_name_value","","",296,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",296,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",296,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",296,[[["pat",4]]]],[11,"visit_pat_box","","",296,[[["patbox",3]]]],[11,"visit_pat_ident","","",296,[[["patident",3]]]],[11,"visit_pat_lit","","",296,[[["patlit",3]]]],[11,"visit_pat_macro","","",296,[[["patmacro",3]]]],[11,"visit_pat_or","","",296,[[["pator",3]]]],[11,"visit_pat_path","","",296,[[["patpath",3]]]],[11,"visit_pat_range","","",296,[[["patrange",3]]]],[11,"visit_pat_reference","","",296,[[["patreference",3]]]],[11,"visit_pat_rest","","",296,[[["patrest",3]]]],[11,"visit_pat_slice","","",296,[[["patslice",3]]]],[11,"visit_pat_struct","","",296,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",296,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",296,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",296,[[["pattype",3]]]],[11,"visit_pat_wild","","",296,[[["patwild",3]]]],[11,"visit_path","","",296,[[["path",3]]]],[11,"visit_path_arguments","","",296,[[["patharguments",4]]]],[11,"visit_path_segment","","",296,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",296,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",296,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",296,[[["predicatetype",3]]]],[11,"visit_qself","","",296,[[["qself",3]]]],[11,"visit_range_limits","","",296,[[["rangelimits",4]]]],[11,"visit_receiver","","",296,[[["receiver",3]]]],[11,"visit_return_type","","",296,[[["returntype",4]]]],[11,"visit_signature","","",296,[[["signature",3]]]],[11,"visit_span","","",296,[[["span",3]]]],[11,"visit_stmt","","",296,[[["stmt",4]]]],[11,"visit_trait_bound","","",296,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",296,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",296,[[["traititem",4]]]],[11,"visit_trait_item_const","","",296,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",296,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",296,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",296,[[["traititemtype",3]]]],[11,"visit_type","","",296,[[["type",4]]]],[11,"visit_type_array","","",296,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",296,[[["typebarefn",3]]]],[11,"visit_type_group","","",296,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",296,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",296,[[["typeinfer",3]]]],[11,"visit_type_macro","","",296,[[["typemacro",3]]]],[11,"visit_type_never","","",296,[[["typenever",3]]]],[11,"visit_type_param","","",296,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",296,[[["typeparambound",4]]]],[11,"visit_type_paren","","",296,[[["typeparen",3]]]],[11,"visit_type_path","","",296,[[["typepath",3]]]],[11,"visit_type_ptr","","",296,[[["typeptr",3]]]],[11,"visit_type_reference","","",296,[[["typereference",3]]]],[11,"visit_type_slice","","",296,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",296,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",296,[[["typetuple",3]]]],[11,"visit_un_op","","",296,[[["unop",4]]]],[11,"visit_use_glob","","",296,[[["useglob",3]]]],[11,"visit_use_group","","",296,[[["usegroup",3]]]],[11,"visit_use_name","","",296,[[["usename",3]]]],[11,"visit_use_path","","",296,[[["usepath",3]]]],[11,"visit_use_rename","","",296,[[["userename",3]]]],[11,"visit_use_tree","","",296,[[["usetree",4]]]],[11,"visit_variadic","","",296,[[["variadic",3]]]],[11,"visit_variant","","",296,[[["variant",3]]]],[11,"visit_vis_crate","","",296,[[["viscrate",3]]]],[11,"visit_vis_public","","",296,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",296,[[["visrestricted",3]]]],[11,"visit_visibility","","",296,[[["visibility",4]]]],[11,"visit_where_clause","","",296,[[["whereclause",3]]]],[11,"visit_where_predicate","","",296,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",297,[[]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",298,[[["parsestream",6]],["result",6]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",299,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",299,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",299,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",299,[[],["result",6]]],[11,"error","","Triggers an error at the current position of the parse…",300,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",301,[[],[["parse",8],["result",6]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",301,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine…",301,[[["peek",8]]]],[11,"peek2","","Looks at the second-next token in the parse stream.",301,[[["peek",8]]]],[11,"peek3","","Looks at the third-next token in the parse stream.",301,[[["peek",8]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",301,[[],[["result",6],["punctuated",3]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",301,[[]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",301,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",301,[[]]],[11,"error","","Triggers an error at the current position of the parse…",301,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream,…",301,[[],["result",6]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",301,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation…",301,[[],["cursor",3]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",302,[[["span",3],["display",8]]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",302,[[["totokens",8],["display",8]]]],[11,"span","","The source location of the error.",302,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",302,[[],["tokenstream",3]]],[11,"into_compile_error","","Render the error as an invocation of [`compile_error!`].",302,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when…",302,[[["error",3]]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",303,[[["cursor",3]]]],[11,"display","","",303,[[]]],[11,"span","","",303,[[],["span",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"to_string","","",303,[[],["string",3]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"span","","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",304,[[],["span",3]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"span","","",305,[[],["span",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"span","","",283,[[],["span",3]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"span","","",99,[[],["span",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"span","","",100,[[],["span",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"to_string","","",100,[[],["string",3]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"span","","",101,[[],["span",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"peek","","",286,[[["cursor",3]]]],[11,"display","","",286,[[]]],[11,"span","","",286,[[],["span",3]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"peek","","",285,[[["cursor",3]]]],[11,"display","","",285,[[]]],[11,"span","","",285,[[],["span",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"peek","","",287,[[["cursor",3]]]],[11,"display","","",287,[[]]],[11,"span","","",287,[[],["span",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"peek","","",289,[[["cursor",3]]]],[11,"display","","",289,[[]]],[11,"span","","",289,[[],["span",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"to_string","","",289,[[],["string",3]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"peek","","",288,[[["cursor",3]]]],[11,"display","","",288,[[]]],[11,"span","","",288,[[],["span",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"to_string","","",288,[[],["string",3]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"peek","","",284,[[["cursor",3]]]],[11,"display","","",284,[[]]],[11,"span","","",284,[[],["span",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"span","","",102,[[],["span",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"span","","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"span","","",108,[[],["span",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"span","","",109,[[],["span",3]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"span","","",110,[[],["span",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"span","","",111,[[],["span",3]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"span","","",112,[[],["span",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"span","","",113,[[],["span",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"span","","",114,[[],["span",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"span","","",115,[[],["span",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"span","","",116,[[],["span",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"span","","",117,[[],["span",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",136,[[],["span",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",137,[[],["span",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"into_iter","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"to_string","","",302,[[],["string",3]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"into_iter","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"peek","","",168,[[["cursor",3]]]],[11,"display","","",168,[[]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"peek","syn::token","",180,[[["cursor",3]]]],[11,"display","","",180,[[]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"peek","","",181,[[["cursor",3]]]],[11,"display","","",181,[[]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"peek","","",182,[[["cursor",3]]]],[11,"display","","",182,[[]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"peek","","",183,[[["cursor",3]]]],[11,"display","","",183,[[]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"peek","","",184,[[["cursor",3]]]],[11,"display","","",184,[[]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"peek","","",185,[[["cursor",3]]]],[11,"display","","",185,[[]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"peek","","",186,[[["cursor",3]]]],[11,"display","","",186,[[]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"peek","","",187,[[["cursor",3]]]],[11,"display","","",187,[[]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"peek","","",188,[[["cursor",3]]]],[11,"display","","",188,[[]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"peek","","",189,[[["cursor",3]]]],[11,"display","","",189,[[]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"peek","","",190,[[["cursor",3]]]],[11,"display","","",190,[[]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"peek","","",191,[[["cursor",3]]]],[11,"display","","",191,[[]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"peek","","",192,[[["cursor",3]]]],[11,"display","","",192,[[]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"peek","","",193,[[["cursor",3]]]],[11,"display","","",193,[[]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"peek","","",194,[[["cursor",3]]]],[11,"display","","",194,[[]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"peek","","",195,[[["cursor",3]]]],[11,"display","","",195,[[]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"peek","","",196,[[["cursor",3]]]],[11,"display","","",196,[[]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"peek","","",197,[[["cursor",3]]]],[11,"display","","",197,[[]]],[11,"span","","",197,[[],["span",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"peek","","",198,[[["cursor",3]]]],[11,"display","","",198,[[]]],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"peek","","",199,[[["cursor",3]]]],[11,"display","","",199,[[]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"peek","","",200,[[["cursor",3]]]],[11,"display","","",200,[[]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"peek","","",201,[[["cursor",3]]]],[11,"display","","",201,[[]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"peek","","",202,[[["cursor",3]]]],[11,"display","","",202,[[]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"peek","","",203,[[["cursor",3]]]],[11,"display","","",203,[[]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"peek","","",204,[[["cursor",3]]]],[11,"display","","",204,[[]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"peek","","",205,[[["cursor",3]]]],[11,"display","","",205,[[]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"peek","","",206,[[["cursor",3]]]],[11,"display","","",206,[[]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"peek","","",207,[[["cursor",3]]]],[11,"display","","",207,[[]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"peek","","",208,[[["cursor",3]]]],[11,"display","","",208,[[]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"peek","","",209,[[["cursor",3]]]],[11,"display","","",209,[[]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"peek","","",210,[[["cursor",3]]]],[11,"display","","",210,[[]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"peek","","",211,[[["cursor",3]]]],[11,"display","","",211,[[]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"peek","","",212,[[["cursor",3]]]],[11,"display","","",212,[[]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"peek","","",213,[[["cursor",3]]]],[11,"display","","",213,[[]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"peek","","",214,[[["cursor",3]]]],[11,"display","","",214,[[]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"peek","","",215,[[["cursor",3]]]],[11,"display","","",215,[[]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"peek","","",216,[[["cursor",3]]]],[11,"display","","",216,[[]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"peek","","",217,[[["cursor",3]]]],[11,"display","","",217,[[]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"peek","","",218,[[["cursor",3]]]],[11,"display","","",218,[[]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"peek","","",219,[[["cursor",3]]]],[11,"display","","",219,[[]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"peek","","",220,[[["cursor",3]]]],[11,"display","","",220,[[]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"peek","","",221,[[["cursor",3]]]],[11,"display","","",221,[[]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"peek","","",222,[[["cursor",3]]]],[11,"display","","",222,[[]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"peek","","",223,[[["cursor",3]]]],[11,"display","","",223,[[]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"peek","","",224,[[["cursor",3]]]],[11,"display","","",224,[[]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"peek","","",225,[[["cursor",3]]]],[11,"display","","",225,[[]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"peek","","",226,[[["cursor",3]]]],[11,"display","","",226,[[]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"peek","","",227,[[["cursor",3]]]],[11,"display","","",227,[[]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"peek","","",228,[[["cursor",3]]]],[11,"display","","",228,[[]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"peek","","",229,[[["cursor",3]]]],[11,"display","","",229,[[]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"peek","","",230,[[["cursor",3]]]],[11,"display","","",230,[[]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"peek","","",231,[[["cursor",3]]]],[11,"display","","",231,[[]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"peek","","",232,[[["cursor",3]]]],[11,"display","","",232,[[]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"peek","","",233,[[["cursor",3]]]],[11,"display","","",233,[[]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"peek","","",234,[[["cursor",3]]]],[11,"display","","",234,[[]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"peek","","",235,[[["cursor",3]]]],[11,"display","","",235,[[]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"peek","","",236,[[["cursor",3]]]],[11,"display","","",236,[[]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"peek","","",237,[[["cursor",3]]]],[11,"display","","",237,[[]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"peek","","",238,[[["cursor",3]]]],[11,"display","","",238,[[]]],[11,"span","","",238,[[],["span",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"peek","","",239,[[["cursor",3]]]],[11,"display","","",239,[[]]],[11,"span","","",239,[[],["span",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"peek","","",240,[[["cursor",3]]]],[11,"display","","",240,[[]]],[11,"span","","",240,[[],["span",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"peek","","",241,[[["cursor",3]]]],[11,"display","","",241,[[]]],[11,"span","","",241,[[],["span",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"peek","","",242,[[["cursor",3]]]],[11,"display","","",242,[[]]],[11,"span","","",242,[[],["span",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"peek","","",243,[[["cursor",3]]]],[11,"display","","",243,[[]]],[11,"span","","",243,[[],["span",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"peek","","",244,[[["cursor",3]]]],[11,"display","","",244,[[]]],[11,"span","","",244,[[],["span",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"peek","","",245,[[["cursor",3]]]],[11,"display","","",245,[[]]],[11,"span","","",245,[[],["span",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"peek","","",246,[[["cursor",3]]]],[11,"display","","",246,[[]]],[11,"span","","",246,[[],["span",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"peek","","",247,[[["cursor",3]]]],[11,"display","","",247,[[]]],[11,"span","","",247,[[],["span",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"peek","","",248,[[["cursor",3]]]],[11,"display","","",248,[[]]],[11,"span","","",248,[[],["span",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"peek","","",249,[[["cursor",3]]]],[11,"display","","",249,[[]]],[11,"span","","",249,[[],["span",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"peek","","",250,[[["cursor",3]]]],[11,"display","","",250,[[]]],[11,"span","","",250,[[],["span",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"peek","","",251,[[["cursor",3]]]],[11,"display","","",251,[[]]],[11,"span","","",251,[[],["span",3]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"peek","","",252,[[["cursor",3]]]],[11,"display","","",252,[[]]],[11,"span","","",252,[[],["span",3]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"peek","","",253,[[["cursor",3]]]],[11,"display","","",253,[[]]],[11,"span","","",253,[[],["span",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"peek","","",254,[[["cursor",3]]]],[11,"display","","",254,[[]]],[11,"span","","",254,[[],["span",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"peek","","",255,[[["cursor",3]]]],[11,"display","","",255,[[]]],[11,"span","","",255,[[],["span",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"peek","","",256,[[["cursor",3]]]],[11,"display","","",256,[[]]],[11,"span","","",256,[[],["span",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"peek","","",257,[[["cursor",3]]]],[11,"display","","",257,[[]]],[11,"span","","",257,[[],["span",3]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"peek","","",258,[[["cursor",3]]]],[11,"display","","",258,[[]]],[11,"span","","",258,[[],["span",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"peek","","",259,[[["cursor",3]]]],[11,"display","","",259,[[]]],[11,"span","","",259,[[],["span",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"peek","","",260,[[["cursor",3]]]],[11,"display","","",260,[[]]],[11,"span","","",260,[[],["span",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"peek","","",261,[[["cursor",3]]]],[11,"display","","",261,[[]]],[11,"span","","",261,[[],["span",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"peek","","",262,[[["cursor",3]]]],[11,"display","","",262,[[]]],[11,"span","","",262,[[],["span",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"peek","","",263,[[["cursor",3]]]],[11,"display","","",263,[[]]],[11,"span","","",263,[[],["span",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"peek","","",264,[[["cursor",3]]]],[11,"display","","",264,[[]]],[11,"span","","",264,[[],["span",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"peek","","",265,[[["cursor",3]]]],[11,"display","","",265,[[]]],[11,"span","","",265,[[],["span",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"peek","","",266,[[["cursor",3]]]],[11,"display","","",266,[[]]],[11,"span","","",266,[[],["span",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"peek","","",267,[[["cursor",3]]]],[11,"display","","",267,[[]]],[11,"span","","",267,[[],["span",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"peek","","",268,[[["cursor",3]]]],[11,"display","","",268,[[]]],[11,"span","","",268,[[],["span",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"peek","","",269,[[["cursor",3]]]],[11,"display","","",269,[[]]],[11,"span","","",269,[[],["span",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"peek","","",270,[[["cursor",3]]]],[11,"display","","",270,[[]]],[11,"span","","",270,[[],["span",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"peek","","",271,[[["cursor",3]]]],[11,"display","","",271,[[]]],[11,"span","","",271,[[],["span",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"peek","","",272,[[["cursor",3]]]],[11,"display","","",272,[[]]],[11,"span","","",272,[[],["span",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"peek","","",273,[[["cursor",3]]]],[11,"display","","",273,[[]]],[11,"span","","",273,[[],["span",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"peek","","",274,[[["cursor",3]]]],[11,"display","","",274,[[]]],[11,"span","","",274,[[],["span",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"peek","","",275,[[["cursor",3]]]],[11,"display","","",275,[[]]],[11,"span","","",275,[[],["span",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"peek","","",276,[[["cursor",3]]]],[11,"display","","",276,[[]]],[11,"span","","",276,[[],["span",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"peek","","",277,[[["cursor",3]]]],[11,"display","","",277,[[]]],[11,"span","","",277,[[],["span",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"peek","","",278,[[["cursor",3]]]],[11,"display","","",278,[[]]],[11,"span","","",278,[[],["span",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"peek","","",279,[[["cursor",3]]]],[11,"display","","",279,[[]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"peek","","",280,[[["cursor",3]]]],[11,"display","","",280,[[]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"peek","","",281,[[["cursor",3]]]],[11,"display","","",281,[[]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"peek","","",282,[[["cursor",3]]]],[11,"display","","",282,[[]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"from","syn::buffer","",290,[[]]],[11,"into","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"span","syn::punctuated","",294,[[],["span",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"into_iter","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"into_iter","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"to_owned","","",308,[[]]],[11,"clone_into","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"to_owned","","",309,[[]]],[11,"clone_into","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"to_owned","","",310,[[]]],[11,"clone_into","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"span","","",293,[[],["span",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"from","syn::parse","",312,[[]]],[11,"into","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_string","","",301,[[],["string",3]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"cmp","syn","",303,[[["ident",3]],["ordering",4]]],[11,"hash","","",303,[[]]],[11,"eq","","",303,[[]]],[11,"eq","","",303,[[["ident",3]]]],[11,"fmt","","",303,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",303,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"clone","","",303,[[],["ident",3]]],[11,"fmt","","",303,[[["formatter",3]],[["result",4],["error",3]]]],[11,"span","","",303,[[],[["option",4],["span",3]]]],[11,"fmt","","",303,[[["formatter",3]],[["result",4],["error",3]]]],[11,"to_tokens","","",303,[[["tokenstream",3]]]],[11,"peek","","",100,[[["cursor",3]]]],[11,"display","","",100,[[]]],[11,"peek","","",168,[[["cursor",3]]]],[11,"display","","",168,[[]]],[11,"peek","","",284,[[["cursor",3]]]],[11,"display","","",284,[[]]],[11,"peek","","",285,[[["cursor",3]]]],[11,"display","","",285,[[]]],[11,"peek","","",286,[[["cursor",3]]]],[11,"display","","",286,[[]]],[11,"peek","","",287,[[["cursor",3]]]],[11,"display","","",287,[[]]],[11,"peek","","",288,[[["cursor",3]]]],[11,"display","","",288,[[]]],[11,"peek","","",289,[[["cursor",3]]]],[11,"display","","",289,[[]]],[11,"peek","","",101,[[["cursor",3]]]],[11,"display","","",101,[[]]],[11,"peek","syn::token","",180,[[["cursor",3]]]],[11,"display","","",180,[[]]],[11,"peek","","",281,[[["cursor",3]]]],[11,"display","","",281,[[]]],[11,"peek","","",279,[[["cursor",3]]]],[11,"display","","",279,[[]]],[11,"peek","","",280,[[["cursor",3]]]],[11,"display","","",280,[[]]],[11,"peek","","",282,[[["cursor",3]]]],[11,"display","","",282,[[]]],[11,"peek","","",181,[[["cursor",3]]]],[11,"display","","",181,[[]]],[11,"peek","","",182,[[["cursor",3]]]],[11,"display","","",182,[[]]],[11,"peek","","",183,[[["cursor",3]]]],[11,"display","","",183,[[]]],[11,"peek","","",184,[[["cursor",3]]]],[11,"display","","",184,[[]]],[11,"peek","","",185,[[["cursor",3]]]],[11,"display","","",185,[[]]],[11,"peek","","",186,[[["cursor",3]]]],[11,"display","","",186,[[]]],[11,"peek","","",187,[[["cursor",3]]]],[11,"display","","",187,[[]]],[11,"peek","","",188,[[["cursor",3]]]],[11,"display","","",188,[[]]],[11,"peek","","",189,[[["cursor",3]]]],[11,"display","","",189,[[]]],[11,"peek","","",190,[[["cursor",3]]]],[11,"display","","",190,[[]]],[11,"peek","","",191,[[["cursor",3]]]],[11,"display","","",191,[[]]],[11,"peek","","",192,[[["cursor",3]]]],[11,"display","","",192,[[]]],[11,"peek","","",193,[[["cursor",3]]]],[11,"display","","",193,[[]]],[11,"peek","","",194,[[["cursor",3]]]],[11,"display","","",194,[[]]],[11,"peek","","",195,[[["cursor",3]]]],[11,"display","","",195,[[]]],[11,"peek","","",196,[[["cursor",3]]]],[11,"display","","",196,[[]]],[11,"peek","","",197,[[["cursor",3]]]],[11,"display","","",197,[[]]],[11,"peek","","",198,[[["cursor",3]]]],[11,"display","","",198,[[]]],[11,"peek","","",199,[[["cursor",3]]]],[11,"display","","",199,[[]]],[11,"peek","","",200,[[["cursor",3]]]],[11,"display","","",200,[[]]],[11,"peek","","",201,[[["cursor",3]]]],[11,"display","","",201,[[]]],[11,"peek","","",202,[[["cursor",3]]]],[11,"display","","",202,[[]]],[11,"peek","","",203,[[["cursor",3]]]],[11,"display","","",203,[[]]],[11,"peek","","",204,[[["cursor",3]]]],[11,"display","","",204,[[]]],[11,"peek","","",205,[[["cursor",3]]]],[11,"display","","",205,[[]]],[11,"peek","","",206,[[["cursor",3]]]],[11,"display","","",206,[[]]],[11,"peek","","",207,[[["cursor",3]]]],[11,"display","","",207,[[]]],[11,"peek","","",208,[[["cursor",3]]]],[11,"display","","",208,[[]]],[11,"peek","","",209,[[["cursor",3]]]],[11,"display","","",209,[[]]],[11,"peek","","",210,[[["cursor",3]]]],[11,"display","","",210,[[]]],[11,"peek","","",211,[[["cursor",3]]]],[11,"display","","",211,[[]]],[11,"peek","","",212,[[["cursor",3]]]],[11,"display","","",212,[[]]],[11,"peek","","",213,[[["cursor",3]]]],[11,"display","","",213,[[]]],[11,"peek","","",214,[[["cursor",3]]]],[11,"display","","",214,[[]]],[11,"peek","","",215,[[["cursor",3]]]],[11,"display","","",215,[[]]],[11,"peek","","",216,[[["cursor",3]]]],[11,"display","","",216,[[]]],[11,"peek","","",217,[[["cursor",3]]]],[11,"display","","",217,[[]]],[11,"peek","","",218,[[["cursor",3]]]],[11,"display","","",218,[[]]],[11,"peek","","",219,[[["cursor",3]]]],[11,"display","","",219,[[]]],[11,"peek","","",220,[[["cursor",3]]]],[11,"display","","",220,[[]]],[11,"peek","","",221,[[["cursor",3]]]],[11,"display","","",221,[[]]],[11,"peek","","",222,[[["cursor",3]]]],[11,"display","","",222,[[]]],[11,"peek","","",223,[[["cursor",3]]]],[11,"display","","",223,[[]]],[11,"peek","","",224,[[["cursor",3]]]],[11,"display","","",224,[[]]],[11,"peek","","",225,[[["cursor",3]]]],[11,"display","","",225,[[]]],[11,"peek","","",226,[[["cursor",3]]]],[11,"display","","",226,[[]]],[11,"peek","","",227,[[["cursor",3]]]],[11,"display","","",227,[[]]],[11,"peek","","",228,[[["cursor",3]]]],[11,"display","","",228,[[]]],[11,"peek","","",229,[[["cursor",3]]]],[11,"display","","",229,[[]]],[11,"peek","","",230,[[["cursor",3]]]],[11,"display","","",230,[[]]],[11,"peek","","",231,[[["cursor",3]]]],[11,"display","","",231,[[]]],[11,"peek","","",232,[[["cursor",3]]]],[11,"display","","",232,[[]]],[11,"peek","","",233,[[["cursor",3]]]],[11,"display","","",233,[[]]],[11,"peek","","",234,[[["cursor",3]]]],[11,"display","","",234,[[]]],[11,"peek","","",235,[[["cursor",3]]]],[11,"display","","",235,[[]]],[11,"peek","","",236,[[["cursor",3]]]],[11,"display","","",236,[[]]],[11,"peek","","",237,[[["cursor",3]]]],[11,"display","","",237,[[]]],[11,"peek","","",238,[[["cursor",3]]]],[11,"display","","",238,[[]]],[11,"peek","","",239,[[["cursor",3]]]],[11,"display","","",239,[[]]],[11,"peek","","",240,[[["cursor",3]]]],[11,"display","","",240,[[]]],[11,"peek","","",241,[[["cursor",3]]]],[11,"display","","",241,[[]]],[11,"peek","","",242,[[["cursor",3]]]],[11,"display","","",242,[[]]],[11,"peek","","",243,[[["cursor",3]]]],[11,"display","","",243,[[]]],[11,"peek","","",244,[[["cursor",3]]]],[11,"display","","",244,[[]]],[11,"peek","","",245,[[["cursor",3]]]],[11,"display","","",245,[[]]],[11,"peek","","",246,[[["cursor",3]]]],[11,"display","","",246,[[]]],[11,"peek","","",247,[[["cursor",3]]]],[11,"display","","",247,[[]]],[11,"peek","","",248,[[["cursor",3]]]],[11,"display","","",248,[[]]],[11,"peek","","",249,[[["cursor",3]]]],[11,"display","","",249,[[]]],[11,"peek","","",250,[[["cursor",3]]]],[11,"display","","",250,[[]]],[11,"peek","","",251,[[["cursor",3]]]],[11,"display","","",251,[[]]],[11,"peek","","",252,[[["cursor",3]]]],[11,"display","","",252,[[]]],[11,"peek","","",253,[[["cursor",3]]]],[11,"display","","",253,[[]]],[11,"peek","","",254,[[["cursor",3]]]],[11,"display","","",254,[[]]],[11,"peek","","",255,[[["cursor",3]]]],[11,"display","","",255,[[]]],[11,"peek","","",256,[[["cursor",3]]]],[11,"display","","",256,[[]]],[11,"peek","","",257,[[["cursor",3]]]],[11,"display","","",257,[[]]],[11,"peek","","",258,[[["cursor",3]]]],[11,"display","","",258,[[]]],[11,"peek","","",259,[[["cursor",3]]]],[11,"display","","",259,[[]]],[11,"peek","","",260,[[["cursor",3]]]],[11,"display","","",260,[[]]],[11,"peek","","",261,[[["cursor",3]]]],[11,"display","","",261,[[]]],[11,"peek","","",262,[[["cursor",3]]]],[11,"display","","",262,[[]]],[11,"peek","","",263,[[["cursor",3]]]],[11,"display","","",263,[[]]],[11,"peek","","",264,[[["cursor",3]]]],[11,"display","","",264,[[]]],[11,"peek","","",265,[[["cursor",3]]]],[11,"display","","",265,[[]]],[11,"peek","","",266,[[["cursor",3]]]],[11,"display","","",266,[[]]],[11,"peek","","",267,[[["cursor",3]]]],[11,"display","","",267,[[]]],[11,"peek","","",268,[[["cursor",3]]]],[11,"display","","",268,[[]]],[11,"peek","","",269,[[["cursor",3]]]],[11,"display","","",269,[[]]],[11,"peek","","",270,[[["cursor",3]]]],[11,"display","","",270,[[]]],[11,"peek","","",271,[[["cursor",3]]]],[11,"display","","",271,[[]]],[11,"peek","","",272,[[["cursor",3]]]],[11,"display","","",272,[[]]],[11,"peek","","",273,[[["cursor",3]]]],[11,"display","","",273,[[]]],[11,"peek","","",274,[[["cursor",3]]]],[11,"display","","",274,[[]]],[11,"peek","","",275,[[["cursor",3]]]],[11,"display","","",275,[[]]],[11,"peek","","",276,[[["cursor",3]]]],[11,"display","","",276,[[]]],[11,"peek","","",277,[[["cursor",3]]]],[11,"display","","",277,[[]]],[11,"peek","","",278,[[["cursor",3]]]],[11,"display","","",278,[[]]],[11,"peek","syn","",303,[[["cursor",3]]]],[11,"display","","",303,[[]]],[11,"parse_any","","",303,[[["parsestream",6]],["result",6]]],[11,"unraw","","",303,[[],["ident",3]]],[11,"advance_to","syn::parse","",301,[[]]],[11,"parse","syn::token","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",183,[[["parsestream",6]],["result",6]]],[11,"parse","","",184,[[["parsestream",6]],["result",6]]],[11,"parse","","",185,[[["parsestream",6]],["result",6]]],[11,"parse","","",186,[[["parsestream",6]],["result",6]]],[11,"parse","","",187,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",195,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",197,[[["parsestream",6]],["result",6]]],[11,"parse","","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",199,[[["parsestream",6]],["result",6]]],[11,"parse","","",200,[[["parsestream",6]],["result",6]]],[11,"parse","","",201,[[["parsestream",6]],["result",6]]],[11,"parse","","",202,[[["parsestream",6]],["result",6]]],[11,"parse","","",203,[[["parsestream",6]],["result",6]]],[11,"parse","","",204,[[["parsestream",6]],["result",6]]],[11,"parse","","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",206,[[["parsestream",6]],["result",6]]],[11,"parse","","",207,[[["parsestream",6]],["result",6]]],[11,"parse","","",208,[[["parsestream",6]],["result",6]]],[11,"parse","","",209,[[["parsestream",6]],["result",6]]],[11,"parse","","",210,[[["parsestream",6]],["result",6]]],[11,"parse","","",211,[[["parsestream",6]],["result",6]]],[11,"parse","","",212,[[["parsestream",6]],["result",6]]],[11,"parse","","",213,[[["parsestream",6]],["result",6]]],[11,"parse","","",214,[[["parsestream",6]],["result",6]]],[11,"parse","","",215,[[["parsestream",6]],["result",6]]],[11,"parse","","",216,[[["parsestream",6]],["result",6]]],[11,"parse","","",217,[[["parsestream",6]],["result",6]]],[11,"parse","","",218,[[["parsestream",6]],["result",6]]],[11,"parse","","",219,[[["parsestream",6]],["result",6]]],[11,"parse","","",220,[[["parsestream",6]],["result",6]]],[11,"parse","","",221,[[["parsestream",6]],["result",6]]],[11,"parse","","",222,[[["parsestream",6]],["result",6]]],[11,"parse","","",223,[[["parsestream",6]],["result",6]]],[11,"parse","","",224,[[["parsestream",6]],["result",6]]],[11,"parse","","",225,[[["parsestream",6]],["result",6]]],[11,"parse","","",226,[[["parsestream",6]],["result",6]]],[11,"parse","","",227,[[["parsestream",6]],["result",6]]],[11,"parse","","",228,[[["parsestream",6]],["result",6]]],[11,"parse","","",229,[[["parsestream",6]],["result",6]]],[11,"parse","","",230,[[["parsestream",6]],["result",6]]],[11,"parse","","",231,[[["parsestream",6]],["result",6]]],[11,"parse","","",232,[[["parsestream",6]],["result",6]]],[11,"parse","","",233,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",237,[[["parsestream",6]],["result",6]]],[11,"parse","","",238,[[["parsestream",6]],["result",6]]],[11,"parse","","",239,[[["parsestream",6]],["result",6]]],[11,"parse","","",240,[[["parsestream",6]],["result",6]]],[11,"parse","","",241,[[["parsestream",6]],["result",6]]],[11,"parse","","",242,[[["parsestream",6]],["result",6]]],[11,"parse","","",243,[[["parsestream",6]],["result",6]]],[11,"parse","","",244,[[["parsestream",6]],["result",6]]],[11,"parse","","",245,[[["parsestream",6]],["result",6]]],[11,"parse","","",246,[[["parsestream",6]],["result",6]]],[11,"parse","","",247,[[["parsestream",6]],["result",6]]],[11,"parse","","",248,[[["parsestream",6]],["result",6]]],[11,"parse","","",249,[[["parsestream",6]],["result",6]]],[11,"parse","","",250,[[["parsestream",6]],["result",6]]],[11,"parse","","",251,[[["parsestream",6]],["result",6]]],[11,"parse","","",252,[[["parsestream",6]],["result",6]]],[11,"parse","","",253,[[["parsestream",6]],["result",6]]],[11,"parse","","",254,[[["parsestream",6]],["result",6]]],[11,"parse","","",255,[[["parsestream",6]],["result",6]]],[11,"parse","","",256,[[["parsestream",6]],["result",6]]],[11,"parse","","",257,[[["parsestream",6]],["result",6]]],[11,"parse","","",258,[[["parsestream",6]],["result",6]]],[11,"parse","","",259,[[["parsestream",6]],["result",6]]],[11,"parse","","",260,[[["parsestream",6]],["result",6]]],[11,"parse","","",261,[[["parsestream",6]],["result",6]]],[11,"parse","","",262,[[["parsestream",6]],["result",6]]],[11,"parse","","",263,[[["parsestream",6]],["result",6]]],[11,"parse","","",264,[[["parsestream",6]],["result",6]]],[11,"parse","","",265,[[["parsestream",6]],["result",6]]],[11,"parse","","",266,[[["parsestream",6]],["result",6]]],[11,"parse","","",267,[[["parsestream",6]],["result",6]]],[11,"parse","","",268,[[["parsestream",6]],["result",6]]],[11,"parse","","",269,[[["parsestream",6]],["result",6]]],[11,"parse","","",270,[[["parsestream",6]],["result",6]]],[11,"parse","","",271,[[["parsestream",6]],["result",6]]],[11,"parse","","",272,[[["parsestream",6]],["result",6]]],[11,"parse","","",273,[[["parsestream",6]],["result",6]]],[11,"parse","","",274,[[["parsestream",6]],["result",6]]],[11,"parse","","",275,[[["parsestream",6]],["result",6]]],[11,"parse","","",276,[[["parsestream",6]],["result",6]]],[11,"parse","","",277,[[["parsestream",6]],["result",6]]],[11,"parse","","",278,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",303,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",153,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],[["arm",3],["result",6]]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],[["usetree",4],["result",6]]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",99,[[["parsestream",6]],["result",6]]],[11,"parse","","",100,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",284,[[["parsestream",6]],["result",6]]],[11,"parse","","",285,[[["parsestream",6]],["result",6]]],[11,"parse","","",286,[[["parsestream",6]],["result",6]]],[11,"parse","","",287,[[["parsestream",6]],["result",6]]],[11,"parse","","",288,[[["parsestream",6]],["result",6]]],[11,"parse","","",289,[[["parsestream",6]],["result",6]]],[11,"parse","","",101,[[["parsestream",6]],["result",6]]],[11,"parse","","",102,[[["parsestream",6]],["result",6]]],[11,"parse","","",106,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",107,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",122,[[["parsestream",6]],["result",6]]],[11,"parse","","",111,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",112,[[["parsestream",6]],["result",6]]],[11,"parse","","",117,[[["parsestream",6]],["result",6]]],[11,"parse","","",115,[[["parsestream",6]],["result",6]]],[11,"parse","","",124,[[["parsestream",6]],["result",6]]],[11,"parse","","",116,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",123,[[["parsestream",6]],["result",6]]],[11,"parse","","",114,[[["parsestream",6]],["result",6]]],[11,"parse","","",113,[[["parsestream",6]],["result",6]]],[11,"parse","","",118,[[["parsestream",6]],["result",6]]],[11,"parse","","",110,[[["parsestream",6]],["result",6]]],[11,"parse","","",109,[[["parsestream",6]],["result",6]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",142,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",143,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",313,[[["parsestream",6]],["result",6]]],[11,"drop","","",301,[[]]],[11,"from","syn","",303,[[["selfvalue",3]],["ident",3]]],[11,"from","","",303,[[["selftype",3]],["ident",3]]],[11,"from","","",303,[[["super",3]],["ident",3]]],[11,"from","","",303,[[["crate",3]],["ident",3]]],[11,"from","","",303,[[["extern",3]],["ident",3]]],[11,"from","","",303,[[["underscore",3]],["ident",3]]],[11,"from","","",150,[[["path",3]],["meta",4]]],[11,"from","","",150,[[["metalist",3]],["meta",4]]],[11,"from","","",150,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",151,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",151,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",152,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",152,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",153,[[["vispublic",3]],["visibility",4]]],[11,"from","","",153,[[["viscrate",3]],["visibility",4]]],[11,"from","","",153,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",156,[[["exprarray",3]],["expr",4]]],[11,"from","","",156,[[["exprassign",3]],["expr",4]]],[11,"from","","",156,[[["exprassignop",3]],["expr",4]]],[11,"from","","",156,[[["exprasync",3]],["expr",4]]],[11,"from","","",156,[[["exprawait",3]],["expr",4]]],[11,"from","","",156,[[["exprbinary",3]],["expr",4]]],[11,"from","","",156,[[["exprblock",3]],["expr",4]]],[11,"from","","",156,[[["exprbox",3]],["expr",4]]],[11,"from","","",156,[[["exprbreak",3]],["expr",4]]],[11,"from","","",156,[[["exprcall",3]],["expr",4]]],[11,"from","","",156,[[["exprcast",3]],["expr",4]]],[11,"from","","",156,[[["exprclosure",3]],["expr",4]]],[11,"from","","",156,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",156,[[["exprfield",3]],["expr",4]]],[11,"from","","",156,[[["exprforloop",3]],["expr",4]]],[11,"from","","",156,[[["exprgroup",3]],["expr",4]]],[11,"from","","",156,[[["exprif",3]],["expr",4]]],[11,"from","","",156,[[["exprindex",3]],["expr",4]]],[11,"from","","",156,[[["exprlet",3]],["expr",4]]],[11,"from","","",156,[[["exprlit",3]],["expr",4]]],[11,"from","","",156,[[["exprloop",3]],["expr",4]]],[11,"from","","",156,[[["exprmacro",3]],["expr",4]]],[11,"from","","",156,[[["exprmatch",3]],["expr",4]]],[11,"from","","",156,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",156,[[["exprparen",3]],["expr",4]]],[11,"from","","",156,[[["exprpath",3]],["expr",4]]],[11,"from","","",156,[[["exprrange",3]],["expr",4]]],[11,"from","","",156,[[["exprreference",3]],["expr",4]]],[11,"from","","",156,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",156,[[["exprreturn",3]],["expr",4]]],[11,"from","","",156,[[["exprstruct",3]],["expr",4]]],[11,"from","","",156,[[["exprtry",3]],["expr",4]]],[11,"from","","",156,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",156,[[["exprtuple",3]],["expr",4]]],[11,"from","","",156,[[["exprtype",3]],["expr",4]]],[11,"from","","",156,[[["exprunary",3]],["expr",4]]],[11,"from","","",156,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",156,[[["exprwhile",3]],["expr",4]]],[11,"from","","",156,[[["expryield",3]],["expr",4]]],[11,"from","","",157,[[["ident",3]],["member",4]]],[11,"from","","",157,[[["index",3]],["member",4]]],[11,"from","","",157,[[],["member",4]]],[11,"from","","",53,[[],["index",3]]],[11,"from","","",158,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",158,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",158,[[["constparam",3]],["genericparam",4]]],[11,"from","","",62,[[["ident",3]]]],[11,"from","","",160,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",160,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",161,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",161,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",161,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",165,[[["itemconst",3]],["item",4]]],[11,"from","","",165,[[["itemenum",3]],["item",4]]],[11,"from","","",165,[[["itemexterncrate",3]],["item",4]]],[11,"from","","",165,[[["itemfn",3]],["item",4]]],[11,"from","","",165,[[["itemforeignmod",3]],["item",4]]],[11,"from","","",165,[[["itemimpl",3]],["item",4]]],[11,"from","","",165,[[["itemmacro",3]],["item",4]]],[11,"from","","",165,[[["itemmacro2",3]],["item",4]]],[11,"from","","",165,[[["itemmod",3]],["item",4]]],[11,"from","","",165,[[["itemstatic",3]],["item",4]]],[11,"from","","",165,[[["itemstruct",3]],["item",4]]],[11,"from","","",165,[[["itemtrait",3]],["item",4]]],[11,"from","","",165,[[["itemtraitalias",3]],["item",4]]],[11,"from","","",165,[[["itemtype",3]],["item",4]]],[11,"from","","",165,[[["itemunion",3]],["item",4]]],[11,"from","","",165,[[["itemuse",3]],["item",4]]],[11,"from","","",165,[[["deriveinput",3]],["item",4]]],[11,"from","","",106,[[["itemstruct",3]],["deriveinput",3]]],[11,"from","","",106,[[["itemenum",3]],["deriveinput",3]]],[11,"from","","",106,[[["itemunion",3]],["deriveinput",3]]],[11,"from","","",167,[[["usepath",3]],["usetree",4]]],[11,"from","","",167,[[["usename",3]],["usetree",4]]],[11,"from","","",167,[[["userename",3]],["usetree",4]]],[11,"from","","",167,[[["useglob",3]],["usetree",4]]],[11,"from","","",167,[[["usegroup",3]],["usetree",4]]],[11,"from","","",163,[[["foreignitemfn",3]],["foreignitem",4]]],[11,"from","","",163,[[["foreignitemstatic",3]],["foreignitem",4]]],[11,"from","","",163,[[["foreignitemtype",3]],["foreignitem",4]]],[11,"from","","",163,[[["foreignitemmacro",3]],["foreignitem",4]]],[11,"from","","",166,[[["traititemconst",3]],["traititem",4]]],[11,"from","","",166,[[["traititemmethod",3]],["traititem",4]]],[11,"from","","",166,[[["traititemtype",3]],["traititem",4]]],[11,"from","","",166,[[["traititemmacro",3]],["traititem",4]]],[11,"from","","",164,[[["implitemconst",3]],["implitem",4]]],[11,"from","","",164,[[["implitemmethod",3]],["implitem",4]]],[11,"from","","",164,[[["implitemtype",3]],["implitem",4]]],[11,"from","","",164,[[["implitemmacro",3]],["implitem",4]]],[11,"from","","",162,[[["receiver",3]],["fnarg",4]]],[11,"from","","",162,[[["pattype",3]],["fnarg",4]]],[11,"from","","",168,[[["litstr",3]],["lit",4]]],[11,"from","","",168,[[["litbytestr",3]],["lit",4]]],[11,"from","","",168,[[["litbyte",3]],["lit",4]]],[11,"from","","",168,[[["litchar",3]],["lit",4]]],[11,"from","","",168,[[["litint",3]],["lit",4]]],[11,"from","","",168,[[["litfloat",3]],["lit",4]]],[11,"from","","",168,[[["litbool",3]],["lit",4]]],[11,"from","","",288,[[["literal",3]]]],[11,"from","","",289,[[["literal",3]]]],[11,"from","","",171,[[["datastruct",3]],["data",4]]],[11,"from","","",171,[[["dataenum",3]],["data",4]]],[11,"from","","",171,[[["dataunion",3]],["data",4]]],[11,"from","","",176,[[["typearray",3]],["type",4]]],[11,"from","","",176,[[["typebarefn",3]],["type",4]]],[11,"from","","",176,[[["typegroup",3]],["type",4]]],[11,"from","","",176,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",176,[[["typeinfer",3]],["type",4]]],[11,"from","","",176,[[["typemacro",3]],["type",4]]],[11,"from","","",176,[[["typenever",3]],["type",4]]],[11,"from","","",176,[[["typeparen",3]],["type",4]]],[11,"from","","",176,[[["typepath",3]],["type",4]]],[11,"from","","",176,[[["typeptr",3]],["type",4]]],[11,"from","","",176,[[["typereference",3]],["type",4]]],[11,"from","","",176,[[["typeslice",3]],["type",4]]],[11,"from","","",176,[[["typetraitobject",3]],["type",4]]],[11,"from","","",176,[[["typetuple",3]],["type",4]]],[11,"from","","",177,[[["patbox",3]],["pat",4]]],[11,"from","","",177,[[["patident",3]],["pat",4]]],[11,"from","","",177,[[["patlit",3]],["pat",4]]],[11,"from","","",177,[[["patmacro",3]],["pat",4]]],[11,"from","","",177,[[["pator",3]],["pat",4]]],[11,"from","","",177,[[["patpath",3]],["pat",4]]],[11,"from","","",177,[[["patrange",3]],["pat",4]]],[11,"from","","",177,[[["patreference",3]],["pat",4]]],[11,"from","","",177,[[["patrest",3]],["pat",4]]],[11,"from","","",177,[[["patslice",3]],["pat",4]]],[11,"from","","",177,[[["patstruct",3]],["pat",4]]],[11,"from","","",177,[[["pattuple",3]],["pat",4]]],[11,"from","","",177,[[["pattuplestruct",3]],["pat",4]]],[11,"from","","",177,[[["pattype",3]],["pat",4]]],[11,"from","","",177,[[["patwild",3]],["pat",4]]],[11,"from","","",146,[[]]],[11,"from","","",147,[[]]],[11,"from","","",302,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",306,[[],["option",4]]],[11,"next_back","","",307,[[],["option",4]]],[11,"next_back","","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"next_back","","",311,[[],["option",4]]],[11,"len","","",306,[[]]],[11,"len","","",307,[[]]],[11,"len","","",308,[[]]],[11,"len","","",309,[[]]],[11,"len","","",310,[[]]],[11,"len","","",311,[[]]],[11,"extend","","",294,[[["intoiterator",8]]]],[11,"extend","","",294,[[["intoiterator",8]]]],[11,"extend","syn","",302,[[["intoiterator",8]]]],[11,"into_iter","","",152,[[]]],[11,"into_iter","syn::punctuated","",294,[[]]],[11,"into_iter","syn","",302,[[]]],[11,"next","syn::punctuated","",306,[[],["option",4]]],[11,"size_hint","","",306,[[]]],[11,"next","","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"clone","syn::token","",180,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",191,[[]]],[11,"clone","","",192,[[]]],[11,"clone","","",193,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",198,[[]]],[11,"clone","","",199,[[]]],[11,"clone","","",200,[[]]],[11,"clone","","",201,[[]]],[11,"clone","","",202,[[]]],[11,"clone","","",203,[[]]],[11,"clone","","",204,[[]]],[11,"clone","","",205,[[]]],[11,"clone","","",206,[[]]],[11,"clone","","",207,[[]]],[11,"clone","","",208,[[]]],[11,"clone","","",209,[[]]],[11,"clone","","",210,[[]]],[11,"clone","","",211,[[]]],[11,"clone","","",212,[[]]],[11,"clone","","",213,[[]]],[11,"clone","","",214,[[]]],[11,"clone","","",215,[[]]],[11,"clone","","",216,[[]]],[11,"clone","","",217,[[]]],[11,"clone","","",218,[[]]],[11,"clone","","",219,[[]]],[11,"clone","","",220,[[]]],[11,"clone","","",221,[[]]],[11,"clone","","",222,[[]]],[11,"clone","","",223,[[]]],[11,"clone","","",224,[[]]],[11,"clone","","",225,[[]]],[11,"clone","","",226,[[]]],[11,"clone","","",227,[[]]],[11,"clone","","",228,[[]]],[11,"clone","","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",237,[[]]],[11,"clone","","",238,[[]]],[11,"clone","","",239,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",243,[[]]],[11,"clone","","",244,[[]]],[11,"clone","","",245,[[]]],[11,"clone","","",246,[[]]],[11,"clone","","",247,[[]]],[11,"clone","","",248,[[]]],[11,"clone","","",249,[[]]],[11,"clone","","",250,[[]]],[11,"clone","","",251,[[]]],[11,"clone","","",252,[[]]],[11,"clone","","",253,[[]]],[11,"clone","","",254,[[]]],[11,"clone","","",255,[[]]],[11,"clone","","",256,[[]]],[11,"clone","","",257,[[]]],[11,"clone","","",258,[[]]],[11,"clone","","",259,[[]]],[11,"clone","","",260,[[]]],[11,"clone","","",261,[[]]],[11,"clone","","",262,[[]]],[11,"clone","","",263,[[]]],[11,"clone","","",264,[[]]],[11,"clone","","",265,[[]]],[11,"clone","","",266,[[]]],[11,"clone","","",267,[[]]],[11,"clone","","",268,[[]]],[11,"clone","","",269,[[]]],[11,"clone","","",270,[[]]],[11,"clone","","",271,[[]]],[11,"clone","","",272,[[]]],[11,"clone","","",273,[[]]],[11,"clone","","",274,[[]]],[11,"clone","","",275,[[]]],[11,"clone","","",276,[[]]],[11,"clone","","",277,[[]]],[11,"clone","","",278,[[]]],[11,"clone","","",279,[[]]],[11,"clone","","",280,[[]]],[11,"clone","","",281,[[]]],[11,"clone","","",282,[[]]],[11,"clone","syn","",304,[[]]],[11,"clone","","",283,[[]]],[11,"clone","","",305,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",284,[[]]],[11,"clone","","",285,[[]]],[11,"clone","","",286,[[]]],[11,"clone","","",287,[[]]],[11,"clone","","",288,[[]]],[11,"clone","","",289,[[]]],[11,"clone","syn::buffer","",291,[[]]],[11,"clone","syn::punctuated","",294,[[]]],[11,"clone","","",306,[[]]],[11,"clone","","",308,[[]]],[11,"clone","","",309,[[]]],[11,"clone","","",310,[[]]],[11,"clone","","",293,[[]]],[11,"clone","syn","",109,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",0,[[]]],[11,"clone","","",110,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",107,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",103,[[]]],[11,"clone","","",104,[[]]],[11,"clone","","",105,[[]]],[11,"clone","","",106,[[]]],[11,"clone","","",156,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",108,[[]]],[11,"clone","","",102,[[]]],[11,"clone","","",170,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",111,[[]]],[11,"clone","","",112,[[]]],[11,"clone","","",113,[[]]],[11,"clone","","",114,[[]]],[11,"clone","","",115,[[]]],[11,"clone","","",116,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",160,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",161,[[]]],[11,"clone","syn::parse","",300,[[]]],[11,"clone","syn","",302,[[]]],[11,"default","syn::token","",180,[[]]],[11,"default","","",181,[[]]],[11,"default","","",182,[[]]],[11,"default","","",183,[[]]],[11,"default","","",184,[[]]],[11,"default","","",185,[[]]],[11,"default","","",186,[[]]],[11,"default","","",187,[[]]],[11,"default","","",188,[[]]],[11,"default","","",189,[[]]],[11,"default","","",190,[[]]],[11,"default","","",191,[[]]],[11,"default","","",192,[[]]],[11,"default","","",193,[[]]],[11,"default","","",194,[[]]],[11,"default","","",195,[[]]],[11,"default","","",196,[[]]],[11,"default","","",197,[[]]],[11,"default","","",198,[[]]],[11,"default","","",199,[[]]],[11,"default","","",200,[[]]],[11,"default","","",201,[[]]],[11,"default","","",202,[[]]],[11,"default","","",203,[[]]],[11,"default","","",204,[[]]],[11,"default","","",205,[[]]],[11,"default","","",206,[[]]],[11,"default","","",207,[[]]],[11,"default","","",208,[[]]],[11,"default","","",209,[[]]],[11,"default","","",210,[[]]],[11,"default","","",211,[[]]],[11,"default","","",212,[[]]],[11,"default","","",213,[[]]],[11,"default","","",214,[[]]],[11,"default","","",215,[[]]],[11,"default","","",216,[[]]],[11,"default","","",217,[[]]],[11,"default","","",218,[[]]],[11,"default","","",219,[[]]],[11,"default","","",220,[[]]],[11,"default","","",221,[[]]],[11,"default","","",222,[[]]],[11,"default","","",223,[[]]],[11,"default","","",224,[[]]],[11,"default","","",225,[[]]],[11,"default","","",226,[[]]],[11,"default","","",227,[[]]],[11,"default","","",228,[[]]],[11,"default","","",229,[[]]],[11,"default","","",230,[[]]],[11,"default","","",231,[[]]],[11,"default","","",232,[[]]],[11,"default","","",233,[[]]],[11,"default","","",234,[[]]],[11,"default","","",235,[[]]],[11,"default","","",236,[[]]],[11,"default","","",237,[[]]],[11,"default","","",238,[[]]],[11,"default","","",239,[[]]],[11,"default","","",240,[[]]],[11,"default","","",241,[[]]],[11,"default","","",242,[[]]],[11,"default","","",243,[[]]],[11,"default","","",244,[[]]],[11,"default","","",245,[[]]],[11,"default","","",246,[[]]],[11,"default","","",247,[[]]],[11,"default","","",248,[[]]],[11,"default","","",249,[[]]],[11,"default","","",250,[[]]],[11,"default","","",251,[[]]],[11,"default","","",252,[[]]],[11,"default","","",253,[[]]],[11,"default","","",254,[[]]],[11,"default","","",255,[[]]],[11,"default","","",256,[[]]],[11,"default","","",257,[[]]],[11,"default","","",258,[[]]],[11,"default","","",259,[[]]],[11,"default","","",260,[[]]],[11,"default","","",261,[[]]],[11,"default","","",262,[[]]],[11,"default","","",263,[[]]],[11,"default","","",264,[[]]],[11,"default","","",265,[[]]],[11,"default","","",266,[[]]],[11,"default","","",267,[[]]],[11,"default","","",268,[[]]],[11,"default","","",269,[[]]],[11,"default","","",270,[[]]],[11,"default","","",271,[[]]],[11,"default","","",272,[[]]],[11,"default","","",273,[[]]],[11,"default","","",274,[[]]],[11,"default","","",275,[[]]],[11,"default","","",276,[[]]],[11,"default","","",277,[[]]],[11,"default","","",278,[[]]],[11,"default","","",279,[[]]],[11,"default","","",280,[[]]],[11,"default","","",281,[[]]],[11,"default","","",282,[[]]],[11,"default","syn","",56,[[]]],[11,"default","","",54,[[]]],[11,"default","","",179,[[]]],[11,"default","syn::punctuated","",294,[[]]],[11,"cmp","syn","",100,[[["lifetime",3]],["ordering",4]]],[11,"eq","","",157,[[]]],[11,"eq","","",53,[[]]],[11,"eq","","",100,[[["lifetime",3]]]],[11,"eq","syn::buffer","",291,[[]]],[11,"partial_cmp","syn","",100,[[["lifetime",3]],[["option",4],["ordering",4]]]],[11,"deref","syn::token","",180,[[]]],[11,"deref","","",233,[[]]],[11,"deref","","",235,[[]]],[11,"deref","","",238,[[]]],[11,"deref","","",239,[[]]],[11,"deref","","",240,[[]]],[11,"deref","","",242,[[]]],[11,"deref","","",244,[[]]],[11,"deref","","",245,[[]]],[11,"deref","","",247,[[]]],[11,"deref","","",248,[[]]],[11,"deref","","",252,[[]]],[11,"deref","","",255,[[]]],[11,"deref","","",257,[[]]],[11,"deref","","",260,[[]]],[11,"deref","","",263,[[]]],[11,"deref","","",264,[[]]],[11,"deref","","",267,[[]]],[11,"deref","","",270,[[]]],[11,"deref","","",275,[[]]],[11,"deref","","",276,[[]]],[11,"deref","","",278,[[]]],[11,"deref","syn::parse","",300,[[]]],[11,"deref_mut","syn::token","",180,[[]]],[11,"deref_mut","","",233,[[]]],[11,"deref_mut","","",235,[[]]],[11,"deref_mut","","",238,[[]]],[11,"deref_mut","","",239,[[]]],[11,"deref_mut","","",240,[[]]],[11,"deref_mut","","",242,[[]]],[11,"deref_mut","","",244,[[]]],[11,"deref_mut","","",245,[[]]],[11,"deref_mut","","",247,[[]]],[11,"deref_mut","","",248,[[]]],[11,"deref_mut","","",252,[[]]],[11,"deref_mut","","",255,[[]]],[11,"deref_mut","","",257,[[]]],[11,"deref_mut","","",260,[[]]],[11,"deref_mut","","",263,[[]]],[11,"deref_mut","","",264,[[]]],[11,"deref_mut","","",267,[[]]],[11,"deref_mut","","",270,[[]]],[11,"deref_mut","","",275,[[]]],[11,"deref_mut","","",276,[[]]],[11,"deref_mut","","",278,[[]]],[11,"fmt","syn::parse","",301,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",302,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",288,[[["formatter",3]],["result",6]]],[11,"fmt","","",289,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",301,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",302,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",294,[[]]],[11,"index_mut","","",294,[[]]],[11,"hash","syn","",157,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",100,[[]]],[11,"from_iter","syn::punctuated","",294,[[["intoiterator",8]]]],[11,"from_iter","","",294,[[["intoiterator",8]]]],[11,"to_tokens","syn::token","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",197,[[["tokenstream",3]]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",238,[[["tokenstream",3]]]],[11,"to_tokens","","",239,[[["tokenstream",3]]]],[11,"to_tokens","","",240,[[["tokenstream",3]]]],[11,"to_tokens","","",241,[[["tokenstream",3]]]],[11,"to_tokens","","",242,[[["tokenstream",3]]]],[11,"to_tokens","","",243,[[["tokenstream",3]]]],[11,"to_tokens","","",244,[[["tokenstream",3]]]],[11,"to_tokens","","",245,[[["tokenstream",3]]]],[11,"to_tokens","","",246,[[["tokenstream",3]]]],[11,"to_tokens","","",247,[[["tokenstream",3]]]],[11,"to_tokens","","",248,[[["tokenstream",3]]]],[11,"to_tokens","","",249,[[["tokenstream",3]]]],[11,"to_tokens","","",250,[[["tokenstream",3]]]],[11,"to_tokens","","",251,[[["tokenstream",3]]]],[11,"to_tokens","","",252,[[["tokenstream",3]]]],[11,"to_tokens","","",253,[[["tokenstream",3]]]],[11,"to_tokens","","",254,[[["tokenstream",3]]]],[11,"to_tokens","","",255,[[["tokenstream",3]]]],[11,"to_tokens","","",256,[[["tokenstream",3]]]],[11,"to_tokens","","",257,[[["tokenstream",3]]]],[11,"to_tokens","","",258,[[["tokenstream",3]]]],[11,"to_tokens","","",259,[[["tokenstream",3]]]],[11,"to_tokens","","",260,[[["tokenstream",3]]]],[11,"to_tokens","","",261,[[["tokenstream",3]]]],[11,"to_tokens","","",262,[[["tokenstream",3]]]],[11,"to_tokens","","",263,[[["tokenstream",3]]]],[11,"to_tokens","","",264,[[["tokenstream",3]]]],[11,"to_tokens","","",265,[[["tokenstream",3]]]],[11,"to_tokens","","",266,[[["tokenstream",3]]]],[11,"to_tokens","","",267,[[["tokenstream",3]]]],[11,"to_tokens","","",268,[[["tokenstream",3]]]],[11,"to_tokens","","",269,[[["tokenstream",3]]]],[11,"to_tokens","","",270,[[["tokenstream",3]]]],[11,"to_tokens","","",271,[[["tokenstream",3]]]],[11,"to_tokens","","",272,[[["tokenstream",3]]]],[11,"to_tokens","","",273,[[["tokenstream",3]]]],[11,"to_tokens","","",274,[[["tokenstream",3]]]],[11,"to_tokens","","",275,[[["tokenstream",3]]]],[11,"to_tokens","","",276,[[["tokenstream",3]]]],[11,"to_tokens","","",277,[[["tokenstream",3]]]],[11,"to_tokens","","",278,[[["tokenstream",3]]]],[11,"to_tokens","syn","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",304,[[["tokenstream",3]]]],[11,"to_tokens","","",283,[[["tokenstream",3]]]],[11,"to_tokens","","",305,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",99,[[["tokenstream",3]]]],[11,"to_tokens","","",100,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",284,[[["tokenstream",3]]]],[11,"to_tokens","","",285,[[["tokenstream",3]]]],[11,"to_tokens","","",286,[[["tokenstream",3]]]],[11,"to_tokens","","",287,[[["tokenstream",3]]]],[11,"to_tokens","","",288,[[["tokenstream",3]]]],[11,"to_tokens","","",289,[[["tokenstream",3]]]],[11,"to_tokens","","",101,[[["tokenstream",3]]]],[11,"to_tokens","","",102,[[["tokenstream",3]]]],[11,"to_tokens","","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",108,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",111,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",112,[[["tokenstream",3]]]],[11,"to_tokens","","",117,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",114,[[["tokenstream",3]]]],[11,"to_tokens","","",113,[[["tokenstream",3]]]],[11,"to_tokens","","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",115,[[["tokenstream",3]]]],[11,"to_tokens","","",116,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",110,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",109,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",137,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",136,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",294,[[["tokenstream",3]]]],[11,"to_tokens","","",293,[[["tokenstream",3]]]],[11,"fmt","syn","",157,[[["formatter",3]],["result",6]]],[11,"span","","",157,[[],[["span",3],["option",4]]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"span","","",53,[[],[["span",3],["option",4]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",303,[[["span",3]],["ident",3]]],[11,"span","","Returns the span of this `Ident`.",303,[[],["span",3]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",303,[[["span",3]]]],[11,"visit_abi","syn::visit","",296,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",296,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",296,[[["arm",3]]]],[11,"visit_attr_style","","",296,[[["attrstyle",4]]]],[11,"visit_attribute","","",296,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",296,[[["barefnarg",3]]]],[11,"visit_bin_op","","",296,[[["binop",4]]]],[11,"visit_binding","","",296,[[["binding",3]]]],[11,"visit_block","","",296,[[["block",3]]]],[11,"visit_bound_lifetimes","","",296,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",296,[[["constparam",3]]]],[11,"visit_constraint","","",296,[[["constraint",3]]]],[11,"visit_data","","",296,[[["data",4]]]],[11,"visit_data_enum","","",296,[[["dataenum",3]]]],[11,"visit_data_struct","","",296,[[["datastruct",3]]]],[11,"visit_data_union","","",296,[[["dataunion",3]]]],[11,"visit_derive_input","","",296,[[["deriveinput",3]]]],[11,"visit_expr","","",296,[[["expr",4]]]],[11,"visit_expr_array","","",296,[[["exprarray",3]]]],[11,"visit_expr_assign","","",296,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",296,[[["exprassignop",3]]]],[11,"visit_expr_async","","",296,[[["exprasync",3]]]],[11,"visit_expr_await","","",296,[[["exprawait",3]]]],[11,"visit_expr_binary","","",296,[[["exprbinary",3]]]],[11,"visit_expr_block","","",296,[[["exprblock",3]]]],[11,"visit_expr_box","","",296,[[["exprbox",3]]]],[11,"visit_expr_break","","",296,[[["exprbreak",3]]]],[11,"visit_expr_call","","",296,[[["exprcall",3]]]],[11,"visit_expr_cast","","",296,[[["exprcast",3]]]],[11,"visit_expr_closure","","",296,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",296,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",296,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",296,[[["exprforloop",3]]]],[11,"visit_expr_group","","",296,[[["exprgroup",3]]]],[11,"visit_expr_if","","",296,[[["exprif",3]]]],[11,"visit_expr_index","","",296,[[["exprindex",3]]]],[11,"visit_expr_let","","",296,[[["exprlet",3]]]],[11,"visit_expr_lit","","",296,[[["exprlit",3]]]],[11,"visit_expr_loop","","",296,[[["exprloop",3]]]],[11,"visit_expr_macro","","",296,[[["exprmacro",3]]]],[11,"visit_expr_match","","",296,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",296,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",296,[[["exprparen",3]]]],[11,"visit_expr_path","","",296,[[["exprpath",3]]]],[11,"visit_expr_range","","",296,[[["exprrange",3]]]],[11,"visit_expr_reference","","",296,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",296,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",296,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",296,[[["exprstruct",3]]]],[11,"visit_expr_try","","",296,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",296,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",296,[[["exprtuple",3]]]],[11,"visit_expr_type","","",296,[[["exprtype",3]]]],[11,"visit_expr_unary","","",296,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",296,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",296,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",296,[[["expryield",3]]]],[11,"visit_field","","",296,[[["field",3]]]],[11,"visit_field_pat","","",296,[[["fieldpat",3]]]],[11,"visit_field_value","","",296,[[["fieldvalue",3]]]],[11,"visit_fields","","",296,[[["fields",4]]]],[11,"visit_fields_named","","",296,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",296,[[["fieldsunnamed",3]]]],[11,"visit_file","","",296,[[["file",3]]]],[11,"visit_fn_arg","","",296,[[["fnarg",4]]]],[11,"visit_foreign_item","","",296,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",296,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",296,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",296,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",296,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",296,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",296,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",296,[[["genericparam",4]]]],[11,"visit_generics","","",296,[[["generics",3]]]],[11,"visit_ident","","",296,[[["ident",3]]]],[11,"visit_impl_item","","",296,[[["implitem",4]]]],[11,"visit_impl_item_const","","",296,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",296,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",296,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",296,[[["implitemtype",3]]]],[11,"visit_index","","",296,[[["index",3]]]],[11,"visit_item","","",296,[[["item",4]]]],[11,"visit_item_const","","",296,[[["itemconst",3]]]],[11,"visit_item_enum","","",296,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",296,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",296,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",296,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",296,[[["itemimpl",3]]]],[11,"visit_item_macro","","",296,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",296,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",296,[[["itemmod",3]]]],[11,"visit_item_static","","",296,[[["itemstatic",3]]]],[11,"visit_item_struct","","",296,[[["itemstruct",3]]]],[11,"visit_item_trait","","",296,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",296,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",296,[[["itemtype",3]]]],[11,"visit_item_union","","",296,[[["itemunion",3]]]],[11,"visit_item_use","","",296,[[["itemuse",3]]]],[11,"visit_label","","",296,[[["label",3]]]],[11,"visit_lifetime","","",296,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",296,[[["lifetimedef",3]]]],[11,"visit_lit","","",296,[[["lit",4]]]],[11,"visit_lit_bool","","",296,[[["litbool",3]]]],[11,"visit_lit_byte","","",296,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",296,[[["litbytestr",3]]]],[11,"visit_lit_char","","",296,[[["litchar",3]]]],[11,"visit_lit_float","","",296,[[["litfloat",3]]]],[11,"visit_lit_int","","",296,[[["litint",3]]]],[11,"visit_lit_str","","",296,[[["litstr",3]]]],[11,"visit_local","","",296,[[["local",3]]]],[11,"visit_macro","","",296,[[["macro",3]]]],[11,"visit_macro_delimiter","","",296,[[["macrodelimiter",4]]]],[11,"visit_member","","",296,[[["member",4]]]],[11,"visit_meta","","",296,[[["meta",4]]]],[11,"visit_meta_list","","",296,[[["metalist",3]]]],[11,"visit_meta_name_value","","",296,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",296,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",296,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",296,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",296,[[["pat",4]]]],[11,"visit_pat_box","","",296,[[["patbox",3]]]],[11,"visit_pat_ident","","",296,[[["patident",3]]]],[11,"visit_pat_lit","","",296,[[["patlit",3]]]],[11,"visit_pat_macro","","",296,[[["patmacro",3]]]],[11,"visit_pat_or","","",296,[[["pator",3]]]],[11,"visit_pat_path","","",296,[[["patpath",3]]]],[11,"visit_pat_range","","",296,[[["patrange",3]]]],[11,"visit_pat_reference","","",296,[[["patreference",3]]]],[11,"visit_pat_rest","","",296,[[["patrest",3]]]],[11,"visit_pat_slice","","",296,[[["patslice",3]]]],[11,"visit_pat_struct","","",296,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",296,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",296,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",296,[[["pattype",3]]]],[11,"visit_pat_wild","","",296,[[["patwild",3]]]],[11,"visit_path","","",296,[[["path",3]]]],[11,"visit_path_arguments","","",296,[[["patharguments",4]]]],[11,"visit_path_segment","","",296,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",296,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",296,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",296,[[["predicatetype",3]]]],[11,"visit_qself","","",296,[[["qself",3]]]],[11,"visit_range_limits","","",296,[[["rangelimits",4]]]],[11,"visit_receiver","","",296,[[["receiver",3]]]],[11,"visit_return_type","","",296,[[["returntype",4]]]],[11,"visit_signature","","",296,[[["signature",3]]]],[11,"visit_span","","",296,[[["span",3]]]],[11,"visit_stmt","","",296,[[["stmt",4]]]],[11,"visit_trait_bound","","",296,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",296,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",296,[[["traititem",4]]]],[11,"visit_trait_item_const","","",296,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",296,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",296,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",296,[[["traititemtype",3]]]],[11,"visit_type","","",296,[[["type",4]]]],[11,"visit_type_array","","",296,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",296,[[["typebarefn",3]]]],[11,"visit_type_group","","",296,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",296,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",296,[[["typeinfer",3]]]],[11,"visit_type_macro","","",296,[[["typemacro",3]]]],[11,"visit_type_never","","",296,[[["typenever",3]]]],[11,"visit_type_param","","",296,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",296,[[["typeparambound",4]]]],[11,"visit_type_paren","","",296,[[["typeparen",3]]]],[11,"visit_type_path","","",296,[[["typepath",3]]]],[11,"visit_type_ptr","","",296,[[["typeptr",3]]]],[11,"visit_type_reference","","",296,[[["typereference",3]]]],[11,"visit_type_slice","","",296,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",296,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",296,[[["typetuple",3]]]],[11,"visit_un_op","","",296,[[["unop",4]]]],[11,"visit_use_glob","","",296,[[["useglob",3]]]],[11,"visit_use_group","","",296,[[["usegroup",3]]]],[11,"visit_use_name","","",296,[[["usename",3]]]],[11,"visit_use_path","","",296,[[["usepath",3]]]],[11,"visit_use_rename","","",296,[[["userename",3]]]],[11,"visit_use_tree","","",296,[[["usetree",4]]]],[11,"visit_variadic","","",296,[[["variadic",3]]]],[11,"visit_variant","","",296,[[["variant",3]]]],[11,"visit_vis_crate","","",296,[[["viscrate",3]]]],[11,"visit_vis_public","","",296,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",296,[[["visrestricted",3]]]],[11,"visit_visibility","","",296,[[["visibility",4]]]],[11,"visit_where_clause","","",296,[[["whereclause",3]]]],[11,"visit_where_predicate","","",296,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",312,[[["peek",8]]]],[11,"error","","Triggers an error at the current position of the parse…",312,[[],["error",3]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"Arm"],[3,"FieldValue"],[3,"Label"],[3,"MethodTurbofish"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[3,"File"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Block"],[3,"Local"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"GenericMethodArgument"],[4,"RangeLimits"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[4,"ImplItem"],[4,"Item"],[4,"TraitItem"],[4,"UseTree"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"Stmt"],[4,"ReturnType"],[4,"Type"],[4,"Pat"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"tls_cryptolib":{"doc":"","i":[[3,"Random","tls_cryptolib","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"EcOidTag","","Fixed length byte array.",null,null],[12,"0","","",1,null],[4,"CryptoError","","",null,null],[13,"CryptoError","","",2,null],[13,"HkdfError","","",2,null],[13,"InsufficientEntropy","","",2,null],[13,"InvalidCert","","",2,null],[13,"MacFailed","","",2,null],[13,"UnsupportedAlgorithm","","",2,null],[13,"VerifyFailed","","",2,null],[4,"NamedGroup","","",null,null],[13,"X25519","","",3,null],[13,"Secp256r1","","",3,null],[4,"HashAlgorithm","","",null,null],[13,"SHA256","","",4,null],[13,"SHA384","","",4,null],[4,"AeadAlgorithm","","",null,null],[13,"Chacha20Poly1305","","",5,null],[13,"Aes128Gcm","","",5,null],[13,"Aes256Gcm","","",5,null],[4,"SignatureScheme","","",null,null],[13,"ED25519","","",6,null],[13,"EcdsaSecp256r1Sha256","","",6,null],[13,"RsaPssRsaSha256","","",6,null],[5,"empty","","",null,[[],["byteseq",6]]],[5,"zeros","","",null,[[],["byteseq",6]]],[5,"hash_len","","",null,[[["hashalgorithm",4]]]],[5,"hmac_key_len","","",null,[[["hashalgorithm",4]]]],[5,"ae_key_len","","",null,[[["aeadalgorithm",4]]]],[5,"ae_iv_len","","",null,[[["aeadalgorithm",4]]]],[5,"dh_priv_len","","",null,[[["namedgroup",4]]]],[5,"dh_pub_len","","",null,[[["namedgroup",4]]]],[5,"zero_key","","",null,[[["hashalgorithm",4]],["key",6]]],[5,"secret_to_public","","",null,[[["namedgroup",4],["dhsk",6]],[["result",4],["cryptoerror",4],["dhpk",6]]]],[5,"ecdh","","",null,[[["namedgroup",4],["dhsk",6],["dhpk",6]],[["cryptoerror",4],["result",4],["key",6]]]],[5,"kem_priv_len","","",null,[[["kemscheme",6]]]],[5,"kem_pub_len","","",null,[[["kemscheme",6]]]],[5,"kem_priv_to_pub","","",null,[[["kemscheme",6],["kemsk",6]],[["cryptoerror",4],["result",4],["kempk",6]]]],[5,"kem_keygen","","",null,[[["kemscheme",6],["entropy",6]],[["cryptoerror",4],["result",4]]]],[5,"kem_encap","","",null,[[["kemscheme",6],["kempk",6],["entropy",6]],[["cryptoerror",4],["result",4]]]],[5,"kem_decap","","",null,[[["kemscheme",6],["kemsk",6],["byteseq",6]],[["cryptoerror",4],["result",4],["key",6]]]],[5,"hash","","",null,[[["hashalgorithm",4],["byteseq",6]],[["cryptoerror",4],["digest",6],["result",4]]]],[5,"hmac_tag","","",null,[[["hashalgorithm",4],["mackey",6],["byteseq",6]],[["result",4],["hmac",6],["cryptoerror",4]]]],[5,"hmac_verify","","",null,[[["hmac",6],["byteseq",6],["hashalgorithm",4],["mackey",6]],[["cryptoerror",4],["result",4]]]],[5,"verification_key_from_cert","","",null,[[["byteseq",6]],[["verificationkey",6],["result",4],["cryptoerror",4]]]],[5,"sign","","",null,[[["byteseq",6],["entropy",6],["signaturescheme",4],["signaturekey",6]],[["signature",6],["result",4],["cryptoerror",4]]]],[5,"verify","","",null,[[["verificationkey",6],["byteseq",6],["signaturescheme",4]],[["cryptoerror",4],["result",4]]]],[5,"hkdf_extract","","",null,[[["key",6],["hashalgorithm",4]],[["cryptoerror",4],["result",4],["key",6]]]],[5,"hkdf_expand","","",null,[[["key",6],["hashalgorithm",4],["byteseq",6]],[["cryptoerror",4],["result",4],["key",6]]]],[5,"aead_encrypt","","",null,[[["aeadalgorithm",4],["byteseq",6],["aeadiv",6],["aeadkey",6]],[["cryptoerror",4],["result",4],["byteseq",6]]]],[5,"aead_decrypt","","",null,[[["aeadalgorithm",4],["byteseq",6],["aeadiv",6],["aeadkey",6]],[["cryptoerror",4],["result",4],["byteseq",6]]]],[6,"Entropy","","",null,null],[6,"DhSk","","",null,null],[6,"DhPk","","",null,null],[6,"SignatureKey","","",null,null],[6,"VerificationKey","","",null,null],[6,"MacKey","","",null,null],[6,"AeadKey","","",null,null],[6,"Key","","",null,null],[6,"PSK","","",null,null],[6,"Digest","","",null,null],[6,"HMAC","","",null,null],[6,"Signature","","",null,null],[6,"AeadIv","","",null,null],[6,"AeadKeyIV","","",null,null],[6,"KemScheme","","",null,null],[6,"KemSk","","",null,null],[6,"KemPk","","",null,null],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["random",3]]],[11,"from_seq","","",0,[[],["random",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["random",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["random",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["random",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["ecoidtag",3]]],[11,"from_seq","","",1,[[],["ecoidtag",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["ecoidtag",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["ecoidtag",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["ecoidtag",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"clone","","",0,[[],["random",3]]],[11,"clone","","",3,[[],["namedgroup",4]]],[11,"clone","","",4,[[],["hashalgorithm",4]]],[11,"clone","","",5,[[],["aeadalgorithm",4]]],[11,"clone","","",6,[[],["signaturescheme",4]]],[11,"clone","","",1,[[],["ecoidtag",3]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"eq","","",3,[[["namedgroup",4]]]],[11,"eq","","",4,[[["hashalgorithm",4]]]],[11,"eq","","",5,[[["aeadalgorithm",4]]]],[11,"eq","","",6,[[["signaturescheme",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"rem","","",0,[[["random",3]],["random",3]]],[11,"rem","","",1,[[["ecoidtag",3]],["ecoidtag",3]]],[11,"sub","","",0,[[["random",3]],["random",3]]],[11,"sub","","",1,[[["ecoidtag",3]],["ecoidtag",3]]],[11,"add","","",0,[[["random",3]],["random",3]]],[11,"add","","",1,[[["ecoidtag",3]],["ecoidtag",3]]],[11,"mul","","",0,[[["random",3]],["random",3]]],[11,"mul","","",1,[[["ecoidtag",3]],["ecoidtag",3]]],[11,"not","","",0,[[]]],[11,"not","","",1,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitxor","","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"shl","","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shr","","",0,[[]]],[11,"shr","","",1,[[]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"create","","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"max_val","","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]]],"p":[[3,"Random"],[3,"EcOidTag"],[4,"CryptoError"],[4,"NamedGroup"],[4,"HashAlgorithm"],[4,"AeadAlgorithm"],[4,"SignatureScheme"]]},\
"typenum":{"doc":"This crate provides type-level numbers evaluated at…","i":[[3,"Greater","typenum","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Less","","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Equal","","A potential output from `Cmp`, this is the type equivalent…",null,null],[0,"bit","","Type-level bits.",null,null],[3,"B0","typenum::bit","The type-level bit 0.",null,null],[3,"B1","","The type-level bit 1.",null,null],[11,"new","","Instantiates a singleton representing this bit.",0,[[],["b0",3]]],[11,"new","","Instantiates a singleton representing this bit.",1,[[],["b1",3]]],[0,"int","typenum","Type-level signed integers.",null,null],[3,"PInt","typenum::int","Type-level signed integers with positive sign.",null,null],[3,"NInt","","Type-level signed integers with negative sign.",null,null],[3,"Z0","","The type-level signed integer 0.",null,null],[11,"new","","Instantiates a singleton representing this strictly…",2,[[],["pint",3]]],[11,"new","","Instantiates a singleton representing this strictly…",3,[[],["nint",3]]],[11,"new","","Instantiates a singleton representing the integer 0.",4,[[],["z0",3]]],[0,"marker_traits","typenum","All of the marker traits used in typenum.",null,null],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All…",null,null],[8,"Zero","","A marker trait to designate that a type is zero. Only…",null,null],[8,"Ord","","A Marker trait for the types `Greater`, `Equal`, and `Less`.",null,null],[10,"to_ordering","","",5,[[],["ordering",4]]],[8,"Bit","","The marker trait for compile time bits.",null,null],[18,"U8","","",6,null],[18,"BOOL","","",6,null],[10,"new","","Instantiates a singleton representing this bit.",6,[[]]],[10,"to_u8","","",6,[[]]],[10,"to_bool","","",6,[[]]],[8,"Unsigned","","The marker trait for compile time unsigned integers.",null,null],[18,"U8","","",7,null],[18,"U16","","",7,null],[18,"U32","","",7,null],[18,"U64","","",7,null],[18,"USIZE","","",7,null],[18,"I8","","",7,null],[18,"I16","","",7,null],[18,"I32","","",7,null],[18,"I64","","",7,null],[18,"ISIZE","","",7,null],[10,"to_u8","","",7,[[]]],[10,"to_u16","","",7,[[]]],[10,"to_u32","","",7,[[]]],[10,"to_u64","","",7,[[]]],[10,"to_usize","","",7,[[]]],[10,"to_i8","","",7,[[]]],[10,"to_i16","","",7,[[]]],[10,"to_i32","","",7,[[]]],[10,"to_i64","","",7,[[]]],[10,"to_isize","","",7,[[]]],[8,"Integer","","The marker trait for compile time signed integers.",null,null],[18,"I8","","",8,null],[18,"I16","","",8,null],[18,"I32","","",8,null],[18,"I64","","",8,null],[18,"ISIZE","","",8,null],[10,"to_i8","","",8,[[]]],[10,"to_i16","","",8,[[]]],[10,"to_i32","","",8,[[]]],[10,"to_i64","","",8,[[]]],[10,"to_isize","","",8,[[]]],[8,"TypeArray","","The marker trait for type-level arrays of type-level…",null,null],[8,"PowerOfTwo","","The marker trait for type-level numbers which are a power…",null,null],[0,"operator_aliases","typenum","Aliases for the type operators used in this crate. Their…",null,null],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A…",null,null],[6,"Or","","Alias for the associated type of `BitOr`: `Or<A, B> = <A…",null,null],[6,"Xor","","Alias for the associated type of `BitXor`: `Xor<A, B> = <A…",null,null],[6,"Shleft","","Alias for the associated type of `Shl`: `Shleft<A, B> = <A…",null,null],[6,"Shright","","Alias for the associated type of `Shr`: `Shright<A, B> =…",null,null],[6,"Sum","","Alias for the associated type of `Add`: `Sum<A, B> = <A as…",null,null],[6,"Diff","","Alias for the associated type of `Sub`: `Diff<A, B> = <A…",null,null],[6,"Prod","","Alias for the associated type of `Mul`: `Prod<A, B> = <A…",null,null],[6,"Quot","","Alias for the associated type of `Div`: `Quot<A, B> = <A…",null,null],[6,"Mod","","Alias for the associated type of `Rem`: `Mod<A, B> = <A as…",null,null],[6,"PartialQuot","","Alias for the associated type of `PartialDiv`:…",null,null],[6,"Negate","","Alias for the associated type of `Neg`: `Negate<A> = <A as…",null,null],[6,"AbsVal","","Alias for the associated type of `Abs`: `AbsVal<A> = <A as…",null,null],[6,"Exp","","Alias for the associated type of `Pow`: `Exp<A, B> = <A as…",null,null],[6,"Gcf","","Alias for the associated type of `Gcd`: `Gcf<A, B> = <A as…",null,null],[6,"Add1","","Alias to make it easy to add 1: `Add1<A> = <A as…",null,null],[6,"Sub1","","Alias to make it easy to subtract 1: `Sub1<A> = <A as…",null,null],[6,"Double","","Alias to make it easy to multiply by 2. `Double<A> =…",null,null],[6,"Square","","Alias to make it easy to square. `Square<A> = <A as…",null,null],[6,"Cube","","Alias to make it easy to cube. `Cube<A> = <Square<A> as…",null,null],[6,"Sqrt","","Alias for the associated type of `SquareRoot`: `Sqrt<A> =…",null,null],[6,"Compare","","Alias for the associated type of `Cmp`: `Compare<A, B> =…",null,null],[6,"Length","","Alias for the associated type of `Len`: `Length<A> = <A as…",null,null],[6,"Minimum","","Alias for the associated type of `Min`: `Minimum<A, B> =…",null,null],[6,"Maximum","","Alias for the associated type of `Max`: `Maximum<A, B> =…",null,null],[6,"Le","","Alias for the associated type of `IsLess`: `Le<A, B> = <A…",null,null],[6,"Eq","","Alias for the associated type of `IsEqual`: `Eq<A, B> = <A…",null,null],[6,"Gr","","Alias for the associated type of `IsGreater`: `Gr<A, B> =…",null,null],[6,"GrEq","","Alias for the associated type of `IsGreaterOrEqual`:…",null,null],[6,"LeEq","","Alias for the associated type of `IsLessOrEqual`: `LeEq<A,…",null,null],[6,"NotEq","","Alias for the associated type of `IsNotEqual`: `NotEq<A,…",null,null],[6,"Log2","","Alias for the associated type of `Logarithm2`: `Log2<A> =…",null,null],[0,"type_operators","typenum","Useful type operators that are not defined in `core::ops`.",null,null],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as…",null,null],[16,"Output","","Should always be `Self`",9,null],[8,"Abs","","A type operator that returns the absolute value.",null,null],[16,"Output","","The absolute value.",10,null],[8,"Pow","","A type operator that provides exponentiation by repeated…",null,null],[16,"Output","","The result of the exponentiation.",11,null],[10,"powi","","This function isn\'t used in this crate, but may be useful…",11,[[]]],[8,"Cmp","","A type operator for comparing `Self` and `Rhs`. It…",null,null],[16,"Output","","The result of the comparison. It should only ever be one…",12,null],[8,"Len","","A type operator that gives the length of an `Array` or the…",null,null],[16,"Output","","The length as a type-level unsigned integer.",13,null],[10,"len","","This function isn\'t used in this crate, but may be useful…",13,[[]]],[8,"PartialDiv","","Division as a partial function. This type operator…",null,null],[16,"Output","","The type of the result of the division",14,null],[10,"partial_div","","Method for performing the division",14,[[]]],[8,"Min","","A type operator that returns the minimum of `Self` and…",null,null],[16,"Output","","The type of the minimum of `Self` and `Rhs`",15,null],[10,"min","","Method returning the minimum",15,[[]]],[8,"Max","","A type operator that returns the maximum of `Self` and…",null,null],[16,"Output","","The type of the maximum of `Self` and `Rhs`",16,null],[10,"max","","Method returning the maximum",16,[[]]],[8,"IsLess","","A type operator that returns `True` if `Self < Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",17,null],[10,"is_less","","Method returning `True` or `False`.",17,[[]]],[8,"IsEqual","","A type operator that returns `True` if `Self == Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",18,null],[10,"is_equal","","Method returning `True` or `False`.",18,[[]]],[8,"IsGreater","","A type operator that returns `True` if `Self > Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",19,null],[10,"is_greater","","Method returning `True` or `False`.",19,[[]]],[8,"IsLessOrEqual","","A type operator that returns `True` if `Self <= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",20,null],[10,"is_less_or_equal","","Method returning `True` or `False`.",20,[[]]],[8,"IsNotEqual","","A type operator that returns `True` if `Self != Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",21,null],[10,"is_not_equal","","Method returning `True` or `False`.",21,[[]]],[8,"IsGreaterOrEqual","","A type operator that returns `True` if `Self >= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",22,null],[10,"is_greater_or_equal","","Method returning `True` or `False`.",22,[[]]],[8,"SquareRoot","","A type operator for taking the integer square root of…",null,null],[16,"Output","","The result of the integer square root.",23,null],[8,"Logarithm2","","A type operator for taking the integer binary logarithm of…",null,null],[16,"Output","","The result of the integer binary logarithm.",24,null],[8,"Gcd","","A type operator that computes the [greatest common…",null,null],[16,"Output","","The greatest common divisor.",25,null],[8,"ToInt","","A type operator for taking a concrete integer value from a…",null,null],[10,"to_int","","Method returning the concrete value for the type.",26,[[]]],[0,"uint","typenum","Type-level unsigned integers.",null,null],[3,"UTerm","typenum::uint","The terminating type for `UInt`; it always comes after the…",null,null],[3,"UInt","","`UInt` is defined recursively, where `B` is the least…",null,null],[6,"GetBitOut","","",null,null],[6,"SetBitOut","","Alias for the result of calling `SetBit`: `SetBitOut<N, I,…",null,null],[8,"GetBit","","",null,null],[16,"Output","","",27,null],[8,"SetBit","","A type operator that, when implemented for unsigned…",null,null],[16,"Output","","",28,null],[11,"new","","Instantiates a singleton representing this unsigned integer.",29,[[],["uterm",3]]],[11,"new","","Instantiates a singleton representing this unsigned integer.",30,[[],["uint",3]]],[0,"array","typenum","A type-level array of type-level numbers.",null,null],[3,"ATerm","typenum::array","The terminating type for type arrays.",null,null],[3,"TArr","","`TArr` is a type that acts as an array of types. It is…",null,null],[0,"consts","typenum","Type aliases for many constants.",null,null],[6,"True","typenum::consts","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[6,"True","typenum","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[14,"op","","Convenient type operations.",null,null],[14,"cmp","","A convenience macro for comparing type numbers. Use `op!`…",null,null],[14,"tarr","","Create a new type-level arrray. Only usable on Rust 1.13.0…",null,null],[14,"assert_type_eq","","Asserts that two types are the same.",null,null],[14,"assert_type","","Asserts that a type is `True`, aka `B1`.",null,null],[11,"from","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"is_less","typenum::bit","",0,[[]]],[11,"is_equal","","",0,[[]]],[11,"is_greater","","",0,[[]]],[11,"is_less_or_equal","","",0,[[]]],[11,"is_not_equal","","",0,[[]]],[11,"is_greater_or_equal","","",0,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"is_less","","",1,[[]]],[11,"is_equal","","",1,[[]]],[11,"is_greater","","",1,[[]]],[11,"is_less_or_equal","","",1,[[]]],[11,"is_not_equal","","",1,[[]]],[11,"is_greater_or_equal","","",1,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"powi","typenum::int","",2,[[]]],[11,"partial_div","","",2,[[]]],[11,"is_less","","",2,[[]]],[11,"is_equal","","",2,[[]]],[11,"is_greater","","",2,[[]]],[11,"is_less_or_equal","","",2,[[]]],[11,"is_not_equal","","",2,[[]]],[11,"is_greater_or_equal","","",2,[[]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"powi","","",3,[[]]],[11,"partial_div","","",3,[[]]],[11,"is_less","","",3,[[]]],[11,"is_equal","","",3,[[]]],[11,"is_greater","","",3,[[]]],[11,"is_less_or_equal","","",3,[[]]],[11,"is_not_equal","","",3,[[]]],[11,"is_greater_or_equal","","",3,[[]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"powi","","",4,[[]]],[11,"partial_div","","",4,[[]]],[11,"is_less","","",4,[[]]],[11,"is_equal","","",4,[[]]],[11,"is_greater","","",4,[[]]],[11,"is_less_or_equal","","",4,[[]]],[11,"is_not_equal","","",4,[[]]],[11,"is_greater_or_equal","","",4,[[]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"powi","typenum::uint","",29,[[]]],[11,"partial_div","","",29,[[]]],[11,"is_less","","",29,[[]]],[11,"is_equal","","",29,[[]]],[11,"is_greater","","",29,[[]]],[11,"is_less_or_equal","","",29,[[]]],[11,"is_not_equal","","",29,[[]]],[11,"is_greater_or_equal","","",29,[[]]],[11,"set_bit","","",29,[[]]],[11,"from","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"powi","","",30,[[]]],[11,"partial_div","","",30,[[]]],[11,"is_less","","",30,[[]]],[11,"is_equal","","",30,[[]]],[11,"is_greater","","",30,[[]]],[11,"is_less_or_equal","","",30,[[]]],[11,"is_not_equal","","",30,[[]]],[11,"is_greater_or_equal","","",30,[[]]],[11,"set_bit","","",30,[[]]],[11,"from","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"partial_div","typenum::array","",34,[[]]],[11,"from","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"partial_div","","",35,[[]]],[11,"from","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_ordering","typenum","",31,[[],["ordering",4]]],[11,"to_ordering","","",32,[[],["ordering",4]]],[11,"to_ordering","","",33,[[],["ordering",4]]],[11,"new","typenum::bit","",0,[[]]],[11,"to_u8","","",0,[[]]],[11,"to_bool","","",0,[[]]],[11,"new","","",1,[[]]],[11,"to_u8","","",1,[[]]],[11,"to_bool","","",1,[[]]],[11,"to_u8","typenum::uint","",29,[[]]],[11,"to_u16","","",29,[[]]],[11,"to_u32","","",29,[[]]],[11,"to_u64","","",29,[[]]],[11,"to_usize","","",29,[[]]],[11,"to_i8","","",29,[[]]],[11,"to_i16","","",29,[[]]],[11,"to_i32","","",29,[[]]],[11,"to_i64","","",29,[[]]],[11,"to_isize","","",29,[[]]],[11,"to_u8","","",30,[[]]],[11,"to_u16","","",30,[[]]],[11,"to_u32","","",30,[[]]],[11,"to_u64","","",30,[[]]],[11,"to_usize","","",30,[[]]],[11,"to_i8","","",30,[[]]],[11,"to_i16","","",30,[[]]],[11,"to_i32","","",30,[[]]],[11,"to_i64","","",30,[[]]],[11,"to_isize","","",30,[[]]],[11,"to_i8","typenum::int","",4,[[]]],[11,"to_i16","","",4,[[]]],[11,"to_i32","","",4,[[]]],[11,"to_i64","","",4,[[]]],[11,"to_isize","","",4,[[]]],[11,"to_i8","","",2,[[]]],[11,"to_i16","","",2,[[]]],[11,"to_i32","","",2,[[]]],[11,"to_i64","","",2,[[]]],[11,"to_isize","","",2,[[]]],[11,"to_i8","","",3,[[]]],[11,"to_i16","","",3,[[]]],[11,"to_i32","","",3,[[]]],[11,"to_i64","","",3,[[]]],[11,"to_isize","","",3,[[]]],[11,"powi","","",4,[[["z0",3]]]],[11,"powi","","",4,[[["pint",3]]]],[11,"powi","","",4,[[["nint",3]]]],[11,"powi","typenum","",36,[[["nint",3]]]],[11,"powi","","",37,[[["uint",3],["nint",3]]]],[11,"powi","","",37,[[["nint",3],["uint",3]]]],[11,"powi","typenum::int","",2,[[["z0",3]]]],[11,"powi","","",3,[[["z0",3]]]],[11,"powi","","",2,[[["pint",3]]]],[11,"powi","","",3,[[["pint",3],["uint",3]]]],[11,"powi","","",3,[[["pint",3],["uint",3]]]],[11,"compare","typenum::bit","",0,[[["b0",3]]]],[11,"compare","","",0,[[["b1",3]]]],[11,"compare","","",1,[[["b0",3]]]],[11,"compare","","",1,[[["b1",3]]]],[11,"compare","typenum::int","",4,[[["z0",3]]]],[11,"compare","","",4,[[["nint",3]]]],[11,"compare","","",4,[[["pint",3]]]],[11,"compare","","",2,[[["z0",3]]]],[11,"compare","","",3,[[["z0",3]]]],[11,"compare","","",3,[[["pint",3]]]],[11,"compare","","",2,[[["nint",3]]]],[11,"compare","","",2,[[["pint",3]]]],[11,"compare","","",3,[[["nint",3]]]],[11,"compare","typenum::uint","",29,[[["uterm",3]]]],[11,"compare","","",30,[[["uterm",3]]]],[11,"compare","","",29,[[["uint",3]]]],[11,"compare","","",30,[[["uint",3]]]],[11,"compare","","",30,[[["uint",3]]]],[11,"compare","","",30,[[["uint",3]]]],[11,"compare","","",30,[[["uint",3]]]],[11,"len","","",29,[[]]],[11,"len","","",30,[[]]],[11,"len","typenum::array","",34,[[]]],[11,"len","","",35,[[]]],[11,"partial_div","typenum::uint","",29,[[["uint",3]]]],[11,"partial_div","","",30,[[["uint",3]]]],[11,"partial_div","typenum::array","",34,[[]]],[11,"partial_div","","",35,[[]]],[11,"min","typenum::bit","",0,[[["b0",3]],["b0",3]]],[11,"min","","",0,[[["b1",3]],["b0",3]]],[11,"min","","",1,[[["b0",3]],["b0",3]]],[11,"min","","",1,[[["b1",3]],["b1",3]]],[11,"min","typenum::int","",4,[[["z0",3]]]],[11,"min","","",4,[[["pint",3]]]],[11,"min","","",4,[[["nint",3]]]],[11,"min","","",2,[[["z0",3]]]],[11,"min","","",3,[[["z0",3]]]],[11,"min","","",2,[[["pint",3]]]],[11,"min","","",3,[[["pint",3]]]],[11,"min","","",2,[[["nint",3]]]],[11,"min","","",3,[[["nint",3]]]],[11,"min","typenum::uint","",29,[[]]],[11,"min","","",30,[[]]],[11,"max","typenum::bit","",0,[[["b0",3]],["b0",3]]],[11,"max","","",0,[[["b1",3]],["b1",3]]],[11,"max","","",1,[[["b0",3]],["b1",3]]],[11,"max","","",1,[[["b1",3]],["b1",3]]],[11,"max","typenum::int","",4,[[["z0",3]]]],[11,"max","","",4,[[["pint",3]]]],[11,"max","","",4,[[["nint",3]]]],[11,"max","","",2,[[["z0",3]]]],[11,"max","","",3,[[["z0",3]]]],[11,"max","","",2,[[["pint",3]]]],[11,"max","","",3,[[["pint",3]]]],[11,"max","","",2,[[["nint",3]]]],[11,"max","","",3,[[["nint",3]]]],[11,"max","typenum::uint","",29,[[]]],[11,"max","","",30,[[]]],[11,"to_int","typenum::int","",4,[[]]],[11,"to_int","","",4,[[]]],[11,"to_int","","",4,[[]]],[11,"to_int","","",4,[[]]],[11,"to_int","","",3,[[]]],[11,"to_int","","",3,[[]]],[11,"to_int","","",3,[[]]],[11,"to_int","","",3,[[]]],[11,"to_int","","",2,[[]]],[11,"to_int","","",2,[[]]],[11,"to_int","","",2,[[]]],[11,"to_int","","",2,[[]]],[11,"to_int","typenum::uint","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",29,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"to_int","","",30,[[]]],[11,"get_bit","","",30,[[["u0",6]]]],[11,"get_bit","","",30,[[["uint",3]]]],[11,"get_bit","","",29,[[]]],[11,"fmt","typenum::bit","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","typenum::int","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","typenum::uint","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","typenum::array","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","typenum","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"div","typenum::int","",4,[[]]],[11,"div","","",2,[[["pint",3]]]],[11,"div","","",2,[[["nint",3]]]],[11,"div","","",3,[[["pint",3]]]],[11,"div","","",3,[[["nint",3]]]],[11,"div","typenum::uint","",29,[[["uint",3]]]],[11,"div","","",30,[[["uint",3]]]],[11,"div","typenum::array","",34,[[]]],[11,"div","","",35,[[]]],[11,"rem","typenum::int","",4,[[]]],[11,"rem","","",2,[[["pint",3]]]],[11,"rem","","",2,[[["nint",3]]]],[11,"rem","","",3,[[["pint",3]]]],[11,"rem","","",3,[[["nint",3]]]],[11,"rem","typenum::uint","",29,[[["uint",3]]]],[11,"rem","","",30,[[["uint",3]]]],[11,"rem","typenum::array","",34,[[]]],[11,"rem","","",35,[[]]],[11,"sub","typenum::int","",4,[[["z0",3]]]],[11,"sub","","",4,[[["pint",3]]]],[11,"sub","","",4,[[["nint",3]]]],[11,"sub","","",2,[[["z0",3]]]],[11,"sub","","",3,[[["z0",3]]]],[11,"sub","","",2,[[["nint",3]]]],[11,"sub","","",3,[[["pint",3]]]],[11,"sub","","",2,[[["pint",3]]]],[11,"sub","","",3,[[["nint",3]]]],[11,"sub","typenum::uint","",29,[[["b0",3]]]],[11,"sub","","",30,[[["b0",3]]]],[11,"sub","","",30,[[["b1",3]]]],[11,"sub","","",30,[[["b1",3]]]],[11,"sub","","",30,[[["b1",3]]]],[11,"sub","","",29,[[["uterm",3]]]],[11,"sub","","",30,[[]]],[11,"sub","typenum::array","",34,[[["aterm",3]]]],[11,"sub","","",35,[[["tarr",3]]]],[11,"eq","typenum::bit","",0,[[["b0",3]]]],[11,"eq","","",1,[[["b1",3]]]],[11,"eq","typenum::int","",2,[[["pint",3]]]],[11,"ne","","",2,[[["pint",3]]]],[11,"eq","","",3,[[["nint",3]]]],[11,"ne","","",3,[[["nint",3]]]],[11,"eq","","",4,[[["z0",3]]]],[11,"eq","typenum::uint","",29,[[["uterm",3]]]],[11,"eq","","",30,[[["uint",3]]]],[11,"ne","","",30,[[["uint",3]]]],[11,"eq","typenum::array","",34,[[["aterm",3]]]],[11,"eq","","",35,[[["tarr",3]]]],[11,"ne","","",35,[[["tarr",3]]]],[11,"eq","typenum","",31,[[["greater",3]]]],[11,"eq","","",32,[[["less",3]]]],[11,"eq","","",33,[[["equal",3]]]],[11,"cmp","typenum::bit","",0,[[["b0",3]],["ordering",4]]],[11,"cmp","","",1,[[["b1",3]],["ordering",4]]],[11,"cmp","typenum::int","",2,[[["pint",3]],["ordering",4]]],[11,"cmp","","",3,[[["nint",3]],["ordering",4]]],[11,"cmp","","",4,[[["z0",3]],["ordering",4]]],[11,"cmp","typenum::uint","",29,[[["uterm",3]],["ordering",4]]],[11,"cmp","","",30,[[["uint",3]],["ordering",4]]],[11,"cmp","typenum::array","",34,[[["aterm",3]],["ordering",4]]],[11,"cmp","","",35,[[["tarr",3]],["ordering",4]]],[11,"cmp","typenum","",31,[[["greater",3]],["ordering",4]]],[11,"cmp","","",32,[[["less",3]],["ordering",4]]],[11,"cmp","","",33,[[["equal",3]],["ordering",4]]],[11,"partial_cmp","typenum::bit","",0,[[["b0",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["b1",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","typenum::int","",2,[[["pint",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["pint",3]]]],[11,"le","","",2,[[["pint",3]]]],[11,"gt","","",2,[[["pint",3]]]],[11,"ge","","",2,[[["pint",3]]]],[11,"partial_cmp","","",3,[[["nint",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["nint",3]]]],[11,"le","","",3,[[["nint",3]]]],[11,"gt","","",3,[[["nint",3]]]],[11,"ge","","",3,[[["nint",3]]]],[11,"partial_cmp","","",4,[[["z0",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","typenum::uint","",29,[[["uterm",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",30,[[["uint",3]],[["option",4],["ordering",4]]]],[11,"lt","","",30,[[["uint",3]]]],[11,"le","","",30,[[["uint",3]]]],[11,"gt","","",30,[[["uint",3]]]],[11,"ge","","",30,[[["uint",3]]]],[11,"partial_cmp","typenum::array","",34,[[["aterm",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",35,[[["tarr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",35,[[["tarr",3]]]],[11,"le","","",35,[[["tarr",3]]]],[11,"gt","","",35,[[["tarr",3]]]],[11,"ge","","",35,[[["tarr",3]]]],[11,"partial_cmp","typenum","",31,[[["greater",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",32,[[["less",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",33,[[["equal",3]],[["option",4],["ordering",4]]]],[11,"add","typenum::int","",4,[[]]],[11,"add","","",2,[[["z0",3]]]],[11,"add","","",3,[[["z0",3]]]],[11,"add","","",2,[[["pint",3]]]],[11,"add","","",3,[[["nint",3]]]],[11,"add","","",2,[[["nint",3]]]],[11,"add","","",3,[[["pint",3]]]],[11,"add","typenum::uint","",29,[[["b0",3]]]],[11,"add","","",30,[[["b0",3]]]],[11,"add","","",29,[[["b1",3]]]],[11,"add","","",30,[[["b1",3]]]],[11,"add","","",30,[[["b1",3]]]],[11,"add","","",29,[[]]],[11,"add","","",30,[[["uterm",3]]]],[11,"add","","",30,[[["uint",3],["b0",3]]]],[11,"add","","",30,[[["b1",3],["uint",3]]]],[11,"add","","",30,[[["uint",3],["b0",3]]]],[11,"add","","",30,[[["b1",3],["uint",3]]]],[11,"add","typenum::array","",34,[[["aterm",3]]]],[11,"add","","",35,[[["tarr",3]]]],[11,"mul","typenum::int","",4,[[]]],[11,"mul","","",2,[[["z0",3]]]],[11,"mul","","",3,[[["z0",3]]]],[11,"mul","","",2,[[["pint",3]]]],[11,"mul","","",3,[[["nint",3]]]],[11,"mul","","",2,[[["nint",3]]]],[11,"mul","","",3,[[["pint",3]]]],[11,"mul","typenum::uint","",30,[[["b0",3]]]],[11,"mul","","",29,[[["b0",3]]]],[11,"mul","","",29,[[["b1",3]]]],[11,"mul","","",30,[[["b1",3]]]],[11,"mul","","",30,[[["uterm",3]]]],[11,"mul","","",29,[[]]],[11,"mul","","",30,[[["uint",3]]]],[11,"mul","","",30,[[["uint",3]]]],[11,"mul","typenum::array","",34,[[]]],[11,"mul","","",35,[[]]],[11,"mul","typenum::int","",4,[[["aterm",3]]]],[11,"mul","","",2,[[["aterm",3]]]],[11,"mul","","",3,[[["aterm",3]]]],[11,"mul","","",4,[[["tarr",3]]]],[11,"mul","","",2,[[["tarr",3]]]],[11,"mul","","",3,[[["tarr",3]]]],[11,"neg","","",4,[[]]],[11,"neg","","",2,[[]]],[11,"neg","","",3,[[]]],[11,"neg","typenum::array","",34,[[]]],[11,"neg","","",35,[[]]],[11,"not","typenum::bit","",0,[[]]],[11,"not","","",1,[[]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",1,[[["b0",3]]]],[11,"bitand","","",1,[[["b1",3]]]],[11,"bitand","typenum::uint","",29,[[]]],[11,"bitand","","",30,[[]]],[11,"bitor","typenum::bit","",0,[[["b0",3]]]],[11,"bitor","","",0,[[["b1",3]]]],[11,"bitor","","",1,[[]]],[11,"bitor","typenum::uint","",29,[[]]],[11,"bitor","","",30,[[["uterm",3]]]],[11,"bitor","","",30,[[["uint",3],["b0",3]]]],[11,"bitor","","",30,[[["b1",3],["uint",3]]]],[11,"bitor","","",30,[[["uint",3],["b0",3]]]],[11,"bitor","","",30,[[["b1",3],["uint",3]]]],[11,"bitxor","typenum::bit","",0,[[["b0",3]]]],[11,"bitxor","","",1,[[["b0",3]]]],[11,"bitxor","","",0,[[["b1",3]]]],[11,"bitxor","","",1,[[["b1",3]]]],[11,"bitxor","typenum::uint","",29,[[]]],[11,"bitxor","","",30,[[]]],[11,"shl","","",29,[[["b0",3]]]],[11,"shl","","",29,[[["b1",3]]]],[11,"shl","","",30,[[["b0",3]]]],[11,"shl","","",30,[[["b1",3]]]],[11,"shl","","",30,[[["uterm",3]]]],[11,"shl","","",29,[[]]],[11,"shl","","",30,[[["uint",3]]]],[11,"shr","","",29,[[]]],[11,"shr","","",30,[[["uterm",3]]]],[11,"shr","","",29,[[["b0",3]]]],[11,"shr","","",29,[[["b1",3]]]],[11,"shr","","",30,[[["b0",3]]]],[11,"shr","","",30,[[["b1",3]]]],[11,"shr","","",30,[[["uint",3]]]],[11,"hash","typenum::bit","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","typenum::int","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","typenum::uint","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","typenum::array","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","typenum","",31,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"clone","typenum::bit","",0,[[],["b0",3]]],[11,"clone","","",1,[[],["b1",3]]],[11,"clone","typenum::int","",2,[[],["pint",3]]],[11,"clone","","",3,[[],["nint",3]]],[11,"clone","","",4,[[],["z0",3]]],[11,"clone","typenum::uint","",29,[[],["uterm",3]]],[11,"clone","","",30,[[],["uint",3]]],[11,"clone","typenum::array","",34,[[],["aterm",3]]],[11,"clone","","",35,[[],["tarr",3]]],[11,"clone","typenum","",31,[[],["greater",3]]],[11,"clone","","",32,[[],["less",3]]],[11,"clone","","",33,[[],["equal",3]]],[11,"default","typenum::bit","",0,[[],["b0",3]]],[11,"default","","",1,[[],["b1",3]]],[11,"default","typenum::int","",2,[[],["pint",3]]],[11,"default","","",3,[[],["nint",3]]],[11,"default","","",4,[[],["z0",3]]],[11,"default","typenum::uint","",29,[[],["uterm",3]]],[11,"default","","",30,[[],["uint",3]]],[11,"default","typenum","",31,[[],["greater",3]]],[11,"default","","",32,[[],["less",3]]],[11,"default","","",33,[[],["equal",3]]]],"p":[[3,"B0"],[3,"B1"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,"Unsigned"],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,"PartialDiv"],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,"IsGreater"],[8,"IsLessOrEqual"],[8,"IsNotEqual"],[8,"IsGreaterOrEqual"],[8,"SquareRoot"],[8,"Logarithm2"],[8,"Gcd"],[8,"ToInt"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]},\
"unicode_xid":{"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[]]]],"p":[[8,"UnicodeXID"]]},\
"unsafe_hacspec_examples":{"doc":"","i":[[0,"aes_gcm","unsafe_hacspec_examples","",null,null],[5,"encrypt_aes128","unsafe_hacspec_examples::aes_gcm","",null,[[["nonce",3],["byteseq",6],["key128",3]]]],[5,"encrypt_aes256","","",null,[[["nonce",3],["byteseq",6],["key256",3]]]],[5,"decrypt_aes128","","",null,[[["nonce",3],["byteseq",6],["tag",3],["key128",3]],[["byteseq",6],["string",3],["result",4]]]],[5,"decrypt_aes256","","",null,[[["nonce",3],["byteseq",6],["tag",3],["key256",3]],[["byteseq",6],["string",3],["result",4]]]],[0,"aes","","",null,null],[3,"Block","unsafe_hacspec_examples::aes_gcm::aes","Fixed length byte array.",null,null],[12,"0","","",0,null],[3,"Word","","Fixed length byte array.",null,null],[12,"0","","",1,null],[3,"RoundKey","","Fixed length byte array.",null,null],[12,"0","","",2,null],[3,"Nonce","","Fixed length byte array.",null,null],[12,"0","","",3,null],[3,"SBox","","Fixed length byte array.",null,null],[12,"0","","",4,null],[3,"RCon","","Fixed length byte array.",null,null],[12,"0","","",5,null],[3,"Bytes144","","Fixed length byte array.",null,null],[12,"0","","",6,null],[3,"Bytes176","","Fixed length byte array.",null,null],[12,"0","","",7,null],[3,"Bytes208","","Fixed length byte array.",null,null],[12,"0","","",8,null],[3,"Bytes240","","Fixed length byte array.",null,null],[12,"0","","",9,null],[3,"Key128","","Fixed length byte array.",null,null],[12,"0","","",10,null],[3,"Key256","","Fixed length byte array.",null,null],[12,"0","","",11,null],[4,"AesVariant","","",null,null],[13,"Aes128","","",12,null],[13,"Aes256","","",12,null],[5,"aes128_encrypt_block","","",null,[[["key128",3],["block",3]],["block",3]]],[5,"aes256_encrypt_block","","",null,[[["block",3],["key256",3]],["block",3]]],[5,"aes128_encrypt","","",null,[[["byteseq",6],["nonce",3],["key128",3],["u32",3]],["byteseq",6]]],[5,"aes128_decrypt","","",null,[[["byteseq",6],["nonce",3],["key128",3],["u32",3]],["byteseq",6]]],[5,"aes256_encrypt","","",null,[[["byteseq",6],["nonce",3],["key256",3],["u32",3]],["byteseq",6]]],[5,"aes256_decrypt","","",null,[[["byteseq",6],["nonce",3],["key256",3],["u32",3]],["byteseq",6]]],[11,"new","","",0,[[]]],[11,"length","","",0,[[]]],[11,"from_array","","",0,[[]]],[11,"from_native_slice","","",0,[[]]],[11,"capacity","","",0,[[]]],[11,"from_slice","","",0,[[]]],[11,"concat","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",0,[[["range",3]]]],[11,"slice","","",0,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",0,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",0,[[]]],[11,"get_chunk_len","","",0,[[]]],[11,"get_chunk","","",0,[[]]],[11,"set_chunk","","",0,[[]]],[11,"from_vec","","",0,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",0,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",0,[[],["block",3]]],[11,"declassify_eq","","",0,[[]]],[11,"to_be_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",0,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",0,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",0,[[],["block",3]]],[11,"to_be_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",0,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",0,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",0,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",0,[[],["string",3]]],[11,"new","","",1,[[]]],[11,"length","","",1,[[]]],[11,"from_array","","",1,[[]]],[11,"from_native_slice","","",1,[[]]],[11,"capacity","","",1,[[]]],[11,"from_slice","","",1,[[]]],[11,"concat","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",1,[[["range",3]]]],[11,"slice","","",1,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",1,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",1,[[]]],[11,"get_chunk_len","","",1,[[]]],[11,"get_chunk","","",1,[[]]],[11,"set_chunk","","",1,[[]]],[11,"from_vec","","",1,[[["vec",3],["u8",3]],["word",3]]],[11,"from_seq","","",1,[[],["word",3]]],[11,"from_hex","","Read hex string to Bytes.",1,[[],["word",3]]],[11,"declassify_eq","","",1,[[]]],[11,"to_be_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",1,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",1,[[],["word",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",1,[[],["word",3]]],[11,"to_be_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",1,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",1,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",1,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",1,[[],["string",3]]],[11,"new","","",2,[[]]],[11,"length","","",2,[[]]],[11,"from_array","","",2,[[]]],[11,"from_native_slice","","",2,[[]]],[11,"capacity","","",2,[[]]],[11,"from_slice","","",2,[[]]],[11,"concat","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",2,[[["range",3]]]],[11,"slice","","",2,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",2,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",2,[[]]],[11,"get_chunk_len","","",2,[[]]],[11,"get_chunk","","",2,[[]]],[11,"set_chunk","","",2,[[]]],[11,"from_vec","","",2,[[["vec",3],["u8",3]],["roundkey",3]]],[11,"from_seq","","",2,[[],["roundkey",3]]],[11,"from_hex","","Read hex string to Bytes.",2,[[],["roundkey",3]]],[11,"declassify_eq","","",2,[[]]],[11,"to_be_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",2,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",2,[[],["roundkey",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",2,[[],["roundkey",3]]],[11,"to_be_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",2,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",2,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",2,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",2,[[],["string",3]]],[11,"new","","",3,[[]]],[11,"length","","",3,[[]]],[11,"from_array","","",3,[[]]],[11,"from_native_slice","","",3,[[]]],[11,"capacity","","",3,[[]]],[11,"from_slice","","",3,[[]]],[11,"concat","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",3,[[["range",3]]]],[11,"slice","","",3,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",3,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",3,[[]]],[11,"get_chunk_len","","",3,[[]]],[11,"get_chunk","","",3,[[]]],[11,"set_chunk","","",3,[[]]],[11,"from_vec","","",3,[[["vec",3],["u8",3]],["nonce",3]]],[11,"from_seq","","",3,[[],["nonce",3]]],[11,"from_hex","","Read hex string to Bytes.",3,[[],["nonce",3]]],[11,"declassify_eq","","",3,[[]]],[11,"to_be_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",3,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",3,[[],["nonce",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",3,[[],["nonce",3]]],[11,"to_be_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",3,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",3,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",3,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",3,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",3,[[],["string",3]]],[11,"new","","",4,[[]]],[11,"length","","",4,[[]]],[11,"from_array","","",4,[[]]],[11,"from_native_slice","","",4,[[]]],[11,"capacity","","",4,[[]]],[11,"from_slice","","",4,[[]]],[11,"concat","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",4,[[["range",3]]]],[11,"slice","","",4,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",4,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",4,[[]]],[11,"get_chunk_len","","",4,[[]]],[11,"get_chunk","","",4,[[]]],[11,"set_chunk","","",4,[[]]],[11,"from_vec","","",4,[[["vec",3],["u8",3]],["sbox",3]]],[11,"from_seq","","",4,[[],["sbox",3]]],[11,"from_hex","","Read hex string to Bytes.",4,[[],["sbox",3]]],[11,"declassify_eq","","",4,[[]]],[11,"to_be_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",4,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",4,[[],["sbox",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",4,[[],["sbox",3]]],[11,"to_be_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",4,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",4,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",4,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",4,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",4,[[],["string",3]]],[11,"new","","",5,[[]]],[11,"length","","",5,[[]]],[11,"from_array","","",5,[[]]],[11,"from_native_slice","","",5,[[]]],[11,"capacity","","",5,[[]]],[11,"from_slice","","",5,[[]]],[11,"concat","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",5,[[["range",3]]]],[11,"slice","","",5,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",5,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",5,[[]]],[11,"get_chunk_len","","",5,[[]]],[11,"get_chunk","","",5,[[]]],[11,"set_chunk","","",5,[[]]],[11,"from_vec","","",5,[[["vec",3],["u8",3]],["rcon",3]]],[11,"from_seq","","",5,[[],["rcon",3]]],[11,"from_hex","","Read hex string to Bytes.",5,[[],["rcon",3]]],[11,"declassify_eq","","",5,[[]]],[11,"to_be_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",5,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",5,[[],["rcon",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",5,[[],["rcon",3]]],[11,"to_be_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",5,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",5,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",5,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",5,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",5,[[],["string",3]]],[11,"new","","",6,[[]]],[11,"length","","",6,[[]]],[11,"from_array","","",6,[[]]],[11,"from_native_slice","","",6,[[]]],[11,"capacity","","",6,[[]]],[11,"from_slice","","",6,[[]]],[11,"concat","","",6,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",6,[[["range",3]]]],[11,"slice","","",6,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",6,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",6,[[]]],[11,"get_chunk_len","","",6,[[]]],[11,"get_chunk","","",6,[[]]],[11,"set_chunk","","",6,[[]]],[11,"from_vec","","",6,[[["vec",3],["u8",3]],["bytes144",3]]],[11,"from_seq","","",6,[[],["bytes144",3]]],[11,"from_hex","","Read hex string to Bytes.",6,[[],["bytes144",3]]],[11,"declassify_eq","","",6,[[]]],[11,"to_be_bytes","","",6,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",6,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",6,[[],["bytes144",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",6,[[],["bytes144",3]]],[11,"to_be_U32s","","",6,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",6,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",6,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",6,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",6,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",6,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",6,[[],["string",3]]],[11,"new","","",7,[[]]],[11,"length","","",7,[[]]],[11,"from_array","","",7,[[]]],[11,"from_native_slice","","",7,[[]]],[11,"capacity","","",7,[[]]],[11,"from_slice","","",7,[[]]],[11,"concat","","",7,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",7,[[["range",3]]]],[11,"slice","","",7,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",7,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",7,[[]]],[11,"get_chunk_len","","",7,[[]]],[11,"get_chunk","","",7,[[]]],[11,"set_chunk","","",7,[[]]],[11,"from_vec","","",7,[[["vec",3],["u8",3]],["bytes176",3]]],[11,"from_seq","","",7,[[],["bytes176",3]]],[11,"from_hex","","Read hex string to Bytes.",7,[[],["bytes176",3]]],[11,"declassify_eq","","",7,[[]]],[11,"to_be_bytes","","",7,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",7,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",7,[[],["bytes176",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",7,[[],["bytes176",3]]],[11,"to_be_U32s","","",7,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",7,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",7,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",7,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",7,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",7,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",7,[[],["string",3]]],[11,"new","","",8,[[]]],[11,"length","","",8,[[]]],[11,"from_array","","",8,[[]]],[11,"from_native_slice","","",8,[[]]],[11,"capacity","","",8,[[]]],[11,"from_slice","","",8,[[]]],[11,"concat","","",8,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",8,[[["range",3]]]],[11,"slice","","",8,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",8,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",8,[[]]],[11,"get_chunk_len","","",8,[[]]],[11,"get_chunk","","",8,[[]]],[11,"set_chunk","","",8,[[]]],[11,"from_vec","","",8,[[["vec",3],["u8",3]],["bytes208",3]]],[11,"from_seq","","",8,[[],["bytes208",3]]],[11,"from_hex","","Read hex string to Bytes.",8,[[],["bytes208",3]]],[11,"declassify_eq","","",8,[[]]],[11,"to_be_bytes","","",8,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",8,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",8,[[],["bytes208",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",8,[[],["bytes208",3]]],[11,"to_be_U32s","","",8,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",8,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",8,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",8,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",8,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",8,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",8,[[],["string",3]]],[11,"new","","",9,[[]]],[11,"length","","",9,[[]]],[11,"from_array","","",9,[[]]],[11,"from_native_slice","","",9,[[]]],[11,"capacity","","",9,[[]]],[11,"from_slice","","",9,[[]]],[11,"concat","","",9,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",9,[[["range",3]]]],[11,"slice","","",9,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",9,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",9,[[]]],[11,"get_chunk_len","","",9,[[]]],[11,"get_chunk","","",9,[[]]],[11,"set_chunk","","",9,[[]]],[11,"from_vec","","",9,[[["vec",3],["u8",3]],["bytes240",3]]],[11,"from_seq","","",9,[[],["bytes240",3]]],[11,"from_hex","","Read hex string to Bytes.",9,[[],["bytes240",3]]],[11,"declassify_eq","","",9,[[]]],[11,"to_be_bytes","","",9,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",9,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",9,[[],["bytes240",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",9,[[],["bytes240",3]]],[11,"to_be_U32s","","",9,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",9,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",9,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",9,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",9,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",9,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",9,[[],["string",3]]],[11,"new","","",10,[[]]],[11,"length","","",10,[[]]],[11,"from_array","","",10,[[]]],[11,"from_native_slice","","",10,[[]]],[11,"capacity","","",10,[[]]],[11,"from_slice","","",10,[[]]],[11,"concat","","",10,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",10,[[["range",3]]]],[11,"slice","","",10,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",10,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",10,[[]]],[11,"get_chunk_len","","",10,[[]]],[11,"get_chunk","","",10,[[]]],[11,"set_chunk","","",10,[[]]],[11,"from_vec","","",10,[[["vec",3],["u8",3]],["key128",3]]],[11,"from_seq","","",10,[[],["key128",3]]],[11,"from_hex","","Read hex string to Bytes.",10,[[],["key128",3]]],[11,"declassify_eq","","",10,[[]]],[11,"to_be_bytes","","",10,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",10,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",10,[[],["key128",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",10,[[],["key128",3]]],[11,"to_be_U32s","","",10,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",10,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",10,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",10,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",10,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",10,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",10,[[],["string",3]]],[11,"new","","",11,[[]]],[11,"length","","",11,[[]]],[11,"from_array","","",11,[[]]],[11,"from_native_slice","","",11,[[]]],[11,"capacity","","",11,[[]]],[11,"from_slice","","",11,[[]]],[11,"concat","","",11,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",11,[[["range",3]]]],[11,"slice","","",11,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",11,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",11,[[]]],[11,"get_chunk_len","","",11,[[]]],[11,"get_chunk","","",11,[[]]],[11,"set_chunk","","",11,[[]]],[11,"from_vec","","",11,[[["vec",3],["u8",3]],["key256",3]]],[11,"from_seq","","",11,[[],["key256",3]]],[11,"from_hex","","Read hex string to Bytes.",11,[[],["key256",3]]],[11,"declassify_eq","","",11,[[]]],[11,"to_be_bytes","","",11,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",11,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",11,[[],["key256",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",11,[[],["key256",3]]],[11,"to_be_U32s","","",11,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",11,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",11,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",11,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",11,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",11,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",11,[[],["string",3]]],[0,"gf128","unsafe_hacspec_examples::aes_gcm","",null,null],[3,"Block","unsafe_hacspec_examples::aes_gcm::gf128","Fixed length byte array.",null,null],[12,"0","","",13,null],[3,"Key","","Fixed length byte array.",null,null],[12,"0","","",14,null],[3,"Tag","","Fixed length byte array.",null,null],[12,"0","","",15,null],[5,"gmac","","",null,[[["key",3],["byteseq",6]],["tag",3]]],[11,"new","","",13,[[]]],[11,"length","","",13,[[]]],[11,"from_array","","",13,[[]]],[11,"from_native_slice","","",13,[[]]],[11,"capacity","","",13,[[]]],[11,"from_slice","","",13,[[]]],[11,"concat","","",13,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",13,[[["range",3]]]],[11,"slice","","",13,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",13,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",13,[[]]],[11,"get_chunk_len","","",13,[[]]],[11,"get_chunk","","",13,[[]]],[11,"set_chunk","","",13,[[]]],[11,"from_vec","","",13,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",13,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",13,[[],["block",3]]],[11,"declassify_eq","","",13,[[]]],[11,"to_be_bytes","","",13,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",13,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",13,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",13,[[],["block",3]]],[11,"to_be_U32s","","",13,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",13,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",13,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",13,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",13,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",13,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",13,[[],["string",3]]],[11,"new","","",14,[[]]],[11,"length","","",14,[[]]],[11,"from_array","","",14,[[]]],[11,"from_native_slice","","",14,[[]]],[11,"capacity","","",14,[[]]],[11,"from_slice","","",14,[[]]],[11,"concat","","",14,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",14,[[["range",3]]]],[11,"slice","","",14,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",14,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",14,[[]]],[11,"get_chunk_len","","",14,[[]]],[11,"get_chunk","","",14,[[]]],[11,"set_chunk","","",14,[[]]],[11,"from_vec","","",14,[[["vec",3],["u8",3]],["key",3]]],[11,"from_seq","","",14,[[],["key",3]]],[11,"from_hex","","Read hex string to Bytes.",14,[[],["key",3]]],[11,"declassify_eq","","",14,[[]]],[11,"to_be_bytes","","",14,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",14,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",14,[[],["key",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",14,[[],["key",3]]],[11,"to_be_U32s","","",14,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",14,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",14,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",14,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",14,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",14,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",14,[[],["string",3]]],[11,"new","","",15,[[]]],[11,"length","","",15,[[]]],[11,"from_array","","",15,[[]]],[11,"from_native_slice","","",15,[[]]],[11,"capacity","","",15,[[]]],[11,"from_slice","","",15,[[]]],[11,"concat","","",15,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",15,[[["range",3]]]],[11,"slice","","",15,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",15,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",15,[[]]],[11,"get_chunk_len","","",15,[[]]],[11,"get_chunk","","",15,[[]]],[11,"set_chunk","","",15,[[]]],[11,"from_vec","","",15,[[["vec",3],["u8",3]],["tag",3]]],[11,"from_seq","","",15,[[],["tag",3]]],[11,"from_hex","","Read hex string to Bytes.",15,[[],["tag",3]]],[11,"declassify_eq","","",15,[[]]],[11,"to_be_bytes","","",15,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",15,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",15,[[],["tag",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",15,[[],["tag",3]]],[11,"to_be_U32s","","",15,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",15,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",15,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",15,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",15,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",15,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",15,[[],["string",3]]],[0,"blake2","unsafe_hacspec_examples","",null,null],[0,"blake2b","unsafe_hacspec_examples::blake2","",null,null],[3,"DigestB","unsafe_hacspec_examples::blake2::blake2b","Fixed length byte array.",null,null],[12,"0","","",16,null],[3,"Sigma","","Fixed length byte array.",null,null],[12,"0","","",17,null],[3,"State","","Fixed length byte array.",null,null],[12,"0","","",18,null],[3,"DoubleState","","Fixed length byte array.",null,null],[12,"0","","",19,null],[3,"Counter","","Fixed length byte array.",null,null],[12,"0","","",20,null],[4,"BlakeVariant","","",null,null],[13,"Blake2S","","",21,null],[13,"Blake2B","","",21,null],[5,"blake2","","",null,[[["blakevariant",4],["byteseq",6]],["byteseq",6]]],[5,"blake2b","","",null,[[["byteseq",6]],["digestb",3]]],[8,"HasIV","","",null,null],[10,"iv","","",22,[[],["state",3]]],[11,"new","","",16,[[]]],[11,"length","","",16,[[]]],[11,"from_array","","",16,[[]]],[11,"from_native_slice","","",16,[[]]],[11,"capacity","","",16,[[]]],[11,"from_slice","","",16,[[]]],[11,"concat","","",16,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",16,[[["range",3]]]],[11,"slice","","",16,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",16,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",16,[[]]],[11,"get_chunk_len","","",16,[[]]],[11,"get_chunk","","",16,[[]]],[11,"set_chunk","","",16,[[]]],[11,"from_vec","","",16,[[["vec",3],["u8",3]],["digestb",3]]],[11,"from_seq","","",16,[[],["digestb",3]]],[11,"from_hex","","Read hex string to Bytes.",16,[[],["digestb",3]]],[11,"declassify_eq","","",16,[[]]],[11,"to_be_bytes","","",16,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",16,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",16,[[],["digestb",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",16,[[],["digestb",3]]],[11,"to_be_U32s","","",16,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",16,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",16,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",16,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",16,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",16,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",16,[[],["string",3]]],[11,"new","","",17,[[]]],[11,"length","","",17,[[]]],[11,"from_array","","",17,[[]]],[11,"from_native_slice","","",17,[[]]],[11,"capacity","","",17,[[]]],[11,"from_slice","","",17,[[]]],[11,"concat","","",17,[[],["seq",3]]],[11,"from_slice_range","","",17,[[["range",3]]]],[11,"slice","","",17,[[],["seq",3]]],[11,"slice_range","","",17,[[["range",3]],["seq",3]]],[11,"num_chunks","","",17,[[]]],[11,"get_chunk_len","","",17,[[]]],[11,"get_chunk","","",17,[[]]],[11,"set_chunk","","",17,[[]]],[11,"from_vec","","",17,[[["vec",3]],["sigma",3]]],[11,"from_seq","","",17,[[],["sigma",3]]],[11,"from_hex","","Read hex string to Bytes.",17,[[],["sigma",3]]],[11,"new","","",18,[[]]],[11,"length","","",18,[[]]],[11,"from_array","","",18,[[]]],[11,"from_native_slice","","",18,[[]]],[11,"capacity","","",18,[[]]],[11,"from_slice","","",18,[[]]],[11,"concat","","",18,[[],["seq",3]]],[11,"from_slice_range","","",18,[[["range",3]]]],[11,"slice","","",18,[[],["seq",3]]],[11,"slice_range","","",18,[[["range",3]],["seq",3]]],[11,"num_chunks","","",18,[[]]],[11,"get_chunk_len","","",18,[[]]],[11,"get_chunk","","",18,[[]]],[11,"set_chunk","","",18,[[]]],[11,"from_vec","","",18,[[["vec",3]],["state",3]]],[11,"from_seq","","",18,[[],["state",3]]],[11,"new","","",19,[[]]],[11,"length","","",19,[[]]],[11,"from_array","","",19,[[]]],[11,"from_native_slice","","",19,[[]]],[11,"capacity","","",19,[[]]],[11,"from_slice","","",19,[[]]],[11,"concat","","",19,[[],["seq",3]]],[11,"from_slice_range","","",19,[[["range",3]]]],[11,"slice","","",19,[[],["seq",3]]],[11,"slice_range","","",19,[[["range",3]],["seq",3]]],[11,"num_chunks","","",19,[[]]],[11,"get_chunk_len","","",19,[[]]],[11,"get_chunk","","",19,[[]]],[11,"set_chunk","","",19,[[]]],[11,"from_vec","","",19,[[["vec",3]],["doublestate",3]]],[11,"from_seq","","",19,[[],["doublestate",3]]],[11,"new","","",20,[[]]],[11,"length","","",20,[[]]],[11,"from_array","","",20,[[]]],[11,"from_native_slice","","",20,[[]]],[11,"capacity","","",20,[[]]],[11,"from_slice","","",20,[[]]],[11,"concat","","",20,[[],["seq",3]]],[11,"from_slice_range","","",20,[[["range",3]]]],[11,"slice","","",20,[[],["seq",3]]],[11,"slice_range","","",20,[[["range",3]],["seq",3]]],[11,"num_chunks","","",20,[[]]],[11,"get_chunk_len","","",20,[[]]],[11,"get_chunk","","",20,[[]]],[11,"set_chunk","","",20,[[]]],[11,"from_vec","","",20,[[["vec",3]],["counter",3]]],[11,"from_seq","","",20,[[],["counter",3]]],[0,"curve25519","unsafe_hacspec_examples","",null,null],[3,"FieldCanvas","unsafe_hacspec_examples::curve25519","",null,null],[3,"FieldElement","","",null,null],[3,"ScalarCanvas","","",null,null],[3,"Scalar","","",null,null],[3,"SerializedPoint","","Fixed length byte array.",null,null],[12,"0","","",23,null],[3,"SerializedScalar","","Fixed length byte array.",null,null],[12,"0","","",24,null],[5,"scalarmult","","",null,[[["serializedscalar",3],["serializedpoint",3]],["serializedpoint",3]]],[5,"secret_to_public","","",null,[[["serializedscalar",3]],["serializedpoint",3]]],[11,"max_value","","",25,[[]]],[11,"from_literal","","",25,[[]]],[11,"from_signed_literal","","",25,[[]]],[11,"pow2","","Returns 2 to the power of the argument",25,[[],["fieldcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",25,[[]]],[11,"from_hex","","",25,[[]]],[11,"from_be_bytes","","",25,[[]]],[11,"from_le_bytes","","",25,[[]]],[11,"to_be_bytes","","",25,[[]]],[11,"to_le_bytes","","",25,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",25,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",25,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",25,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",25,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",25,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",25,[[]]],[11,"inv","","",25,[[]]],[11,"pow_felem","","",25,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",25,[[]]],[11,"from_byte_seq_be","","",25,[[],["fieldcanvas",3]]],[11,"from_public_byte_seq_be","","",25,[[["seqtrait",8]],["fieldcanvas",3]]],[11,"to_byte_seq_be","","",25,[[],[["seq",3],["u8",3]]]],[11,"from_canvas","","",26,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"into_canvas","","",26,[[],["fieldcanvas",3]]],[11,"max","","",26,[[],["fieldcanvas",3]]],[11,"declassify","","",26,[[],["bigint",3]]],[11,"from_hex","","",26,[[]]],[11,"from_be_bytes","","",26,[[]]],[11,"to_be_bytes","","",26,[[],["vec",3]]],[11,"from_le_bytes","","",26,[[]]],[11,"to_le_bytes","","",26,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",26,[[]]],[11,"from_literal","","",26,[[]]],[11,"from_signed_literal","","",26,[[]]],[11,"comp_eq","","",26,[[]]],[11,"comp_ne","","",26,[[]]],[11,"comp_gte","","",26,[[]]],[11,"comp_gt","","",26,[[]]],[11,"comp_lte","","",26,[[]]],[11,"comp_lt","","",26,[[]]],[11,"inv","","",26,[[]]],[11,"pow_felem","","",26,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",26,[[]]],[11,"pow2","","Returns 2 to the power of the argument",26,[[],["fieldelement",3]]],[11,"from_byte_seq_be","","",26,[[],["fieldelement",3]]],[11,"from_public_byte_seq_be","","",26,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_be","","",26,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",26,[[],["seq",3]]],[11,"from_byte_seq_le","","",26,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_le","","",26,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_le","","",26,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",26,[[],["seq",3]]],[11,"from_secret_literal","","",26,[[["u128",3]],["fieldelement",3]]],[11,"max_value","","",27,[[]]],[11,"from_literal","","",27,[[]]],[11,"from_signed_literal","","",27,[[]]],[11,"pow2","","Returns 2 to the power of the argument",27,[[],["scalarcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",27,[[]]],[11,"from_hex","","",27,[[]]],[11,"from_be_bytes","","",27,[[]]],[11,"from_le_bytes","","",27,[[]]],[11,"to_be_bytes","","",27,[[]]],[11,"to_le_bytes","","",27,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",27,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",27,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",27,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",27,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",27,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",27,[[]]],[11,"inv","","",27,[[]]],[11,"pow_felem","","",27,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",27,[[]]],[11,"from_byte_seq_be","","",27,[[],["scalarcanvas",3]]],[11,"from_public_byte_seq_be","","",27,[[["seqtrait",8]],["scalarcanvas",3]]],[11,"to_byte_seq_be","","",27,[[],[["seq",3],["u8",3]]]],[11,"from_canvas","","",28,[[["scalarcanvas",3]],["scalar",3]]],[11,"into_canvas","","",28,[[],["scalarcanvas",3]]],[11,"max","","",28,[[],["scalarcanvas",3]]],[11,"declassify","","",28,[[],["bigint",3]]],[11,"from_hex","","",28,[[]]],[11,"from_be_bytes","","",28,[[]]],[11,"to_be_bytes","","",28,[[],["vec",3]]],[11,"from_le_bytes","","",28,[[]]],[11,"to_le_bytes","","",28,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",28,[[]]],[11,"from_literal","","",28,[[]]],[11,"from_signed_literal","","",28,[[]]],[11,"comp_eq","","",28,[[]]],[11,"comp_ne","","",28,[[]]],[11,"comp_gte","","",28,[[]]],[11,"comp_gt","","",28,[[]]],[11,"comp_lte","","",28,[[]]],[11,"comp_lt","","",28,[[]]],[11,"inv","","",28,[[]]],[11,"pow_felem","","",28,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",28,[[]]],[11,"pow2","","Returns 2 to the power of the argument",28,[[],["scalar",3]]],[11,"from_byte_seq_be","","",28,[[],["scalar",3]]],[11,"from_public_byte_seq_be","","",28,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_be","","",28,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",28,[[],["seq",3]]],[11,"from_byte_seq_le","","",28,[[["seqtrait",8],["u8",3]],["scalar",3]]],[11,"from_public_byte_seq_le","","",28,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_le","","",28,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",28,[[],["seq",3]]],[11,"from_secret_literal","","",28,[[["u128",3]],["scalar",3]]],[11,"new","","",23,[[]]],[11,"length","","",23,[[]]],[11,"from_array","","",23,[[]]],[11,"from_native_slice","","",23,[[]]],[11,"capacity","","",23,[[]]],[11,"from_slice","","",23,[[]]],[11,"concat","","",23,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",23,[[["range",3]]]],[11,"slice","","",23,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",23,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",23,[[]]],[11,"get_chunk_len","","",23,[[]]],[11,"get_chunk","","",23,[[]]],[11,"set_chunk","","",23,[[]]],[11,"from_vec","","",23,[[["vec",3],["u8",3]],["serializedpoint",3]]],[11,"from_seq","","",23,[[],["serializedpoint",3]]],[11,"from_hex","","Read hex string to Bytes.",23,[[],["serializedpoint",3]]],[11,"declassify_eq","","",23,[[]]],[11,"to_be_bytes","","",23,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",23,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",23,[[],["serializedpoint",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",23,[[],["serializedpoint",3]]],[11,"to_be_U32s","","",23,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",23,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",23,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",23,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",23,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",23,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",23,[[],["string",3]]],[11,"new","","",24,[[]]],[11,"length","","",24,[[]]],[11,"from_array","","",24,[[]]],[11,"from_native_slice","","",24,[[]]],[11,"capacity","","",24,[[]]],[11,"from_slice","","",24,[[]]],[11,"concat","","",24,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",24,[[["range",3]]]],[11,"slice","","",24,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",24,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",24,[[]]],[11,"get_chunk_len","","",24,[[]]],[11,"get_chunk","","",24,[[]]],[11,"set_chunk","","",24,[[]]],[11,"from_vec","","",24,[[["vec",3],["u8",3]],["serializedscalar",3]]],[11,"from_seq","","",24,[[],["serializedscalar",3]]],[11,"from_hex","","Read hex string to Bytes.",24,[[],["serializedscalar",3]]],[11,"declassify_eq","","",24,[[]]],[11,"to_be_bytes","","",24,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",24,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",24,[[],["serializedscalar",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",24,[[],["serializedscalar",3]]],[11,"to_be_U32s","","",24,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",24,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",24,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",24,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",24,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",24,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",24,[[],["string",3]]],[0,"ec","unsafe_hacspec_examples","",null,null],[0,"arithmetic","unsafe_hacspec_examples::ec","",null,null],[3,"Jacobian","unsafe_hacspec_examples::ec::arithmetic","",null,null],[12,"0","","",29,null],[12,"1","","",29,null],[12,"2","","",29,null],[3,"Affine","","",null,null],[12,"0","","",30,null],[12,"1","","",30,null],[5,"point_mul","","",null,[[["affine",3],["unsignedintegercopy",8]],[["affine",3],["unsignedintegercopy",8]]]],[0,"p256","unsafe_hacspec_examples::ec","",null,null],[3,"FieldCanvas","unsafe_hacspec_examples::ec::p256","",null,null],[3,"FieldElement","","",null,null],[3,"Scalar","","",null,null],[5,"point_mul_base","","",null,[[["scalar",3]],[["fieldelement",3],["affine",3]]]],[5,"point_mul","","",null,[[["fieldelement",3],["scalar",3],["affine",3]],[["fieldelement",3],["affine",3]]]],[11,"max_value","","",31,[[]]],[11,"from_literal","","",31,[[]]],[11,"from_signed_literal","","",31,[[]]],[11,"pow2","","Returns 2 to the power of the argument",31,[[],["fieldcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",31,[[]]],[11,"from_hex","","",31,[[]]],[11,"from_be_bytes","","",31,[[]]],[11,"from_le_bytes","","",31,[[]]],[11,"to_be_bytes","","",31,[[]]],[11,"to_le_bytes","","",31,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",31,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",31,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",31,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",31,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",31,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",31,[[]]],[11,"inv","","",31,[[]]],[11,"pow_felem","","",31,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",31,[[]]],[11,"from_byte_seq_be","","",31,[[],["fieldcanvas",3]]],[11,"from_public_byte_seq_be","","",31,[[["seqtrait",8]],["fieldcanvas",3]]],[11,"to_byte_seq_be","","",31,[[],[["seq",3],["u8",3]]]],[11,"from_canvas","","",32,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"into_canvas","","",32,[[],["fieldcanvas",3]]],[11,"max","","",32,[[],["fieldcanvas",3]]],[11,"declassify","","",32,[[],["bigint",3]]],[11,"from_hex","","",32,[[]]],[11,"from_be_bytes","","",32,[[]]],[11,"to_be_bytes","","",32,[[],["vec",3]]],[11,"from_le_bytes","","",32,[[]]],[11,"to_le_bytes","","",32,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",32,[[]]],[11,"from_literal","","",32,[[]]],[11,"from_signed_literal","","",32,[[]]],[11,"comp_eq","","",32,[[]]],[11,"comp_ne","","",32,[[]]],[11,"comp_gte","","",32,[[]]],[11,"comp_gt","","",32,[[]]],[11,"comp_lte","","",32,[[]]],[11,"comp_lt","","",32,[[]]],[11,"inv","","",32,[[]]],[11,"pow_felem","","",32,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",32,[[]]],[11,"pow2","","Returns 2 to the power of the argument",32,[[],["fieldelement",3]]],[11,"from_byte_seq_be","","",32,[[],["fieldelement",3]]],[11,"from_public_byte_seq_be","","",32,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_be","","",32,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",32,[[],["seq",3]]],[11,"from_byte_seq_le","","",32,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_le","","",32,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_le","","",32,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",32,[[],["seq",3]]],[11,"from_secret_literal","","",32,[[["u128",3]],["fieldelement",3]]],[11,"max_value","","",33,[[]]],[11,"from_literal","","",33,[[]]],[11,"from_signed_literal","","",33,[[]]],[11,"pow2","","Returns 2 to the power of the argument",33,[[],["scalar",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",33,[[]]],[11,"from_hex","","",33,[[]]],[11,"from_be_bytes","","",33,[[]]],[11,"from_le_bytes","","",33,[[]]],[11,"to_be_bytes","","",33,[[]]],[11,"to_le_bytes","","",33,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",33,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",33,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",33,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",33,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",33,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",33,[[]]],[11,"inv","","",33,[[]]],[11,"pow_felem","","",33,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",33,[[]]],[11,"from_byte_seq_be","","",33,[[],["scalar",3]]],[11,"from_public_byte_seq_be","","",33,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_be","","",33,[[],[["seq",3],["u8",3]]]],[0,"p384","unsafe_hacspec_examples::ec","",null,null],[3,"FieldCanvas","unsafe_hacspec_examples::ec::p384","",null,null],[3,"FieldElement","","",null,null],[3,"Scalar","","",null,null],[5,"point_mul_base","","",null,[[["scalar",3]],[["affine",3],["fieldelement",3]]]],[5,"point_mul","","",null,[[["affine",3],["scalar",3],["fieldelement",3]],[["affine",3],["fieldelement",3]]]],[11,"max_value","","",34,[[]]],[11,"from_literal","","",34,[[]]],[11,"from_signed_literal","","",34,[[]]],[11,"pow2","","Returns 2 to the power of the argument",34,[[],["fieldcanvas",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",34,[[]]],[11,"from_hex","","",34,[[]]],[11,"from_be_bytes","","",34,[[]]],[11,"from_le_bytes","","",34,[[]]],[11,"to_be_bytes","","",34,[[]]],[11,"to_le_bytes","","",34,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",34,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",34,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",34,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",34,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",34,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",34,[[]]],[11,"inv","","",34,[[]]],[11,"pow_felem","","",34,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",34,[[]]],[11,"from_byte_seq_be","","",34,[[],["fieldcanvas",3]]],[11,"from_public_byte_seq_be","","",34,[[["seqtrait",8]],["fieldcanvas",3]]],[11,"to_byte_seq_be","","",34,[[],[["seq",3],["u8",3]]]],[11,"from_canvas","","",35,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"into_canvas","","",35,[[],["fieldcanvas",3]]],[11,"max","","",35,[[],["fieldcanvas",3]]],[11,"declassify","","",35,[[],["bigint",3]]],[11,"from_hex","","",35,[[]]],[11,"from_be_bytes","","",35,[[]]],[11,"to_be_bytes","","",35,[[],["vec",3]]],[11,"from_le_bytes","","",35,[[]]],[11,"to_le_bytes","","",35,[[],["vec",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",35,[[]]],[11,"from_literal","","",35,[[]]],[11,"from_signed_literal","","",35,[[]]],[11,"comp_eq","","",35,[[]]],[11,"comp_ne","","",35,[[]]],[11,"comp_gte","","",35,[[]]],[11,"comp_gt","","",35,[[]]],[11,"comp_lte","","",35,[[]]],[11,"comp_lt","","",35,[[]]],[11,"inv","","",35,[[]]],[11,"pow_felem","","",35,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",35,[[]]],[11,"pow2","","Returns 2 to the power of the argument",35,[[],["fieldelement",3]]],[11,"from_byte_seq_be","","",35,[[],["fieldelement",3]]],[11,"from_public_byte_seq_be","","",35,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_be","","",35,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_be","","",35,[[],["seq",3]]],[11,"from_byte_seq_le","","",35,[[["seqtrait",8],["u8",3]],["fieldelement",3]]],[11,"from_public_byte_seq_le","","",35,[[["seqtrait",8]],["fieldelement",3]]],[11,"to_byte_seq_le","","",35,[[],[["seq",3],["u8",3]]]],[11,"to_public_byte_seq_le","","",35,[[],["seq",3]]],[11,"from_secret_literal","","",35,[[["u128",3]],["fieldelement",3]]],[11,"max_value","","",36,[[]]],[11,"from_literal","","",36,[[]]],[11,"from_signed_literal","","",36,[[]]],[11,"pow2","","Returns 2 to the power of the argument",36,[[],["scalar",3]]],[11,"bit","","Gets the `i`-th least significant bit of this integer.",36,[[]]],[11,"from_hex","","",36,[[]]],[11,"from_be_bytes","","",36,[[]]],[11,"from_le_bytes","","",36,[[]]],[11,"to_be_bytes","","",36,[[]]],[11,"to_le_bytes","","",36,[[]]],[11,"comp_eq","","Produces a new integer which is all ones if the two…",36,[[]]],[11,"comp_ne","","Produces a new integer which is all ones if the first…",36,[[]]],[11,"comp_gte","","Produces a new integer which is all ones if the first…",36,[[]]],[11,"comp_gt","","Produces a new integer which is all ones if the first…",36,[[]]],[11,"comp_lte","","Produces a new integer which is all ones if the first…",36,[[]]],[11,"comp_lt","","Produces a new integer which is all ones if the first…",36,[[]]],[11,"inv","","",36,[[]]],[11,"pow_felem","","",36,[[]]],[11,"pow","","Returns self to the power of the argument. The exponent is…",36,[[]]],[11,"from_byte_seq_be","","",36,[[],["scalar",3]]],[11,"from_public_byte_seq_be","","",36,[[["seqtrait",8]],["scalar",3]]],[11,"to_byte_seq_be","","",36,[[],[["seq",3],["u8",3]]]],[0,"ntru_prime","unsafe_hacspec_examples","",null,null],[0,"ntru_prime","unsafe_hacspec_examples::ntru_prime","",null,null],[3,"Parameters","unsafe_hacspec_examples::ntru_prime::ntru_prime","NtruPrime parameters",null,null],[12,"p","","",37,null],[12,"q","","",37,null],[12,"w","","",37,null],[12,"irr","","",37,null],[3,"Poly","","Positions and coefficients for a polynomial.",null,null],[12,"positions","","",38,null],[12,"coefficients","","",38,null],[4,"Version","","",null,null],[13,"NtruPrime653","","",39,null],[13,"NtruPrime761","","",39,null],[13,"NtruPrime857","","",39,null],[5,"get_parameters","","",null,[[["version",4]],["parameters",3]]],[5,"round_to_3","","First transform each coefficients to a value between…",null,[[["seq",3]],["seq",3]]],[5,"encrypt","","r is the plaintext, h is the public key",null,[[["seq",3],["parameters",3]],["seq",3]]],[5,"decrypt","","",null,[[["seq",3],["parameters",3]],[["result",4],["seq",3]]]],[5,"build_poly","","This function creates a polynomial with w many -1 or 1 and…",null,[[["poly",3]],["seq",3]]],[5,"key_gen","","Generate a key from given polynomials `f` and `g`.…",null,[[["poly",3],["parameters",3]],["result",4]]],[0,"sha2","unsafe_hacspec_examples","",null,null],[3,"Block","unsafe_hacspec_examples::sha2","Fixed length byte array.",null,null],[12,"0","","",40,null],[3,"OpTableType","","Fixed length byte array.",null,null],[12,"0","","",41,null],[3,"Digest","","Fixed length byte array.",null,null],[12,"0","","",42,null],[3,"RoundConstantsTable","","Fixed length byte array.",null,null],[12,"0","","",43,null],[3,"Hash","","Fixed length byte array.",null,null],[12,"0","","",44,null],[4,"Variant","","",null,null],[13,"SHA224","","",45,null],[13,"SHA256","","",45,null],[13,"SHA384","","",45,null],[13,"SHA512","","",45,null],[5,"hash","","",null,[[["byteseq",6]],["digest",3]]],[11,"new","","",40,[[]]],[11,"length","","",40,[[]]],[11,"from_array","","",40,[[]]],[11,"from_native_slice","","",40,[[]]],[11,"capacity","","",40,[[]]],[11,"from_slice","","",40,[[]]],[11,"concat","","",40,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",40,[[["range",3]]]],[11,"slice","","",40,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",40,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",40,[[]]],[11,"get_chunk_len","","",40,[[]]],[11,"get_chunk","","",40,[[]]],[11,"set_chunk","","",40,[[]]],[11,"from_vec","","",40,[[["vec",3],["u8",3]],["block",3]]],[11,"from_seq","","",40,[[],["block",3]]],[11,"from_hex","","Read hex string to Bytes.",40,[[],["block",3]]],[11,"declassify_eq","","",40,[[]]],[11,"to_be_bytes","","",40,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",40,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",40,[[],["block",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",40,[[],["block",3]]],[11,"to_be_U32s","","",40,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",40,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",40,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",40,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",40,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",40,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",40,[[],["string",3]]],[11,"new","","",41,[[]]],[11,"length","","",41,[[]]],[11,"from_array","","",41,[[]]],[11,"from_native_slice","","",41,[[]]],[11,"capacity","","",41,[[]]],[11,"from_slice","","",41,[[]]],[11,"concat","","",41,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",41,[[["range",3]]]],[11,"slice","","",41,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",41,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",41,[[]]],[11,"get_chunk_len","","",41,[[]]],[11,"get_chunk","","",41,[[]]],[11,"set_chunk","","",41,[[]]],[11,"from_vec","","",41,[[["vec",3],["u8",3]],["optabletype",3]]],[11,"from_seq","","",41,[[],["optabletype",3]]],[11,"from_hex","","Read hex string to Bytes.",41,[[],["optabletype",3]]],[11,"declassify_eq","","",41,[[]]],[11,"to_be_bytes","","",41,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",41,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",41,[[],["optabletype",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",41,[[],["optabletype",3]]],[11,"to_be_U32s","","",41,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",41,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",41,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",41,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",41,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",41,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",41,[[],["string",3]]],[11,"new","","",42,[[]]],[11,"length","","",42,[[]]],[11,"from_array","","",42,[[]]],[11,"from_native_slice","","",42,[[]]],[11,"capacity","","",42,[[]]],[11,"from_slice","","",42,[[]]],[11,"concat","","",42,[[],[["seq",3],["u8",3]]]],[11,"from_slice_range","","",42,[[["range",3]]]],[11,"slice","","",42,[[],[["seq",3],["u8",3]]]],[11,"slice_range","","",42,[[["range",3]],[["seq",3],["u8",3]]]],[11,"num_chunks","","",42,[[]]],[11,"get_chunk_len","","",42,[[]]],[11,"get_chunk","","",42,[[]]],[11,"set_chunk","","",42,[[]]],[11,"from_vec","","",42,[[["vec",3],["u8",3]],["digest",3]]],[11,"from_seq","","",42,[[],["digest",3]]],[11,"from_hex","","Read hex string to Bytes.",42,[[],["digest",3]]],[11,"declassify_eq","","",42,[[]]],[11,"to_be_bytes","","",42,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",42,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",42,[[],["digest",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",42,[[],["digest",3]]],[11,"to_be_U32s","","",42,[[],[["seq",3],["u32",3]]]],[11,"to_le_U32s","","",42,[[],[["seq",3],["u32",3]]]],[11,"to_be_U64s","","",42,[[],[["seq",3],["u64",3]]]],[11,"to_le_U64s","","",42,[[],[["seq",3],["u64",3]]]],[11,"to_U128s_be","","",42,[[],[["u128",3],["seq",3]]]],[11,"to_U128s_le","","",42,[[],[["u128",3],["seq",3]]]],[11,"to_hex","","",42,[[],["string",3]]],[11,"new","","",43,[[]]],[11,"length","","",43,[[]]],[11,"from_array","","",43,[[]]],[11,"from_native_slice","","",43,[[]]],[11,"capacity","","",43,[[]]],[11,"from_slice","","",43,[[]]],[11,"concat","","",43,[[],[["seq",3],["u32",3]]]],[11,"from_slice_range","","",43,[[["range",3]]]],[11,"slice","","",43,[[],[["seq",3],["u32",3]]]],[11,"slice_range","","",43,[[["range",3]],[["seq",3],["u32",3]]]],[11,"num_chunks","","",43,[[]]],[11,"get_chunk_len","","",43,[[]]],[11,"get_chunk","","",43,[[]]],[11,"set_chunk","","",43,[[]]],[11,"from_vec","","",43,[[["vec",3],["u32",3]],["roundconstantstable",3]]],[11,"from_seq","","",43,[[],["roundconstantstable",3]]],[11,"from_hex","","Read hex string to Bytes.",43,[[],["roundconstantstable",3]]],[11,"declassify_eq","","",43,[[]]],[11,"to_be_bytes","","",43,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",43,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",43,[[],["roundconstantstable",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",43,[[],["roundconstantstable",3]]],[11,"new","","",44,[[]]],[11,"length","","",44,[[]]],[11,"from_array","","",44,[[]]],[11,"from_native_slice","","",44,[[]]],[11,"capacity","","",44,[[]]],[11,"from_slice","","",44,[[]]],[11,"concat","","",44,[[],[["seq",3],["u32",3]]]],[11,"from_slice_range","","",44,[[["range",3]]]],[11,"slice","","",44,[[],[["seq",3],["u32",3]]]],[11,"slice_range","","",44,[[["range",3]],[["seq",3],["u32",3]]]],[11,"num_chunks","","",44,[[]]],[11,"get_chunk_len","","",44,[[]]],[11,"get_chunk","","",44,[[]]],[11,"set_chunk","","",44,[[]]],[11,"from_vec","","",44,[[["vec",3],["u32",3]],["hash",3]]],[11,"from_seq","","",44,[[],["hash",3]]],[11,"from_hex","","Read hex string to Bytes.",44,[[],["hash",3]]],[11,"declassify_eq","","",44,[[]]],[11,"to_be_bytes","","",44,[[],[["seq",3],["u8",3]]]],[11,"to_le_bytes","","",44,[[],[["seq",3],["u8",3]]]],[11,"from_public_slice","","",44,[[],["hash",3]]],[11,"from_public_array","","Create an array from a regular Rust array.",44,[[],["hash",3]]],[17,"K_SIZE","","",null,null],[17,"HASH_SIZE","","",null,null],[11,"from","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::ec::arithmetic","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::ntru_prime::ntru_prime","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"iv","unsafe_hacspec_examples::blake2::blake2b","",18,[[],[["state",3],["u64",3]]]],[11,"iv","","",18,[[],[["state",3],["u32",3]]]],[11,"from","unsafe_hacspec_examples::curve25519","",25,[[["biguint",3]],["fieldcanvas",3]]],[11,"from","","",25,[[["bigint",3]],["fieldcanvas",3]]],[11,"from","","",26,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"from","","",27,[[["biguint",3]],["scalarcanvas",3]]],[11,"from","","",27,[[["bigint",3]],["scalarcanvas",3]]],[11,"from","","",28,[[["scalarcanvas",3]],["scalar",3]]],[11,"from","unsafe_hacspec_examples::ec::p256","",31,[[["biguint",3]],["fieldcanvas",3]]],[11,"from","","",31,[[["bigint",3]],["fieldcanvas",3]]],[11,"from","","",32,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"from","","",33,[[["biguint",3]],["scalar",3]]],[11,"from","","",33,[[["bigint",3]],["scalar",3]]],[11,"from","unsafe_hacspec_examples::ec::p384","",34,[[["biguint",3]],["fieldcanvas",3]]],[11,"from","","",34,[[["bigint",3]],["fieldcanvas",3]]],[11,"from","","",35,[[["fieldcanvas",3]],["fieldelement",3]]],[11,"from","","",36,[[["biguint",3]],["scalar",3]]],[11,"from","","",36,[[["bigint",3]],["scalar",3]]],[11,"into","unsafe_hacspec_examples::curve25519","",25,[[],["bigint",3]]],[11,"into","","",25,[[],["biguint",3]]],[11,"into","","",26,[[],["fieldcanvas",3]]],[11,"into","","",27,[[],["bigint",3]]],[11,"into","","",27,[[],["biguint",3]]],[11,"into","","",28,[[],["scalarcanvas",3]]],[11,"into","unsafe_hacspec_examples::ec::p256","",31,[[],["bigint",3]]],[11,"into","","",31,[[],["biguint",3]]],[11,"into","","",32,[[],["fieldcanvas",3]]],[11,"into","","",33,[[],["bigint",3]]],[11,"into","","",33,[[],["biguint",3]]],[11,"into","unsafe_hacspec_examples::ec::p384","",34,[[],["bigint",3]]],[11,"into","","",34,[[],["biguint",3]]],[11,"into","","",35,[[],["fieldcanvas",3]]],[11,"into","","",36,[[],["bigint",3]]],[11,"into","","",36,[[],["biguint",3]]],[11,"clone","unsafe_hacspec_examples::aes_gcm::aes","",0,[[],["block",3]]],[11,"clone","","",1,[[],["word",3]]],[11,"clone","","",2,[[],["roundkey",3]]],[11,"clone","","",3,[[],["nonce",3]]],[11,"clone","","",4,[[],["sbox",3]]],[11,"clone","","",5,[[],["rcon",3]]],[11,"clone","","",6,[[],["bytes144",3]]],[11,"clone","","",7,[[],["bytes176",3]]],[11,"clone","","",8,[[],["bytes208",3]]],[11,"clone","","",9,[[],["bytes240",3]]],[11,"clone","","",10,[[],["key128",3]]],[11,"clone","","",11,[[],["key256",3]]],[11,"clone","","",12,[[],["aesvariant",4]]],[11,"clone","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[],["block",3]]],[11,"clone","","",14,[[],["key",3]]],[11,"clone","","",15,[[],["tag",3]]],[11,"clone","unsafe_hacspec_examples::blake2::blake2b","",16,[[],["digestb",3]]],[11,"clone","","",17,[[],["sigma",3]]],[11,"clone","","",18,[[],["state",3]]],[11,"clone","","",19,[[],["doublestate",3]]],[11,"clone","","",20,[[],["counter",3]]],[11,"clone","","",21,[[],["blakevariant",4]]],[11,"clone","unsafe_hacspec_examples::curve25519","",25,[[],["fieldcanvas",3]]],[11,"clone","","",26,[[],["fieldelement",3]]],[11,"clone","","",27,[[],["scalarcanvas",3]]],[11,"clone","","",28,[[],["scalar",3]]],[11,"clone","","",23,[[],["serializedpoint",3]]],[11,"clone","","",24,[[],["serializedscalar",3]]],[11,"clone","unsafe_hacspec_examples::ec::arithmetic","",29,[[],["jacobian",3]]],[11,"clone","","",30,[[],["affine",3]]],[11,"clone","unsafe_hacspec_examples::ec::p256","",31,[[],["fieldcanvas",3]]],[11,"clone","","",32,[[],["fieldelement",3]]],[11,"clone","","",33,[[],["scalar",3]]],[11,"clone","unsafe_hacspec_examples::ec::p384","",34,[[],["fieldcanvas",3]]],[11,"clone","","",35,[[],["fieldelement",3]]],[11,"clone","","",36,[[],["scalar",3]]],[11,"clone","unsafe_hacspec_examples::sha2","",40,[[],["block",3]]],[11,"clone","","",41,[[],["optabletype",3]]],[11,"clone","","",42,[[],["digest",3]]],[11,"clone","","",43,[[],["roundconstantstable",3]]],[11,"clone","","",44,[[],["hash",3]]],[11,"default","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","","",11,[[]]],[11,"default","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","unsafe_hacspec_examples::curve25519","",25,[[],["fieldcanvas",3]]],[11,"default","","",26,[[],["fieldelement",3]]],[11,"default","","",27,[[],["scalarcanvas",3]]],[11,"default","","",28,[[],["scalar",3]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","unsafe_hacspec_examples::ec::p256","",31,[[],["fieldcanvas",3]]],[11,"default","","",32,[[],["fieldelement",3]]],[11,"default","","",33,[[],["scalar",3]]],[11,"default","unsafe_hacspec_examples::ec::p384","",34,[[],["fieldcanvas",3]]],[11,"default","","",35,[[],["fieldelement",3]]],[11,"default","","",36,[[],["scalar",3]]],[11,"default","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"default","","",41,[[]]],[11,"default","","",42,[[]]],[11,"default","","",43,[[]]],[11,"default","","",44,[[]]],[11,"cmp","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],["ordering",4]]],[11,"cmp","","",26,[[],["ordering",4]]],[11,"cmp","","",27,[[["scalarcanvas",3]],["ordering",4]]],[11,"cmp","","",28,[[],["ordering",4]]],[11,"cmp","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],["ordering",4]]],[11,"cmp","","",32,[[],["ordering",4]]],[11,"cmp","","",33,[[["scalar",3]],["ordering",4]]],[11,"cmp","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],["ordering",4]]],[11,"cmp","","",35,[[],["ordering",4]]],[11,"cmp","","",36,[[["scalar",3]],["ordering",4]]],[11,"eq","unsafe_hacspec_examples::blake2::blake2b","",17,[[]]],[11,"eq","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]]]],[11,"eq","","",26,[[]]],[11,"eq","","",27,[[["scalarcanvas",3]]]],[11,"eq","","",28,[[]]],[11,"eq","unsafe_hacspec_examples::ec::arithmetic","",29,[[["jacobian",3]]]],[11,"ne","","",29,[[["jacobian",3]]]],[11,"eq","","",30,[[["affine",3]]]],[11,"ne","","",30,[[["affine",3]]]],[11,"eq","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]]]],[11,"eq","","",32,[[]]],[11,"eq","","",33,[[["scalar",3]]]],[11,"eq","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]]]],[11,"eq","","",35,[[]]],[11,"eq","","",36,[[["scalar",3]]]],[11,"partial_cmp","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",26,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",27,[[["scalarcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",28,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",32,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",33,[[["scalar",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",35,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",36,[[["scalar",3]],[["option",4],["ordering",4]]]],[11,"fmt","unsafe_hacspec_examples::aes_gcm::aes","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::blake2::blake2b","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::curve25519","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::arithmetic","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::p256","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::p384","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::sha2","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::curve25519","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::p256","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::p384","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"div","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"div","","",26,[[["fieldelement",3]],["fieldelement",3]]],[11,"div","","",27,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"div","","",28,[[["scalar",3]],["scalar",3]]],[11,"div","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"div","","",32,[[["fieldelement",3]],["fieldelement",3]]],[11,"div","","",33,[[["scalar",3]],["scalar",3]]],[11,"div","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"div","","",35,[[["fieldelement",3]],["fieldelement",3]]],[11,"div","","",36,[[["scalar",3]],["scalar",3]]],[11,"rem","unsafe_hacspec_examples::aes_gcm::aes","",0,[[["block",3]],["block",3]]],[11,"rem","","",1,[[["word",3]],["word",3]]],[11,"rem","","",2,[[["roundkey",3]],["roundkey",3]]],[11,"rem","","",3,[[["nonce",3]],["nonce",3]]],[11,"rem","","",4,[[["sbox",3]],["sbox",3]]],[11,"rem","","",5,[[["rcon",3]],["rcon",3]]],[11,"rem","","",6,[[["bytes144",3]],["bytes144",3]]],[11,"rem","","",7,[[["bytes176",3]],["bytes176",3]]],[11,"rem","","",8,[[["bytes208",3]],["bytes208",3]]],[11,"rem","","",9,[[["bytes240",3]],["bytes240",3]]],[11,"rem","","",10,[[["key128",3]],["key128",3]]],[11,"rem","","",11,[[["key256",3]],["key256",3]]],[11,"rem","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[["block",3]],["block",3]]],[11,"rem","","",14,[[["key",3]],["key",3]]],[11,"rem","","",15,[[["tag",3]],["tag",3]]],[11,"rem","unsafe_hacspec_examples::blake2::blake2b","",16,[[["digestb",3]],["digestb",3]]],[11,"rem","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"rem","","",26,[[["fieldelement",3]],["fieldelement",3]]],[11,"rem","","",27,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"rem","","",28,[[["scalar",3]],["scalar",3]]],[11,"rem","","",23,[[["serializedpoint",3]],["serializedpoint",3]]],[11,"rem","","",24,[[["serializedscalar",3]],["serializedscalar",3]]],[11,"rem","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"rem","","",32,[[["fieldelement",3]],["fieldelement",3]]],[11,"rem","","",33,[[["scalar",3]],["scalar",3]]],[11,"rem","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"rem","","",35,[[["fieldelement",3]],["fieldelement",3]]],[11,"rem","","",36,[[["scalar",3]],["scalar",3]]],[11,"rem","unsafe_hacspec_examples::sha2","",40,[[["block",3]],["block",3]]],[11,"rem","","",41,[[["optabletype",3]],["optabletype",3]]],[11,"rem","","",42,[[["digest",3]],["digest",3]]],[11,"rem","","",43,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"rem","","",44,[[["hash",3]],["hash",3]]],[11,"sub","unsafe_hacspec_examples::aes_gcm::aes","",0,[[["block",3]],["block",3]]],[11,"sub","","",1,[[["word",3]],["word",3]]],[11,"sub","","",2,[[["roundkey",3]],["roundkey",3]]],[11,"sub","","",3,[[["nonce",3]],["nonce",3]]],[11,"sub","","",4,[[["sbox",3]],["sbox",3]]],[11,"sub","","",5,[[["rcon",3]],["rcon",3]]],[11,"sub","","",6,[[["bytes144",3]],["bytes144",3]]],[11,"sub","","",7,[[["bytes176",3]],["bytes176",3]]],[11,"sub","","",8,[[["bytes208",3]],["bytes208",3]]],[11,"sub","","",9,[[["bytes240",3]],["bytes240",3]]],[11,"sub","","",10,[[["key128",3]],["key128",3]]],[11,"sub","","",11,[[["key256",3]],["key256",3]]],[11,"sub","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[["block",3]],["block",3]]],[11,"sub","","",14,[[["key",3]],["key",3]]],[11,"sub","","",15,[[["tag",3]],["tag",3]]],[11,"sub","unsafe_hacspec_examples::blake2::blake2b","",16,[[["digestb",3]],["digestb",3]]],[11,"sub","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"sub","","",26,[[["fieldelement",3]],["fieldelement",3]]],[11,"sub","","",27,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"sub","","",28,[[["scalar",3]],["scalar",3]]],[11,"sub","","",23,[[["serializedpoint",3]],["serializedpoint",3]]],[11,"sub","","",24,[[["serializedscalar",3]],["serializedscalar",3]]],[11,"sub","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"sub","","",32,[[["fieldelement",3]],["fieldelement",3]]],[11,"sub","","",33,[[["scalar",3]],["scalar",3]]],[11,"sub","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"sub","","",35,[[["fieldelement",3]],["fieldelement",3]]],[11,"sub","","",36,[[["scalar",3]],["scalar",3]]],[11,"sub","unsafe_hacspec_examples::sha2","",40,[[["block",3]],["block",3]]],[11,"sub","","",41,[[["optabletype",3]],["optabletype",3]]],[11,"sub","","",42,[[["digest",3]],["digest",3]]],[11,"sub","","",43,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"sub","","",44,[[["hash",3]],["hash",3]]],[11,"add","unsafe_hacspec_examples::aes_gcm::aes","",0,[[["block",3]],["block",3]]],[11,"add","","",1,[[["word",3]],["word",3]]],[11,"add","","",2,[[["roundkey",3]],["roundkey",3]]],[11,"add","","",3,[[["nonce",3]],["nonce",3]]],[11,"add","","",4,[[["sbox",3]],["sbox",3]]],[11,"add","","",5,[[["rcon",3]],["rcon",3]]],[11,"add","","",6,[[["bytes144",3]],["bytes144",3]]],[11,"add","","",7,[[["bytes176",3]],["bytes176",3]]],[11,"add","","",8,[[["bytes208",3]],["bytes208",3]]],[11,"add","","",9,[[["bytes240",3]],["bytes240",3]]],[11,"add","","",10,[[["key128",3]],["key128",3]]],[11,"add","","",11,[[["key256",3]],["key256",3]]],[11,"add","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[["block",3]],["block",3]]],[11,"add","","",14,[[["key",3]],["key",3]]],[11,"add","","",15,[[["tag",3]],["tag",3]]],[11,"add","unsafe_hacspec_examples::blake2::blake2b","",16,[[["digestb",3]],["digestb",3]]],[11,"add","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"add","","",26,[[["fieldelement",3]],["fieldelement",3]]],[11,"add","","",27,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"add","","",28,[[["scalar",3]],["scalar",3]]],[11,"add","","",23,[[["serializedpoint",3]],["serializedpoint",3]]],[11,"add","","",24,[[["serializedscalar",3]],["serializedscalar",3]]],[11,"add","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"add","","",32,[[["fieldelement",3]],["fieldelement",3]]],[11,"add","","",33,[[["scalar",3]],["scalar",3]]],[11,"add","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"add","","",35,[[["fieldelement",3]],["fieldelement",3]]],[11,"add","","",36,[[["scalar",3]],["scalar",3]]],[11,"add","unsafe_hacspec_examples::sha2","",40,[[["block",3]],["block",3]]],[11,"add","","",41,[[["optabletype",3]],["optabletype",3]]],[11,"add","","",42,[[["digest",3]],["digest",3]]],[11,"add","","",43,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"add","","",44,[[["hash",3]],["hash",3]]],[11,"mul","unsafe_hacspec_examples::aes_gcm::aes","",0,[[["block",3]],["block",3]]],[11,"mul","","",1,[[["word",3]],["word",3]]],[11,"mul","","",2,[[["roundkey",3]],["roundkey",3]]],[11,"mul","","",3,[[["nonce",3]],["nonce",3]]],[11,"mul","","",4,[[["sbox",3]],["sbox",3]]],[11,"mul","","",5,[[["rcon",3]],["rcon",3]]],[11,"mul","","",6,[[["bytes144",3]],["bytes144",3]]],[11,"mul","","",7,[[["bytes176",3]],["bytes176",3]]],[11,"mul","","",8,[[["bytes208",3]],["bytes208",3]]],[11,"mul","","",9,[[["bytes240",3]],["bytes240",3]]],[11,"mul","","",10,[[["key128",3]],["key128",3]]],[11,"mul","","",11,[[["key256",3]],["key256",3]]],[11,"mul","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[["block",3]],["block",3]]],[11,"mul","","",14,[[["key",3]],["key",3]]],[11,"mul","","",15,[[["tag",3]],["tag",3]]],[11,"mul","unsafe_hacspec_examples::blake2::blake2b","",16,[[["digestb",3]],["digestb",3]]],[11,"mul","unsafe_hacspec_examples::curve25519","",25,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"mul","","",26,[[["fieldelement",3]],["fieldelement",3]]],[11,"mul","","",27,[[["scalarcanvas",3]],["scalarcanvas",3]]],[11,"mul","","",28,[[["scalar",3]],["scalar",3]]],[11,"mul","","",23,[[["serializedpoint",3]],["serializedpoint",3]]],[11,"mul","","",24,[[["serializedscalar",3]],["serializedscalar",3]]],[11,"mul","unsafe_hacspec_examples::ec::p256","",31,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"mul","","",32,[[["fieldelement",3]],["fieldelement",3]]],[11,"mul","","",33,[[["scalar",3]],["scalar",3]]],[11,"mul","unsafe_hacspec_examples::ec::p384","",34,[[["fieldcanvas",3]],["fieldcanvas",3]]],[11,"mul","","",35,[[["fieldelement",3]],["fieldelement",3]]],[11,"mul","","",36,[[["scalar",3]],["scalar",3]]],[11,"mul","unsafe_hacspec_examples::sha2","",40,[[["block",3]],["block",3]]],[11,"mul","","",41,[[["optabletype",3]],["optabletype",3]]],[11,"mul","","",42,[[["digest",3]],["digest",3]]],[11,"mul","","",43,[[["roundconstantstable",3]],["roundconstantstable",3]]],[11,"mul","","",44,[[["hash",3]],["hash",3]]],[11,"not","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"not","","",1,[[]]],[11,"not","","",2,[[]]],[11,"not","","",3,[[]]],[11,"not","","",4,[[]]],[11,"not","","",5,[[]]],[11,"not","","",6,[[]]],[11,"not","","",7,[[]]],[11,"not","","",8,[[]]],[11,"not","","",9,[[]]],[11,"not","","",10,[[]]],[11,"not","","",11,[[]]],[11,"not","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"not","","",14,[[]]],[11,"not","","",15,[[]]],[11,"not","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"not","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"not","","",26,[[]]],[11,"not","","",27,[[]]],[11,"not","","",28,[[]]],[11,"not","","",23,[[]]],[11,"not","","",24,[[]]],[11,"not","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"not","","",32,[[]]],[11,"not","","",33,[[]]],[11,"not","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"not","","",35,[[]]],[11,"not","","",36,[[]]],[11,"not","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"not","","",41,[[]]],[11,"not","","",42,[[]]],[11,"not","","",43,[[]]],[11,"not","","",44,[[]]],[11,"bitand","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"bitand","","",1,[[]]],[11,"bitand","","",2,[[]]],[11,"bitand","","",3,[[]]],[11,"bitand","","",4,[[]]],[11,"bitand","","",5,[[]]],[11,"bitand","","",6,[[]]],[11,"bitand","","",7,[[]]],[11,"bitand","","",8,[[]]],[11,"bitand","","",9,[[]]],[11,"bitand","","",10,[[]]],[11,"bitand","","",11,[[]]],[11,"bitand","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"bitand","","",14,[[]]],[11,"bitand","","",15,[[]]],[11,"bitand","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"bitand","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"bitand","","",26,[[]]],[11,"bitand","","",27,[[]]],[11,"bitand","","",28,[[]]],[11,"bitand","","",23,[[]]],[11,"bitand","","",24,[[]]],[11,"bitand","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"bitand","","",32,[[]]],[11,"bitand","","",33,[[]]],[11,"bitand","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"bitand","","",35,[[]]],[11,"bitand","","",36,[[]]],[11,"bitand","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"bitand","","",41,[[]]],[11,"bitand","","",42,[[]]],[11,"bitand","","",43,[[]]],[11,"bitand","","",44,[[]]],[11,"bitor","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"bitor","","",1,[[]]],[11,"bitor","","",2,[[]]],[11,"bitor","","",3,[[]]],[11,"bitor","","",4,[[]]],[11,"bitor","","",5,[[]]],[11,"bitor","","",6,[[]]],[11,"bitor","","",7,[[]]],[11,"bitor","","",8,[[]]],[11,"bitor","","",9,[[]]],[11,"bitor","","",10,[[]]],[11,"bitor","","",11,[[]]],[11,"bitor","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"bitor","","",14,[[]]],[11,"bitor","","",15,[[]]],[11,"bitor","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"bitor","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"bitor","","",26,[[]]],[11,"bitor","","",27,[[]]],[11,"bitor","","",28,[[]]],[11,"bitor","","",23,[[]]],[11,"bitor","","",24,[[]]],[11,"bitor","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"bitor","","",32,[[]]],[11,"bitor","","",33,[[]]],[11,"bitor","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"bitor","","",35,[[]]],[11,"bitor","","",36,[[]]],[11,"bitor","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"bitor","","",41,[[]]],[11,"bitor","","",42,[[]]],[11,"bitor","","",43,[[]]],[11,"bitor","","",44,[[]]],[11,"bitxor","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"bitxor","","",1,[[]]],[11,"bitxor","","",2,[[]]],[11,"bitxor","","",3,[[]]],[11,"bitxor","","",4,[[]]],[11,"bitxor","","",5,[[]]],[11,"bitxor","","",6,[[]]],[11,"bitxor","","",7,[[]]],[11,"bitxor","","",8,[[]]],[11,"bitxor","","",9,[[]]],[11,"bitxor","","",10,[[]]],[11,"bitxor","","",11,[[]]],[11,"bitxor","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"bitxor","","",14,[[]]],[11,"bitxor","","",15,[[]]],[11,"bitxor","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"bitxor","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"bitxor","","",26,[[]]],[11,"bitxor","","",27,[[]]],[11,"bitxor","","",28,[[]]],[11,"bitxor","","",23,[[]]],[11,"bitxor","","",24,[[]]],[11,"bitxor","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"bitxor","","",32,[[]]],[11,"bitxor","","",33,[[]]],[11,"bitxor","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"bitxor","","",35,[[]]],[11,"bitxor","","",36,[[]]],[11,"bitxor","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"bitxor","","",41,[[]]],[11,"bitxor","","",42,[[]]],[11,"bitxor","","",43,[[]]],[11,"bitxor","","",44,[[]]],[11,"shl","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"shl","","",1,[[]]],[11,"shl","","",2,[[]]],[11,"shl","","",3,[[]]],[11,"shl","","",4,[[]]],[11,"shl","","",5,[[]]],[11,"shl","","",6,[[]]],[11,"shl","","",7,[[]]],[11,"shl","","",8,[[]]],[11,"shl","","",9,[[]]],[11,"shl","","",10,[[]]],[11,"shl","","",11,[[]]],[11,"shl","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"shl","","",14,[[]]],[11,"shl","","",15,[[]]],[11,"shl","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"shl","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"shl","","",26,[[]]],[11,"shl","","",27,[[]]],[11,"shl","","",28,[[]]],[11,"shl","","",23,[[]]],[11,"shl","","",24,[[]]],[11,"shl","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"shl","","",32,[[]]],[11,"shl","","",33,[[]]],[11,"shl","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"shl","","",35,[[]]],[11,"shl","","",36,[[]]],[11,"shl","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"shl","","",41,[[]]],[11,"shl","","",42,[[]]],[11,"shl","","",43,[[]]],[11,"shl","","",44,[[]]],[11,"shr","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"shr","","",1,[[]]],[11,"shr","","",2,[[]]],[11,"shr","","",3,[[]]],[11,"shr","","",4,[[]]],[11,"shr","","",5,[[]]],[11,"shr","","",6,[[]]],[11,"shr","","",7,[[]]],[11,"shr","","",8,[[]]],[11,"shr","","",9,[[]]],[11,"shr","","",10,[[]]],[11,"shr","","",11,[[]]],[11,"shr","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"shr","","",14,[[]]],[11,"shr","","",15,[[]]],[11,"shr","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"shr","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"shr","","",26,[[]]],[11,"shr","","",27,[[]]],[11,"shr","","",28,[[]]],[11,"shr","","",23,[[]]],[11,"shr","","",24,[[]]],[11,"shr","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"shr","","",32,[[]]],[11,"shr","","",33,[[]]],[11,"shr","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"shr","","",35,[[]]],[11,"shr","","",36,[[]]],[11,"shr","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"shr","","",41,[[]]],[11,"shr","","",42,[[]]],[11,"shr","","",43,[[]]],[11,"shr","","",44,[[]]],[11,"index","unsafe_hacspec_examples::aes_gcm::aes","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[],["u8",3]]],[11,"index","","",0,[[["rangefull",3]]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[],["u8",3]]],[11,"index","","",1,[[["rangefull",3]]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[],["u8",3]]],[11,"index","","",2,[[["rangefull",3]]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[],["u8",3]]],[11,"index","","",3,[[["rangefull",3]]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[],["u8",3]]],[11,"index","","",4,[[["rangefull",3]]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[],["u8",3]]],[11,"index","","",5,[[["rangefull",3]]]],[11,"index","","",6,[[],["u8",3]]],[11,"index","","",6,[[],["u8",3]]],[11,"index","","",6,[[],["u8",3]]],[11,"index","","",6,[[],["u8",3]]],[11,"index","","",6,[[["rangefull",3]]]],[11,"index","","",7,[[],["u8",3]]],[11,"index","","",7,[[],["u8",3]]],[11,"index","","",7,[[],["u8",3]]],[11,"index","","",7,[[],["u8",3]]],[11,"index","","",7,[[["rangefull",3]]]],[11,"index","","",8,[[],["u8",3]]],[11,"index","","",8,[[],["u8",3]]],[11,"index","","",8,[[],["u8",3]]],[11,"index","","",8,[[],["u8",3]]],[11,"index","","",8,[[["rangefull",3]]]],[11,"index","","",9,[[],["u8",3]]],[11,"index","","",9,[[],["u8",3]]],[11,"index","","",9,[[],["u8",3]]],[11,"index","","",9,[[],["u8",3]]],[11,"index","","",9,[[["rangefull",3]]]],[11,"index","","",10,[[],["u8",3]]],[11,"index","","",10,[[],["u8",3]]],[11,"index","","",10,[[],["u8",3]]],[11,"index","","",10,[[],["u8",3]]],[11,"index","","",10,[[["rangefull",3]]]],[11,"index","","",11,[[],["u8",3]]],[11,"index","","",11,[[],["u8",3]]],[11,"index","","",11,[[],["u8",3]]],[11,"index","","",11,[[],["u8",3]]],[11,"index","","",11,[[["rangefull",3]]]],[11,"index","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[],["u8",3]]],[11,"index","","",13,[[],["u8",3]]],[11,"index","","",13,[[],["u8",3]]],[11,"index","","",13,[[],["u8",3]]],[11,"index","","",13,[[["rangefull",3]]]],[11,"index","","",14,[[],["u8",3]]],[11,"index","","",14,[[],["u8",3]]],[11,"index","","",14,[[],["u8",3]]],[11,"index","","",14,[[],["u8",3]]],[11,"index","","",14,[[["rangefull",3]]]],[11,"index","","",15,[[],["u8",3]]],[11,"index","","",15,[[],["u8",3]]],[11,"index","","",15,[[],["u8",3]]],[11,"index","","",15,[[],["u8",3]]],[11,"index","","",15,[[["rangefull",3]]]],[11,"index","unsafe_hacspec_examples::blake2::blake2b","",16,[[],["u8",3]]],[11,"index","","",16,[[],["u8",3]]],[11,"index","","",16,[[],["u8",3]]],[11,"index","","",16,[[],["u8",3]]],[11,"index","","",16,[[["rangefull",3]]]],[11,"index","","",17,[[]]],[11,"index","","",17,[[]]],[11,"index","","",17,[[]]],[11,"index","","",17,[[]]],[11,"index","","",17,[[["rangefull",3]]]],[11,"index","","",18,[[]]],[11,"index","","",18,[[]]],[11,"index","","",18,[[]]],[11,"index","","",18,[[]]],[11,"index","","",18,[[["rangefull",3]]]],[11,"index","","",19,[[]]],[11,"index","","",19,[[]]],[11,"index","","",19,[[]]],[11,"index","","",19,[[]]],[11,"index","","",19,[[["rangefull",3]]]],[11,"index","","",20,[[]]],[11,"index","","",20,[[]]],[11,"index","","",20,[[]]],[11,"index","","",20,[[]]],[11,"index","","",20,[[["rangefull",3]]]],[11,"index","unsafe_hacspec_examples::curve25519","",23,[[],["u8",3]]],[11,"index","","",23,[[],["u8",3]]],[11,"index","","",23,[[],["u8",3]]],[11,"index","","",23,[[],["u8",3]]],[11,"index","","",23,[[["rangefull",3]]]],[11,"index","","",24,[[],["u8",3]]],[11,"index","","",24,[[],["u8",3]]],[11,"index","","",24,[[],["u8",3]]],[11,"index","","",24,[[],["u8",3]]],[11,"index","","",24,[[["rangefull",3]]]],[11,"index","unsafe_hacspec_examples::sha2","",40,[[],["u8",3]]],[11,"index","","",40,[[],["u8",3]]],[11,"index","","",40,[[],["u8",3]]],[11,"index","","",40,[[],["u8",3]]],[11,"index","","",40,[[["rangefull",3]]]],[11,"index","","",41,[[],["u8",3]]],[11,"index","","",41,[[],["u8",3]]],[11,"index","","",41,[[],["u8",3]]],[11,"index","","",41,[[],["u8",3]]],[11,"index","","",41,[[["rangefull",3]]]],[11,"index","","",42,[[],["u8",3]]],[11,"index","","",42,[[],["u8",3]]],[11,"index","","",42,[[],["u8",3]]],[11,"index","","",42,[[],["u8",3]]],[11,"index","","",42,[[["rangefull",3]]]],[11,"index","","",43,[[],["u32",3]]],[11,"index","","",43,[[],["u32",3]]],[11,"index","","",43,[[],["u32",3]]],[11,"index","","",43,[[],["u32",3]]],[11,"index","","",43,[[["rangefull",3]]]],[11,"index","","",44,[[],["u32",3]]],[11,"index","","",44,[[],["u32",3]]],[11,"index","","",44,[[],["u32",3]]],[11,"index","","",44,[[],["u32",3]]],[11,"index","","",44,[[["rangefull",3]]]],[11,"index_mut","unsafe_hacspec_examples::aes_gcm::aes","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",0,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",1,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",2,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",3,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",4,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",5,[[],["u8",3]]],[11,"index_mut","","",6,[[],["u8",3]]],[11,"index_mut","","",6,[[],["u8",3]]],[11,"index_mut","","",6,[[],["u8",3]]],[11,"index_mut","","",6,[[],["u8",3]]],[11,"index_mut","","",7,[[],["u8",3]]],[11,"index_mut","","",7,[[],["u8",3]]],[11,"index_mut","","",7,[[],["u8",3]]],[11,"index_mut","","",7,[[],["u8",3]]],[11,"index_mut","","",8,[[],["u8",3]]],[11,"index_mut","","",8,[[],["u8",3]]],[11,"index_mut","","",8,[[],["u8",3]]],[11,"index_mut","","",8,[[],["u8",3]]],[11,"index_mut","","",9,[[],["u8",3]]],[11,"index_mut","","",9,[[],["u8",3]]],[11,"index_mut","","",9,[[],["u8",3]]],[11,"index_mut","","",9,[[],["u8",3]]],[11,"index_mut","","",10,[[],["u8",3]]],[11,"index_mut","","",10,[[],["u8",3]]],[11,"index_mut","","",10,[[],["u8",3]]],[11,"index_mut","","",10,[[],["u8",3]]],[11,"index_mut","","",11,[[],["u8",3]]],[11,"index_mut","","",11,[[],["u8",3]]],[11,"index_mut","","",11,[[],["u8",3]]],[11,"index_mut","","",11,[[],["u8",3]]],[11,"index_mut","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[],["u8",3]]],[11,"index_mut","","",13,[[],["u8",3]]],[11,"index_mut","","",13,[[],["u8",3]]],[11,"index_mut","","",13,[[],["u8",3]]],[11,"index_mut","","",14,[[],["u8",3]]],[11,"index_mut","","",14,[[],["u8",3]]],[11,"index_mut","","",14,[[],["u8",3]]],[11,"index_mut","","",14,[[],["u8",3]]],[11,"index_mut","","",15,[[],["u8",3]]],[11,"index_mut","","",15,[[],["u8",3]]],[11,"index_mut","","",15,[[],["u8",3]]],[11,"index_mut","","",15,[[],["u8",3]]],[11,"index_mut","unsafe_hacspec_examples::blake2::blake2b","",16,[[],["u8",3]]],[11,"index_mut","","",16,[[],["u8",3]]],[11,"index_mut","","",16,[[],["u8",3]]],[11,"index_mut","","",16,[[],["u8",3]]],[11,"index_mut","","",17,[[]]],[11,"index_mut","","",17,[[]]],[11,"index_mut","","",17,[[]]],[11,"index_mut","","",17,[[]]],[11,"index_mut","","",18,[[]]],[11,"index_mut","","",18,[[]]],[11,"index_mut","","",18,[[]]],[11,"index_mut","","",18,[[]]],[11,"index_mut","","",19,[[]]],[11,"index_mut","","",19,[[]]],[11,"index_mut","","",19,[[]]],[11,"index_mut","","",19,[[]]],[11,"index_mut","","",20,[[]]],[11,"index_mut","","",20,[[]]],[11,"index_mut","","",20,[[]]],[11,"index_mut","","",20,[[]]],[11,"index_mut","unsafe_hacspec_examples::curve25519","",23,[[],["u8",3]]],[11,"index_mut","","",23,[[],["u8",3]]],[11,"index_mut","","",23,[[],["u8",3]]],[11,"index_mut","","",23,[[],["u8",3]]],[11,"index_mut","","",24,[[],["u8",3]]],[11,"index_mut","","",24,[[],["u8",3]]],[11,"index_mut","","",24,[[],["u8",3]]],[11,"index_mut","","",24,[[],["u8",3]]],[11,"index_mut","unsafe_hacspec_examples::sha2","",40,[[],["u8",3]]],[11,"index_mut","","",40,[[],["u8",3]]],[11,"index_mut","","",40,[[],["u8",3]]],[11,"index_mut","","",40,[[],["u8",3]]],[11,"index_mut","","",41,[[],["u8",3]]],[11,"index_mut","","",41,[[],["u8",3]]],[11,"index_mut","","",41,[[],["u8",3]]],[11,"index_mut","","",41,[[],["u8",3]]],[11,"index_mut","","",42,[[],["u8",3]]],[11,"index_mut","","",42,[[],["u8",3]]],[11,"index_mut","","",42,[[],["u8",3]]],[11,"index_mut","","",42,[[],["u8",3]]],[11,"index_mut","","",43,[[],["u32",3]]],[11,"index_mut","","",43,[[],["u32",3]]],[11,"index_mut","","",43,[[],["u32",3]]],[11,"index_mut","","",43,[[],["u32",3]]],[11,"index_mut","","",44,[[],["u32",3]]],[11,"index_mut","","",44,[[],["u32",3]]],[11,"index_mut","","",44,[[],["u32",3]]],[11,"index_mut","","",44,[[],["u32",3]]],[11,"fmt","unsafe_hacspec_examples::curve25519","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::p256","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","unsafe_hacspec_examples::ec::p384","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"create","unsafe_hacspec_examples::aes_gcm::aes","",0,[[]]],[11,"len","","",0,[[]]],[11,"iter","","",0,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",0,[[]]],[11,"update","","",0,[[]]],[11,"update_start","","",0,[[]]],[11,"create","","",1,[[]]],[11,"len","","",1,[[]]],[11,"iter","","",1,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",1,[[]]],[11,"update","","",1,[[]]],[11,"update_start","","",1,[[]]],[11,"create","","",2,[[]]],[11,"len","","",2,[[]]],[11,"iter","","",2,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",2,[[]]],[11,"update","","",2,[[]]],[11,"update_start","","",2,[[]]],[11,"create","","",3,[[]]],[11,"len","","",3,[[]]],[11,"iter","","",3,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",3,[[]]],[11,"update","","",3,[[]]],[11,"update_start","","",3,[[]]],[11,"create","","",4,[[]]],[11,"len","","",4,[[]]],[11,"iter","","",4,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",4,[[]]],[11,"update","","",4,[[]]],[11,"update_start","","",4,[[]]],[11,"create","","",5,[[]]],[11,"len","","",5,[[]]],[11,"iter","","",5,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",5,[[]]],[11,"update","","",5,[[]]],[11,"update_start","","",5,[[]]],[11,"create","","",6,[[]]],[11,"len","","",6,[[]]],[11,"iter","","",6,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",6,[[]]],[11,"update","","",6,[[]]],[11,"update_start","","",6,[[]]],[11,"create","","",7,[[]]],[11,"len","","",7,[[]]],[11,"iter","","",7,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",7,[[]]],[11,"update","","",7,[[]]],[11,"update_start","","",7,[[]]],[11,"create","","",8,[[]]],[11,"len","","",8,[[]]],[11,"iter","","",8,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",8,[[]]],[11,"update","","",8,[[]]],[11,"update_start","","",8,[[]]],[11,"create","","",9,[[]]],[11,"len","","",9,[[]]],[11,"iter","","",9,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",9,[[]]],[11,"update","","",9,[[]]],[11,"update_start","","",9,[[]]],[11,"create","","",10,[[]]],[11,"len","","",10,[[]]],[11,"iter","","",10,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",10,[[]]],[11,"update","","",10,[[]]],[11,"update_start","","",10,[[]]],[11,"create","","",11,[[]]],[11,"len","","",11,[[]]],[11,"iter","","",11,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",11,[[]]],[11,"update","","",11,[[]]],[11,"update_start","","",11,[[]]],[11,"create","unsafe_hacspec_examples::aes_gcm::gf128","",13,[[]]],[11,"len","","",13,[[]]],[11,"iter","","",13,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",13,[[]]],[11,"update","","",13,[[]]],[11,"update_start","","",13,[[]]],[11,"create","","",14,[[]]],[11,"len","","",14,[[]]],[11,"iter","","",14,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",14,[[]]],[11,"update","","",14,[[]]],[11,"update_start","","",14,[[]]],[11,"create","","",15,[[]]],[11,"len","","",15,[[]]],[11,"iter","","",15,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",15,[[]]],[11,"update","","",15,[[]]],[11,"update_start","","",15,[[]]],[11,"create","unsafe_hacspec_examples::blake2::blake2b","",16,[[]]],[11,"len","","",16,[[]]],[11,"iter","","",16,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",16,[[]]],[11,"update","","",16,[[]]],[11,"update_start","","",16,[[]]],[11,"create","","",17,[[]]],[11,"len","","",17,[[]]],[11,"iter","","",17,[[],["iter",3]]],[11,"update_slice","","",17,[[]]],[11,"update","","",17,[[]]],[11,"update_start","","",17,[[]]],[11,"create","","",18,[[]]],[11,"len","","",18,[[]]],[11,"iter","","",18,[[],["iter",3]]],[11,"update_slice","","",18,[[]]],[11,"update","","",18,[[]]],[11,"update_start","","",18,[[]]],[11,"create","","",19,[[]]],[11,"len","","",19,[[]]],[11,"iter","","",19,[[],["iter",3]]],[11,"update_slice","","",19,[[]]],[11,"update","","",19,[[]]],[11,"update_start","","",19,[[]]],[11,"create","","",20,[[]]],[11,"len","","",20,[[]]],[11,"iter","","",20,[[],["iter",3]]],[11,"update_slice","","",20,[[]]],[11,"update","","",20,[[]]],[11,"update_start","","",20,[[]]],[11,"create","unsafe_hacspec_examples::curve25519","",23,[[]]],[11,"len","","",23,[[]]],[11,"iter","","",23,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",23,[[]]],[11,"update","","",23,[[]]],[11,"update_start","","",23,[[]]],[11,"create","","",24,[[]]],[11,"len","","",24,[[]]],[11,"iter","","",24,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",24,[[]]],[11,"update","","",24,[[]]],[11,"update_start","","",24,[[]]],[11,"create","unsafe_hacspec_examples::sha2","",40,[[]]],[11,"len","","",40,[[]]],[11,"iter","","",40,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",40,[[]]],[11,"update","","",40,[[]]],[11,"update_start","","",40,[[]]],[11,"create","","",41,[[]]],[11,"len","","",41,[[]]],[11,"iter","","",41,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",41,[[]]],[11,"update","","",41,[[]]],[11,"update_start","","",41,[[]]],[11,"create","","",42,[[]]],[11,"len","","",42,[[]]],[11,"iter","","",42,[[],[["iter",3],["u8",3]]]],[11,"update_slice","","",42,[[]]],[11,"update","","",42,[[]]],[11,"update_start","","",42,[[]]],[11,"create","","",43,[[]]],[11,"len","","",43,[[]]],[11,"iter","","",43,[[],[["iter",3],["u32",3]]]],[11,"update_slice","","",43,[[]]],[11,"update","","",43,[[]]],[11,"update_start","","",43,[[]]],[11,"create","","",44,[[]]],[11,"len","","",44,[[]]],[11,"iter","","",44,[[],[["iter",3],["u32",3]]]],[11,"update_slice","","",44,[[]]],[11,"update","","",44,[[]]],[11,"update_start","","",44,[[]]],[11,"ZERO","unsafe_hacspec_examples::curve25519","",25,[[]]],[11,"ONE","","",25,[[]]],[11,"TWO","","",25,[[]]],[11,"from_literal","","",25,[[]]],[11,"from_hex_string","","",25,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",25,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",25,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",25,[[]]],[11,"rotate_left","","",25,[[]]],[11,"rotate_right","","",25,[[]]],[11,"ZERO","","",26,[[]]],[11,"ONE","","",26,[[]]],[11,"TWO","","",26,[[]]],[11,"from_literal","","",26,[[]]],[11,"from_hex_string","","",26,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",26,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",26,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",26,[[]]],[11,"rotate_left","","",26,[[]]],[11,"rotate_right","","",26,[[]]],[11,"ZERO","","",27,[[]]],[11,"ONE","","",27,[[]]],[11,"TWO","","",27,[[]]],[11,"from_literal","","",27,[[]]],[11,"from_hex_string","","",27,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",27,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",27,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",27,[[]]],[11,"rotate_left","","",27,[[]]],[11,"rotate_right","","",27,[[]]],[11,"ZERO","","",28,[[]]],[11,"ONE","","",28,[[]]],[11,"TWO","","",28,[[]]],[11,"from_literal","","",28,[[]]],[11,"from_hex_string","","",28,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",28,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",28,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",28,[[]]],[11,"rotate_left","","",28,[[]]],[11,"rotate_right","","",28,[[]]],[11,"ZERO","unsafe_hacspec_examples::ec::p256","",31,[[]]],[11,"ONE","","",31,[[]]],[11,"TWO","","",31,[[]]],[11,"from_literal","","",31,[[]]],[11,"from_hex_string","","",31,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",31,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",31,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",31,[[]]],[11,"rotate_left","","",31,[[]]],[11,"rotate_right","","",31,[[]]],[11,"ZERO","","",32,[[]]],[11,"ONE","","",32,[[]]],[11,"TWO","","",32,[[]]],[11,"from_literal","","",32,[[]]],[11,"from_hex_string","","",32,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",32,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",32,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",32,[[]]],[11,"rotate_left","","",32,[[]]],[11,"rotate_right","","",32,[[]]],[11,"ZERO","","",33,[[]]],[11,"ONE","","",33,[[]]],[11,"TWO","","",33,[[]]],[11,"from_literal","","",33,[[]]],[11,"from_hex_string","","",33,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",33,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",33,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",33,[[]]],[11,"rotate_left","","",33,[[]]],[11,"rotate_right","","",33,[[]]],[11,"ZERO","unsafe_hacspec_examples::ec::p384","",34,[[]]],[11,"ONE","","",34,[[]]],[11,"TWO","","",34,[[]]],[11,"from_literal","","",34,[[]]],[11,"from_hex_string","","",34,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",34,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",34,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",34,[[]]],[11,"rotate_left","","",34,[[]]],[11,"rotate_right","","",34,[[]]],[11,"ZERO","","",35,[[]]],[11,"ONE","","",35,[[]]],[11,"TWO","","",35,[[]]],[11,"from_literal","","",35,[[]]],[11,"from_hex_string","","",35,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",35,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",35,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",35,[[]]],[11,"rotate_left","","",35,[[]]],[11,"rotate_right","","",35,[[]]],[11,"ZERO","","",36,[[]]],[11,"ONE","","",36,[[]]],[11,"TWO","","",36,[[]]],[11,"from_literal","","",36,[[]]],[11,"from_hex_string","","",36,[[["string",3]]]],[11,"get_bit","","Get bit `i` of this integer.",36,[[]]],[11,"set_bit","","Set bit `i` of this integer to `b` and return the result.…",36,[[]]],[11,"set","","Set bit `pos` of this integer to bit `yi` of integer `y`.",36,[[]]],[11,"rotate_left","","",36,[[]]],[11,"rotate_right","","",36,[[]]],[11,"sub_mod","unsafe_hacspec_examples::aes_gcm::aes","(self - rhs) % n.",0,[[]]],[11,"add_mod","","`(self + rhs) % n`",0,[[]]],[11,"mul_mod","","`(self * rhs) % n`",0,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",0,[[]]],[11,"modulo","","`self % n`",0,[[]]],[11,"signed_modulo","","",0,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",0,[[]]],[11,"sub_mod","","(self - rhs) % n.",1,[[]]],[11,"add_mod","","`(self + rhs) % n`",1,[[]]],[11,"mul_mod","","`(self * rhs) % n`",1,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",1,[[]]],[11,"modulo","","`self % n`",1,[[]]],[11,"signed_modulo","","",1,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",1,[[]]],[11,"sub_mod","","(self - rhs) % n.",2,[[]]],[11,"add_mod","","`(self + rhs) % n`",2,[[]]],[11,"mul_mod","","`(self * rhs) % n`",2,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",2,[[]]],[11,"modulo","","`self % n`",2,[[]]],[11,"signed_modulo","","",2,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",2,[[]]],[11,"sub_mod","","(self - rhs) % n.",3,[[]]],[11,"add_mod","","`(self + rhs) % n`",3,[[]]],[11,"mul_mod","","`(self * rhs) % n`",3,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",3,[[]]],[11,"modulo","","`self % n`",3,[[]]],[11,"signed_modulo","","",3,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",3,[[]]],[11,"sub_mod","","(self - rhs) % n.",4,[[]]],[11,"add_mod","","`(self + rhs) % n`",4,[[]]],[11,"mul_mod","","`(self * rhs) % n`",4,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",4,[[]]],[11,"modulo","","`self % n`",4,[[]]],[11,"signed_modulo","","",4,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",4,[[]]],[11,"sub_mod","","(self - rhs) % n.",5,[[]]],[11,"add_mod","","`(self + rhs) % n`",5,[[]]],[11,"mul_mod","","`(self * rhs) % n`",5,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",5,[[]]],[11,"modulo","","`self % n`",5,[[]]],[11,"signed_modulo","","",5,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",5,[[]]],[11,"sub_mod","","(self - rhs) % n.",6,[[]]],[11,"add_mod","","`(self + rhs) % n`",6,[[]]],[11,"mul_mod","","`(self * rhs) % n`",6,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",6,[[]]],[11,"modulo","","`self % n`",6,[[]]],[11,"signed_modulo","","",6,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",6,[[]]],[11,"sub_mod","","(self - rhs) % n.",7,[[]]],[11,"add_mod","","`(self + rhs) % n`",7,[[]]],[11,"mul_mod","","`(self * rhs) % n`",7,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",7,[[]]],[11,"modulo","","`self % n`",7,[[]]],[11,"signed_modulo","","",7,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",7,[[]]],[11,"sub_mod","","(self - rhs) % n.",8,[[]]],[11,"add_mod","","`(self + rhs) % n`",8,[[]]],[11,"mul_mod","","`(self * rhs) % n`",8,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",8,[[]]],[11,"modulo","","`self % n`",8,[[]]],[11,"signed_modulo","","",8,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",8,[[]]],[11,"sub_mod","","(self - rhs) % n.",9,[[]]],[11,"add_mod","","`(self + rhs) % n`",9,[[]]],[11,"mul_mod","","`(self * rhs) % n`",9,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",9,[[]]],[11,"modulo","","`self % n`",9,[[]]],[11,"signed_modulo","","",9,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",9,[[]]],[11,"sub_mod","","(self - rhs) % n.",10,[[]]],[11,"add_mod","","`(self + rhs) % n`",10,[[]]],[11,"mul_mod","","`(self * rhs) % n`",10,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",10,[[]]],[11,"modulo","","`self % n`",10,[[]]],[11,"signed_modulo","","",10,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",10,[[]]],[11,"sub_mod","","(self - rhs) % n.",11,[[]]],[11,"add_mod","","`(self + rhs) % n`",11,[[]]],[11,"mul_mod","","`(self * rhs) % n`",11,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",11,[[]]],[11,"modulo","","`self % n`",11,[[]]],[11,"signed_modulo","","",11,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",11,[[]]],[11,"sub_mod","unsafe_hacspec_examples::aes_gcm::gf128","(self - rhs) % n.",13,[[]]],[11,"add_mod","","`(self + rhs) % n`",13,[[]]],[11,"mul_mod","","`(self * rhs) % n`",13,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",13,[[]]],[11,"modulo","","`self % n`",13,[[]]],[11,"signed_modulo","","",13,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",13,[[]]],[11,"sub_mod","","(self - rhs) % n.",14,[[]]],[11,"add_mod","","`(self + rhs) % n`",14,[[]]],[11,"mul_mod","","`(self * rhs) % n`",14,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",14,[[]]],[11,"modulo","","`self % n`",14,[[]]],[11,"signed_modulo","","",14,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",14,[[]]],[11,"sub_mod","","(self - rhs) % n.",15,[[]]],[11,"add_mod","","`(self + rhs) % n`",15,[[]]],[11,"mul_mod","","`(self * rhs) % n`",15,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",15,[[]]],[11,"modulo","","`self % n`",15,[[]]],[11,"signed_modulo","","",15,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",15,[[]]],[11,"sub_mod","unsafe_hacspec_examples::blake2::blake2b","(self - rhs) % n.",16,[[]]],[11,"add_mod","","`(self + rhs) % n`",16,[[]]],[11,"mul_mod","","`(self * rhs) % n`",16,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",16,[[]]],[11,"modulo","","`self % n`",16,[[]]],[11,"signed_modulo","","",16,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",16,[[]]],[11,"sub_mod","unsafe_hacspec_examples::curve25519","(self - rhs) % n.",25,[[]]],[11,"add_mod","","`(self + rhs) % n`",25,[[]]],[11,"mul_mod","","`(self * rhs) % n`",25,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",25,[[]]],[11,"modulo","","`self % n`",25,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",25,[[]]],[11,"absolute","","`|self|`",25,[[]]],[11,"sub_mod","","(self - rhs) % n.",26,[[]]],[11,"add_mod","","`(self + rhs) % n`",26,[[]]],[11,"mul_mod","","`(self * rhs) % n`",26,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",26,[[]]],[11,"modulo","","`self % n`",26,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",26,[[]]],[11,"absolute","","`|self|`",26,[[]]],[11,"sub_mod","","(self - rhs) % n.",27,[[]]],[11,"add_mod","","`(self + rhs) % n`",27,[[]]],[11,"mul_mod","","`(self * rhs) % n`",27,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",27,[[]]],[11,"modulo","","`self % n`",27,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",27,[[]]],[11,"absolute","","`|self|`",27,[[]]],[11,"sub_mod","","(self - rhs) % n.",28,[[]]],[11,"add_mod","","`(self + rhs) % n`",28,[[]]],[11,"mul_mod","","`(self * rhs) % n`",28,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",28,[[]]],[11,"modulo","","`self % n`",28,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",28,[[]]],[11,"absolute","","`|self|`",28,[[]]],[11,"sub_mod","","(self - rhs) % n.",23,[[]]],[11,"add_mod","","`(self + rhs) % n`",23,[[]]],[11,"mul_mod","","`(self * rhs) % n`",23,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",23,[[]]],[11,"modulo","","`self % n`",23,[[]]],[11,"signed_modulo","","",23,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",23,[[]]],[11,"sub_mod","","(self - rhs) % n.",24,[[]]],[11,"add_mod","","`(self + rhs) % n`",24,[[]]],[11,"mul_mod","","`(self * rhs) % n`",24,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",24,[[]]],[11,"modulo","","`self % n`",24,[[]]],[11,"signed_modulo","","",24,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",24,[[]]],[11,"sub_mod","unsafe_hacspec_examples::ec::p256","(self - rhs) % n.",31,[[]]],[11,"add_mod","","`(self + rhs) % n`",31,[[]]],[11,"mul_mod","","`(self * rhs) % n`",31,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",31,[[]]],[11,"modulo","","`self % n`",31,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",31,[[]]],[11,"absolute","","`|self|`",31,[[]]],[11,"sub_mod","","(self - rhs) % n.",32,[[]]],[11,"add_mod","","`(self + rhs) % n`",32,[[]]],[11,"mul_mod","","`(self * rhs) % n`",32,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",32,[[]]],[11,"modulo","","`self % n`",32,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",32,[[]]],[11,"absolute","","`|self|`",32,[[]]],[11,"sub_mod","","(self - rhs) % n.",33,[[]]],[11,"add_mod","","`(self + rhs) % n`",33,[[]]],[11,"mul_mod","","`(self * rhs) % n`",33,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",33,[[]]],[11,"modulo","","`self % n`",33,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",33,[[]]],[11,"absolute","","`|self|`",33,[[]]],[11,"sub_mod","unsafe_hacspec_examples::ec::p384","(self - rhs) % n.",34,[[]]],[11,"add_mod","","`(self + rhs) % n`",34,[[]]],[11,"mul_mod","","`(self * rhs) % n`",34,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",34,[[]]],[11,"modulo","","`self % n`",34,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",34,[[]]],[11,"absolute","","`|self|`",34,[[]]],[11,"sub_mod","","(self - rhs) % n.",35,[[]]],[11,"add_mod","","`(self + rhs) % n`",35,[[]]],[11,"mul_mod","","`(self * rhs) % n`",35,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",35,[[]]],[11,"modulo","","`self % n`",35,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",35,[[]]],[11,"absolute","","`|self|`",35,[[]]],[11,"sub_mod","","(self - rhs) % n.",36,[[]]],[11,"add_mod","","`(self + rhs) % n`",36,[[]]],[11,"mul_mod","","`(self * rhs) % n`",36,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",36,[[]]],[11,"modulo","","`self % n`",36,[[]]],[11,"signed_modulo","","`self % n` that always returns a positive integer",36,[[]]],[11,"absolute","","`|self|`",36,[[]]],[11,"sub_mod","unsafe_hacspec_examples::sha2","(self - rhs) % n.",40,[[]]],[11,"add_mod","","`(self + rhs) % n`",40,[[]]],[11,"mul_mod","","`(self * rhs) % n`",40,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",40,[[]]],[11,"modulo","","`self % n`",40,[[]]],[11,"signed_modulo","","",40,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",40,[[]]],[11,"sub_mod","","(self - rhs) % n.",41,[[]]],[11,"add_mod","","`(self + rhs) % n`",41,[[]]],[11,"mul_mod","","`(self * rhs) % n`",41,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",41,[[]]],[11,"modulo","","`self % n`",41,[[]]],[11,"signed_modulo","","",41,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",41,[[]]],[11,"sub_mod","","(self - rhs) % n.",42,[[]]],[11,"add_mod","","`(self + rhs) % n`",42,[[]]],[11,"mul_mod","","`(self * rhs) % n`",42,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",42,[[]]],[11,"modulo","","`self % n`",42,[[]]],[11,"signed_modulo","","",42,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",42,[[]]],[11,"sub_mod","","(self - rhs) % n.",43,[[]]],[11,"add_mod","","`(self + rhs) % n`",43,[[]]],[11,"mul_mod","","`(self * rhs) % n`",43,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",43,[[]]],[11,"modulo","","`self % n`",43,[[]]],[11,"signed_modulo","","",43,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",43,[[]]],[11,"sub_mod","","(self - rhs) % n.",44,[[]]],[11,"add_mod","","`(self + rhs) % n`",44,[[]]],[11,"mul_mod","","`(self * rhs) % n`",44,[[]]],[11,"pow_mod","","`(self ^ exp) % n`",44,[[]]],[11,"modulo","","`self % n`",44,[[]]],[11,"signed_modulo","","",44,[[]]],[11,"absolute","","`|self|` (coefficient-wise)",44,[[]]],[11,"max_val","unsafe_hacspec_examples::aes_gcm::aes","Return largest value that can be represented.",0,[[]]],[11,"wrap_add","","",0,[[]]],[11,"wrap_sub","","",0,[[]]],[11,"wrap_mul","","",0,[[]]],[11,"wrap_div","","",0,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",0,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",0,[[]]],[11,"divide","","Division.",0,[[]]],[11,"inv","","Invert self modulo n.",0,[[]]],[11,"equal","","",0,[[]]],[11,"greater_than","","",0,[[]]],[11,"greater_than_or_qual","","",0,[[]]],[11,"less_than","","",0,[[]]],[11,"less_than_or_equal","","",0,[[]]],[11,"not_equal_bm","","",0,[[]]],[11,"equal_bm","","",0,[[]]],[11,"greater_than_bm","","",0,[[]]],[11,"greater_than_or_equal_bm","","",0,[[]]],[11,"less_than_bm","","",0,[[]]],[11,"less_than_or_equal_bm","","",0,[[]]],[11,"max_val","","Return largest value that can be represented.",1,[[]]],[11,"wrap_add","","",1,[[]]],[11,"wrap_sub","","",1,[[]]],[11,"wrap_mul","","",1,[[]]],[11,"wrap_div","","",1,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",1,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",1,[[]]],[11,"divide","","Division.",1,[[]]],[11,"inv","","Invert self modulo n.",1,[[]]],[11,"equal","","",1,[[]]],[11,"greater_than","","",1,[[]]],[11,"greater_than_or_qual","","",1,[[]]],[11,"less_than","","",1,[[]]],[11,"less_than_or_equal","","",1,[[]]],[11,"not_equal_bm","","",1,[[]]],[11,"equal_bm","","",1,[[]]],[11,"greater_than_bm","","",1,[[]]],[11,"greater_than_or_equal_bm","","",1,[[]]],[11,"less_than_bm","","",1,[[]]],[11,"less_than_or_equal_bm","","",1,[[]]],[11,"max_val","","Return largest value that can be represented.",2,[[]]],[11,"wrap_add","","",2,[[]]],[11,"wrap_sub","","",2,[[]]],[11,"wrap_mul","","",2,[[]]],[11,"wrap_div","","",2,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",2,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",2,[[]]],[11,"divide","","Division.",2,[[]]],[11,"inv","","Invert self modulo n.",2,[[]]],[11,"equal","","",2,[[]]],[11,"greater_than","","",2,[[]]],[11,"greater_than_or_qual","","",2,[[]]],[11,"less_than","","",2,[[]]],[11,"less_than_or_equal","","",2,[[]]],[11,"not_equal_bm","","",2,[[]]],[11,"equal_bm","","",2,[[]]],[11,"greater_than_bm","","",2,[[]]],[11,"greater_than_or_equal_bm","","",2,[[]]],[11,"less_than_bm","","",2,[[]]],[11,"less_than_or_equal_bm","","",2,[[]]],[11,"max_val","","Return largest value that can be represented.",3,[[]]],[11,"wrap_add","","",3,[[]]],[11,"wrap_sub","","",3,[[]]],[11,"wrap_mul","","",3,[[]]],[11,"wrap_div","","",3,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",3,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",3,[[]]],[11,"divide","","Division.",3,[[]]],[11,"inv","","Invert self modulo n.",3,[[]]],[11,"equal","","",3,[[]]],[11,"greater_than","","",3,[[]]],[11,"greater_than_or_qual","","",3,[[]]],[11,"less_than","","",3,[[]]],[11,"less_than_or_equal","","",3,[[]]],[11,"not_equal_bm","","",3,[[]]],[11,"equal_bm","","",3,[[]]],[11,"greater_than_bm","","",3,[[]]],[11,"greater_than_or_equal_bm","","",3,[[]]],[11,"less_than_bm","","",3,[[]]],[11,"less_than_or_equal_bm","","",3,[[]]],[11,"max_val","","Return largest value that can be represented.",4,[[]]],[11,"wrap_add","","",4,[[]]],[11,"wrap_sub","","",4,[[]]],[11,"wrap_mul","","",4,[[]]],[11,"wrap_div","","",4,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",4,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",4,[[]]],[11,"divide","","Division.",4,[[]]],[11,"inv","","Invert self modulo n.",4,[[]]],[11,"equal","","",4,[[]]],[11,"greater_than","","",4,[[]]],[11,"greater_than_or_qual","","",4,[[]]],[11,"less_than","","",4,[[]]],[11,"less_than_or_equal","","",4,[[]]],[11,"not_equal_bm","","",4,[[]]],[11,"equal_bm","","",4,[[]]],[11,"greater_than_bm","","",4,[[]]],[11,"greater_than_or_equal_bm","","",4,[[]]],[11,"less_than_bm","","",4,[[]]],[11,"less_than_or_equal_bm","","",4,[[]]],[11,"max_val","","Return largest value that can be represented.",5,[[]]],[11,"wrap_add","","",5,[[]]],[11,"wrap_sub","","",5,[[]]],[11,"wrap_mul","","",5,[[]]],[11,"wrap_div","","",5,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",5,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",5,[[]]],[11,"divide","","Division.",5,[[]]],[11,"inv","","Invert self modulo n.",5,[[]]],[11,"equal","","",5,[[]]],[11,"greater_than","","",5,[[]]],[11,"greater_than_or_qual","","",5,[[]]],[11,"less_than","","",5,[[]]],[11,"less_than_or_equal","","",5,[[]]],[11,"not_equal_bm","","",5,[[]]],[11,"equal_bm","","",5,[[]]],[11,"greater_than_bm","","",5,[[]]],[11,"greater_than_or_equal_bm","","",5,[[]]],[11,"less_than_bm","","",5,[[]]],[11,"less_than_or_equal_bm","","",5,[[]]],[11,"max_val","","Return largest value that can be represented.",6,[[]]],[11,"wrap_add","","",6,[[]]],[11,"wrap_sub","","",6,[[]]],[11,"wrap_mul","","",6,[[]]],[11,"wrap_div","","",6,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",6,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",6,[[]]],[11,"divide","","Division.",6,[[]]],[11,"inv","","Invert self modulo n.",6,[[]]],[11,"equal","","",6,[[]]],[11,"greater_than","","",6,[[]]],[11,"greater_than_or_qual","","",6,[[]]],[11,"less_than","","",6,[[]]],[11,"less_than_or_equal","","",6,[[]]],[11,"not_equal_bm","","",6,[[]]],[11,"equal_bm","","",6,[[]]],[11,"greater_than_bm","","",6,[[]]],[11,"greater_than_or_equal_bm","","",6,[[]]],[11,"less_than_bm","","",6,[[]]],[11,"less_than_or_equal_bm","","",6,[[]]],[11,"max_val","","Return largest value that can be represented.",7,[[]]],[11,"wrap_add","","",7,[[]]],[11,"wrap_sub","","",7,[[]]],[11,"wrap_mul","","",7,[[]]],[11,"wrap_div","","",7,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",7,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",7,[[]]],[11,"divide","","Division.",7,[[]]],[11,"inv","","Invert self modulo n.",7,[[]]],[11,"equal","","",7,[[]]],[11,"greater_than","","",7,[[]]],[11,"greater_than_or_qual","","",7,[[]]],[11,"less_than","","",7,[[]]],[11,"less_than_or_equal","","",7,[[]]],[11,"not_equal_bm","","",7,[[]]],[11,"equal_bm","","",7,[[]]],[11,"greater_than_bm","","",7,[[]]],[11,"greater_than_or_equal_bm","","",7,[[]]],[11,"less_than_bm","","",7,[[]]],[11,"less_than_or_equal_bm","","",7,[[]]],[11,"max_val","","Return largest value that can be represented.",8,[[]]],[11,"wrap_add","","",8,[[]]],[11,"wrap_sub","","",8,[[]]],[11,"wrap_mul","","",8,[[]]],[11,"wrap_div","","",8,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",8,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",8,[[]]],[11,"divide","","Division.",8,[[]]],[11,"inv","","Invert self modulo n.",8,[[]]],[11,"equal","","",8,[[]]],[11,"greater_than","","",8,[[]]],[11,"greater_than_or_qual","","",8,[[]]],[11,"less_than","","",8,[[]]],[11,"less_than_or_equal","","",8,[[]]],[11,"not_equal_bm","","",8,[[]]],[11,"equal_bm","","",8,[[]]],[11,"greater_than_bm","","",8,[[]]],[11,"greater_than_or_equal_bm","","",8,[[]]],[11,"less_than_bm","","",8,[[]]],[11,"less_than_or_equal_bm","","",8,[[]]],[11,"max_val","","Return largest value that can be represented.",9,[[]]],[11,"wrap_add","","",9,[[]]],[11,"wrap_sub","","",9,[[]]],[11,"wrap_mul","","",9,[[]]],[11,"wrap_div","","",9,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",9,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",9,[[]]],[11,"divide","","Division.",9,[[]]],[11,"inv","","Invert self modulo n.",9,[[]]],[11,"equal","","",9,[[]]],[11,"greater_than","","",9,[[]]],[11,"greater_than_or_qual","","",9,[[]]],[11,"less_than","","",9,[[]]],[11,"less_than_or_equal","","",9,[[]]],[11,"not_equal_bm","","",9,[[]]],[11,"equal_bm","","",9,[[]]],[11,"greater_than_bm","","",9,[[]]],[11,"greater_than_or_equal_bm","","",9,[[]]],[11,"less_than_bm","","",9,[[]]],[11,"less_than_or_equal_bm","","",9,[[]]],[11,"max_val","","Return largest value that can be represented.",10,[[]]],[11,"wrap_add","","",10,[[]]],[11,"wrap_sub","","",10,[[]]],[11,"wrap_mul","","",10,[[]]],[11,"wrap_div","","",10,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",10,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",10,[[]]],[11,"divide","","Division.",10,[[]]],[11,"inv","","Invert self modulo n.",10,[[]]],[11,"equal","","",10,[[]]],[11,"greater_than","","",10,[[]]],[11,"greater_than_or_qual","","",10,[[]]],[11,"less_than","","",10,[[]]],[11,"less_than_or_equal","","",10,[[]]],[11,"not_equal_bm","","",10,[[]]],[11,"equal_bm","","",10,[[]]],[11,"greater_than_bm","","",10,[[]]],[11,"greater_than_or_equal_bm","","",10,[[]]],[11,"less_than_bm","","",10,[[]]],[11,"less_than_or_equal_bm","","",10,[[]]],[11,"max_val","","Return largest value that can be represented.",11,[[]]],[11,"wrap_add","","",11,[[]]],[11,"wrap_sub","","",11,[[]]],[11,"wrap_mul","","",11,[[]]],[11,"wrap_div","","",11,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",11,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",11,[[]]],[11,"divide","","Division.",11,[[]]],[11,"inv","","Invert self modulo n.",11,[[]]],[11,"equal","","",11,[[]]],[11,"greater_than","","",11,[[]]],[11,"greater_than_or_qual","","",11,[[]]],[11,"less_than","","",11,[[]]],[11,"less_than_or_equal","","",11,[[]]],[11,"not_equal_bm","","",11,[[]]],[11,"equal_bm","","",11,[[]]],[11,"greater_than_bm","","",11,[[]]],[11,"greater_than_or_equal_bm","","",11,[[]]],[11,"less_than_bm","","",11,[[]]],[11,"less_than_or_equal_bm","","",11,[[]]],[11,"max_val","unsafe_hacspec_examples::aes_gcm::gf128","Return largest value that can be represented.",13,[[]]],[11,"wrap_add","","",13,[[]]],[11,"wrap_sub","","",13,[[]]],[11,"wrap_mul","","",13,[[]]],[11,"wrap_div","","",13,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",13,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",13,[[]]],[11,"divide","","Division.",13,[[]]],[11,"inv","","Invert self modulo n.",13,[[]]],[11,"equal","","",13,[[]]],[11,"greater_than","","",13,[[]]],[11,"greater_than_or_qual","","",13,[[]]],[11,"less_than","","",13,[[]]],[11,"less_than_or_equal","","",13,[[]]],[11,"not_equal_bm","","",13,[[]]],[11,"equal_bm","","",13,[[]]],[11,"greater_than_bm","","",13,[[]]],[11,"greater_than_or_equal_bm","","",13,[[]]],[11,"less_than_bm","","",13,[[]]],[11,"less_than_or_equal_bm","","",13,[[]]],[11,"max_val","","Return largest value that can be represented.",14,[[]]],[11,"wrap_add","","",14,[[]]],[11,"wrap_sub","","",14,[[]]],[11,"wrap_mul","","",14,[[]]],[11,"wrap_div","","",14,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",14,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",14,[[]]],[11,"divide","","Division.",14,[[]]],[11,"inv","","Invert self modulo n.",14,[[]]],[11,"equal","","",14,[[]]],[11,"greater_than","","",14,[[]]],[11,"greater_than_or_qual","","",14,[[]]],[11,"less_than","","",14,[[]]],[11,"less_than_or_equal","","",14,[[]]],[11,"not_equal_bm","","",14,[[]]],[11,"equal_bm","","",14,[[]]],[11,"greater_than_bm","","",14,[[]]],[11,"greater_than_or_equal_bm","","",14,[[]]],[11,"less_than_bm","","",14,[[]]],[11,"less_than_or_equal_bm","","",14,[[]]],[11,"max_val","","Return largest value that can be represented.",15,[[]]],[11,"wrap_add","","",15,[[]]],[11,"wrap_sub","","",15,[[]]],[11,"wrap_mul","","",15,[[]]],[11,"wrap_div","","",15,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",15,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",15,[[]]],[11,"divide","","Division.",15,[[]]],[11,"inv","","Invert self modulo n.",15,[[]]],[11,"equal","","",15,[[]]],[11,"greater_than","","",15,[[]]],[11,"greater_than_or_qual","","",15,[[]]],[11,"less_than","","",15,[[]]],[11,"less_than_or_equal","","",15,[[]]],[11,"not_equal_bm","","",15,[[]]],[11,"equal_bm","","",15,[[]]],[11,"greater_than_bm","","",15,[[]]],[11,"greater_than_or_equal_bm","","",15,[[]]],[11,"less_than_bm","","",15,[[]]],[11,"less_than_or_equal_bm","","",15,[[]]],[11,"max_val","unsafe_hacspec_examples::blake2::blake2b","Return largest value that can be represented.",16,[[]]],[11,"wrap_add","","",16,[[]]],[11,"wrap_sub","","",16,[[]]],[11,"wrap_mul","","",16,[[]]],[11,"wrap_div","","",16,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",16,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",16,[[]]],[11,"divide","","Division.",16,[[]]],[11,"inv","","Invert self modulo n.",16,[[]]],[11,"equal","","",16,[[]]],[11,"greater_than","","",16,[[]]],[11,"greater_than_or_qual","","",16,[[]]],[11,"less_than","","",16,[[]]],[11,"less_than_or_equal","","",16,[[]]],[11,"not_equal_bm","","",16,[[]]],[11,"equal_bm","","",16,[[]]],[11,"greater_than_bm","","",16,[[]]],[11,"greater_than_or_equal_bm","","",16,[[]]],[11,"less_than_bm","","",16,[[]]],[11,"less_than_or_equal_bm","","",16,[[]]],[11,"max_val","unsafe_hacspec_examples::curve25519","Return largest value that can be represented.",25,[[]]],[11,"wrap_add","","",25,[[]]],[11,"wrap_sub","","",25,[[]]],[11,"wrap_mul","","",25,[[]]],[11,"wrap_div","","",25,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",25,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",25,[[]]],[11,"divide","","Division.",25,[[]]],[11,"inv","","Invert self modulo n.",25,[[]]],[11,"equal","","",25,[[]]],[11,"greater_than","","",25,[[]]],[11,"greater_than_or_qual","","",25,[[]]],[11,"less_than","","",25,[[]]],[11,"less_than_or_equal","","",25,[[]]],[11,"not_equal_bm","","",25,[[]]],[11,"equal_bm","","",25,[[]]],[11,"greater_than_bm","","",25,[[]]],[11,"greater_than_or_equal_bm","","",25,[[]]],[11,"less_than_bm","","",25,[[]]],[11,"less_than_or_equal_bm","","",25,[[]]],[11,"max_val","","Return largest value that can be represented.",26,[[]]],[11,"wrap_add","","",26,[[]]],[11,"wrap_sub","","",26,[[]]],[11,"wrap_mul","","",26,[[]]],[11,"wrap_div","","",26,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",26,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",26,[[]]],[11,"divide","","Division.",26,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",26,[[]]],[11,"equal","","",26,[[]]],[11,"greater_than","","",26,[[]]],[11,"greater_than_or_qual","","",26,[[]]],[11,"less_than","","",26,[[]]],[11,"less_than_or_equal","","",26,[[]]],[11,"not_equal_bm","","",26,[[]]],[11,"equal_bm","","",26,[[]]],[11,"greater_than_bm","","",26,[[]]],[11,"greater_than_or_equal_bm","","",26,[[]]],[11,"less_than_bm","","",26,[[]]],[11,"less_than_or_equal_bm","","",26,[[]]],[11,"max_val","","Return largest value that can be represented.",27,[[]]],[11,"wrap_add","","",27,[[]]],[11,"wrap_sub","","",27,[[]]],[11,"wrap_mul","","",27,[[]]],[11,"wrap_div","","",27,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",27,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",27,[[]]],[11,"divide","","Division.",27,[[]]],[11,"inv","","Invert self modulo n.",27,[[]]],[11,"equal","","",27,[[]]],[11,"greater_than","","",27,[[]]],[11,"greater_than_or_qual","","",27,[[]]],[11,"less_than","","",27,[[]]],[11,"less_than_or_equal","","",27,[[]]],[11,"not_equal_bm","","",27,[[]]],[11,"equal_bm","","",27,[[]]],[11,"greater_than_bm","","",27,[[]]],[11,"greater_than_or_equal_bm","","",27,[[]]],[11,"less_than_bm","","",27,[[]]],[11,"less_than_or_equal_bm","","",27,[[]]],[11,"max_val","","Return largest value that can be represented.",28,[[]]],[11,"wrap_add","","",28,[[]]],[11,"wrap_sub","","",28,[[]]],[11,"wrap_mul","","",28,[[]]],[11,"wrap_div","","",28,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",28,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",28,[[]]],[11,"divide","","Division.",28,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",28,[[]]],[11,"equal","","",28,[[]]],[11,"greater_than","","",28,[[]]],[11,"greater_than_or_qual","","",28,[[]]],[11,"less_than","","",28,[[]]],[11,"less_than_or_equal","","",28,[[]]],[11,"not_equal_bm","","",28,[[]]],[11,"equal_bm","","",28,[[]]],[11,"greater_than_bm","","",28,[[]]],[11,"greater_than_or_equal_bm","","",28,[[]]],[11,"less_than_bm","","",28,[[]]],[11,"less_than_or_equal_bm","","",28,[[]]],[11,"max_val","","Return largest value that can be represented.",23,[[]]],[11,"wrap_add","","",23,[[]]],[11,"wrap_sub","","",23,[[]]],[11,"wrap_mul","","",23,[[]]],[11,"wrap_div","","",23,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",23,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",23,[[]]],[11,"divide","","Division.",23,[[]]],[11,"inv","","Invert self modulo n.",23,[[]]],[11,"equal","","",23,[[]]],[11,"greater_than","","",23,[[]]],[11,"greater_than_or_qual","","",23,[[]]],[11,"less_than","","",23,[[]]],[11,"less_than_or_equal","","",23,[[]]],[11,"not_equal_bm","","",23,[[]]],[11,"equal_bm","","",23,[[]]],[11,"greater_than_bm","","",23,[[]]],[11,"greater_than_or_equal_bm","","",23,[[]]],[11,"less_than_bm","","",23,[[]]],[11,"less_than_or_equal_bm","","",23,[[]]],[11,"max_val","","Return largest value that can be represented.",24,[[]]],[11,"wrap_add","","",24,[[]]],[11,"wrap_sub","","",24,[[]]],[11,"wrap_mul","","",24,[[]]],[11,"wrap_div","","",24,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",24,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",24,[[]]],[11,"divide","","Division.",24,[[]]],[11,"inv","","Invert self modulo n.",24,[[]]],[11,"equal","","",24,[[]]],[11,"greater_than","","",24,[[]]],[11,"greater_than_or_qual","","",24,[[]]],[11,"less_than","","",24,[[]]],[11,"less_than_or_equal","","",24,[[]]],[11,"not_equal_bm","","",24,[[]]],[11,"equal_bm","","",24,[[]]],[11,"greater_than_bm","","",24,[[]]],[11,"greater_than_or_equal_bm","","",24,[[]]],[11,"less_than_bm","","",24,[[]]],[11,"less_than_or_equal_bm","","",24,[[]]],[11,"max_val","unsafe_hacspec_examples::ec::p256","Return largest value that can be represented.",31,[[]]],[11,"wrap_add","","",31,[[]]],[11,"wrap_sub","","",31,[[]]],[11,"wrap_mul","","",31,[[]]],[11,"wrap_div","","",31,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",31,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",31,[[]]],[11,"divide","","Division.",31,[[]]],[11,"inv","","Invert self modulo n.",31,[[]]],[11,"equal","","",31,[[]]],[11,"greater_than","","",31,[[]]],[11,"greater_than_or_qual","","",31,[[]]],[11,"less_than","","",31,[[]]],[11,"less_than_or_equal","","",31,[[]]],[11,"not_equal_bm","","",31,[[]]],[11,"equal_bm","","",31,[[]]],[11,"greater_than_bm","","",31,[[]]],[11,"greater_than_or_equal_bm","","",31,[[]]],[11,"less_than_bm","","",31,[[]]],[11,"less_than_or_equal_bm","","",31,[[]]],[11,"max_val","","Return largest value that can be represented.",32,[[]]],[11,"wrap_add","","",32,[[]]],[11,"wrap_sub","","",32,[[]]],[11,"wrap_mul","","",32,[[]]],[11,"wrap_div","","",32,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",32,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",32,[[]]],[11,"divide","","Division.",32,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",32,[[]]],[11,"equal","","",32,[[]]],[11,"greater_than","","",32,[[]]],[11,"greater_than_or_qual","","",32,[[]]],[11,"less_than","","",32,[[]]],[11,"less_than_or_equal","","",32,[[]]],[11,"not_equal_bm","","",32,[[]]],[11,"equal_bm","","",32,[[]]],[11,"greater_than_bm","","",32,[[]]],[11,"greater_than_or_equal_bm","","",32,[[]]],[11,"less_than_bm","","",32,[[]]],[11,"less_than_or_equal_bm","","",32,[[]]],[11,"max_val","","Return largest value that can be represented.",33,[[]]],[11,"wrap_add","","",33,[[]]],[11,"wrap_sub","","",33,[[]]],[11,"wrap_mul","","",33,[[]]],[11,"wrap_div","","",33,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",33,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",33,[[]]],[11,"divide","","Division.",33,[[]]],[11,"inv","","Invert self modulo n.",33,[[]]],[11,"equal","","",33,[[]]],[11,"greater_than","","",33,[[]]],[11,"greater_than_or_qual","","",33,[[]]],[11,"less_than","","",33,[[]]],[11,"less_than_or_equal","","",33,[[]]],[11,"not_equal_bm","","",33,[[]]],[11,"equal_bm","","",33,[[]]],[11,"greater_than_bm","","",33,[[]]],[11,"greater_than_or_equal_bm","","",33,[[]]],[11,"less_than_bm","","",33,[[]]],[11,"less_than_or_equal_bm","","",33,[[]]],[11,"max_val","unsafe_hacspec_examples::ec::p384","Return largest value that can be represented.",34,[[]]],[11,"wrap_add","","",34,[[]]],[11,"wrap_sub","","",34,[[]]],[11,"wrap_mul","","",34,[[]]],[11,"wrap_div","","",34,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",34,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",34,[[]]],[11,"divide","","Division.",34,[[]]],[11,"inv","","Invert self modulo n.",34,[[]]],[11,"equal","","",34,[[]]],[11,"greater_than","","",34,[[]]],[11,"greater_than_or_qual","","",34,[[]]],[11,"less_than","","",34,[[]]],[11,"less_than_or_equal","","",34,[[]]],[11,"not_equal_bm","","",34,[[]]],[11,"equal_bm","","",34,[[]]],[11,"greater_than_bm","","",34,[[]]],[11,"greater_than_or_equal_bm","","",34,[[]]],[11,"less_than_bm","","",34,[[]]],[11,"less_than_or_equal_bm","","",34,[[]]],[11,"max_val","","Return largest value that can be represented.",35,[[]]],[11,"wrap_add","","",35,[[]]],[11,"wrap_sub","","",35,[[]]],[11,"wrap_mul","","",35,[[]]],[11,"wrap_div","","",35,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",35,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",35,[[]]],[11,"divide","","Division.",35,[[]]],[11,"inv","","Invert self modulo n. NOTE: `n` is ignored and inversion…",35,[[]]],[11,"equal","","",35,[[]]],[11,"greater_than","","",35,[[]]],[11,"greater_than_or_qual","","",35,[[]]],[11,"less_than","","",35,[[]]],[11,"less_than_or_equal","","",35,[[]]],[11,"not_equal_bm","","",35,[[]]],[11,"equal_bm","","",35,[[]]],[11,"greater_than_bm","","",35,[[]]],[11,"greater_than_or_equal_bm","","",35,[[]]],[11,"less_than_bm","","",35,[[]]],[11,"less_than_or_equal_bm","","",35,[[]]],[11,"max_val","","Return largest value that can be represented.",36,[[]]],[11,"wrap_add","","",36,[[]]],[11,"wrap_sub","","",36,[[]]],[11,"wrap_mul","","",36,[[]]],[11,"wrap_div","","",36,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",36,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",36,[[]]],[11,"divide","","Division.",36,[[]]],[11,"inv","","Invert self modulo n.",36,[[]]],[11,"equal","","",36,[[]]],[11,"greater_than","","",36,[[]]],[11,"greater_than_or_qual","","",36,[[]]],[11,"less_than","","",36,[[]]],[11,"less_than_or_equal","","",36,[[]]],[11,"not_equal_bm","","",36,[[]]],[11,"equal_bm","","",36,[[]]],[11,"greater_than_bm","","",36,[[]]],[11,"greater_than_or_equal_bm","","",36,[[]]],[11,"less_than_bm","","",36,[[]]],[11,"less_than_or_equal_bm","","",36,[[]]],[11,"max_val","unsafe_hacspec_examples::sha2","Return largest value that can be represented.",40,[[]]],[11,"wrap_add","","",40,[[]]],[11,"wrap_sub","","",40,[[]]],[11,"wrap_mul","","",40,[[]]],[11,"wrap_div","","",40,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",40,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",40,[[]]],[11,"divide","","Division.",40,[[]]],[11,"inv","","Invert self modulo n.",40,[[]]],[11,"equal","","",40,[[]]],[11,"greater_than","","",40,[[]]],[11,"greater_than_or_qual","","",40,[[]]],[11,"less_than","","",40,[[]]],[11,"less_than_or_equal","","",40,[[]]],[11,"not_equal_bm","","",40,[[]]],[11,"equal_bm","","",40,[[]]],[11,"greater_than_bm","","",40,[[]]],[11,"greater_than_or_equal_bm","","",40,[[]]],[11,"less_than_bm","","",40,[[]]],[11,"less_than_or_equal_bm","","",40,[[]]],[11,"max_val","","Return largest value that can be represented.",41,[[]]],[11,"wrap_add","","",41,[[]]],[11,"wrap_sub","","",41,[[]]],[11,"wrap_mul","","",41,[[]]],[11,"wrap_div","","",41,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",41,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",41,[[]]],[11,"divide","","Division.",41,[[]]],[11,"inv","","Invert self modulo n.",41,[[]]],[11,"equal","","",41,[[]]],[11,"greater_than","","",41,[[]]],[11,"greater_than_or_qual","","",41,[[]]],[11,"less_than","","",41,[[]]],[11,"less_than_or_equal","","",41,[[]]],[11,"not_equal_bm","","",41,[[]]],[11,"equal_bm","","",41,[[]]],[11,"greater_than_bm","","",41,[[]]],[11,"greater_than_or_equal_bm","","",41,[[]]],[11,"less_than_bm","","",41,[[]]],[11,"less_than_or_equal_bm","","",41,[[]]],[11,"max_val","","Return largest value that can be represented.",42,[[]]],[11,"wrap_add","","",42,[[]]],[11,"wrap_sub","","",42,[[]]],[11,"wrap_mul","","",42,[[]]],[11,"wrap_div","","",42,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",42,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",42,[[]]],[11,"divide","","Division.",42,[[]]],[11,"inv","","Invert self modulo n.",42,[[]]],[11,"equal","","",42,[[]]],[11,"greater_than","","",42,[[]]],[11,"greater_than_or_qual","","",42,[[]]],[11,"less_than","","",42,[[]]],[11,"less_than_or_equal","","",42,[[]]],[11,"not_equal_bm","","",42,[[]]],[11,"equal_bm","","",42,[[]]],[11,"greater_than_bm","","",42,[[]]],[11,"greater_than_or_equal_bm","","",42,[[]]],[11,"less_than_bm","","",42,[[]]],[11,"less_than_or_equal_bm","","",42,[[]]],[11,"max_val","","Return largest value that can be represented.",43,[[]]],[11,"wrap_add","","",43,[[]]],[11,"wrap_sub","","",43,[[]]],[11,"wrap_mul","","",43,[[]]],[11,"wrap_div","","",43,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",43,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",43,[[]]],[11,"divide","","Division.",43,[[]]],[11,"inv","","Invert self modulo n.",43,[[]]],[11,"equal","","",43,[[]]],[11,"greater_than","","",43,[[]]],[11,"greater_than_or_qual","","",43,[[]]],[11,"less_than","","",43,[[]]],[11,"less_than_or_equal","","",43,[[]]],[11,"not_equal_bm","","",43,[[]]],[11,"equal_bm","","",43,[[]]],[11,"greater_than_bm","","",43,[[]]],[11,"greater_than_or_equal_bm","","",43,[[]]],[11,"less_than_bm","","",43,[[]]],[11,"less_than_or_equal_bm","","",43,[[]]],[11,"max_val","","Return largest value that can be represented.",44,[[]]],[11,"wrap_add","","",44,[[]]],[11,"wrap_sub","","",44,[[]]],[11,"wrap_mul","","",44,[[]]],[11,"wrap_div","","",44,[[]]],[11,"exp","","`self ^ exp` where `exp` is a `u32`.",44,[[]]],[11,"pow_self","","`self ^ exp` where `exp` is a `Self`.",44,[[]]],[11,"divide","","Division.",44,[[]]],[11,"inv","","Invert self modulo n.",44,[[]]],[11,"equal","","",44,[[]]],[11,"greater_than","","",44,[[]]],[11,"greater_than_or_qual","","",44,[[]]],[11,"less_than","","",44,[[]]],[11,"less_than_or_equal","","",44,[[]]],[11,"not_equal_bm","","",44,[[]]],[11,"equal_bm","","",44,[[]]],[11,"greater_than_bm","","",44,[[]]],[11,"greater_than_or_equal_bm","","",44,[[]]],[11,"less_than_bm","","",44,[[]]],[11,"less_than_or_equal_bm","","",44,[[]]]],"p":[[3,"Block"],[3,"Word"],[3,"RoundKey"],[3,"Nonce"],[3,"SBox"],[3,"RCon"],[3,"Bytes144"],[3,"Bytes176"],[3,"Bytes208"],[3,"Bytes240"],[3,"Key128"],[3,"Key256"],[4,"AesVariant"],[3,"Block"],[3,"Key"],[3,"Tag"],[3,"DigestB"],[3,"Sigma"],[3,"State"],[3,"DoubleState"],[3,"Counter"],[4,"BlakeVariant"],[8,"HasIV"],[3,"SerializedPoint"],[3,"SerializedScalar"],[3,"FieldCanvas"],[3,"FieldElement"],[3,"ScalarCanvas"],[3,"Scalar"],[3,"Jacobian"],[3,"Affine"],[3,"FieldCanvas"],[3,"FieldElement"],[3,"Scalar"],[3,"FieldCanvas"],[3,"FieldElement"],[3,"Scalar"],[3,"Parameters"],[3,"Poly"],[4,"Version"],[3,"Block"],[3,"OpTableType"],[3,"Digest"],[3,"RoundConstantsTable"],[3,"Hash"],[4,"Variant"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);